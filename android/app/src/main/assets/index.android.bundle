var __DEV__=false,__BUNDLE_START_TIME__=this.nativePerformanceNow?nativePerformanceNow():Date.now(),process=this.process||{};process.env=process.env||{};process.env.NODE_ENV="production";
(function (global) {
  "use strict";

  global.__r = metroRequire;
  global.__d = define;
  global.__c = clear;
  global.__registerSegment = registerSegment;
  var modules = clear();
  var EMPTY = {};
  var _ref = {},
      hasOwnProperty = _ref.hasOwnProperty;

  function clear() {
    modules = Object.create(null);
    return modules;
  }

  function define(factory, moduleId, dependencyMap) {
    if (modules[moduleId] != null) {
      return;
    }

    modules[moduleId] = {
      dependencyMap: dependencyMap,
      factory: factory,
      hasError: false,
      importedAll: EMPTY,
      importedDefault: EMPTY,
      isInitialized: false,
      publicModule: {
        exports: {}
      }
    };
  }

  function metroRequire(moduleId) {
    var moduleIdReallyIsNumber = moduleId;
    var module = modules[moduleIdReallyIsNumber];
    return module && module.isInitialized ? module.publicModule.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
  }

  function metroImportDefault(moduleId) {
    var moduleIdReallyIsNumber = moduleId;

    if (modules[moduleIdReallyIsNumber] && modules[moduleIdReallyIsNumber].importedDefault !== EMPTY) {
      return modules[moduleIdReallyIsNumber].importedDefault;
    }

    var exports = metroRequire(moduleIdReallyIsNumber);
    var importedDefault = exports && exports.__esModule ? exports.default : exports;
    return modules[moduleIdReallyIsNumber].importedDefault = importedDefault;
  }

  metroRequire.importDefault = metroImportDefault;

  function metroImportAll(moduleId) {
    var moduleIdReallyIsNumber = moduleId;

    if (modules[moduleIdReallyIsNumber] && modules[moduleIdReallyIsNumber].importedAll !== EMPTY) {
      return modules[moduleIdReallyIsNumber].importedAll;
    }

    var exports = metroRequire(moduleIdReallyIsNumber);
    var importedAll;

    if (exports && exports.__esModule) {
      importedAll = exports;
    } else {
      importedAll = {};

      if (exports) {
        for (var _key in exports) {
          if (hasOwnProperty.call(exports, _key)) {
            importedAll[_key] = exports[_key];
          }
        }
      }

      importedAll.default = exports;
    }

    return modules[moduleIdReallyIsNumber].importedAll = importedAll;
  }

  metroRequire.importAll = metroImportAll;
  var inGuard = false;

  function guardedLoadModule(moduleId, module) {
    if (!inGuard && global.ErrorUtils) {
      inGuard = true;
      var returnValue;

      try {
        returnValue = loadModuleImplementation(moduleId, module);
      } catch (e) {
        global.ErrorUtils.reportFatalError(e);
      }

      inGuard = false;
      return returnValue;
    } else {
      return loadModuleImplementation(moduleId, module);
    }
  }

  var ID_MASK_SHIFT = 16;
  var LOCAL_ID_MASK = 65535;

  function unpackModuleId(moduleId) {
    var segmentId = moduleId >>> ID_MASK_SHIFT;
    var localId = moduleId & LOCAL_ID_MASK;
    return {
      segmentId: segmentId,
      localId: localId
    };
  }

  metroRequire.unpackModuleId = unpackModuleId;

  function packModuleId(value) {
    return (value.segmentId << ID_MASK_SHIFT) + value.localId;
  }

  metroRequire.packModuleId = packModuleId;
  var hooks = [];

  function registerHook(cb) {
    var hook = {
      cb: cb
    };
    hooks.push(hook);
    return {
      release: function release() {
        for (var i = 0; i < hooks.length; ++i) {
          if (hooks[i] === hook) {
            hooks.splice(i, 1);
            break;
          }
        }
      }
    };
  }

  metroRequire.registerHook = registerHook;
  var moduleDefinersBySegmentID = [];

  function registerSegment(segmentID, moduleDefiner) {
    moduleDefinersBySegmentID[segmentID] = moduleDefiner;
  }

  function loadModuleImplementation(moduleId, module) {
    if (!module && moduleDefinersBySegmentID.length > 0) {
      var _unpackModuleId = unpackModuleId(moduleId),
          segmentId = _unpackModuleId.segmentId,
          localId = _unpackModuleId.localId;

      var definer = moduleDefinersBySegmentID[segmentId];

      if (definer != null) {
        definer(localId);
        module = modules[moduleId];
      }
    }

    var nativeRequire = global.nativeRequire;

    if (!module && nativeRequire) {
      var _unpackModuleId2 = unpackModuleId(moduleId),
          _segmentId = _unpackModuleId2.segmentId,
          _localId = _unpackModuleId2.localId;

      nativeRequire(_localId, _segmentId);
      module = modules[moduleId];
    }

    if (!module) {
      throw unknownModuleError(moduleId);
    }

    if (module.hasError) {
      throw moduleThrewError(moduleId, module.error);
    }

    module.isInitialized = true;
    var _module = module,
        factory = _module.factory,
        dependencyMap = _module.dependencyMap;

    try {
      var _moduleObject = module.publicModule;
      _moduleObject.id = moduleId;

      if (hooks.length > 0) {
        for (var i = 0; i < hooks.length; ++i) {
          hooks[i].cb(moduleId, _moduleObject);
        }
      }

      factory(global, metroRequire, metroImportDefault, metroImportAll, _moduleObject, _moduleObject.exports, dependencyMap);
      {
        module.factory = undefined;
        module.dependencyMap = undefined;
      }
      return _moduleObject.exports;
    } catch (e) {
      module.hasError = true;
      module.error = e;
      module.isInitialized = false;
      module.publicModule.exports = undefined;
      throw e;
    } finally {}
  }

  function unknownModuleError(id) {
    var message = 'Requiring unknown module "' + id + '".';
    return Error(message);
  }

  function moduleThrewError(id, error) {
    var displayName = id;
    return Error('Requiring module "' + displayName + '", which threw an exception: ' + error);
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  if (typeof Object.assign !== 'function') {
    Object.defineProperty(Object, 'assign', {
      value: function assign(target, varArgs) {
        'use strict';

        if (target == null) {
          throw new TypeError('Cannot convert undefined or null to object');
        }

        var to = Object(target);

        for (var index = 1; index < arguments.length; index++) {
          var nextSource = arguments[index];

          if (nextSource != null) {
            for (var nextKey in nextSource) {
              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                to[nextKey] = nextSource[nextKey];
              }
            }
          }
        }

        return to;
      },
      writable: true,
      configurable: true
    });
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  var inspect = function () {
    function inspect(obj, opts) {
      var ctx = {
        seen: [],
        stylize: stylizeNoColor
      };
      return formatValue(ctx, obj, opts.depth);
    }

    function stylizeNoColor(str, styleType) {
      return str;
    }

    function arrayToHash(array) {
      var hash = {};
      array.forEach(function (val, idx) {
        hash[val] = true;
      });
      return hash;
    }

    function formatValue(ctx, value, recurseTimes) {
      var primitive = formatPrimitive(ctx, value);

      if (primitive) {
        return primitive;
      }

      var keys = Object.keys(value);
      var visibleKeys = arrayToHash(keys);

      if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
        return formatError(value);
      }

      if (keys.length === 0) {
        if (isFunction(value)) {
          var name = value.name ? ': ' + value.name : '';
          return ctx.stylize('[Function' + name + ']', 'special');
        }

        if (isRegExp(value)) {
          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        }

        if (isDate(value)) {
          return ctx.stylize(Date.prototype.toString.call(value), 'date');
        }

        if (isError(value)) {
          return formatError(value);
        }
      }

      var base = '',
          array = false,
          braces = ['{', '}'];

      if (isArray(value)) {
        array = true;
        braces = ['[', ']'];
      }

      if (isFunction(value)) {
        var n = value.name ? ': ' + value.name : '';
        base = ' [Function' + n + ']';
      }

      if (isRegExp(value)) {
        base = ' ' + RegExp.prototype.toString.call(value);
      }

      if (isDate(value)) {
        base = ' ' + Date.prototype.toUTCString.call(value);
      }

      if (isError(value)) {
        base = ' ' + formatError(value);
      }

      if (keys.length === 0 && (!array || value.length == 0)) {
        return braces[0] + base + braces[1];
      }

      if (recurseTimes < 0) {
        if (isRegExp(value)) {
          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        } else {
          return ctx.stylize('[Object]', 'special');
        }
      }

      ctx.seen.push(value);
      var output;

      if (array) {
        output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
      } else {
        output = keys.map(function (key) {
          return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
        });
      }

      ctx.seen.pop();
      return reduceToSingleString(output, base, braces);
    }

    function formatPrimitive(ctx, value) {
      if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

      if (isString(value)) {
        var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return ctx.stylize(simple, 'string');
      }

      if (isNumber(value)) return ctx.stylize('' + value, 'number');
      if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
      if (isNull(value)) return ctx.stylize('null', 'null');
    }

    function formatError(value) {
      return '[' + Error.prototype.toString.call(value) + ']';
    }

    function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
      var output = [];

      for (var i = 0, l = value.length; i < l; ++i) {
        if (hasOwnProperty(value, String(i))) {
          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
        } else {
          output.push('');
        }
      }

      keys.forEach(function (key) {
        if (!key.match(/^\d+$/)) {
          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
        }
      });
      return output;
    }

    function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
      var name, str, desc;
      desc = Object.getOwnPropertyDescriptor(value, key) || {
        value: value[key]
      };

      if (desc.get) {
        if (desc.set) {
          str = ctx.stylize('[Getter/Setter]', 'special');
        } else {
          str = ctx.stylize('[Getter]', 'special');
        }
      } else {
        if (desc.set) {
          str = ctx.stylize('[Setter]', 'special');
        }
      }

      if (!hasOwnProperty(visibleKeys, key)) {
        name = '[' + key + ']';
      }

      if (!str) {
        if (ctx.seen.indexOf(desc.value) < 0) {
          if (isNull(recurseTimes)) {
            str = formatValue(ctx, desc.value, null);
          } else {
            str = formatValue(ctx, desc.value, recurseTimes - 1);
          }

          if (str.indexOf('\n') > -1) {
            if (array) {
              str = str.split('\n').map(function (line) {
                return '  ' + line;
              }).join('\n').substr(2);
            } else {
              str = '\n' + str.split('\n').map(function (line) {
                return '   ' + line;
              }).join('\n');
            }
          }
        } else {
          str = ctx.stylize('[Circular]', 'special');
        }
      }

      if (isUndefined(name)) {
        if (array && key.match(/^\d+$/)) {
          return str;
        }

        name = JSON.stringify('' + key);

        if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
          name = name.substr(1, name.length - 2);
          name = ctx.stylize(name, 'name');
        } else {
          name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
          name = ctx.stylize(name, 'string');
        }
      }

      return name + ': ' + str;
    }

    function reduceToSingleString(output, base, braces) {
      var numLinesEst = 0;
      var length = output.reduce(function (prev, cur) {
        numLinesEst++;
        if (cur.indexOf('\n') >= 0) numLinesEst++;
        return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
      }, 0);

      if (length > 60) {
        return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
      }

      return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
    }

    function isArray(ar) {
      return Array.isArray(ar);
    }

    function isBoolean(arg) {
      return typeof arg === 'boolean';
    }

    function isNull(arg) {
      return arg === null;
    }

    function isNumber(arg) {
      return typeof arg === 'number';
    }

    function isString(arg) {
      return typeof arg === 'string';
    }

    function isUndefined(arg) {
      return arg === undefined;
    }

    function isRegExp(re) {
      return isObject(re) && objectToString(re) === '[object RegExp]';
    }

    function isObject(arg) {
      return typeof arg === 'object' && arg !== null;
    }

    function isDate(d) {
      return isObject(d) && objectToString(d) === '[object Date]';
    }

    function isError(e) {
      return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
    }

    function isFunction(arg) {
      return typeof arg === 'function';
    }

    function objectToString(o) {
      return Object.prototype.toString.call(o);
    }

    function hasOwnProperty(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    }

    return inspect;
  }();

  var OBJECT_COLUMN_NAME = '(index)';
  var LOG_LEVELS = {
    trace: 0,
    info: 1,
    warn: 2,
    error: 3
  };
  var INSPECTOR_LEVELS = [];
  INSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';
  INSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';
  INSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';
  INSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';
  var INSPECTOR_FRAMES_TO_SKIP = 1;

  function getNativeLogFunction(level) {
    return function () {
      var str;

      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, {
            depth: 10
          });
        }).join(', ');
      }

      var logLevel = level;

      if (str.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        logLevel = LOG_LEVELS.warn;
      }

      if (global.__inspectorLog) {
        global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);
      }

      if (groupStack.length) {
        str = groupFormat('', str);
      }

      global.nativeLoggingHook(str, logLevel);
    };
  }

  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  }

  function consoleTablePolyfill(rows) {
    if (!Array.isArray(rows)) {
      var data = rows;
      rows = [];

      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var row = data[key];
          row[OBJECT_COLUMN_NAME] = key;
          rows.push(row);
        }
      }
    }

    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }

    var columns = Object.keys(rows[0]).sort();
    var stringRows = [];
    var columnWidths = [];
    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;

      for (var j = 0; j < rows.length; j++) {
        var cellStr = (rows[j][k] || '?').toString();
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return cells.join(space + '|' + space);
    }

    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators, '-');
    var header = joinRow(columns);
    var table = [header, separatorRow];

    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }

  var GROUP_PAD = "\u2502";
  var GROUP_OPEN = "\u2510";
  var GROUP_CLOSE = "\u2518";
  var groupStack = [];

  function groupFormat(prefix, msg) {
    return groupStack.join('') + prefix + ' ' + (msg || '');
  }

  function consoleGroupPolyfill(label) {
    global.nativeLoggingHook(groupFormat(GROUP_OPEN, label), LOG_LEVELS.info);
    groupStack.push(GROUP_PAD);
  }

  function consoleGroupCollapsedPolyfill(label) {
    global.nativeLoggingHook(groupFormat(GROUP_CLOSE, label), LOG_LEVELS.info);
    groupStack.push(GROUP_PAD);
  }

  function consoleGroupEndPolyfill() {
    groupStack.pop();
    global.nativeLoggingHook(groupFormat(GROUP_CLOSE), LOG_LEVELS.info);
  }

  if (global.nativeLoggingHook) {
    var originalConsole = global.console;
    global.console = {
      error: getNativeLogFunction(LOG_LEVELS.error),
      info: getNativeLogFunction(LOG_LEVELS.info),
      log: getNativeLogFunction(LOG_LEVELS.info),
      warn: getNativeLogFunction(LOG_LEVELS.warn),
      trace: getNativeLogFunction(LOG_LEVELS.trace),
      debug: getNativeLogFunction(LOG_LEVELS.trace),
      table: consoleTablePolyfill,
      group: consoleGroupPolyfill,
      groupEnd: consoleGroupEndPolyfill,
      groupCollapsed: consoleGroupCollapsedPolyfill
    };
  } else if (!global.console) {
    var log = global.print || function consoleLoggingStub() {};

    global.console = {
      error: log,
      info: log,
      log: log,
      warn: log,
      trace: log,
      debug: log,
      table: log
    };
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  var _inGuard = 0;

  var _globalHandler = function onError(e) {
    throw e;
  };

  var ErrorUtils = {
    setGlobalHandler: function setGlobalHandler(fun) {
      _globalHandler = fun;
    },
    getGlobalHandler: function getGlobalHandler() {
      return _globalHandler;
    },
    reportError: function reportError(error) {
      _globalHandler && _globalHandler(error);
    },
    reportFatalError: function reportFatalError(error) {
      _globalHandler && _globalHandler(error, true);
    },
    applyWithGuard: function applyWithGuard(fun, context, args) {
      try {
        _inGuard++;
        return fun.apply(context, args);
      } catch (e) {
        ErrorUtils.reportError(e);
      } finally {
        _inGuard--;
      }

      return null;
    },
    applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
      if (ErrorUtils.inGuard()) {
        return fun.apply(context, args);
      } else {
        ErrorUtils.applyWithGuard(fun, context, args);
      }

      return null;
    },
    inGuard: function inGuard() {
      return _inGuard;
    },
    guard: function guard(fun, name, context) {
      if (typeof fun !== 'function') {
        console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
        return null;
      }

      name = name || fun.name || '<generated guard>';

      function guarded() {
        return ErrorUtils.applyWithGuard(fun, context || this, arguments, null, name);
      }

      return guarded;
    }
  };
  global.ErrorUtils = ErrorUtils;
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  if (Number.EPSILON === undefined) {
    Object.defineProperty(Number, 'EPSILON', {
      value: Math.pow(2, -52)
    });
  }

  if (Number.MAX_SAFE_INTEGER === undefined) {
    Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {
      value: Math.pow(2, 53) - 1
    });
  }

  if (Number.MIN_SAFE_INTEGER === undefined) {
    Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {
      value: -(Math.pow(2, 53) - 1)
    });
  }

  if (!Number.isNaN) {
    var globalIsNaN = global.isNaN;
    Object.defineProperty(Number, 'isNaN', {
      configurable: true,
      enumerable: false,
      value: function isNaN(value) {
        return typeof value === 'number' && globalIsNaN(value);
      },
      writable: true
    });
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  if (!String.prototype.startsWith) {
    String.prototype.startsWith = function (search) {
      'use strict';

      if (this == null) {
        throw TypeError();
      }

      var string = String(this);
      var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : 0;
      var start = Math.min(Math.max(pos, 0), string.length);
      return string.indexOf(String(search), pos) === start;
    };
  }

  if (!String.prototype.endsWith) {
    String.prototype.endsWith = function (search) {
      'use strict';

      if (this == null) {
        throw TypeError();
      }

      var string = String(this);
      var stringLength = string.length;
      var searchString = String(search);
      var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : stringLength;
      var end = Math.min(Math.max(pos, 0), stringLength);
      var start = end - searchString.length;

      if (start < 0) {
        return false;
      }

      return string.lastIndexOf(searchString, start) === start;
    };
  }

  if (!String.prototype.repeat) {
    String.prototype.repeat = function (count) {
      'use strict';

      if (this == null) {
        throw TypeError();
      }

      var string = String(this);
      count = Number(count) || 0;

      if (count < 0 || count === Infinity) {
        throw RangeError();
      }

      if (count === 1) {
        return string;
      }

      var result = '';

      while (count) {
        if (count & 1) {
          result += string;
        }

        if (count >>= 1) {
          string += string;
        }
      }

      return result;
    };
  }

  if (!String.prototype.includes) {
    String.prototype.includes = function (search, start) {
      'use strict';

      if (typeof start !== 'number') {
        start = 0;
      }

      if (start + search.length > this.length) {
        return false;
      } else {
        return this.indexOf(search, start) !== -1;
      }
    };
  }

  if (!String.prototype.codePointAt) {
    String.prototype.codePointAt = function (position) {
      if (this == null) {
        throw TypeError();
      }

      var string = String(this);
      var size = string.length;
      var index = position ? Number(position) : 0;

      if (Number.isNaN(index)) {
        index = 0;
      }

      if (index < 0 || index >= size) {
        return undefined;
      }

      var first = string.charCodeAt(index);
      var second;

      if (first >= 0xd800 && first <= 0xdbff && size > index + 1) {
          second = string.charCodeAt(index + 1);

          if (second >= 0xdc00 && second <= 0xdfff) {
            return (first - 0xd800) * 0x400 + second - 0xdc00 + 0x10000;
          }
        }

      return first;
    };
  }

  if (!String.prototype.padEnd) {
    String.prototype.padEnd = function padEnd(targetLength, padString) {
      targetLength = targetLength >> 0;
      padString = String(typeof padString !== 'undefined' ? padString : ' ');

      if (this.length > targetLength) {
        return String(this);
      } else {
        targetLength = targetLength - this.length;

        if (targetLength > padString.length) {
          padString += padString.repeat(targetLength / padString.length);
        }

        return String(this) + padString.slice(0, targetLength);
      }
    };
  }

  if (!String.prototype.padStart) {
    String.prototype.padStart = function padStart(targetLength, padString) {
      targetLength = targetLength >> 0;
      padString = String(typeof padString !== 'undefined' ? padString : ' ');

      if (this.length > targetLength) {
        return String(this);
      } else {
        targetLength = targetLength - this.length;

        if (targetLength > padString.length) {
          padString += padString.repeat(targetLength / padString.length);
        }

        return padString.slice(0, targetLength) + String(this);
      }
    };
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  function findIndex(predicate, context) {
    if (this == null) {
      throw new TypeError('Array.prototype.findIndex called on null or undefined');
    }

    if (typeof predicate !== 'function') {
      throw new TypeError('predicate must be a function');
    }

    var list = Object(this);
    var length = list.length >>> 0;

    for (var i = 0; i < length; i++) {
      if (predicate.call(context, list[i], i, list)) {
        return i;
      }
    }

    return -1;
  }

  if (!Array.prototype.findIndex) {
    Object.defineProperty(Array.prototype, 'findIndex', {
      enumerable: false,
      writable: true,
      configurable: true,
      value: findIndex
    });
  }

  if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
      enumerable: false,
      writable: true,
      configurable: true,
      value: function value(predicate, context) {
        if (this == null) {
          throw new TypeError('Array.prototype.find called on null or undefined');
        }

        var index = findIndex.call(this, predicate, context);
        return index === -1 ? undefined : this[index];
      }
    });
  }

  if (!Array.prototype.includes) {
    Object.defineProperty(Array.prototype, 'includes', {
      enumerable: false,
      writable: true,
      configurable: true,
      value: function value(searchElement) {
        var O = Object(this);
        var len = parseInt(O.length) || 0;

        if (len === 0) {
          return false;
        }

        var n = parseInt(arguments[1]) || 0;
        var k;

        if (n >= 0) {
          k = n;
        } else {
          k = len + n;

          if (k < 0) {
            k = 0;
          }
        }

        var currentElement;

        while (k < len) {
          currentElement = O[k];

          if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
            return true;
          }

          k++;
        }

        return false;
      }
    });
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  if (!Array.from) {
    Array.from = function (arrayLike) {
      if (arrayLike == null) {
        throw new TypeError('Object is null or undefined');
      }

      var mapFn = arguments[1];
      var thisArg = arguments[2];
      var C = this;
      var items = Object(arrayLike);
      var symbolIterator = typeof Symbol === 'function' ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : '@@iterator';
      var mapping = typeof mapFn === 'function';
      var usingIterator = typeof items[symbolIterator] === 'function';
      var key = 0;
      var ret;
      var value;

      if (usingIterator) {
        ret = typeof C === 'function' ? new C() : [];
        var it = items[symbolIterator]();
        var next;

        while (!(next = it.next()).done) {
          value = next.value;

          if (mapping) {
            value = mapFn.call(thisArg, value, key);
          }

          ret[key] = value;
          key += 1;
        }

        ret.length = key;
        return ret;
      }

      var len = items.length;

      if (isNaN(len) || len < 0) {
        len = 0;
      }

      ret = typeof C === 'function' ? new C(len) : new Array(len);

      while (key < len) {
        value = items[key];

        if (mapping) {
          value = mapFn.call(thisArg, value, key);
        }

        ret[key] = value;
        key += 1;
      }

      ret.length = key;
      return ret;
    };
  }
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  (function () {
    'use strict';

    var hasOwnProperty = Object.prototype.hasOwnProperty;

    if (typeof Object.entries !== 'function') {
      Object.entries = function (object) {
        if (object == null) {
          throw new TypeError('Object.entries called on non-object');
        }

        var entries = [];

        for (var key in object) {
          if (hasOwnProperty.call(object, key)) {
            entries.push([key, object[key]]);
          }
        }

        return entries;
      };
    }

    if (typeof Object.values !== 'function') {
      Object.values = function (object) {
        if (object == null) {
          throw new TypeError('Object.values called on non-object');
        }

        var values = [];

        for (var key in object) {
          if (hasOwnProperty.call(object, key)) {
            values.push(object[key]);
          }
        }

        return values;
      };
    }
  })();
})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _App = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _app = _$$_REQUIRE(_dependencyMap[3]);

  _reactNative.AppRegistry.registerComponent(_app.name, function () {
    return _App.default;
  });

  console.log("jg  start");
},0,[1,2,353,992]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},1,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var warnOnce = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = {
    get AccessibilityInfo() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get ActivityIndicator() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ART() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get Button() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get CheckBox() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get DatePickerIOS() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get DrawerLayoutAndroid() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get FlatList() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get Image() {
      return _$$_REQUIRE(_dependencyMap[10]);
    },

    get ImageBackground() {
      return _$$_REQUIRE(_dependencyMap[11]);
    },

    get ImageEditor() {
      return _$$_REQUIRE(_dependencyMap[12]);
    },

    get ImageStore() {
      warnOnce('imagestore-deprecation', "ImageStore is deprecated and will be removed in a future release. To get a base64-encoded string from a local image use either of the following third-party libraries:* expo-file-system: `readAsStringAsync(filepath, 'base64')`* react-native-fs: `readFile(filepath, 'base64')`");
      return _$$_REQUIRE(_dependencyMap[13]);
    },

    get InputAccessoryView() {
      return _$$_REQUIRE(_dependencyMap[14]);
    },

    get KeyboardAvoidingView() {
      return _$$_REQUIRE(_dependencyMap[15]);
    },

    get ListView() {
      warnOnce('listview-deprecation', "ListView is deprecated and will be removed in a future release. See https://fb.me/nolistview for more information");
      return _$$_REQUIRE(_dependencyMap[16]);
    },

    get MaskedViewIOS() {
      warnOnce('maskedviewios-moved', "MaskedViewIOS has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/masked-view' instead of 'react-native'. See https://github.com/react-native-community/react-native-masked-view");
      return _$$_REQUIRE(_dependencyMap[17]);
    },

    get Modal() {
      return _$$_REQUIRE(_dependencyMap[18]);
    },

    get Picker() {
      return _$$_REQUIRE(_dependencyMap[19]);
    },

    get PickerIOS() {
      return _$$_REQUIRE(_dependencyMap[20]);
    },

    get ProgressBarAndroid() {
      return _$$_REQUIRE(_dependencyMap[21]);
    },

    get ProgressViewIOS() {
      return _$$_REQUIRE(_dependencyMap[22]);
    },

    get SafeAreaView() {
      return _$$_REQUIRE(_dependencyMap[23]);
    },

    get ScrollView() {
      return _$$_REQUIRE(_dependencyMap[24]);
    },

    get SectionList() {
      return _$$_REQUIRE(_dependencyMap[25]);
    },

    get SegmentedControlIOS() {
      return _$$_REQUIRE(_dependencyMap[26]);
    },

    get Slider() {
      warnOnce('slider-moved', "Slider has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/slider' instead of 'react-native'. See https://github.com/react-native-community/react-native-slider");
      return _$$_REQUIRE(_dependencyMap[27]);
    },

    get SnapshotViewIOS() {
      return _$$_REQUIRE(_dependencyMap[28]);
    },

    get Switch() {
      return _$$_REQUIRE(_dependencyMap[29]);
    },

    get RefreshControl() {
      return _$$_REQUIRE(_dependencyMap[30]);
    },

    get StatusBar() {
      return _$$_REQUIRE(_dependencyMap[31]);
    },

    get SwipeableFlatList() {
      return _$$_REQUIRE(_dependencyMap[32]);
    },

    get SwipeableListView() {
      warnOnce('swipablelistview-deprecation', "ListView and SwipeableListView are deprecated and will be removed in a future release. See https://fb.me/nolistview for more information");
      return _$$_REQUIRE(_dependencyMap[33]);
    },

    get Text() {
      return _$$_REQUIRE(_dependencyMap[34]);
    },

    get TextInput() {
      return _$$_REQUIRE(_dependencyMap[35]);
    },

    get ToolbarAndroid() {
      return _$$_REQUIRE(_dependencyMap[36]);
    },

    get Touchable() {
      return _$$_REQUIRE(_dependencyMap[37]);
    },

    get TouchableHighlight() {
      return _$$_REQUIRE(_dependencyMap[38]);
    },

    get TouchableNativeFeedback() {
      return _$$_REQUIRE(_dependencyMap[39]);
    },

    get TouchableOpacity() {
      return _$$_REQUIRE(_dependencyMap[40]);
    },

    get TouchableWithoutFeedback() {
      return _$$_REQUIRE(_dependencyMap[41]);
    },

    get View() {
      return _$$_REQUIRE(_dependencyMap[42]);
    },

    get ViewPagerAndroid() {
      warnOnce('viewpager-moved', "ViewPagerAndroid has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/viewpager' instead of 'react-native'. See https://github.com/react-native-community/react-native-viewpager");
      return _$$_REQUIRE(_dependencyMap[43]);
    },

    get VirtualizedList() {
      return _$$_REQUIRE(_dependencyMap[44]);
    },

    get WebView() {
      warnOnce('webview-moved', "WebView has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from 'react-native-webview' instead of 'react-native'. See https://github.com/react-native-community/react-native-webview");
      return _$$_REQUIRE(_dependencyMap[45]);
    },

    get ActionSheetIOS() {
      return _$$_REQUIRE(_dependencyMap[46]);
    },

    get Alert() {
      return _$$_REQUIRE(_dependencyMap[47]);
    },

    get AlertIOS() {
      warnOnce('alert-ios', 'AlertIOS is deprecated. Use the `Alert` module directly instead.');
      return _$$_REQUIRE(_dependencyMap[47]);
    },

    get Animated() {
      return _$$_REQUIRE(_dependencyMap[48]);
    },

    get AppRegistry() {
      return _$$_REQUIRE(_dependencyMap[49]);
    },

    get AppState() {
      return _$$_REQUIRE(_dependencyMap[50]);
    },

    get AsyncStorage() {
      warnOnce('async-storage-moved', "Async Storage has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/async-storage' instead of 'react-native'. See https://github.com/react-native-community/react-native-async-storage");
      return _$$_REQUIRE(_dependencyMap[51]);
    },

    get BackHandler() {
      return _$$_REQUIRE(_dependencyMap[52]);
    },

    get CameraRoll() {
      return _$$_REQUIRE(_dependencyMap[53]);
    },

    get Clipboard() {
      return _$$_REQUIRE(_dependencyMap[54]);
    },

    get DatePickerAndroid() {
      return _$$_REQUIRE(_dependencyMap[55]);
    },

    get DeviceInfo() {
      return _$$_REQUIRE(_dependencyMap[56]);
    },

    get Dimensions() {
      return _$$_REQUIRE(_dependencyMap[57]);
    },

    get Easing() {
      return _$$_REQUIRE(_dependencyMap[58]);
    },

    get findNodeHandle() {
      return _$$_REQUIRE(_dependencyMap[59]).findNodeHandle;
    },

    get I18nManager() {
      return _$$_REQUIRE(_dependencyMap[60]);
    },

    get ImagePickerIOS() {
      return _$$_REQUIRE(_dependencyMap[61]);
    },

    get InteractionManager() {
      return _$$_REQUIRE(_dependencyMap[62]);
    },

    get Keyboard() {
      return _$$_REQUIRE(_dependencyMap[63]);
    },

    get LayoutAnimation() {
      return _$$_REQUIRE(_dependencyMap[64]);
    },

    get Linking() {
      return _$$_REQUIRE(_dependencyMap[65]);
    },

    get NativeEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[66]);
    },

    get NetInfo() {
      warnOnce('netinfo-moved', "NetInfo has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/netinfo' instead of 'react-native'. See https://github.com/react-native-community/react-native-netinfo");
      return _$$_REQUIRE(_dependencyMap[67]);
    },

    get PanResponder() {
      return _$$_REQUIRE(_dependencyMap[68]);
    },

    get PermissionsAndroid() {
      return _$$_REQUIRE(_dependencyMap[69]);
    },

    get PixelRatio() {
      return _$$_REQUIRE(_dependencyMap[70]);
    },

    get PushNotificationIOS() {
      return _$$_REQUIRE(_dependencyMap[71]);
    },

    get Settings() {
      return _$$_REQUIRE(_dependencyMap[72]);
    },

    get Share() {
      return _$$_REQUIRE(_dependencyMap[73]);
    },

    get StatusBarIOS() {
      return _$$_REQUIRE(_dependencyMap[74]);
    },

    get StyleSheet() {
      return _$$_REQUIRE(_dependencyMap[75]);
    },

    get Systrace() {
      return _$$_REQUIRE(_dependencyMap[76]);
    },

    get TimePickerAndroid() {
      return _$$_REQUIRE(_dependencyMap[77]);
    },

    get ToastAndroid() {
      return _$$_REQUIRE(_dependencyMap[78]);
    },

    get TVEventHandler() {
      return _$$_REQUIRE(_dependencyMap[79]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[80]);
    },

    get unstable_batchedUpdates() {
      return _$$_REQUIRE(_dependencyMap[59]).unstable_batchedUpdates;
    },

    get UTFSequence() {
      return _$$_REQUIRE(_dependencyMap[81]);
    },

    get Vibration() {
      return _$$_REQUIRE(_dependencyMap[82]);
    },

    get VibrationIOS() {
      return _$$_REQUIRE(_dependencyMap[83]);
    },

    get YellowBox() {
      return _$$_REQUIRE(_dependencyMap[84]);
    },

    get DeviceEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[85]);
    },

    get NativeAppEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[86]);
    },

    get NativeModules() {
      return _$$_REQUIRE(_dependencyMap[87]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[88]);
    },

    get processColor() {
      return _$$_REQUIRE(_dependencyMap[89]);
    },

    get requireNativeComponent() {
      return _$$_REQUIRE(_dependencyMap[90]);
    },

    get takeSnapshot() {
      return _$$_REQUIRE(_dependencyMap[91]);
    },

    get ColorPropType() {
      return _$$_REQUIRE(_dependencyMap[92]);
    },

    get EdgeInsetsPropType() {
      return _$$_REQUIRE(_dependencyMap[93]);
    },

    get PointPropType() {
      return _$$_REQUIRE(_dependencyMap[94]);
    },

    get ViewPropTypes() {
      return _$$_REQUIRE(_dependencyMap[95]);
    },

    get BackAndroid() {
      invariant(false, "BackAndroid is deprecated and has been removed from this package. Use BackHandler instead");
    },

    get Navigator() {
      invariant(false, "Navigator is deprecated and has been removed from this package. It can now be installed and imported from `react-native-deprecated-custom-components` instead of `react-native`. Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html");
    },

    get NavigatorIOS() {
      invariant(false, "NavigatorIOS is deprecated and has been removed from this package. Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html");
    }

  };
},2,[3,4,7,45,168,178,263,266,267,232,251,270,272,273,274,276,277,283,285,289,293,166,294,295,239,258,296,297,299,300,236,268,302,306,179,308,314,184,316,192,200,193,75,317,233,319,322,133,201,323,333,334,329,335,336,337,55,54,228,78,287,338,209,242,243,339,117,340,304,139,53,341,342,343,344,52,25,345,346,188,42,347,348,349,350,29,144,8,43,69,155,351,58,181,352,252]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},3,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},4,[5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},5,[6]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},6,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeModules = _$$_REQUIRE(_dependencyMap[0]);

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[1]);

  var UIManager = _$$_REQUIRE(_dependencyMap[2]);

  var RCTAccessibilityInfo = NativeModules.AccessibilityInfo;
  var TOUCH_EXPLORATION_EVENT = 'touchExplorationDidChange';

  var _subscriptions = new Map();

  var AccessibilityInfo = {
    fetch: function fetch() {
      return new Promise(function (resolve, reject) {
        RCTAccessibilityInfo.isTouchExplorationEnabled(function (resp) {
          resolve(resp);
        });
      });
    },
    addEventListener: function addEventListener(eventName, handler) {
      var listener = RCTDeviceEventEmitter.addListener(TOUCH_EXPLORATION_EVENT, function (enabled) {
        handler(enabled);
      });

      _subscriptions.set(handler, listener);
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _subscriptions.get(handler);

      if (!listener) {
        return;
      }

      listener.remove();

      _subscriptions.delete(handler);
    },
    setAccessibilityFocus: function setAccessibilityFocus(reactTag) {
      UIManager.sendAccessibilityEvent(reactTag, UIManager.AccessibilityEventTypes.typeViewFocused);
    }
  };
  module.exports = AccessibilityInfo;
},7,[8,29,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[2]);

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  function genModule(config, moduleID) {
    if (!config) {
      return null;
    }

    var _config = _slicedToArray(config, 5),
        moduleName = _config[0],
        constants = _config[1],
        methods = _config[2],
        promiseMethods = _config[3],
        syncMethods = _config[4];

    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), "Module name prefixes should've been stripped by the native side but wasn't for " + moduleName);

    if (!constants && !methods) {
      return {
        name: moduleName
      };
    }

    var module = {};
    methods && methods.forEach(function (methodName, methodID) {
      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);
      var isSync = syncMethods && arrayContains(syncMethods, methodID);
      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
      module[methodName] = genMethod(moduleID, methodID, methodType);
    });

    _extends(module, constants);

    if (module.getConstants == null) {
      module.getConstants = function () {
        return constants;
      };
    } else {
      console.warn("Unable to define method 'getConstants()' on NativeModule '" + moduleName + "'. NativeModule '" + moduleName + "' already has a constant or method called 'getConstants'. Please remove it.");
    }

    return {
      name: moduleName,
      module: module
    };
  }

  global.__fbGenNativeModule = genModule;

  function loadModule(name, moduleID) {
    invariant(global.nativeRequireModuleConfig, "Can't lazily create module without nativeRequireModuleConfig");
    var config = global.nativeRequireModuleConfig(name);
    var info = genModule(config, moduleID);
    return info && info.module;
  }

  function genMethod(moduleID, methodID, type) {
    var fn = null;

    if (type === 'promise') {
      fn = function fn() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return new Promise(function (resolve, reject) {
          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {
            return resolve(data);
          }, function (errorData) {
            return reject(createErrorFromErrorData(errorData));
          });
        });
      };
    } else if (type === 'sync') {
      fn = function fn() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return global.nativeCallSyncHook(moduleID, methodID, args);
      };
    } else {
      fn = function fn() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        var lastArg = args.length > 0 ? args[args.length - 1] : null;
        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
        var hasSuccessCallback = typeof lastArg === 'function';
        var hasErrorCallback = typeof secondLastArg === 'function';
        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
        var onSuccess = hasSuccessCallback ? lastArg : null;
        var onFail = hasErrorCallback ? secondLastArg : null;
        var callbackCount = hasSuccessCallback + hasErrorCallback;
        args = args.slice(0, args.length - callbackCount);
        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);
      };
    }

    fn.type = type;
    return fn;
  }

  function arrayContains(array, value) {
    return array.indexOf(value) !== -1;
  }

  function createErrorFromErrorData(errorData) {
    var _ref = errorData || {},
        message = _ref.message,
        extraErrorInfo = _objectWithoutProperties(_ref, ["message"]);

    var error = new Error(message);
    error.framesToPop = 1;
    return _extends(error, extraErrorInfo);
  }

  var NativeModules = {};

  if (global.nativeModuleProxy) {
    NativeModules = global.nativeModuleProxy;
  } else if (!global.nativeExtensions) {
    var bridgeConfig = global.__fbBatchedBridgeConfig;
    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');

    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[5]);

    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
      var info = genModule(config, moduleID);

      if (!info) {
        return;
      }

      if (info.module) {
        NativeModules[info.name] = info.module;
      } else {
          defineLazyObjectProperty(NativeModules, info.name, {
            get: function get() {
              return loadModule(info.name, moduleID);
            }
          });
        }
    });
  }

  module.exports = NativeModules;
},8,[9,11,12,16,3,28]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},9,[10]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},10,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},11,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},12,[13,14,15]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},13,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},15,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var MessageQueue = _$$_REQUIRE(_dependencyMap[0]);

  var BatchedBridge = new MessageQueue();
  Object.defineProperty(global, '__fbBatchedBridge', {
    configurable: true,
    value: BatchedBridge
  });
  module.exports = BatchedBridge;
},16,[17]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var ErrorUtils = _$$_REQUIRE(_dependencyMap[3]);

  var Systrace = _$$_REQUIRE(_dependencyMap[4]);

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[5]);

  var invariant = _$$_REQUIRE(_dependencyMap[6]);

  var stringifySafe = _$$_REQUIRE(_dependencyMap[7]);

  var TO_JS = 0;
  var TO_NATIVE = 1;
  var MODULE_IDS = 0;
  var METHOD_IDS = 1;
  var PARAMS = 2;
  var MIN_TIME_BETWEEN_FLUSHES_MS = 5;
  var TRACE_TAG_REACT_APPS = 131072;
  var DEBUG_INFO_LIMIT = 32;

  var MessageQueue = function () {
    function MessageQueue() {
      _classCallCheck(this, MessageQueue);

      this._lazyCallableModules = {};
      this._queue = [[], [], [], 0];
      this._successCallbacks = {};
      this._failureCallbacks = {};
      this._callID = 0;
      this._lastFlush = 0;
      this._eventLoopStartTime = Date.now();
      this._immediatesCallback = null;
      this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
      this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);
      this.flushedQueue = this.flushedQueue.bind(this);
      this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
    }

    _createClass(MessageQueue, [{
      key: "callFunctionReturnFlushedQueue",
      value: function callFunctionReturnFlushedQueue(module, method, args) {
        var _this = this;

        this.__guard(function () {
          _this.__callFunction(module, method, args);
        });

        return this.flushedQueue();
      }
    }, {
      key: "callFunctionReturnResultAndFlushedQueue",
      value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {
        var _this2 = this;

        var result;

        this.__guard(function () {
          result = _this2.__callFunction(module, method, args);
        });

        return [result, this.flushedQueue()];
      }
    }, {
      key: "invokeCallbackAndReturnFlushedQueue",
      value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
        var _this3 = this;

        this.__guard(function () {
          _this3.__invokeCallback(cbID, args);
        });

        return this.flushedQueue();
      }
    }, {
      key: "flushedQueue",
      value: function flushedQueue() {
        var _this4 = this;

        this.__guard(function () {
          _this4.__callImmediates();
        });

        var queue = this._queue;
        this._queue = [[], [], [], this._callID];
        return queue[0].length ? queue : null;
      }
    }, {
      key: "getEventLoopRunningTime",
      value: function getEventLoopRunningTime() {
        return Date.now() - this._eventLoopStartTime;
      }
    }, {
      key: "registerCallableModule",
      value: function registerCallableModule(name, module) {
        this._lazyCallableModules[name] = function () {
          return module;
        };
      }
    }, {
      key: "registerLazyCallableModule",
      value: function registerLazyCallableModule(name, factory) {
        var module;
        var getValue = factory;

        this._lazyCallableModules[name] = function () {
          if (getValue) {
            module = getValue();
            getValue = null;
          }

          return module;
        };
      }
    }, {
      key: "getCallableModule",
      value: function getCallableModule(name) {
        var getValue = this._lazyCallableModules[name];
        return getValue ? getValue() : null;
      }
    }, {
      key: "enqueueNativeCall",
      value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
        if (onFail || onSucc) {
          onFail && params.push(this._callID << 1);
          onSucc && params.push(this._callID << 1 | 1);
          this._successCallbacks[this._callID] = onSucc;
          this._failureCallbacks[this._callID] = onFail;
        }

        this._callID++;

        this._queue[MODULE_IDS].push(moduleID);

        this._queue[METHOD_IDS].push(methodID);

        this._queue[PARAMS].push(params);

        var now = Date.now();

        if (global.nativeFlushQueueImmediate && now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS) {
          var queue = this._queue;
          this._queue = [[], [], [], this._callID];
          this._lastFlush = now;
          global.nativeFlushQueueImmediate(queue);
        }

        Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);

        if (this.__spy) {
          this.__spy({
            type: TO_NATIVE,
            module: moduleID + '',
            method: methodID,
            args: params
          });
        }
      }
    }, {
      key: "createDebugLookup",
      value: function createDebugLookup(moduleID, name, methods) {}
    }, {
      key: "setImmediatesCallback",
      value: function setImmediatesCallback(fn) {
        this._immediatesCallback = fn;
      }
    }, {
      key: "__guard",
      value: function __guard(fn) {
        if (this.__shouldPauseOnThrow()) {
          fn();
        } else {
          try {
            fn();
          } catch (error) {
            ErrorUtils.reportFatalError(error);
          }
        }
      }
    }, {
      key: "__shouldPauseOnThrow",
      value: function __shouldPauseOnThrow() {
        return typeof DebuggerInternal !== 'undefined' && DebuggerInternal.shouldPauseOnThrow === true;
      }
    }, {
      key: "__callImmediates",
      value: function __callImmediates() {
        Systrace.beginEvent('JSTimers.callImmediates()');

        if (this._immediatesCallback != null) {
          this._immediatesCallback();
        }

        Systrace.endEvent();
      }
    }, {
      key: "__callFunction",
      value: function __callFunction(module, method, args) {
        this._lastFlush = Date.now();
        this._eventLoopStartTime = this._lastFlush;

        if (this.__spy) {
          Systrace.beginEvent(module + "." + method + "(" + stringifySafe(args) + ")");
        } else {
          Systrace.beginEvent(module + "." + method + "(...)");
        }

        if (this.__spy) {
          this.__spy({
            type: TO_JS,
            module: module,
            method: method,
            args: args
          });
        }

        var moduleMethods = this.getCallableModule(module);
        invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);
        invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);
        var result = moduleMethods[method].apply(moduleMethods, args);
        Systrace.endEvent();
        return result;
      }
    }, {
      key: "__invokeCallback",
      value: function __invokeCallback(cbID, args) {
        this._lastFlush = Date.now();
        this._eventLoopStartTime = this._lastFlush;
        var callID = cbID >>> 1;
        var isSuccess = cbID & 1;
        var callback = isSuccess ? this._successCallbacks[callID] : this._failureCallbacks[callID];

        if (!callback) {
          return;
        }

        delete this._successCallbacks[callID];
        delete this._failureCallbacks[callID];
        callback.apply(undefined, _toConsumableArray(args));
      }
    }], [{
      key: "spy",
      value: function spy(spyOrToggle) {
        if (spyOrToggle === true) {
          MessageQueue.prototype.__spy = function (info) {
            console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + " : " + ("" + (info.module ? info.module + '.' : '') + info.method) + ("(" + JSON.stringify(info.args) + ")"));
          };
        } else if (spyOrToggle === false) {
          MessageQueue.prototype.__spy = null;
        } else {
          MessageQueue.prototype.__spy = spyOrToggle;
        }
      }
    }]);

    return MessageQueue;
  }();

  module.exports = MessageQueue;
},17,[18,22,23,24,25,26,3,27]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},18,[19,20,21]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},19,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},20,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},21,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},22,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},23,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = global.ErrorUtils;
},24,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var TRACE_TAG_REACT_APPS = 131072;
  var TRACE_TAG_JS_VM_CALLS = 134217728;
  var _enabled = false;
  var _asyncCookie = 0;
  var _markStack = [];

  var _markStackIndex = -1;

  var _canInstallReactHook = false;
  var REACT_MARKER = "\u269B";
  var userTimingPolyfill = null;
  var Systrace = {
    installReactHook: function installReactHook() {
      if (_enabled) {}

      _canInstallReactHook = true;
    },
    setEnabled: function setEnabled(enabled) {
      if (_enabled !== enabled) {
        _enabled = enabled;
      }
    },
    isEnabled: function isEnabled() {
      return _enabled;
    },
    beginEvent: function beginEvent(profileName, args) {
      if (_enabled) {
        profileName = typeof profileName === 'function' ? profileName() : profileName;
        global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);
      }
    },
    endEvent: function endEvent() {
      if (_enabled) {
        global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);
      }
    },
    beginAsyncEvent: function beginAsyncEvent(profileName) {
      var cookie = _asyncCookie;

      if (_enabled) {
        _asyncCookie++;
        profileName = typeof profileName === 'function' ? profileName() : profileName;
        global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie);
      }

      return cookie;
    },
    endAsyncEvent: function endAsyncEvent(profileName, cookie) {
      if (_enabled) {
        profileName = typeof profileName === 'function' ? profileName() : profileName;
        global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie);
      }
    },
    counterEvent: function counterEvent(profileName, value) {
      if (_enabled) {
        profileName = typeof profileName === 'function' ? profileName() : profileName;
        global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);
      }
    }
  };
  module.exports = Systrace;
},25,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function deepFreezeAndThrowOnMutationInDev(object) {
    return object;
  }

  module.exports = deepFreezeAndThrowOnMutationInDev;
},26,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function stringifySafe(arg) {
    var ret;
    var type = typeof arg;

    if (arg === undefined) {
      ret = 'undefined';
    } else if (arg === null) {
      ret = 'null';
    } else if (type === 'string') {
      ret = '"' + arg + '"';
    } else if (type === 'function') {
      try {
        ret = arg.toString();
      } catch (e) {
        ret = '[function unknown]';
      }
    } else {
      try {
        ret = JSON.stringify(arg);
      } catch (e) {
        if (typeof arg.toString === 'function') {
          try {
            ret = arg.toString();
          } catch (E) {}
        }
      }
    }

    return ret || '["' + type + '" failed to stringify]';
  }

  module.exports = stringifySafe;
},27,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function defineLazyObjectProperty(object, name, descriptor) {
    var get = descriptor.get;
    var enumerable = descriptor.enumerable !== false;
    var writable = descriptor.writable !== false;
    var value;
    var valueSet = false;

    function getValue() {
      if (!valueSet) {
        valueSet = true;
        setValue(get());
      }

      return value;
    }

    function setValue(newValue) {
      value = newValue;
      valueSet = true;
      Object.defineProperty(object, name, {
        value: newValue,
        configurable: true,
        enumerable: enumerable,
        writable: writable
      });
    }

    Object.defineProperty(object, name, {
      get: getValue,
      set: setValue,
      configurable: true,
      enumerable: enumerable
    });
  }

  module.exports = defineLazyObjectProperty;
},28,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var EventEmitter = _$$_REQUIRE(_dependencyMap[6]);

  var EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[7]);

  var RCTDeviceEventEmitter = function (_EventEmitter) {
    _inherits(RCTDeviceEventEmitter, _EventEmitter);

    function RCTDeviceEventEmitter() {
      var _this;

      _classCallCheck(this, RCTDeviceEventEmitter);

      var sharedSubscriber = new EventSubscriptionVendor();
      _this = _possibleConstructorReturn(this, _getPrototypeOf(RCTDeviceEventEmitter).call(this, sharedSubscriber));
      _this.sharedSubscriber = sharedSubscriber;
      return _this;
    }

    _createClass(RCTDeviceEventEmitter, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        return _get(_getPrototypeOf(RCTDeviceEventEmitter.prototype), "addListener", this).call(this, eventType, listener, context);
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        _get(_getPrototypeOf(RCTDeviceEventEmitter.prototype), "removeAllListeners", this).call(this, eventType);
      }
    }, {
      key: "removeSubscription",
      value: function removeSubscription(subscription) {
        if (subscription.emitter !== this) {
          subscription.emitter.removeSubscription(subscription);
        } else {
          _get(_getPrototypeOf(RCTDeviceEventEmitter.prototype), "removeSubscription", this).call(this, subscription);
        }
      }
    }]);

    return RCTDeviceEventEmitter;
  }(EventEmitter);

  module.exports = new RCTDeviceEventEmitter();
},29,[22,23,30,33,34,36,38,41]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},30,[31,32]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof2(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      _typeof2 = function _typeof2(obj) {
        return typeof obj;
      };
    } else {
      _typeof2 = function _typeof2(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof2(obj);
  }

  function _typeof(obj) {
    if (typeof Symbol === "function" && _typeof2(typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return _typeof2(obj);
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : _typeof2(obj);
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},31,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},32,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},33,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var superPropBase = _$$_REQUIRE(_dependencyMap[1]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},34,[33,35]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},35,[33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},36,[37]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},37,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[2]);

  var EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var sparseFilterPredicate = function sparseFilterPredicate() {
    return true;
  };

  var EventEmitter = function () {
    function EventEmitter(subscriber) {
      _classCallCheck(this, EventEmitter);

      this._subscriber = subscriber || new EventSubscriptionVendor();
    }

    _createClass(EventEmitter, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
      }
    }, {
      key: "once",
      value: function once(eventType, listener, context) {
        var _this = this;

        return this.addListener(eventType, function () {
          _this.removeCurrentListener();

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          listener.apply(context, args);
        });
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        this._subscriber.removeAllSubscriptions(eventType);
      }
    }, {
      key: "removeCurrentListener",
      value: function removeCurrentListener() {
        invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
        this.removeSubscription(this._currentSubscription);
      }
    }, {
      key: "removeSubscription",
      value: function removeSubscription(subscription) {
        invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');

        this._subscriber.removeSubscription(subscription);
      }
    }, {
      key: "listeners",
      value: function listeners(eventType) {
        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);

        return subscriptions ? subscriptions.filter(sparseFilterPredicate).map(function (subscription) {
          return subscription.listener;
        }) : [];
      }
    }, {
      key: "emit",
      value: function emit(eventType) {
        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);

        if (subscriptions) {
          for (var i = 0, l = subscriptions.length; i < l; i++) {
            var subscription = subscriptions[i];

            if (subscription && subscription.listener) {
              this._currentSubscription = subscription;
              subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
            }
          }

          this._currentSubscription = null;
        }
      }
    }, {
      key: "removeListener",
      value: function removeListener(eventType, listener) {
        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);

        if (subscriptions) {
          for (var i = 0, l = subscriptions.length; i < l; i++) {
            var subscription = subscriptions[i];

            if (subscription && subscription.listener === listener) {
              subscription.remove();
            }
          }
        }
      }
    }]);

    return EventEmitter;
  }();

  module.exports = EventEmitter;
},38,[22,23,39,41,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var EventSubscription = _$$_REQUIRE(_dependencyMap[5]);

  var EmitterSubscription = function (_EventSubscription) {
    _inherits(EmitterSubscription, _EventSubscription);

    function EmitterSubscription(emitter, subscriber, listener, context) {
      var _this;

      _classCallCheck(this, EmitterSubscription);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(EmitterSubscription).call(this, subscriber));
      _this.emitter = emitter;
      _this.listener = listener;
      _this.context = context;
      return _this;
    }

    _createClass(EmitterSubscription, [{
      key: "remove",
      value: function remove() {
        this.emitter.removeSubscription(this);
      }
    }]);

    return EmitterSubscription;
  }(EventSubscription);

  module.exports = EmitterSubscription;
},39,[22,23,30,33,36,40]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var EventSubscription = function () {
    function EventSubscription(subscriber) {
      _classCallCheck(this, EventSubscription);

      this.subscriber = subscriber;
    }

    _createClass(EventSubscription, [{
      key: "remove",
      value: function remove() {
        this.subscriber.removeSubscription(this);
      }
    }]);

    return EventSubscription;
  }();

  module.exports = EventSubscription;
},40,[22,23]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var invariant = _$$_REQUIRE(_dependencyMap[2]);

  var EventSubscriptionVendor = function () {
    function EventSubscriptionVendor() {
      _classCallCheck(this, EventSubscriptionVendor);

      this._subscriptionsForType = {};
      this._currentSubscription = null;
    }

    _createClass(EventSubscriptionVendor, [{
      key: "addSubscription",
      value: function addSubscription(eventType, subscription) {
        invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');

        if (!this._subscriptionsForType[eventType]) {
          this._subscriptionsForType[eventType] = [];
        }

        var key = this._subscriptionsForType[eventType].length;

        this._subscriptionsForType[eventType].push(subscription);

        subscription.eventType = eventType;
        subscription.key = key;
        return subscription;
      }
    }, {
      key: "removeAllSubscriptions",
      value: function removeAllSubscriptions(eventType) {
        if (eventType === undefined) {
          this._subscriptionsForType = {};
        } else {
          delete this._subscriptionsForType[eventType];
        }
      }
    }, {
      key: "removeSubscription",
      value: function removeSubscription(subscription) {
        var eventType = subscription.eventType;
        var key = subscription.key;
        var subscriptionsForType = this._subscriptionsForType[eventType];

        if (subscriptionsForType) {
          delete subscriptionsForType[key];
        }
      }
    }, {
      key: "getSubscriptionsForType",
      value: function getSubscriptionsForType(eventType) {
        return this._subscriptionsForType[eventType];
      }
    }]);

    return EventSubscriptionVendor;
  }();

  module.exports = EventSubscriptionVendor;
},41,[22,23,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeModules = _$$_REQUIRE(_dependencyMap[0]);

  var Platform = _$$_REQUIRE(_dependencyMap[1]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[2]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var UIManager = NativeModules.UIManager;
  var viewManagerConfigs = {};
  invariant(UIManager, 'UIManager is undefined. The native module config is probably incorrect.');
  UIManager.__takeSnapshot = UIManager.takeSnapshot;

  UIManager.takeSnapshot = function () {
    invariant(false, "UIManager.takeSnapshot should not be called directly. Use ReactNative.takeSnapshot instead.");
  };

  var triedLoadingConfig = new Set();

  UIManager.getViewManagerConfig = function (viewManagerName) {
    if (viewManagerConfigs[viewManagerName] === undefined && UIManager.getConstantsForViewManager) {
      try {
        viewManagerConfigs[viewManagerName] = UIManager.getConstantsForViewManager(viewManagerName);
      } catch (e) {
        viewManagerConfigs[viewManagerName] = null;
      }
    }

    var config = viewManagerConfigs[viewManagerName];

    if (config) {
      return config;
    }

    if (UIManager.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
      var result = UIManager.lazilyLoadView(viewManagerName);
      triedLoadingConfig.add(viewManagerName);

      if (result.viewConfig) {
        UIManager[viewManagerName] = result.viewConfig;
        lazifyViewManagerConfig(viewManagerName);
      }
    }

    return viewManagerConfigs[viewManagerName];
  };

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = UIManager[viewName];

    if (viewConfig.Manager) {
      viewManagerConfigs[viewName] = viewConfig;
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (UIManager.ViewManagerNames) {
    var residual = global.__residual ? global.__residual : function (_, f) {
      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }

      return f.apply(undefined, args);
    };
    residual('void', function (UIManager, defineLazyObjectProperty) {
      UIManager.ViewManagerNames.forEach(function (viewManagerName) {
        defineLazyObjectProperty(UIManager, viewManagerName, {
          get: function get() {
            return UIManager.getConstantsForViewManager(viewManagerName);
          }
        });
      });
    }, UIManager, defineLazyObjectProperty);

    if (global.__makePartial) {
      global.__makePartial(UIManager);
    }
  }

  module.exports = UIManager;
},42,[8,43,44,28,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeModules = _$$_REQUIRE(_dependencyMap[0]);

  var Platform = {
    OS: 'android',

    get Version() {
      var constants = NativeModules.PlatformConstants;
      return constants && constants.Version;
    },

    get isTesting() {
      return false;
    },

    get isTV() {
      var constants = NativeModules.PlatformConstants;
      return constants && constants.uiMode === 'tv';
    },

    select: function select(spec) {
      return 'android' in spec ? spec.android : spec.default;
    }
  };
  module.exports = Platform;
},43,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', '__takeSnapshot', 'takeSnapshot', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},44,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[4]);

  var View = _$$_REQUIRE(_dependencyMap[5]);

  var RCTActivityIndicatorViewNativeComponent = _$$_REQUIRE(_dependencyMap[6]);

  var RCTActivityIndicator = _$$_REQUIRE(_dependencyMap[7]);

  var GRAY = '#999999';

  var ActivityIndicator = function ActivityIndicator(props, forwardedRef) {
    var onLayout = props.onLayout,
        style = props.style,
        restProps = _objectWithoutProperties(props, ["onLayout", "style"]);

    var sizeStyle;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;

      case 'large':
        sizeStyle = styles.sizeLarge;
        break;

      default:
        sizeStyle = {
          height: props.size,
          width: props.size
        };
        break;
    }

    var nativeProps = _objectSpread({}, restProps, {
      ref: forwardedRef,
      style: sizeStyle,
      styleAttr: 'Normal',
      indeterminate: true
    });

    return React.createElement(View, {
      onLayout: onLayout,
      style: StyleSheet.compose(styles.container, style)
    }, React.createElement(RCTActivityIndicator, nativeProps));
  };

  var ActivityIndicatorWithRef = React.forwardRef(ActivityIndicator);
  ActivityIndicatorWithRef.displayName = 'ActivityIndicator';
  ActivityIndicatorWithRef.defaultProps = {
    animating: true,
    color: null,
    hidesWhenStopped: true,
    size: 'small'
  };
  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center'
    },
    sizeSmall: {
      width: 20,
      height: 20
    },
    sizeLarge: {
      width: 36,
      height: 36
    }
  });
  module.exports = ActivityIndicatorWithRef;
},45,[46,9,43,48,52,75,165,166]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},46,[47]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},47,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},48,[49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},49,[50]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v16.8.3
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  var k = _$$_REQUIRE(_dependencyMap[0]),
      n = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      p = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      q = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      r = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      t = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      u = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      v = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      w = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      x = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      y = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      z = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      aa = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      ba = n ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116,
      A = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function ca(a, b, d, c, e, g, h, f) {
    if (!a) {
      a = undefined;
      if (undefined === b) a = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
        var l = [d, c, e, g, h, f],
            m = 0;
        a = Error(b.replace(/%s/g, function () {
          return l[m++];
        }));
        a.name = "Invariant Violation";
      }
      a.framesToPop = 1;
      throw a;
    }
  }

  function B(a) {
    for (var b = arguments.length - 1, d = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 0; c < b; c++) {
      d += "&args[]=" + encodeURIComponent(arguments[c + 1]);
    }

    ca(false, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", d);
  }

  var C = {
    isMounted: function isMounted() {
      return false;
    },
    enqueueForceUpdate: function enqueueForceUpdate() {},
    enqueueReplaceState: function enqueueReplaceState() {},
    enqueueSetState: function enqueueSetState() {}
  },
      D = {};

  function E(a, b, d) {
    this.props = a;
    this.context = b;
    this.refs = D;
    this.updater = d || C;
  }

  E.prototype.isReactComponent = {};

  E.prototype.setState = function (a, b) {
    "object" !== typeof a && "function" !== typeof a && null != a ? B("85") : undefined;
    this.updater.enqueueSetState(this, a, b, "setState");
  };

  E.prototype.forceUpdate = function (a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
  };

  function F() {}

  F.prototype = E.prototype;

  function G(a, b, d) {
    this.props = a;
    this.context = b;
    this.refs = D;
    this.updater = d || C;
  }

  var H = G.prototype = new F();
  H.constructor = G;
  k(H, E.prototype);
  H.isPureReactComponent = true;
  var I = {
    current: null
  },
      J = {
    current: null
  },
      K = Object.prototype.hasOwnProperty,
      L = {
    key: true,
    ref: true,
    __self: true,
    __source: true
  };

  function M(a, b, d) {
    var c = undefined,
        e = {},
        g = null,
        h = null;
    if (null != b) for (c in undefined !== b.ref && (h = b.ref), undefined !== b.key && (g = "" + b.key), b) {
      K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);
    }
    var f = arguments.length - 2;
    if (1 === f) e.children = d;else if (1 < f) {
      for (var l = Array(f), m = 0; m < f; m++) {
        l[m] = arguments[m + 2];
      }

      e.children = l;
    }
    if (a && a.defaultProps) for (c in f = a.defaultProps, f) {
      undefined === e[c] && (e[c] = f[c]);
    }
    return {
      $$typeof: p,
      type: a,
      key: g,
      ref: h,
      props: e,
      _owner: J.current
    };
  }

  function da(a, b) {
    return {
      $$typeof: p,
      type: a.type,
      key: b,
      ref: a.ref,
      props: a.props,
      _owner: a._owner
    };
  }

  function N(a) {
    return "object" === typeof a && null !== a && a.$$typeof === p;
  }

  function escape(a) {
    var b = {
      "=": "=0",
      ":": "=2"
    };
    return "$" + ("" + a).replace(/[=:]/g, function (a) {
      return b[a];
    });
  }

  var O = /\/+/g,
      P = [];

  function Q(a, b, d, c) {
    if (P.length) {
      var e = P.pop();
      e.result = a;
      e.keyPrefix = b;
      e.func = d;
      e.context = c;
      e.count = 0;
      return e;
    }

    return {
      result: a,
      keyPrefix: b,
      func: d,
      context: c,
      count: 0
    };
  }

  function R(a) {
    a.result = null;
    a.keyPrefix = null;
    a.func = null;
    a.context = null;
    a.count = 0;
    10 > P.length && P.push(a);
  }

  function S(a, b, d, c) {
    var e = typeof a;
    if ("undefined" === e || "boolean" === e) a = null;
    var g = false;
    if (null === a) g = true;else switch (e) {
      case "string":
      case "number":
        g = true;
        break;

      case "object":
        switch (a.$$typeof) {
          case p:
          case q:
            g = true;
        }

    }
    if (g) return d(c, a, "" === b ? "." + T(a, 0) : b), 1;
    g = 0;
    b = "" === b ? "." : b + ":";
    if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {
      e = a[h];
      var f = b + T(e, h);
      g += S(e, f, d, c);
    } else if (null === a || "object" !== typeof a ? f = null : (f = A && a[A] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {
      e = e.value, f = b + T(e, h++), g += S(e, f, d, c);
    } else "object" === e && (d = "" + a, B("31", "[object Object]" === d ? "object with keys {" + Object.keys(a).join(", ") + "}" : d, ""));
    return g;
  }

  function U(a, b, d) {
    return null == a ? 0 : S(a, "", b, d);
  }

  function T(a, b) {
    return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
  }

  function ea(a, b) {
    a.func.call(a.context, b, a.count++);
  }

  function fa(a, b, d) {
    var c = a.result,
        e = a.keyPrefix;
    a = a.func.call(a.context, b, a.count++);
    Array.isArray(a) ? V(a, c, d, function (a) {
      return a;
    }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(O, "$&/") + "/") + d)), c.push(a));
  }

  function V(a, b, d, c, e) {
    var g = "";
    null != d && (g = ("" + d).replace(O, "$&/") + "/");
    b = Q(b, g, c, e);
    U(a, fa, b);
    R(b);
  }

  function W() {
    var a = I.current;
    null === a ? B("307") : undefined;
    return a;
  }

  var X = {
    Children: {
      map: function map(a, b, d) {
        if (null == a) return a;
        var c = [];
        V(a, c, null, b, d);
        return c;
      },
      forEach: function forEach(a, b, d) {
        if (null == a) return a;
        b = Q(null, null, b, d);
        U(a, ea, b);
        R(b);
      },
      count: function count(a) {
        return U(a, function () {
          return null;
        }, null);
      },
      toArray: function toArray(a) {
        var b = [];
        V(a, b, null, function (a) {
          return a;
        });
        return b;
      },
      only: function only(a) {
        N(a) ? undefined : B("143");
        return a;
      }
    },
    createRef: function createRef() {
      return {
        current: null
      };
    },
    Component: E,
    PureComponent: G,
    createContext: function createContext(a, b) {
      undefined === b && (b = null);
      a = {
        $$typeof: w,
        _calculateChangedBits: b,
        _currentValue: a,
        _currentValue2: a,
        _threadCount: 0,
        Provider: null,
        Consumer: null
      };
      a.Provider = {
        $$typeof: v,
        _context: a
      };
      return a.Consumer = a;
    },
    forwardRef: function forwardRef(a) {
      return {
        $$typeof: y,
        render: a
      };
    },
    lazy: function lazy(a) {
      return {
        $$typeof: ba,
        _ctor: a,
        _status: -1,
        _result: null
      };
    },
    memo: function memo(a, b) {
      return {
        $$typeof: aa,
        type: a,
        compare: undefined === b ? null : b
      };
    },
    useCallback: function useCallback(a, b) {
      return W().useCallback(a, b);
    },
    useContext: function useContext(a, b) {
      return W().useContext(a, b);
    },
    useEffect: function useEffect(a, b) {
      return W().useEffect(a, b);
    },
    useImperativeHandle: function useImperativeHandle(a, b, d) {
      return W().useImperativeHandle(a, b, d);
    },
    useDebugValue: function useDebugValue() {},
    useLayoutEffect: function useLayoutEffect(a, b) {
      return W().useLayoutEffect(a, b);
    },
    useMemo: function useMemo(a, b) {
      return W().useMemo(a, b);
    },
    useReducer: function useReducer(a, b, d) {
      return W().useReducer(a, b, d);
    },
    useRef: function useRef(a) {
      return W().useRef(a);
    },
    useState: function useState(a) {
      return W().useState(a);
    },
    Fragment: r,
    StrictMode: t,
    Suspense: z,
    createElement: M,
    cloneElement: function cloneElement(a, b, d) {
      null === a || undefined === a ? B("267", a) : undefined;
      var c = undefined,
          e = k({}, a.props),
          g = a.key,
          h = a.ref,
          f = a._owner;

      if (null != b) {
        undefined !== b.ref && (h = b.ref, f = J.current);
        undefined !== b.key && (g = "" + b.key);
        var l = undefined;
        a.type && a.type.defaultProps && (l = a.type.defaultProps);

        for (c in b) {
          K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = undefined === b[c] && undefined !== l ? l[c] : b[c]);
        }
      }

      c = arguments.length - 2;
      if (1 === c) e.children = d;else if (1 < c) {
        l = Array(c);

        for (var m = 0; m < c; m++) {
          l[m] = arguments[m + 2];
        }

        e.children = l;
      }
      return {
        $$typeof: p,
        type: a.type,
        key: g,
        ref: h,
        props: e,
        _owner: f
      };
    },
    createFactory: function createFactory(a) {
      var b = M.bind(null, a);
      b.type = a;
      return b;
    },
    isValidElement: N,
    version: "16.8.3",
    unstable_ConcurrentMode: x,
    unstable_Profiler: u,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      ReactCurrentDispatcher: I,
      ReactCurrentOwner: J,
      assign: k
    }
  },
      Y = {
    default: X
  },
      Z = Y && X || Y;
  module.exports = Z.default || Z;
},50,[51]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }

    return Object(val);
  }

  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }

      var test1 = new String('abc');
      test1[5] = 'de';

      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      }

      var test2 = {};

      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }

      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
        return test2[n];
      });

      if (order2.join('') !== '0123456789') {
        return false;
      }

      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
        test3[letter] = letter;
      });

      if (Object.keys(_extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }

      return true;
    } catch (err) {
      return false;
    }
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
    var from;
    var to = toObject(target);
    var symbols;

    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }

      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);

        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }

    return to;
  };
},51,[11]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PixelRatio = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var StyleSheetValidation = _$$_REQUIRE(_dependencyMap[3]);

  var flatten = _$$_REQUIRE(_dependencyMap[4]);

  var hairlineWidth = PixelRatio.roundToNearestPixel(0.4);

  if (hairlineWidth === 0) {
    hairlineWidth = 1 / PixelRatio.get();
  }

  var absoluteFill = {
    position: 'absolute',
    left: 0,
    right: 0,
    top: 0,
    bottom: 0
  };
  module.exports = {
    hairlineWidth: hairlineWidth,
    absoluteFill: absoluteFill,
    absoluteFillObject: absoluteFill,
    compose: function compose(style1, style2) {
      if (style1 != null && style2 != null) {
        return [style1, style2];
      } else {
        return style1 != null ? style1 : style2;
      }
    },
    flatten: flatten,
    setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
      var value;

      if (ReactNativeStyleAttributes[property] === true) {
        value = {};
      } else if (typeof ReactNativeStyleAttributes[property] === 'object') {
        value = ReactNativeStyleAttributes[property];
      } else {
        console.error(property + " is not a valid style attribute");
        return;
      }

      ReactNativeStyleAttributes[property] = _objectSpread({}, value, {
        process: process
      });
    },
    create: function create(obj) {
      return obj;
    }
  };
},52,[46,53,56,73,74]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var Dimensions = _$$_REQUIRE(_dependencyMap[2]);

  var PixelRatio = function () {
    function PixelRatio() {
      _classCallCheck(this, PixelRatio);
    }

    _createClass(PixelRatio, null, [{
      key: "get",
      value: function get() {
        return Dimensions.get('window').scale;
      }
    }, {
      key: "getFontScale",
      value: function getFontScale() {
        return Dimensions.get('window').fontScale || PixelRatio.get();
      }
    }, {
      key: "getPixelSizeForLayoutSize",
      value: function getPixelSizeForLayoutSize(layoutSize) {
        return Math.round(layoutSize * PixelRatio.get());
      }
    }, {
      key: "roundToNearestPixel",
      value: function roundToNearestPixel(layoutSize) {
        var ratio = PixelRatio.get();
        return Math.round(layoutSize * ratio) / ratio;
      }
    }, {
      key: "startDetecting",
      value: function startDetecting() {}
    }]);

    return PixelRatio;
  }();

  module.exports = PixelRatio;
},53,[22,23,54]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var EventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[5]);

  var invariant = _$$_REQUIRE(_dependencyMap[6]);

  var eventEmitter = new EventEmitter();
  var dimensionsInitialized = false;
  var dimensions = {};

  var Dimensions = function () {
    function Dimensions() {
      _classCallCheck(this, Dimensions);
    }

    _createClass(Dimensions, null, [{
      key: "set",
      value: function set(dims) {
        if (dims && dims.windowPhysicalPixels) {
          dims = JSON.parse(JSON.stringify(dims));
          var windowPhysicalPixels = dims.windowPhysicalPixels;
          dims.window = {
            width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
            height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
            scale: windowPhysicalPixels.scale,
            fontScale: windowPhysicalPixels.fontScale
          };
          {
            var screenPhysicalPixels = dims.screenPhysicalPixels;
            dims.screen = {
              width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
              height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
              scale: screenPhysicalPixels.scale,
              fontScale: screenPhysicalPixels.fontScale
            };
            delete dims.screenPhysicalPixels;
          }
          delete dims.windowPhysicalPixels;
        }

        _extends(dimensions, dims);

        if (dimensionsInitialized) {
          eventEmitter.emit('change', {
            window: dimensions.window,
            screen: dimensions.screen
          });
        } else {
          dimensionsInitialized = true;
        }
      }
    }, {
      key: "get",
      value: function get(dim) {
        invariant(dimensions[dim], 'No dimension set for key ' + dim);
        return dimensions[dim];
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        invariant(type === 'change', 'Trying to subscribe to unknown event: "%s"', type);
        eventEmitter.addListener(type, handler);
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type, handler) {
        invariant(type === 'change', 'Trying to remove listener for unknown event: "%s"', type);
        eventEmitter.removeListener(type, handler);
      }
    }]);

    return Dimensions;
  }();

  var dims = global.nativeExtensions && global.nativeExtensions.DeviceInfo && global.nativeExtensions.DeviceInfo.Dimensions;
  var nativeExtensionsEnabled = true;

  if (!dims) {
    var DeviceInfo = _$$_REQUIRE(_dependencyMap[7]);

    dims = DeviceInfo.Dimensions;
    nativeExtensionsEnabled = false;
  }

  invariant(dims, 'Either DeviceInfo native extension or DeviceInfo Native Module must be registered');
  Dimensions.set(dims);

  if (!nativeExtensionsEnabled) {
    RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {
      Dimensions.set(update);
    });
  }

  module.exports = Dimensions;
},54,[11,22,23,38,43,29,3,55]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeviceInfo = _$$_REQUIRE(_dependencyMap[0]).DeviceInfo;

  var invariant = _$$_REQUIRE(_dependencyMap[1]);

  invariant(DeviceInfo, 'DeviceInfo native module is not installed correctly');
  module.exports = DeviceInfo;
},55,[8,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedImageStylePropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var TextStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var processColor = _$$_REQUIRE(_dependencyMap[4]);

  var processTransform = _$$_REQUIRE(_dependencyMap[5]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var ReactNativeStyleAttributes = {};

  for (var _i = 0, _Object$keys = Object.keys(_objectSpread({}, DeprecatedViewStylePropTypes, TextStylePropTypes, DeprecatedImageStylePropTypes)); _i < _Object$keys.length; _i++) {
    var attributeName = _Object$keys[_i];
    ReactNativeStyleAttributes[attributeName] = true;
  }

  ReactNativeStyleAttributes.transform = {
    process: processTransform
  };
  ReactNativeStyleAttributes.shadowOffset = {
    diff: sizesDiffer
  };
  var colorAttributes = {
    process: processColor
  };
  ReactNativeStyleAttributes.backgroundColor = colorAttributes;
  ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
  ReactNativeStyleAttributes.borderColor = colorAttributes;
  ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
  ReactNativeStyleAttributes.borderRightColor = colorAttributes;
  ReactNativeStyleAttributes.borderTopColor = colorAttributes;
  ReactNativeStyleAttributes.borderStartColor = colorAttributes;
  ReactNativeStyleAttributes.borderEndColor = colorAttributes;
  ReactNativeStyleAttributes.color = colorAttributes;
  ReactNativeStyleAttributes.shadowColor = colorAttributes;
  ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
  ReactNativeStyleAttributes.tintColor = colorAttributes;
  ReactNativeStyleAttributes.textShadowColor = colorAttributes;
  ReactNativeStyleAttributes.overlayColor = colorAttributes;
  module.exports = ReactNativeStyleAttributes;
},56,[46,57,67,68,69,70,72]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[4]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},57,[46,58,60,61,64,65]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},58,[59]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return color;
      }

      return null;
    }

    if (match = matchers.hex6.exec(color)) {
      return parseInt(match[1] + 'ff', 16) >>> 0;
    }

    if (names.hasOwnProperty(color)) {
      return names[color];
    }

    if (match = matchers.rgb.exec(color)) {
      return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
    }

    if (match = matchers.rgba.exec(color)) {
      return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
    }

    if (match = matchers.hex3.exec(color)) {
      return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
    }

    if (match = matchers.hex8.exec(color)) {
      return parseInt(match[1], 16) >>> 0;
    }

    if (match = matchers.hex4.exec(color)) {
      return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
    }

    if (match = matchers.hsl.exec(color)) {
      return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
    }

    if (match = matchers.hsla.exec(color)) {
      return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},59,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},60,[61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  {
    module.exports = _$$_REQUIRE(_dependencyMap[0])();
  }
},61,[62]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = _$$_REQUIRE(_dependencyMap[0]);

  function emptyFunction() {}

  function emptyFunctionWithReset() {}

  emptyFunctionWithReset.resetWarningCache = emptyFunction;

  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }

      var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      err.name = 'Invariant Violation';
      throw err;
    }

    ;
    shim.isRequired = shim;

    function getShim() {
      return shim;
    }

    ;
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
},62,[63]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  module.exports = ReactPropTypesSecret;
},63,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},64,[58,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},65,[61,66]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var UIManager = _$$_REQUIRE(_dependencyMap[0]);

  function deprecatedPropType(propType, explanation) {
    return function validate(props, propName, componentName) {
      if (!UIManager.getViewManagerConfig(componentName) && props[propName] !== undefined) {
        console.warn("`" + propName + "` supplied to `" + componentName + "` has been deprecated. " + explanation);
      }

      for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }

      return propType.apply(undefined, [props, propName, componentName].concat(rest));
    };
  }

  module.exports = deprecatedPropType;
},66,[42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var TextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = TextStylePropTypes;
},67,[46,58,61,68]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[4]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},68,[46,58,60,61,64,65]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var normalizeColor = _$$_REQUIRE(_dependencyMap[1]);

  function processColor(color) {
    if (color === undefined || color === null) {
      return color;
    }

    var int32Color = normalizeColor(color);

    if (int32Color === null || int32Color === undefined) {
      return undefined;
    }

    int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;
    {
      int32Color = int32Color | 0x0;
    }
    return int32Color;
  }

  module.exports = processColor;
},69,[43,59]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var MatrixMath = _$$_REQUIRE(_dependencyMap[0]);

  var Platform = _$$_REQUIRE(_dependencyMap[1]);

  var invariant = _$$_REQUIRE(_dependencyMap[2]);

  var stringifySafe = _$$_REQUIRE(_dependencyMap[3]);

  function processTransform(transform) {
    {
      return transform;
    }
    var result = MatrixMath.createIdentityMatrix();
    transform.forEach(function (transformation) {
      var key = Object.keys(transformation)[0];
      var value = transformation[key];

      switch (key) {
        case 'matrix':
          MatrixMath.multiplyInto(result, result, value);
          break;

        case 'perspective':
          _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);

          break;

        case 'rotateX':
          _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);

          break;

        case 'rotateY':
          _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);

          break;

        case 'rotate':
        case 'rotateZ':
          _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);

          break;

        case 'scale':
          _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);

          break;

        case 'scaleX':
          _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);

          break;

        case 'scaleY':
          _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);

          break;

        case 'translate':
          _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);

          break;

        case 'translateX':
          _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);

          break;

        case 'translateY':
          _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);

          break;

        case 'skewX':
          _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [_convertToRadians(value)]);

          break;

        case 'skewY':
          _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [_convertToRadians(value)]);

          break;

        default:
          throw new Error('Invalid transform name: ' + key);
      }
    });
    return result;
  }

  function _multiplyTransform(result, matrixMathFunction, args) {
    var matrixToApply = MatrixMath.createIdentityMatrix();
    var argsWithIdentity = [matrixToApply].concat(args);
    matrixMathFunction.apply(this, argsWithIdentity);
    MatrixMath.multiplyInto(result, result, matrixToApply);
  }

  function _convertToRadians(value) {
    var floatValue = parseFloat(value);
    return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
  }

  module.exports = processTransform;
},70,[71,43,3,27]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var invariant = _$$_REQUIRE(_dependencyMap[1]);

  var MatrixMath = {
    createIdentityMatrix: function createIdentityMatrix() {
      return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
    },
    createCopy: function createCopy(m) {
      return [m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]];
    },
    createOrthographic: function createOrthographic(left, right, bottom, top, near, far) {
      var a = 2 / (right - left);
      var b = 2 / (top - bottom);
      var c = -2 / (far - near);
      var tx = -(right + left) / (right - left);
      var ty = -(top + bottom) / (top - bottom);
      var tz = -(far + near) / (far - near);
      return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
    },
    createFrustum: function createFrustum(left, right, bottom, top, near, far) {
      var r_width = 1 / (right - left);
      var r_height = 1 / (top - bottom);
      var r_depth = 1 / (near - far);
      var x = 2 * (near * r_width);
      var y = 2 * (near * r_height);
      var A = (right + left) * r_width;
      var B = (top + bottom) * r_height;
      var C = (far + near) * r_depth;
      var D = 2 * (far * near * r_depth);
      return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
    },
    createPerspective: function createPerspective(fovInRadians, aspect, near, far) {
      var h = 1 / Math.tan(fovInRadians / 2);
      var r_depth = 1 / (near - far);
      var C = (far + near) * r_depth;
      var D = 2 * (far * near * r_depth);
      return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
    },
    createTranslate2d: function createTranslate2d(x, y) {
      var mat = MatrixMath.createIdentityMatrix();
      MatrixMath.reuseTranslate2dCommand(mat, x, y);
      return mat;
    },
    reuseTranslate2dCommand: function reuseTranslate2dCommand(matrixCommand, x, y) {
      matrixCommand[12] = x;
      matrixCommand[13] = y;
    },
    reuseTranslate3dCommand: function reuseTranslate3dCommand(matrixCommand, x, y, z) {
      matrixCommand[12] = x;
      matrixCommand[13] = y;
      matrixCommand[14] = z;
    },
    createScale: function createScale(factor) {
      var mat = MatrixMath.createIdentityMatrix();
      MatrixMath.reuseScaleCommand(mat, factor);
      return mat;
    },
    reuseScaleCommand: function reuseScaleCommand(matrixCommand, factor) {
      matrixCommand[0] = factor;
      matrixCommand[5] = factor;
    },
    reuseScale3dCommand: function reuseScale3dCommand(matrixCommand, x, y, z) {
      matrixCommand[0] = x;
      matrixCommand[5] = y;
      matrixCommand[10] = z;
    },
    reusePerspectiveCommand: function reusePerspectiveCommand(matrixCommand, p) {
      matrixCommand[11] = -1 / p;
    },
    reuseScaleXCommand: function reuseScaleXCommand(matrixCommand, factor) {
      matrixCommand[0] = factor;
    },
    reuseScaleYCommand: function reuseScaleYCommand(matrixCommand, factor) {
      matrixCommand[5] = factor;
    },
    reuseScaleZCommand: function reuseScaleZCommand(matrixCommand, factor) {
      matrixCommand[10] = factor;
    },
    reuseRotateXCommand: function reuseRotateXCommand(matrixCommand, radians) {
      matrixCommand[5] = Math.cos(radians);
      matrixCommand[6] = Math.sin(radians);
      matrixCommand[9] = -Math.sin(radians);
      matrixCommand[10] = Math.cos(radians);
    },
    reuseRotateYCommand: function reuseRotateYCommand(matrixCommand, amount) {
      matrixCommand[0] = Math.cos(amount);
      matrixCommand[2] = -Math.sin(amount);
      matrixCommand[8] = Math.sin(amount);
      matrixCommand[10] = Math.cos(amount);
    },
    reuseRotateZCommand: function reuseRotateZCommand(matrixCommand, radians) {
      matrixCommand[0] = Math.cos(radians);
      matrixCommand[1] = Math.sin(radians);
      matrixCommand[4] = -Math.sin(radians);
      matrixCommand[5] = Math.cos(radians);
    },
    createRotateZ: function createRotateZ(radians) {
      var mat = MatrixMath.createIdentityMatrix();
      MatrixMath.reuseRotateZCommand(mat, radians);
      return mat;
    },
    reuseSkewXCommand: function reuseSkewXCommand(matrixCommand, radians) {
      matrixCommand[4] = Math.tan(radians);
    },
    reuseSkewYCommand: function reuseSkewYCommand(matrixCommand, radians) {
      matrixCommand[1] = Math.tan(radians);
    },
    multiplyInto: function multiplyInto(out, a, b) {
      var a00 = a[0],
          a01 = a[1],
          a02 = a[2],
          a03 = a[3],
          a10 = a[4],
          a11 = a[5],
          a12 = a[6],
          a13 = a[7],
          a20 = a[8],
          a21 = a[9],
          a22 = a[10],
          a23 = a[11],
          a30 = a[12],
          a31 = a[13],
          a32 = a[14],
          a33 = a[15];
      var b0 = b[0],
          b1 = b[1],
          b2 = b[2],
          b3 = b[3];
      out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
      out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
      out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
      out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
      b0 = b[4];
      b1 = b[5];
      b2 = b[6];
      b3 = b[7];
      out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
      out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
      out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
      out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
      b0 = b[8];
      b1 = b[9];
      b2 = b[10];
      b3 = b[11];
      out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
      out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
      out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
      out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
      b0 = b[12];
      b1 = b[13];
      b2 = b[14];
      b3 = b[15];
      out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
      out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
      out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
      out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    },
    determinant: function determinant(matrix) {
      var _matrix = _slicedToArray(matrix, 16),
          m00 = _matrix[0],
          m01 = _matrix[1],
          m02 = _matrix[2],
          m03 = _matrix[3],
          m10 = _matrix[4],
          m11 = _matrix[5],
          m12 = _matrix[6],
          m13 = _matrix[7],
          m20 = _matrix[8],
          m21 = _matrix[9],
          m22 = _matrix[10],
          m23 = _matrix[11],
          m30 = _matrix[12],
          m31 = _matrix[13],
          m32 = _matrix[14],
          m33 = _matrix[15];

      return m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33;
    },
    inverse: function inverse(matrix) {
      var det = MatrixMath.determinant(matrix);

      if (!det) {
        return matrix;
      }

      var _matrix2 = _slicedToArray(matrix, 16),
          m00 = _matrix2[0],
          m01 = _matrix2[1],
          m02 = _matrix2[2],
          m03 = _matrix2[3],
          m10 = _matrix2[4],
          m11 = _matrix2[5],
          m12 = _matrix2[6],
          m13 = _matrix2[7],
          m20 = _matrix2[8],
          m21 = _matrix2[9],
          m22 = _matrix2[10],
          m23 = _matrix2[11],
          m30 = _matrix2[12],
          m31 = _matrix2[13],
          m32 = _matrix2[14],
          m33 = _matrix2[15];

      return [(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, (m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, (m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, (m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, (m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, (m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, (m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, (m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, (m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, (m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, (m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, (m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, (m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, (m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, (m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, (m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];
    },
    transpose: function transpose(m) {
      return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];
    },
    multiplyVectorByMatrix: function multiplyVectorByMatrix(v, m) {
      var _v = _slicedToArray(v, 4),
          vx = _v[0],
          vy = _v[1],
          vz = _v[2],
          vw = _v[3];

      return [vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];
    },
    v3Length: function v3Length(a) {
      return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
    },
    v3Normalize: function v3Normalize(vector, v3Length) {
      var im = 1 / (v3Length || MatrixMath.v3Length(vector));
      return [vector[0] * im, vector[1] * im, vector[2] * im];
    },
    v3Dot: function v3Dot(a, b) {
      return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
    },
    v3Combine: function v3Combine(a, b, aScale, bScale) {
      return [aScale * a[0] + bScale * b[0], aScale * a[1] + bScale * b[1], aScale * a[2] + bScale * b[2]];
    },
    v3Cross: function v3Cross(a, b) {
      return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
    },
    quaternionToDegreesXYZ: function quaternionToDegreesXYZ(q, matrix, row) {
      var _q = _slicedToArray(q, 4),
          qx = _q[0],
          qy = _q[1],
          qz = _q[2],
          qw = _q[3];

      var qw2 = qw * qw;
      var qx2 = qx * qx;
      var qy2 = qy * qy;
      var qz2 = qz * qz;
      var test = qx * qy + qz * qw;
      var unit = qw2 + qx2 + qy2 + qz2;
      var conv = 180 / Math.PI;

      if (test > 0.49999 * unit) {
        return [0, 2 * Math.atan2(qx, qw) * conv, 90];
      }

      if (test < -0.49999 * unit) {
        return [0, -2 * Math.atan2(qx, qw) * conv, -90];
      }

      return [MatrixMath.roundTo3Places(Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];
    },
    roundTo3Places: function roundTo3Places(n) {
      var arr = n.toString().split('e');
      return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
    },
    decomposeMatrix: function decomposeMatrix(transformMatrix) {
      invariant(transformMatrix.length === 16, 'Matrix decomposition needs a list of 3d matrix values, received %s', transformMatrix);
      var perspective = [];
      var quaternion = [];
      var scale = [];
      var skew = [];
      var translation = [];

      if (!transformMatrix[15]) {
        return;
      }

      var matrix = [];
      var perspectiveMatrix = [];

      for (var i = 0; i < 4; i++) {
        matrix.push([]);

        for (var j = 0; j < 4; j++) {
          var value = transformMatrix[i * 4 + j] / transformMatrix[15];
          matrix[i].push(value);
          perspectiveMatrix.push(j === 3 ? 0 : value);
        }
      }

      perspectiveMatrix[15] = 1;

      if (!MatrixMath.determinant(perspectiveMatrix)) {
        return;
      }

      if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
        var rightHandSide = [matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]];
        var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
        var transposedInversePerspectiveMatrix = MatrixMath.transpose(inversePerspectiveMatrix);
        perspective = MatrixMath.multiplyVectorByMatrix(rightHandSide, transposedInversePerspectiveMatrix);
      } else {
        perspective[0] = perspective[1] = perspective[2] = 0;
        perspective[3] = 1;
      }

      for (var _i = 0; _i < 3; _i++) {
        translation[_i] = matrix[3][_i];
      }

      var row = [];

      for (var _i2 = 0; _i2 < 3; _i2++) {
        row[_i2] = [matrix[_i2][0], matrix[_i2][1], matrix[_i2][2]];
      }

      scale[0] = MatrixMath.v3Length(row[0]);
      row[0] = MatrixMath.v3Normalize(row[0], scale[0]);
      skew[0] = MatrixMath.v3Dot(row[0], row[1]);
      row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);
      skew[0] = MatrixMath.v3Dot(row[0], row[1]);
      row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);
      scale[1] = MatrixMath.v3Length(row[1]);
      row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
      skew[0] /= scale[1];
      skew[1] = MatrixMath.v3Dot(row[0], row[2]);
      row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
      skew[2] = MatrixMath.v3Dot(row[1], row[2]);
      row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);
      scale[2] = MatrixMath.v3Length(row[2]);
      row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
      skew[1] /= scale[2];
      skew[2] /= scale[2];
      var pdum3 = MatrixMath.v3Cross(row[1], row[2]);

      if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
        for (var _i3 = 0; _i3 < 3; _i3++) {
          scale[_i3] *= -1;
          row[_i3][0] *= -1;
          row[_i3][1] *= -1;
          row[_i3][2] *= -1;
        }
      }

      quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
      quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
      quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
      quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

      if (row[2][1] > row[1][2]) {
        quaternion[0] = -quaternion[0];
      }

      if (row[0][2] > row[2][0]) {
        quaternion[1] = -quaternion[1];
      }

      if (row[1][0] > row[0][1]) {
        quaternion[2] = -quaternion[2];
      }

      var rotationDegrees;

      if (quaternion[0] < 0.001 && quaternion[0] >= 0 && quaternion[1] < 0.001 && quaternion[1] >= 0) {
        rotationDegrees = [0, 0, MatrixMath.roundTo3Places(Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];
      } else {
        rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);
      }

      return {
        rotationDegrees: rotationDegrees,
        perspective: perspective,
        quaternion: quaternion,
        scale: scale,
        skew: skew,
        translation: translation,
        rotate: rotationDegrees[2],
        rotateX: rotationDegrees[0],
        rotateY: rotationDegrees[1],
        scaleX: scale[0],
        scaleY: scale[1],
        translateX: translation[0],
        translateY: translation[1]
      };
    }
  };
  module.exports = MatrixMath;
},71,[12,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var dummySize = {
    width: undefined,
    height: undefined
  };

  var sizesDiffer = function sizesDiffer(one, two) {
    one = one || dummySize;
    two = two || dummySize;
    return one !== two && (one.width !== two.width || one.height !== two.height);
  };

  module.exports = sizesDiffer;
},72,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedImageStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var TextStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  var StyleSheetValidation = function () {
    function StyleSheetValidation() {
      _classCallCheck(this, StyleSheetValidation);
    }

    _createClass(StyleSheetValidation, null, [{
      key: "validateStyleProp",
      value: function validateStyleProp(prop, style, caller) {
        {
          return;
        }

        if (allStylePropTypes[prop] === undefined) {
          var message1 = '"' + prop + '" is not a valid style property.';
          var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
          styleError(message1, style, caller, message2);
        }

        var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);

        if (error) {
          styleError(error.message, style, caller);
        }
      }
    }, {
      key: "validateStyle",
      value: function validateStyle(name, styles) {
        {
          return;
        }

        for (var prop in styles[name]) {
          StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
        }
      }
    }, {
      key: "addValidStylePropTypes",
      value: function addValidStylePropTypes(stylePropTypes) {
        {
          return;
        }

        for (var key in stylePropTypes) {
          allStylePropTypes[key] = stylePropTypes[key];
        }
      }
    }]);

    return StyleSheetValidation;
  }();

  var styleError = function styleError(message1, style, caller, message2) {
    invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
  };

  var allStylePropTypes = {};
  module.exports = StyleSheetValidation;
},73,[22,23,57,67,68,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function flattenStyle(style) {
    if (style === null || typeof style !== 'object') {
      return undefined;
    }

    if (!Array.isArray(style)) {
      return style;
    }

    var result = {};

    for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
      var computedStyle = flattenStyle(style[i]);

      if (computedStyle) {
        for (var key in computedStyle) {
          result[key] = computedStyle[key];
        }
      }
    }

    return result;
  }

  module.exports = flattenStyle;
},74,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var TextAncestor = _$$_REQUIRE(_dependencyMap[2]);

  var ViewNativeComponent = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var ViewToExport = ViewNativeComponent;
  module.exports = ViewToExport;
},75,[11,48,76,77,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},76,[48]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  var NativeViewComponent = requireNativeComponent('RCTView');
  module.exports = NativeViewComponent;
},77,[78,155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNative;
  {
    ReactNative = _$$_REQUIRE(_dependencyMap[0]);
  }
  module.exports = ReactNative;
},78,[79]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[2]),
      UIManager = _$$_REQUIRE(_dependencyMap[3]),
      RCTEventEmitter = _$$_REQUIRE(_dependencyMap[4]),
      React = _$$_REQUIRE(_dependencyMap[5]),
      deepDiffer = _$$_REQUIRE(_dependencyMap[6]),
      flattenStyle = _$$_REQUIRE(_dependencyMap[7]),
      TextInputState = _$$_REQUIRE(_dependencyMap[8]);

  var scheduler = _$$_REQUIRE(_dependencyMap[9]),
      ExceptionsManager = _$$_REQUIRE(_dependencyMap[10]);

  function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      condition = undefined;
      if (undefined === format) condition = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
        var args = [a, b, c, d, e, f],
            argIndex = 0;
        condition = Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        condition.name = "Invariant Violation";
      }
      condition.framesToPop = 1;
      throw condition;
    }
  }

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else invariant(false, "clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."), error = undefined;

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      invariant(-1 < pluginIndex, "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.", pluginName);

      if (!plugins[pluginIndex]) {
        invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.", pluginName);
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          invariant(!eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0), "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.", eventName$jscomp$0);
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          invariant(JSCompiler_inline_result, "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    invariant(!registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {},
      getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`.");
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined.");
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];
          namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = true);
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    invariant(!listener || "function" === typeof listener, "Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    invariant(event instanceof this, "Trying to release an event instance into a pool of a different type.");
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    invariant(null != _ref, "Touch object is missing identifier.");
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\nTouch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\nTouch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
  }

  function printTouch(touch) {
    return JSON.stringify({
      identifier: touch.identifier,
      pageX: touch.pageX,
      pageY: touch.pageY,
      timestamp: timestampForTouch(touch)
    });
  }

  function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, 20));
    20 < touchBank.length && (printed += " (original size: " + touchBank.length + ")");
    return printed;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined.");
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes$1 = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes$1,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes$1.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes$1.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes$1.selectionChangeShouldSetResponder : eventTypes$1.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes$1.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes$1.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes$1.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes$1.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes$1.responderStart : targetInst ? eventTypes$1.responderMove : depthA ? eventTypes$1.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes$1.responderTerminate : topLevelType ? eventTypes$1.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      ReactNativeBridgeEventPlugin = {
    eventTypes: ReactNativeViewConfigRegistry.eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (null == targetInst) return null;
      var bubbleDispatchConfig = ReactNativeViewConfigRegistry.customBubblingEventTypes[topLevelType],
          directDispatchConfig = ReactNativeViewConfigRegistry.customDirectEventTypes[topLevelType];
      invariant(bubbleDispatchConfig || directDispatchConfig, 'Unsupported top level event type "%s" dispatched', topLevelType);
      topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
      if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
      return topLevelType;
    }
  };
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin
  });
  var instanceCache = {},
      instanceProps = {};

  function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (target = getInstanceFromNode(target)) {
      invariant(false, "setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
      var props = getFiberCurrentPropsFromNode(target.stateNode);
      null(target.stateNode, target.type, props);
    }
  }

  function _batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function _flushInteractiveUpdatesImpl() {}

  var isBatching = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isBatching) return fn(bookkeeping);
    isBatching = true;

    try {
      return _batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isBatching = false, null !== restoreTarget || null !== restoreQueue) if (_flushInteractiveUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;
      if (events && (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."), hasRethrowError)) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
    });
  }

  RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    invariant(tag, "All native instances should have a tag.");
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116,
      MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_CONCURRENT_MODE_TYPE:
        return "ConcurrentMode";

      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    invariant(2 === isFiberMountedImpl(fiber), "Unable to find node on an unmounted component.");
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) return alternate = isFiberMountedImpl(fiber), invariant(3 !== alternate, "Unable to find node on an unmounted component."), 1 === alternate ? null : fiber;

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return,
          parentB = parentA ? parentA.alternate : null;
      if (!parentA || !parentB) break;

      if (parentA.child === parentB.child) {
        for (var child = parentA.child; child;) {
          if (child === a) return assertIsMounted(parentA), fiber;
          if (child === b) return assertIsMounted(parentA), alternate;
          child = child.sibling;
        }

        invariant(false, "Unable to find node on an unmounted component.");
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        child = false;

        for (var _child = parentA.child; _child;) {
          if (_child === a) {
            child = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            child = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!child) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              child = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              child = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          invariant(child, "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
        }
      }
      invariant(a.alternate === b, "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
    }

    invariant(3 === a.tag, "Unable to find node on an unmounted component.");
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }(),
      now$1 = "object" === typeof performance && "function" === typeof performance.now ? function () {
    return performance.now();
  } : function () {
    return Date.now();
  },
      scheduledCallback = null,
      frameDeadline = 0;

  function setTimeoutCallback() {
    frameDeadline = now$1() + 5;
    var callback = scheduledCallback;
    scheduledCallback = null;
    null !== callback && callback();
  }

  function scheduleDeferredCallback$1(callback) {
    scheduledCallback = callback;
    return setTimeout(setTimeoutCallback, 1);
  }

  function shim$1() {
    invariant(false, "The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue.");
  }

  var UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) delete instanceCache[node], delete instanceProps[node];else {
      var tag = node._nativeTag;
      delete instanceCache[tag];
      delete instanceProps[tag];

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps) {
    updatePayloadTODO = instance.viewConfig;
    instanceProps[instance._nativeTag] = newProps;
    oldProps = diffProperties(null, oldProps, newProps, updatePayloadTODO.validAttributes);
    null != oldProps && UIManager.updateView(instance._nativeTag, updatePayloadTODO.uiViewClassName, oldProps);
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    invariant(contextStackCursor.current === emptyContextObject, "Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      invariant(contextKey in fiber, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(type) || "Unknown", contextKey);
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    invariant(instance, "Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function catchErrors(fn) {
    return function (arg) {
      try {
        return fn(arg);
      } catch (err) {}
    };
  }

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);
      onCommitFiberRoot = catchErrors(function (root) {
        return hook.onCommitFiberRoot(rendererID, root);
      });
      onCommitFiberUnmount = catchErrors(function (fiber) {
        return hook.onCommitFiberUnmount(rendererID, fiber);
      });
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    workInProgress.contextDependencies = current.contextDependencies;
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        return createFiberFromMode(pendingProps, mode | 3, expirationTime, key);

      case REACT_STRICT_MODE_TYPE:
        return createFiberFromMode(pendingProps, mode | 2, expirationTime, key);

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 4), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_TYPE, type.type = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        invariant(false, "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, "");
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromMode(pendingProps, mode, expirationTime, key) {
    pendingProps = createFiber(8, pendingProps, key, mode);
    mode = 0 === (mode & 1) ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;
    pendingProps.elementType = mode;
    pendingProps.type = mode;
    pendingProps.expirationTime = expirationTime;
    return pendingProps;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function markPendingPriorityLevel(root, expirationTime) {
    root.didError = false;
    var earliestPendingTime = root.earliestPendingTime;
    0 === earliestPendingTime ? root.earliestPendingTime = root.latestPendingTime = expirationTime : earliestPendingTime < expirationTime ? root.earliestPendingTime = expirationTime : root.latestPendingTime > expirationTime && (root.latestPendingTime = expirationTime);
    findNextExpirationTimeToWorkOn(expirationTime, root);
  }

  function markCommittedPriorityLevels(root, earliestRemainingTime) {
    root.didError = false;
    if (0 === earliestRemainingTime) root.earliestPendingTime = 0, root.latestPendingTime = 0, root.earliestSuspendedTime = 0, root.latestSuspendedTime = 0, root.latestPingedTime = 0;else {
      earliestRemainingTime < root.latestPingedTime && (root.latestPingedTime = 0);
      var latestPendingTime = root.latestPendingTime;
      0 !== latestPendingTime && (latestPendingTime > earliestRemainingTime ? root.earliestPendingTime = root.latestPendingTime = 0 : root.earliestPendingTime > earliestRemainingTime && (root.earliestPendingTime = root.latestPendingTime));
      latestPendingTime = root.earliestSuspendedTime;
      0 === latestPendingTime ? markPendingPriorityLevel(root, earliestRemainingTime) : earliestRemainingTime < root.latestSuspendedTime ? (root.earliestSuspendedTime = 0, root.latestSuspendedTime = 0, root.latestPingedTime = 0, markPendingPriorityLevel(root, earliestRemainingTime)) : earliestRemainingTime > latestPendingTime && markPendingPriorityLevel(root, earliestRemainingTime);
    }
    findNextExpirationTimeToWorkOn(0, root);
  }

  function markSuspendedPriorityLevel(root, suspendedTime) {
    root.didError = false;
    root.latestPingedTime >= suspendedTime && (root.latestPingedTime = 0);
    var earliestPendingTime = root.earliestPendingTime,
        latestPendingTime = root.latestPendingTime;
    earliestPendingTime === suspendedTime ? root.earliestPendingTime = latestPendingTime === suspendedTime ? root.latestPendingTime = 0 : latestPendingTime : latestPendingTime === suspendedTime && (root.latestPendingTime = earliestPendingTime);
    earliestPendingTime = root.earliestSuspendedTime;
    latestPendingTime = root.latestSuspendedTime;
    0 === earliestPendingTime ? root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime : earliestPendingTime < suspendedTime ? root.earliestSuspendedTime = suspendedTime : latestPendingTime > suspendedTime && (root.latestSuspendedTime = suspendedTime);
    findNextExpirationTimeToWorkOn(suspendedTime, root);
  }

  function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {
    var earliestPendingTime = root.earliestPendingTime;
    root = root.earliestSuspendedTime;
    earliestPendingTime > renderExpirationTime && (renderExpirationTime = earliestPendingTime);
    root > renderExpirationTime && (renderExpirationTime = root);
    return renderExpirationTime;
  }

  function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {
    var earliestSuspendedTime = root.earliestSuspendedTime,
        latestSuspendedTime = root.latestSuspendedTime,
        earliestPendingTime = root.earliestPendingTime,
        latestPingedTime = root.latestPingedTime;
    earliestPendingTime = 0 !== earliestPendingTime ? earliestPendingTime : latestPingedTime;
    0 === earliestPendingTime && (0 === completedExpirationTime || latestSuspendedTime < completedExpirationTime) && (earliestPendingTime = latestSuspendedTime);
    completedExpirationTime = earliestPendingTime;
    0 !== completedExpirationTime && earliestSuspendedTime > completedExpirationTime && (completedExpirationTime = earliestSuspendedTime);
    root.nextExpirationTimeToWorkOn = earliestPendingTime;
    root.expirationTime = completedExpirationTime;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, inst);
      var update = createUpdate(currentTime);
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      flushPassiveEffects();
      enqueueUpdate(inst, update);
      scheduleWork(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, inst);
      var update = createUpdate(currentTime);
      update.tag = ReplaceState;
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      flushPassiveEffects();
      enqueueUpdate(inst, update);
      scheduleWork(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, inst);
      var update = createUpdate(currentTime);
      update.tag = ForceUpdate;
      undefined !== callback && null !== callback && (update.callback = callback);
      flushPassiveEffects();
      enqueueUpdate(inst, update);
      scheduleWork(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;
        element && (invariant(1 === element.tag, "Function components cannot have refs. Did you mean to use React.forwardRef()?"), inst = element.stateNode);
        invariant(inst, "Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.", returnFiber);
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      invariant("string" === typeof returnFiber, "Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
      invariant(element._owner, "Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.", returnFiber);
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    "textarea" !== returnFiber.type && invariant(false, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, "");
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          if (oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime)) currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber;
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        if (nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime)) shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber;
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      invariant("function" === typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      invariant(null != newChildrenIterable, "An iterable object provided no iterator.");

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          oldFiber || (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                } else {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                  break;
                }
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);
              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                } else {
                  deleteRemainingChildren(returnFiber, currentFirstChild);
                  break;
                }
              } else deleteChild(returnFiber, currentFirstChild);
              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          expirationTime = returnFiber.type, invariant(false, "%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.", expirationTime.displayName || expirationTime.name || "Component");
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    invariant(false, "Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)");
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    invariant(!current, "Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      invariant(null !== nextCurrentHook, "Rendered more hooks than during the previous render.");
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    invariant(null !== queue, "Should have a queue. This is likely a bug in React. Please file an issue.");

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.eagerReducer = reducer;
          queue.eagerState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action);
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.eagerReducer = reducer;
      queue.eagerState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    invariant(25 > numberOfReRenders, "Too many re-renders. React limits the number of renders to prevent an infinite loop.");
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      flushPassiveEffects();
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, fiber);
      var _update2 = {
        expirationTime: currentTime,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      },
          _last = queue.last;
      if (null === _last) _update2.next = _update2;else {
        var first = _last.next;
        null !== first && (_update2.next = first);
        _last.next = _update2;
      }
      queue.last = _update2;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.eagerReducer, null !== alternate)) try {
        var currentState = queue.eagerState,
            _eagerState = alternate(currentState, action);

        _update2.eagerReducer = alternate;
        _update2.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleWork(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        eagerReducer: reducer,
        eagerState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        eagerReducer: basicStateReducer,
        eagerState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var unmaskedContext = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    unmaskedContext = getMaskedContext(workInProgress, unmaskedContext);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, unmaskedContext, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        nextState = workInProgress.memoizedState;

    if (0 === (workInProgress.effectTag & 64)) {
      nextState = null;
      var nextDidTimeout = false;
    } else nextState = {
      timedOutAt: null !== nextState ? nextState.timedOutAt : 0
    }, nextDidTimeout = true, workInProgress.effectTag &= -65;

    if (null === current$$1) {
      if (nextDidTimeout) {
        var nextFallbackChildren = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        0 === (workInProgress.mode & 1) && (current$$1.child = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child);
        mode = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
        current$$1.sibling = mode;
        renderExpirationTime = current$$1;
        renderExpirationTime.return = mode.return = workInProgress;
      } else renderExpirationTime = mode = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else null !== current$$1.memoizedState ? (mode = current$$1.child, nextFallbackChildren = mode.sibling, nextDidTimeout ? (renderExpirationTime = nextProps.fallback, nextProps = createWorkInProgress(mode, mode.pendingProps, 0), 0 === (workInProgress.mode & 1) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== mode.child && (nextProps.child = nextDidTimeout)), mode = nextProps.sibling = createWorkInProgress(nextFallbackChildren, renderExpirationTime, nextFallbackChildren.expirationTime), renderExpirationTime = nextProps, nextProps.childExpirationTime = 0, renderExpirationTime.return = mode.return = workInProgress) : renderExpirationTime = mode = reconcileChildFibers(workInProgress, mode.child, nextProps.children, renderExpirationTime)) : (nextFallbackChildren = current$$1.child, nextDidTimeout ? (nextDidTimeout = nextProps.fallback, nextProps = createFiberFromFragment(null, mode, 0, null), nextProps.child = nextFallbackChildren, 0 === (workInProgress.mode & 1) && (nextProps.child = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child), mode = nextProps.sibling = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null), mode.effectTag |= 2, renderExpirationTime = nextProps, nextProps.childExpirationTime = 0, renderExpirationTime.return = mode.return = workInProgress) : mode = renderExpirationTime = reconcileChildFibers(workInProgress, nextFallbackChildren, nextProps.children, renderExpirationTime)), workInProgress.stateNode = current$$1.stateNode;
    workInProgress.memoizedState = nextState;
    workInProgress.child = renderExpirationTime;
    return mode;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.contextDependencies = current$$1.contextDependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    invariant(null === current$$1 || workInProgress.child === current$$1.child, "Resuming work not yet implemented.");

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  function beginWork(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        var context = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        context = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, context, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof context && null !== context && "function" === typeof context.render && undefined === context.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== context.state && undefined !== context.state ? context.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          context.updater = classComponentUpdater;
          workInProgress.stateNode = context;
          context._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, context, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        context = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        hasContext = workInProgress.pendingProps;
        current$$1 = readLazyComponentType(context);
        workInProgress.type = current$$1;
        context = workInProgress.tag = resolveLazyComponentTag(current$$1);
        hasContext = resolveDefaultProps(current$$1, hasContext);
        getDerivedStateFromProps = undefined;

        switch (context) {
          case 0:
            getDerivedStateFromProps = updateFunctionComponent(null, workInProgress, current$$1, hasContext, renderExpirationTime);
            break;

          case 1:
            getDerivedStateFromProps = updateClassComponent(null, workInProgress, current$$1, hasContext, renderExpirationTime);
            break;

          case 11:
            getDerivedStateFromProps = updateForwardRef(null, workInProgress, current$$1, hasContext, renderExpirationTime);
            break;

          case 14:
            getDerivedStateFromProps = updateMemoComponent(null, workInProgress, current$$1, resolveDefaultProps(current$$1.type, hasContext), updateExpirationTime, renderExpirationTime);
            break;

          default:
            invariant(false, "Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s", current$$1, "");
        }

        return getDerivedStateFromProps;

      case 0:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, context, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), updateClassComponent(current$$1, workInProgress, updateExpirationTime, context, renderExpirationTime);

      case 3:
        return pushHostRootContext(workInProgress), updateExpirationTime = workInProgress.updateQueue, invariant(null !== updateExpirationTime, "If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."), context = workInProgress.memoizedState, context = null !== context ? context.element : null, processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime), updateExpirationTime = workInProgress.memoizedState.element, updateExpirationTime === context ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child), workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child, workInProgress;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), updateForwardRef(current$$1, workInProgress, updateExpirationTime, context, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          context = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = context.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === context.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.contextDependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.first; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime), dependency.tag = ForceUpdate, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    dependency = renderExpirationTime;

                    for (var node = oldValue.return; null !== node;) {
                      var alternate = node.alternate;
                      if (node.childExpirationTime < dependency) node.childExpirationTime = dependency, null !== alternate && alternate.childExpirationTime < dependency && (alternate.childExpirationTime = dependency);else if (null !== alternate && alternate.childExpirationTime < dependency) alternate.childExpirationTime = dependency;else break;
                      node = node.return;
                    }

                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, context.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return context = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), context = readContext(context, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(context), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return context = workInProgress.type, hasContext = resolveDefaultProps(context, workInProgress.pendingProps), hasContext = resolveDefaultProps(context.type, hasContext), updateMemoComponent(current$$1, workInProgress, context, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, context, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, context, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);
    }

    invariant(false, "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.");
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    var currentDependencies = workInProgress.contextDependencies;
    null !== currentDependencies && currentDependencies.expirationTime >= renderExpirationTime && (didReceiveUpdate = true);
    workInProgress.contextDependencies = null;
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };
      null === lastContextDependency ? (invariant(null !== currentlyRenderingFiber, "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), lastContextDependency = observedBits, currentlyRenderingFiber.contextDependencies = {
        first: observedBits,
        expirationTime: 0
      }) : lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var UpdateState = 0,
      ReplaceState = 1,
      ForceUpdate = 2,
      CaptureUpdate = 3,
      hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime) {
    return {
      expirationTime: expirationTime,
      tag: UpdateState,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case ReplaceState:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case CaptureUpdate:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case UpdateState:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case ForceUpdate:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        invariant("function" === typeof _callback3, "Invalid argument passed as callback. Expected a function. Instead received: %s", _callback3);

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function logCapturedError(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;

    if (error instanceof Error) {
      capturedError = error.message;
      var name = error.name;

      try {
        error.message = (capturedError ? name + ": " + capturedError : name) + "\n\nThis error is located at:" + componentStack;
      } catch (e) {}
    } else error = "string" === typeof error ? Error(error + "\n\nThis error is located at:" + componentStack) : Error("Unspecified error at:" + componentStack);

    ExceptionsManager.handleException(error, false);
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function hideOrUnhideAllChildren(finishedWork, isHidden) {
    for (var node = finishedWork;;) {
      if (5 === node.tag) {
        var instance = node.stateNode;

        if (isHidden) {
          var viewConfig = instance.viewConfig;
          var updatePayload = diffProperties(null, emptyObject, {
            style: {
              display: "none"
            }
          }, viewConfig.validAttributes);
          UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        } else {
          instance = node.stateNode;
          updatePayload = node.memoizedProps;
          viewConfig = instance.viewConfig;

          var prevProps = _extends({}, updatePayload, {
            style: [updatePayload.style, {
              display: "none"
            }]
          });

          updatePayload = diffProperties(null, prevProps, updatePayload, viewConfig.validAttributes);
          UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        }
      } else {
        if (6 === node.tag) throw Error("Not yet implemented.");

        if (13 === node.tag && null !== node.memoizedState) {
          instance = node.child.sibling;
          instance.return = node;
          node = instance;
          continue;
        } else if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitUnmount(current$$1$jscomp$0) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var effect = updateQueue = updateQueue.next;

          do {
            var destroy = effect.destroy;

            if (undefined !== destroy) {
              var current$$1 = current$$1$jscomp$0;

              try {
                destroy();
              } catch (error) {
                captureCommitPhaseError(current$$1, error);
              }
            }

            effect = effect.next;
          } while (effect !== updateQueue);
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        updateQueue = current$$1$jscomp$0.stateNode;
        if ("function" === typeof updateQueue.componentWillUnmount) try {
          updateQueue.props = current$$1$jscomp$0.memoizedProps, updateQueue.state = current$$1$jscomp$0.memoizedState, updateQueue.componentWillUnmount();
        } catch (unmountError) {
          captureCommitPhaseError(current$$1$jscomp$0, unmountError);
        }
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0);
    }
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      invariant(false, "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
      parentFiber = undefined;
    }

    var isContainer = parent = undefined;

    switch (parentFiber.tag) {
      case 5:
        parent = parentFiber.stateNode;
        isContainer = false;
        break;

      case 3:
        parent = parentFiber.stateNode.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parentFiber.stateNode.containerInfo;
        isContainer = true;
        break;

      default:
        invariant(false, "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      if (5 === node.tag || 6 === node.tag) {
        if (parentFiber) {
          if (isContainer) invariant("number" !== typeof parent, "Container does not support insertBefore operation");else {
            var parentInstance = parent,
                child = node.stateNode,
                beforeChild = parentFiber,
                children = parentInstance._children,
                index = children.indexOf(child);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [], [], ["number" === typeof child ? child : child._nativeTag], [index], []));
          }
        } else isContainer ? (parentInstance = node.stateNode, UIManager.setChildren(parent, ["number" === typeof parentInstance ? parentInstance : parentInstance._nativeTag])) : (parentInstance = parent, child = node.stateNode, children = "number" === typeof child ? child : child._nativeTag, index = parentInstance._children, beforeChild = index.indexOf(child), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(child), UIManager.manageChildren(parentInstance._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          invariant(null !== currentParentIsValid, "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");

          switch (currentParentIsValid.tag) {
            case 5:
              currentParent = currentParentIsValid.stateNode;
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParentIsValid.stateNode.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParentIsValid.stateNode.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        if (currentParentIsContainer) root = currentParent, recursivelyUncacheFiberNode(node.stateNode), UIManager.manageChildren(root, [], [], [], [], [0]);else {
          root = currentParent;
          var child = node.stateNode;
          recursivelyUncacheFiberNode(child);
          node$jscomp$0 = root._children;
          child = node$jscomp$0.indexOf(child);
          node$jscomp$0.splice(child, 1);
          UIManager.manageChildren(root._nativeTag, [], [], [], [], [child]);
        }
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var type = finishedWork.type,
              updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && commitUpdate(instance, updatePayload, type, current$$1, newProps, finishedWork);
        }

        break;

      case 6:
        invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
        UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork.memoizedState;
        newProps = undefined;
        current$$1 = finishedWork;
        null === instance ? newProps = false : (newProps = true, current$$1 = finishedWork.child, 0 === instance.timedOutAt && (instance.timedOutAt = requestCurrentTime()));
        null !== current$$1 && hideOrUnhideAllChildren(current$$1, newProps);
        instance = finishedWork.updateQueue;

        if (null !== instance) {
          finishedWork.updateQueue = null;
          var retryCache = finishedWork.stateNode;
          null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
          instance.forEach(function (thenable) {
            var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
            retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
          });
        }

        break;

      case 17:
        break;

      default:
        invariant(false, "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime);
    expirationTime.tag = CaptureUpdate;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      onUncaughtError(error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime);
    expirationTime.tag = CaptureUpdate;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error$jscomp$0 = errorInfo.value;

      expirationTime.payload = function () {
        return getDerivedStateFromError(error$jscomp$0);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
      var error = errorInfo.value,
          stack = errorInfo.stack;
      logError(fiber, errorInfo);
      this.componentDidCatch(error, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        return popHostContainer(workInProgress), popTopLevelContextObject(workInProgress), effectTag = workInProgress.effectTag, invariant(0 === (effectTag & 64), "The root failed to unmount after an error. This is likely a bug in React. Please file an issue."), workInProgress.effectTag = effectTag & -2049 | 64, workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      isWorking = false,
      nextUnitOfWork = null,
      nextRoot = null,
      nextRenderExpirationTime = 0,
      nextLatestAbsoluteTimeoutMs = -1,
      nextRenderDidError = false,
      nextEffect = null,
      isCommitting$1 = false,
      rootWithPendingPassiveEffects = null,
      passiveEffectCallbackHandle = null,
      passiveEffectCallback = null,
      legacyErrorBoundariesThatAlreadyFailed = null;

  function resetStack() {
    if (null !== nextUnitOfWork) for (var interruptedWork = nextUnitOfWork.return; null !== interruptedWork;) {
      var interruptedWork$jscomp$0 = interruptedWork;

      switch (interruptedWork$jscomp$0.tag) {
        case 1:
          var childContextTypes = interruptedWork$jscomp$0.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork$jscomp$0);
          break;

        case 3:
          popHostContainer(interruptedWork$jscomp$0);
          popTopLevelContextObject(interruptedWork$jscomp$0);
          break;

        case 5:
          popHostContext(interruptedWork$jscomp$0);
          break;

        case 4:
          popHostContainer(interruptedWork$jscomp$0);
          break;

        case 10:
          popProvider(interruptedWork$jscomp$0);
      }

      interruptedWork = interruptedWork.return;
    }
    nextRoot = null;
    nextRenderExpirationTime = 0;
    nextLatestAbsoluteTimeoutMs = -1;
    nextRenderDidError = false;
    nextUnitOfWork = null;
  }

  function commitAllHostEffects() {
    for (; null !== nextEffect;) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & 128) {
        var current$$1 = nextEffect.alternate;
        null !== current$$1 && (current$$1 = current$$1.ref, null !== current$$1 && ("function" === typeof current$$1 ? current$$1(null) : current$$1.current = null));
      }

      switch (effectTag & 14) {
        case 2:
          commitPlacement(nextEffect);
          nextEffect.effectTag &= -3;
          break;

        case 6:
          commitPlacement(nextEffect);
          nextEffect.effectTag &= -3;
          commitWork(nextEffect.alternate, nextEffect);
          break;

        case 4:
          commitWork(nextEffect.alternate, nextEffect);
          break;

        case 8:
          effectTag = nextEffect, unmountHostComponents(effectTag), effectTag.return = null, effectTag.child = null, effectTag.memoizedState = null, effectTag.updateQueue = null, effectTag = effectTag.alternate, null !== effectTag && (effectTag.return = null, effectTag.child = null, effectTag.memoizedState = null, effectTag.updateQueue = null);
      }

      nextEffect = nextEffect.nextEffect;
    }
  }

  function commitBeforeMutationLifecycles() {
    for (; null !== nextEffect;) {
      if (nextEffect.effectTag & 256) a: {
        var current$$1 = nextEffect.alternate,
            finishedWork = nextEffect;

        switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
            break a;

          case 1:
            if (finishedWork.effectTag & 256 && null !== current$$1) {
              var prevProps = current$$1.memoizedProps,
                  prevState = current$$1.memoizedState;
              current$$1 = finishedWork.stateNode;
              finishedWork = current$$1.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
              current$$1.__reactInternalSnapshotBeforeUpdate = finishedWork;
            }

            break a;

          case 3:
          case 5:
          case 6:
          case 4:
          case 17:
            break a;

          default:
            invariant(false, "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
      nextEffect = nextEffect.nextEffect;
    }
  }

  function commitAllLifeCycles(finishedRoot, committedExpirationTime$jscomp$0) {
    for (; null !== nextEffect;) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & 36) {
        var current$$1 = nextEffect.alternate,
            finishedWork = nextEffect,
            committedExpirationTime = committedExpirationTime$jscomp$0;

        switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
            break;

          case 1:
            var instance = finishedWork.stateNode;
            if (finishedWork.effectTag & 4) if (null === current$$1) instance.componentDidMount();else {
              var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
              instance.componentDidUpdate(prevProps, current$$1.memoizedState, instance.__reactInternalSnapshotBeforeUpdate);
            }
            current$$1 = finishedWork.updateQueue;
            null !== current$$1 && commitUpdateQueue(finishedWork, current$$1, instance, committedExpirationTime);
            break;

          case 3:
            instance = finishedWork.updateQueue;

            if (null !== instance) {
              current$$1 = null;
              if (null !== finishedWork.child) switch (finishedWork.child.tag) {
                case 5:
                  current$$1 = finishedWork.child.stateNode;
                  break;

                case 1:
                  current$$1 = finishedWork.child.stateNode;
              }
              commitUpdateQueue(finishedWork, instance, current$$1, committedExpirationTime);
            }

            break;

          case 5:
            break;

          case 6:
            break;

          case 4:
            break;

          case 12:
            break;

          case 13:
            break;

          case 17:
            break;

          default:
            invariant(false, "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      effectTag & 128 && (finishedWork = nextEffect.ref, null !== finishedWork && (committedExpirationTime = nextEffect.stateNode, "function" === typeof finishedWork ? finishedWork(committedExpirationTime) : finishedWork.current = committedExpirationTime));
      effectTag & 512 && (rootWithPendingPassiveEffects = finishedRoot);
      nextEffect = nextEffect.nextEffect;
    }
  }

  function commitPassiveEffects(root, firstEffect) {
    passiveEffectCallback = passiveEffectCallbackHandle = rootWithPendingPassiveEffects = null;
    var previousIsRendering = isRendering;
    isRendering = true;

    do {
      if (firstEffect.effectTag & 512) {
        var didError = false,
            error = undefined;

        try {
          var finishedWork = firstEffect;
          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        } catch (e) {
          didError = true, error = e;
        }

        didError && captureCommitPhaseError(firstEffect, error);
      }

      firstEffect = firstEffect.nextEffect;
    } while (null !== firstEffect);

    isRendering = previousIsRendering;
    previousIsRendering = root.expirationTime;
    0 !== previousIsRendering && requestWork(root, previousIsRendering);
    isBatchingUpdates || isRendering || performWork(1073741823, false);
  }

  function flushPassiveEffects() {
    if (null !== passiveEffectCallbackHandle) {
      var callbackID = passiveEffectCallbackHandle;
      scheduledCallback = null;
      clearTimeout(callbackID);
    }

    null !== passiveEffectCallback && passiveEffectCallback();
  }

  function commitRoot(root, finishedWork) {
    isCommitting$1 = isWorking = true;
    invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.");
    var committedExpirationTime = root.pendingCommitExpirationTime;
    invariant(0 !== committedExpirationTime, "Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
    root.pendingCommitExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    markCommittedPriorityLevels(root, childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit);
    ReactCurrentOwner$2.current = null;
    updateExpirationTimeBeforeCommit = undefined;
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      childExpirationTimeBeforeCommit = false;
      var error = undefined;

      try {
        commitBeforeMutationLifecycles();
      } catch (e) {
        childExpirationTimeBeforeCommit = true, error = e;
      }

      childExpirationTimeBeforeCommit && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug in React. Please file an issue."), captureCommitPhaseError(nextEffect, error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
    }

    for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      childExpirationTimeBeforeCommit = false;
      error = undefined;

      try {
        commitAllHostEffects();
      } catch (e) {
        childExpirationTimeBeforeCommit = true, error = e;
      }

      childExpirationTimeBeforeCommit && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug in React. Please file an issue."), captureCommitPhaseError(nextEffect, error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
    }

    root.current = finishedWork;

    for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      childExpirationTimeBeforeCommit = false;
      error = undefined;

      try {
        commitAllLifeCycles(root, committedExpirationTime);
      } catch (e) {
        childExpirationTimeBeforeCommit = true, error = e;
      }

      childExpirationTimeBeforeCommit && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug in React. Please file an issue."), captureCommitPhaseError(nextEffect, error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
    }

    if (null !== updateExpirationTimeBeforeCommit && null !== rootWithPendingPassiveEffects) {
      var callback = commitPassiveEffects.bind(null, root, updateExpirationTimeBeforeCommit);
      passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {
        return scheduleDeferredCallback$1(callback);
      });
      passiveEffectCallback = callback;
    }

    isWorking = isCommitting$1 = false;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode);
    committedExpirationTime = finishedWork.expirationTime;
    finishedWork = finishedWork.childExpirationTime;
    finishedWork = finishedWork > committedExpirationTime ? finishedWork : committedExpirationTime;
    0 === finishedWork && (legacyErrorBoundariesThatAlreadyFailed = null);
    onCommit(root, finishedWork);
  }

  function completeUnitOfWork(workInProgress) {
    for (;;) {
      var current$$1 = workInProgress.alternate,
          returnFiber = workInProgress.return,
          siblingFiber = workInProgress.sibling;

      if (0 === (workInProgress.effectTag & 1024)) {
        nextUnitOfWork = workInProgress;

        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime = nextRenderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var internalInstanceHandle = current$$1,
                    tag = allocateTag(),
                    viewConfig = ReactNativeViewConfigRegistry.get(type);
                invariant("RCTView" !== type || !current.isInAParentText, "Nesting of <View> within <Text> is not currently supported.");
                var updatePayload = diffProperties(null, emptyObject, newProps, viewConfig.validAttributes);
                UIManager.createView(tag, viewConfig.uiViewClassName, renderExpirationTime, updatePayload);
                viewConfig = new ReactNativeFiberHostComponent(tag, viewConfig);
                instanceCache[tag] = internalInstanceHandle;
                instanceProps[tag] = newProps;
                appendAllChildren(viewConfig, current$$1, false, false);
                finalizeInitialChildren(viewConfig, type, newProps, renderExpirationTime, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = viewConfig;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else invariant(null !== current$$1.stateNode, "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              break;

            case 6:
              current && null != current$$1.stateNode ? updateHostText$1(current, current$$1, current.memoizedProps, newProps) : ("string" !== typeof newProps && invariant(null !== current$$1.stateNode, "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."), current = requiredContext(rootInstanceStackCursor.current), type = requiredContext(contextStackCursor$1.current), renderExpirationTime = current$$1, invariant(type.isInAParentText, "Text strings must be rendered within a <Text> component."), type = allocateTag(), UIManager.createView(type, "RCTRawText", current, {
                text: newProps
              }), instanceCache[type] = current$$1, renderExpirationTime.stateNode = type);
              break;

            case 11:
              break;

            case 13:
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime;
                nextUnitOfWork = current$$1;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime = null !== current && null !== current.memoizedState;
              null !== current && !newProps && renderExpirationTime && (type = current.child.sibling, null !== type && (current = current$$1.firstEffect, null !== current ? (current$$1.firstEffect = type, type.nextEffect = current) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8));
              if (newProps || renderExpirationTime) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            default:
              invariant(false, "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.");
          }

          nextUnitOfWork = null;
        }

        current$$1 = workInProgress;

        if (1 === nextRenderExpirationTime || 1 !== current$$1.childExpirationTime) {
          newProps = 0;

          for (renderExpirationTime = current$$1.child; null !== renderExpirationTime;) {
            type = renderExpirationTime.expirationTime, current = renderExpirationTime.childExpirationTime, type > newProps && (newProps = type), current > newProps && (newProps = current), renderExpirationTime = renderExpirationTime.sibling;
          }

          current$$1.childExpirationTime = newProps;
        }

        if (null !== nextUnitOfWork) return nextUnitOfWork;
        null !== returnFiber && 0 === (returnFiber.effectTag & 1024) && (null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress));
      } else {
        workInProgress = unwindWork(workInProgress, nextRenderExpirationTime);
        if (null !== workInProgress) return workInProgress.effectTag &= 1023, workInProgress;
        null !== returnFiber && (returnFiber.firstEffect = returnFiber.lastEffect = null, returnFiber.effectTag |= 1024);
      }

      if (null !== siblingFiber) return siblingFiber;
      if (null !== returnFiber) workInProgress = returnFiber;else break;
    }

    return null;
  }

  function performUnitOfWork(workInProgress) {
    var next = beginWork(workInProgress.alternate, workInProgress, nextRenderExpirationTime);
    workInProgress.memoizedProps = workInProgress.pendingProps;
    null === next && (next = completeUnitOfWork(workInProgress));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function renderRoot(root$jscomp$0, isYieldy) {
    invariant(!isWorking, "renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.");
    flushPassiveEffects();
    isWorking = true;
    var previousDispatcher = ReactCurrentDispatcher.current;
    ReactCurrentDispatcher.current = ContextOnlyDispatcher;
    var expirationTime = root$jscomp$0.nextExpirationTimeToWorkOn;
    if (expirationTime !== nextRenderExpirationTime || root$jscomp$0 !== nextRoot || null === nextUnitOfWork) resetStack(), nextRoot = root$jscomp$0, nextRenderExpirationTime = expirationTime, nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime), root$jscomp$0.pendingCommitExpirationTime = 0;
    var didFatal = false;

    do {
      try {
        if (isYieldy) for (; null !== nextUnitOfWork && !(frameDeadline <= now$1());) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        } else for (; null !== nextUnitOfWork;) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      } catch (thrownValue) {
        if (lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null, resetHooks(), null === nextUnitOfWork) didFatal = true, onUncaughtError(thrownValue);else {
          invariant(null !== nextUnitOfWork, "Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.");
          var sourceFiber = nextUnitOfWork,
              returnFiber = sourceFiber.return;
          if (null === returnFiber) didFatal = true, onUncaughtError(thrownValue);else {
            a: {
              var root = root$jscomp$0,
                  returnFiber$jscomp$0 = returnFiber,
                  sourceFiber$jscomp$0 = sourceFiber,
                  value = thrownValue;
              returnFiber = nextRenderExpirationTime;
              sourceFiber$jscomp$0.effectTag |= 1024;
              sourceFiber$jscomp$0.firstEffect = sourceFiber$jscomp$0.lastEffect = null;

              if (null !== value && "object" === typeof value && "function" === typeof value.then) {
                var thenable = value;
                value = returnFiber$jscomp$0;
                var earliestTimeoutMs = -1,
                    startTimeMs = -1;

                do {
                  if (13 === value.tag) {
                    var current$$1 = value.alternate;

                    if (null !== current$$1 && (current$$1 = current$$1.memoizedState, null !== current$$1)) {
                      startTimeMs = 10 * (1073741822 - current$$1.timedOutAt);
                      break;
                    }

                    current$$1 = value.pendingProps.maxDuration;
                    if ("number" === typeof current$$1) if (0 >= current$$1) earliestTimeoutMs = 0;else if (-1 === earliestTimeoutMs || current$$1 < earliestTimeoutMs) earliestTimeoutMs = current$$1;
                  }

                  value = value.return;
                } while (null !== value);

                value = returnFiber$jscomp$0;

                do {
                  if (current$$1 = 13 === value.tag) current$$1 = undefined === value.memoizedProps.fallback ? false : null === value.memoizedState;

                  if (current$$1) {
                    returnFiber$jscomp$0 = value.updateQueue;
                    null === returnFiber$jscomp$0 ? (returnFiber$jscomp$0 = new Set(), returnFiber$jscomp$0.add(thenable), value.updateQueue = returnFiber$jscomp$0) : returnFiber$jscomp$0.add(thenable);

                    if (0 === (value.mode & 1)) {
                      value.effectTag |= 64;
                      sourceFiber$jscomp$0.effectTag &= -1957;
                      1 === sourceFiber$jscomp$0.tag && (null === sourceFiber$jscomp$0.alternate ? sourceFiber$jscomp$0.tag = 17 : (returnFiber = createUpdate(1073741823), returnFiber.tag = ForceUpdate, enqueueUpdate(sourceFiber$jscomp$0, returnFiber)));
                      sourceFiber$jscomp$0.expirationTime = 1073741823;
                      break a;
                    }

                    sourceFiber$jscomp$0 = root;
                    returnFiber$jscomp$0 = returnFiber;
                    var pingCache = sourceFiber$jscomp$0.pingCache;
                    null === pingCache ? (pingCache = sourceFiber$jscomp$0.pingCache = new PossiblyWeakMap(), current$$1 = new Set(), pingCache.set(thenable, current$$1)) : (current$$1 = pingCache.get(thenable), undefined === current$$1 && (current$$1 = new Set(), pingCache.set(thenable, current$$1)));
                    current$$1.has(returnFiber$jscomp$0) || (current$$1.add(returnFiber$jscomp$0), sourceFiber$jscomp$0 = pingSuspendedRoot.bind(null, sourceFiber$jscomp$0, thenable, returnFiber$jscomp$0), thenable.then(sourceFiber$jscomp$0, sourceFiber$jscomp$0));
                    -1 === earliestTimeoutMs ? root = 1073741823 : (-1 === startTimeMs && (startTimeMs = 10 * (1073741822 - findEarliestOutstandingPriorityLevel(root, returnFiber)) - 5e3), root = startTimeMs + earliestTimeoutMs);
                    0 <= root && nextLatestAbsoluteTimeoutMs < root && (nextLatestAbsoluteTimeoutMs = root);
                    value.effectTag |= 2048;
                    value.expirationTime = returnFiber;
                    break a;
                  }

                  value = value.return;
                } while (null !== value);

                value = Error((getComponentName(sourceFiber$jscomp$0.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber$jscomp$0));
              }

              nextRenderDidError = true;
              value = createCapturedValue(value, sourceFiber$jscomp$0);
              root = returnFiber$jscomp$0;

              do {
                switch (root.tag) {
                  case 3:
                    root.effectTag |= 2048;
                    root.expirationTime = returnFiber;
                    returnFiber = createRootErrorUpdate(root, value, returnFiber);
                    enqueueCapturedUpdate(root, returnFiber);
                    break a;

                  case 1:
                    if (earliestTimeoutMs = value, startTimeMs = root.type, sourceFiber$jscomp$0 = root.stateNode, 0 === (root.effectTag & 64) && ("function" === typeof startTimeMs.getDerivedStateFromError || null !== sourceFiber$jscomp$0 && "function" === typeof sourceFiber$jscomp$0.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(sourceFiber$jscomp$0)))) {
                      root.effectTag |= 2048;
                      root.expirationTime = returnFiber;
                      returnFiber = createClassErrorUpdate(root, earliestTimeoutMs, returnFiber);
                      enqueueCapturedUpdate(root, returnFiber);
                      break a;
                    }

                }

                root = root.return;
              } while (null !== root);
            }

            nextUnitOfWork = completeUnitOfWork(sourceFiber);
            continue;
          }
        }
      }

      break;
    } while (1);

    isWorking = false;
    ReactCurrentDispatcher.current = previousDispatcher;
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
    resetHooks();
    if (didFatal) nextRoot = null, root$jscomp$0.finishedWork = null;else if (null !== nextUnitOfWork) root$jscomp$0.finishedWork = null;else {
      previousDispatcher = root$jscomp$0.current.alternate;
      invariant(null !== previousDispatcher, "Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.");
      nextRoot = null;

      if (nextRenderDidError) {
        didFatal = root$jscomp$0.latestPendingTime;
        sourceFiber = root$jscomp$0.latestSuspendedTime;
        returnFiber = root$jscomp$0.latestPingedTime;

        if (0 !== didFatal && didFatal < expirationTime || 0 !== sourceFiber && sourceFiber < expirationTime || 0 !== returnFiber && returnFiber < expirationTime) {
          markSuspendedPriorityLevel(root$jscomp$0, expirationTime);
          onSuspend(root$jscomp$0, previousDispatcher, expirationTime, root$jscomp$0.expirationTime, -1);
          return;
        }

        if (!root$jscomp$0.didError && isYieldy) {
          root$jscomp$0.didError = true;
          expirationTime = root$jscomp$0.nextExpirationTimeToWorkOn = expirationTime;
          isYieldy = root$jscomp$0.expirationTime = 1073741823;
          onSuspend(root$jscomp$0, previousDispatcher, expirationTime, isYieldy, -1);
          return;
        }
      }

      isYieldy && -1 !== nextLatestAbsoluteTimeoutMs ? (markSuspendedPriorityLevel(root$jscomp$0, expirationTime), isYieldy = 10 * (1073741822 - findEarliestOutstandingPriorityLevel(root$jscomp$0, expirationTime)), isYieldy < nextLatestAbsoluteTimeoutMs && (nextLatestAbsoluteTimeoutMs = isYieldy), isYieldy = 10 * (1073741822 - requestCurrentTime()), isYieldy = nextLatestAbsoluteTimeoutMs - isYieldy, onSuspend(root$jscomp$0, previousDispatcher, expirationTime, root$jscomp$0.expirationTime, 0 > isYieldy ? 0 : isYieldy)) : (root$jscomp$0.pendingCommitExpirationTime = expirationTime, root$jscomp$0.finishedWork = previousDispatcher);
    }
  }

  function captureCommitPhaseError(sourceFiber, value) {
    for (var fiber = sourceFiber.return; null !== fiber;) {
      switch (fiber.tag) {
        case 1:
          var instance = fiber.stateNode;

          if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
            sourceFiber = createCapturedValue(value, sourceFiber);
            sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
            enqueueUpdate(fiber, sourceFiber);
            scheduleWork(fiber, 1073741823);
            return;
          }

          break;

        case 3:
          sourceFiber = createCapturedValue(value, sourceFiber);
          sourceFiber = createRootErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          scheduleWork(fiber, 1073741823);
          return;
      }

      fiber = fiber.return;
    }

    3 === sourceFiber.tag && (fiber = createCapturedValue(value, sourceFiber), fiber = createRootErrorUpdate(sourceFiber, fiber, 1073741823), enqueueUpdate(sourceFiber, fiber), scheduleWork(sourceFiber, 1073741823));
  }

  function computeExpirationForFiber(currentTime, fiber) {
    var priorityLevel = scheduler.unstable_getCurrentPriorityLevel(),
        expirationTime = undefined;
    if (0 === (fiber.mode & 1)) expirationTime = 1073741823;else if (isWorking && !isCommitting$1) expirationTime = nextRenderExpirationTime;else {
      switch (priorityLevel) {
        case scheduler.unstable_ImmediatePriority:
          expirationTime = 1073741823;
          break;

        case scheduler.unstable_UserBlockingPriority:
          expirationTime = 1073741822 - 10 * (((1073741822 - currentTime + 15) / 10 | 0) + 1);
          break;

        case scheduler.unstable_NormalPriority:
          expirationTime = 1073741822 - 25 * (((1073741822 - currentTime + 500) / 25 | 0) + 1);
          break;

        case scheduler.unstable_LowPriority:
        case scheduler.unstable_IdlePriority:
          expirationTime = 1;
          break;

        default:
          invariant(false, "Unknown priority level. This error is likely caused by a bug in React. Please file an issue.");
      }

      null !== nextRoot && expirationTime === nextRenderExpirationTime && --expirationTime;
    }
    priorityLevel === scheduler.unstable_UserBlockingPriority && (0 === lowestPriorityPendingInteractiveExpirationTime || expirationTime < lowestPriorityPendingInteractiveExpirationTime) && (lowestPriorityPendingInteractiveExpirationTime = expirationTime);
    return expirationTime;
  }

  function pingSuspendedRoot(root, thenable, pingTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    if (null !== nextRoot && nextRenderExpirationTime === pingTime) nextRoot = null;else if (thenable = root.earliestSuspendedTime, pingCache = root.latestSuspendedTime, 0 !== thenable && pingTime <= thenable && pingTime >= pingCache) {
      root.didError = false;
      thenable = root.latestPingedTime;
      if (0 === thenable || thenable > pingTime) root.latestPingedTime = pingTime;
      findNextExpirationTimeToWorkOn(pingTime, root);
      pingTime = root.expirationTime;
      0 !== pingTime && requestWork(root, pingTime);
    }
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    thenable = requestCurrentTime();
    thenable = computeExpirationForFiber(thenable, boundaryFiber);
    boundaryFiber = scheduleWorkToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && (markPendingPriorityLevel(boundaryFiber, thenable), thenable = boundaryFiber.expirationTime, 0 !== thenable && requestWork(boundaryFiber, thenable));
  }

  function scheduleWorkToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    return root;
  }

  function scheduleWork(fiber, expirationTime) {
    fiber = scheduleWorkToRoot(fiber, expirationTime);
    null !== fiber && (!isWorking && 0 !== nextRenderExpirationTime && expirationTime > nextRenderExpirationTime && resetStack(), markPendingPriorityLevel(fiber, expirationTime), isWorking && !isCommitting$1 && nextRoot === fiber || requestWork(fiber, fiber.expirationTime), nestedUpdateCount > NESTED_UPDATE_LIMIT && (nestedUpdateCount = 0, invariant(false, "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.")));
  }

  var firstScheduledRoot = null,
      lastScheduledRoot = null,
      callbackExpirationTime = 0,
      callbackID = undefined,
      isRendering = false,
      nextFlushedRoot = null,
      nextFlushedExpirationTime = 0,
      lowestPriorityPendingInteractiveExpirationTime = 0,
      hasUnhandledError = false,
      unhandledError = null,
      isBatchingUpdates = false,
      isUnbatchingUpdates = false,
      completedBatches = null,
      originalStartTimeMs = now$1(),
      currentRendererTime = 1073741822 - (originalStartTimeMs / 10 | 0),
      currentSchedulerTime = currentRendererTime,
      NESTED_UPDATE_LIMIT = 50,
      nestedUpdateCount = 0,
      lastCommittedRootDuringThisBatch = null;

  function recomputeCurrentRendererTime() {
    currentRendererTime = 1073741822 - ((now$1() - originalStartTimeMs) / 10 | 0);
  }

  function scheduleCallbackWithExpirationTime(root, expirationTime) {
    if (0 !== callbackExpirationTime) {
      if (expirationTime < callbackExpirationTime) return;
      null !== callbackID && (root = callbackID, scheduledCallback = null, clearTimeout(root));
    }

    callbackExpirationTime = expirationTime;
    root = now$1() - originalStartTimeMs;
    callbackID = scheduleDeferredCallback$1(performAsyncWork, {
      timeout: 10 * (1073741822 - expirationTime) - root
    });
  }

  function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {
    root.expirationTime = rootExpirationTime;
    0 !== msUntilTimeout || frameDeadline <= now$1() ? 0 < msUntilTimeout && (root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout)) : (root.pendingCommitExpirationTime = suspendedExpirationTime, root.finishedWork = finishedWork);
  }

  function onTimeout(root, finishedWork, suspendedExpirationTime) {
    root.pendingCommitExpirationTime = suspendedExpirationTime;
    root.finishedWork = finishedWork;
    recomputeCurrentRendererTime();
    currentSchedulerTime = currentRendererTime;
    invariant(!isRendering, "work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.");
    nextFlushedRoot = root;
    nextFlushedExpirationTime = suspendedExpirationTime;
    performWorkOnRoot(root, suspendedExpirationTime, false);
    performWork(1073741823, false);
  }

  function onCommit(root, expirationTime) {
    root.expirationTime = expirationTime;
    root.finishedWork = null;
  }

  function requestCurrentTime() {
    if (isRendering) return currentSchedulerTime;
    findHighestPriorityRoot();
    if (0 === nextFlushedExpirationTime || 1 === nextFlushedExpirationTime) recomputeCurrentRendererTime(), currentSchedulerTime = currentRendererTime;
    return currentSchedulerTime;
  }

  function requestWork(root, expirationTime) {
    null === root.nextScheduledRoot ? (root.expirationTime = expirationTime, null === lastScheduledRoot ? (firstScheduledRoot = lastScheduledRoot = root, root.nextScheduledRoot = root) : (lastScheduledRoot = lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot.nextScheduledRoot = firstScheduledRoot)) : expirationTime > root.expirationTime && (root.expirationTime = expirationTime);
    isRendering || (isBatchingUpdates ? isUnbatchingUpdates : 1073741823 === expirationTime ? performWork(1073741823, false) : scheduleCallbackWithExpirationTime(root, expirationTime));
  }

  function findHighestPriorityRoot() {
    var highestPriorityWork = 0,
        highestPriorityRoot = null;
    if (null !== lastScheduledRoot) for (var previousScheduledRoot = lastScheduledRoot, root = firstScheduledRoot; null !== root;) {
      var remainingExpirationTime = root.expirationTime;

      if (0 === remainingExpirationTime) {
        invariant(null !== previousScheduledRoot && null !== lastScheduledRoot, "Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.");

        if (root === root.nextScheduledRoot) {
          firstScheduledRoot = lastScheduledRoot = root.nextScheduledRoot = null;
          break;
        } else if (root === firstScheduledRoot) firstScheduledRoot = remainingExpirationTime = root.nextScheduledRoot, lastScheduledRoot.nextScheduledRoot = remainingExpirationTime, root.nextScheduledRoot = null;else if (root === lastScheduledRoot) {
          lastScheduledRoot = previousScheduledRoot;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
          root.nextScheduledRoot = null;
          break;
        } else previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot, root.nextScheduledRoot = null;

        root = previousScheduledRoot.nextScheduledRoot;
      } else {
        remainingExpirationTime > highestPriorityWork && (highestPriorityWork = remainingExpirationTime, highestPriorityRoot = root);
        if (root === lastScheduledRoot) break;
        if (1073741823 === highestPriorityWork) break;
        previousScheduledRoot = root;
        root = root.nextScheduledRoot;
      }
    }
    nextFlushedRoot = highestPriorityRoot;
    nextFlushedExpirationTime = highestPriorityWork;
  }

  function performAsyncWork(didTimeout) {
    if (didTimeout && null !== firstScheduledRoot) {
      recomputeCurrentRendererTime();
      didTimeout = firstScheduledRoot;

      do {
        var expirationTime = didTimeout.expirationTime;
        0 !== expirationTime && currentRendererTime <= expirationTime && (didTimeout.nextExpirationTimeToWorkOn = currentRendererTime);
        didTimeout = didTimeout.nextScheduledRoot;
      } while (didTimeout !== firstScheduledRoot);
    }

    performWork(0, true);
  }

  function performWork(minExpirationTime, isYieldy) {
    findHighestPriorityRoot();
    if (isYieldy) for (recomputeCurrentRendererTime(), currentSchedulerTime = currentRendererTime; null !== nextFlushedRoot && 0 !== nextFlushedExpirationTime && minExpirationTime <= nextFlushedExpirationTime && !(frameDeadline <= now$1() && currentRendererTime > nextFlushedExpirationTime);) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime), findHighestPriorityRoot(), recomputeCurrentRendererTime(), currentSchedulerTime = currentRendererTime;
    } else for (; null !== nextFlushedRoot && 0 !== nextFlushedExpirationTime && minExpirationTime <= nextFlushedExpirationTime;) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false), findHighestPriorityRoot();
    }
    isYieldy && (callbackExpirationTime = 0, callbackID = null);
    0 !== nextFlushedExpirationTime && scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);
    nestedUpdateCount = 0;
    lastCommittedRootDuringThisBatch = null;
    if (null !== completedBatches) for (minExpirationTime = completedBatches, completedBatches = null, isYieldy = 0; isYieldy < minExpirationTime.length; isYieldy++) {
      var batch = minExpirationTime[isYieldy];

      try {
        batch._onComplete();
      } catch (error) {
        hasUnhandledError || (hasUnhandledError = true, unhandledError = error);
      }
    }
    if (hasUnhandledError) throw minExpirationTime = unhandledError, unhandledError = null, hasUnhandledError = false, minExpirationTime;
  }

  function performWorkOnRoot(root, expirationTime, isYieldy) {
    invariant(!isRendering, "performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.");
    isRendering = true;

    if (isYieldy) {
      var _finishedWork = root.finishedWork;
      null !== _finishedWork ? completeRoot(root, _finishedWork, expirationTime) : (root.finishedWork = null, _finishedWork = root.timeoutHandle, -1 !== _finishedWork && (root.timeoutHandle = -1, cancelTimeout(_finishedWork)), renderRoot(root, isYieldy), _finishedWork = root.finishedWork, null !== _finishedWork && (frameDeadline <= now$1() ? root.finishedWork = _finishedWork : completeRoot(root, _finishedWork, expirationTime)));
    } else _finishedWork = root.finishedWork, null !== _finishedWork ? completeRoot(root, _finishedWork, expirationTime) : (root.finishedWork = null, _finishedWork = root.timeoutHandle, -1 !== _finishedWork && (root.timeoutHandle = -1, cancelTimeout(_finishedWork)), renderRoot(root, isYieldy), _finishedWork = root.finishedWork, null !== _finishedWork && completeRoot(root, _finishedWork, expirationTime));

    isRendering = false;
  }

  function completeRoot(root, finishedWork, expirationTime) {
    var firstBatch = root.firstBatch;

    if (null !== firstBatch && firstBatch._expirationTime >= expirationTime && (null === completedBatches ? completedBatches = [firstBatch] : completedBatches.push(firstBatch), firstBatch._defer)) {
      root.finishedWork = finishedWork;
      root.expirationTime = 0;
      return;
    }

    root.finishedWork = null;
    root === lastCommittedRootDuringThisBatch ? nestedUpdateCount++ : (lastCommittedRootDuringThisBatch = root, nestedUpdateCount = 0);
    scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
      commitRoot(root, finishedWork);
    });
  }

  function onUncaughtError(error) {
    invariant(null !== nextFlushedRoot, "Should be working on a root. This error is likely caused by a bug in React. Please file an issue.");
    nextFlushedRoot.expirationTime = 0;
    hasUnhandledError || (hasUnhandledError = true, unhandledError = error);
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;
    undefined === fiber && ("function" === typeof component.render ? invariant(false, "Unable to find node on an unmounted component.") : invariant(false, "Argument appears to not be a ReactComponent. Keys: %s", Object.keys(component)));
    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime();
    current$$1 = computeExpirationForFiber(currentTime, current$$1);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        invariant(2 === isFiberMountedImpl(parentComponent) && 1 === parentComponent.tag, "Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        invariant(false, "Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
        parentContext = undefined;
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    callback = createUpdate(current$$1);
    callback.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (callback.callback = container);
    flushPassiveEffects();
    enqueueUpdate(currentTime, callback);
    scheduleWork(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    invariant(false, "getInspectorDataForViewTag() is not available in production");
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  _batchedUpdatesImpl = function _batchedUpdatesImpl(fn, a) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;

    try {
      return fn(a);
    } finally {
      (isBatchingUpdates = previousIsBatchingUpdates) || isRendering || performWork(1073741823, false);
    }
  };

  _flushInteractiveUpdatesImpl = function _flushInteractiveUpdatesImpl() {
    isRendering || 0 === lowestPriorityPendingInteractiveExpirationTime || (performWork(lowestPriorityPendingInteractiveExpirationTime, false), lowestPriorityPendingInteractiveExpirationTime = 0);
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          UIManager.measureLayout(findNodeHandle(this), relativeToNativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = createFiber(3, null, null, 0);
        var root$jscomp$0 = {
          current: root,
          containerInfo: containerTag,
          pendingChildren: null,
          pingCache: null,
          earliestPendingTime: 0,
          latestPendingTime: 0,
          earliestSuspendedTime: 0,
          latestSuspendedTime: 0,
          latestPingedTime: 0,
          didError: false,
          pendingCommitExpirationTime: 0,
          finishedWork: null,
          timeoutHandle: -1,
          context: null,
          pendingContext: null,
          hydrate: false,
          nextExpirationTimeToWorkOn: 0,
          expirationTime: 0,
          firstBatch: null,
          nextScheduledRoot: null
        };
        root = root.stateNode = root$jscomp$0;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
          },
          measureInWindow: function measureInWindow(callback) {
            UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(findNodeHandle(this), relativeToNativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideProps: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      }
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.3",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},79,[11,80,149,42,150,49,151,74,152,153,91]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  _$$_REQUIRE(_dependencyMap[11]);

  _$$_REQUIRE(_dependencyMap[12]);

  var PerformanceLogger = _$$_REQUIRE(_dependencyMap[13]);

  PerformanceLogger.markPoint('initializeCore_start', PerformanceLogger.currentTimestamp() - (Date.now() - start));
  PerformanceLogger.markPoint('initializeCore_end');
},80,[81,82,89,90,94,97,102,104,109,132,134,140,148,145]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},81,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  var _shouldPolyfillCollection = _$$_REQUIRE(_dependencyMap[1]);

  if (_shouldPolyfillCollection('Map')) {
    polyfillGlobal('Map', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
  }

  if (_shouldPolyfillCollection('Set')) {
    polyfillGlobal('Set', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
  }
},82,[83,84,85,88]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      console.error('Failed to set polyfill. ' + name + ' is not configurable.');
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},83,[28]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function _shouldActuallyPolyfillES6Collection(collectionName) {
    var Collection = global[collectionName];

    if (Collection == null) {
      return true;
    }

    if (typeof global.Symbol !== 'function') {
      return true;
    }

    var proto = Collection.prototype;
    return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';
  }

  var cache = {};

  function _shouldPolyfillES6Collection(collectionName) {
    var result = cache[collectionName];

    if (result !== undefined) {
      return result;
    }

    result = _shouldActuallyPolyfillES6Collection(collectionName);
    cache[collectionName] = result;
    return result;
  }

  module.exports = _shouldPolyfillES6Collection;
},84,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _shouldPolyfillES6Collection = _$$_REQUIRE(_dependencyMap[2]);

  var guid = _$$_REQUIRE(_dependencyMap[3]);

  var toIterator = _$$_REQUIRE(_dependencyMap[4]);

  module.exports = function (global, undefined) {
    if (!_shouldPolyfillES6Collection('Map')) {
      return global.Map;
    }

    var hasOwn = Object.prototype.hasOwnProperty;
    var KIND_KEY = 'key';
    var KIND_VALUE = 'value';
    var KIND_KEY_VALUE = 'key+value';
    var KEY_PREFIX = '$map_';
    var SECRET_SIZE_PROP;

    var Map = function () {
      function Map(iterable) {
        _classCallCheck(this, Map);

        if (!isObject(this)) {
          throw new TypeError('Wrong map object type.');
        }

        initMap(this);

        if (iterable != null) {
          var it = toIterator(iterable);
          var next;

          while (!(next = it.next()).done) {
            if (!isObject(next.value)) {
              throw new TypeError('Expected iterable items to be pair objects.');
            }

            this.set(next.value[0], next.value[1]);
          }
        }
      }

      _createClass(Map, [{
        key: "clear",
        value: function clear() {
          initMap(this);
        }
      }, {
        key: "has",
        value: function has(key) {
          var index = getIndex(this, key);
          return !!(index != null && this._mapData[index]);
        }
      }, {
        key: "set",
        value: function set(key, value) {
          var index = getIndex(this, key);

          if (index != null && this._mapData[index]) {
            this._mapData[index][1] = value;
          } else {
            index = this._mapData.push([key, value]) - 1;
            setIndex(this, key, index);
            {
              this.size += 1;
            }
          }

          return this;
        }
      }, {
        key: "get",
        value: function get(key) {
          var index = getIndex(this, key);

          if (index == null) {
            return undefined;
          } else {
            return this._mapData[index][1];
          }
        }
      }, {
        key: "delete",
        value: function _delete(key) {
          var index = getIndex(this, key);

          if (index != null && this._mapData[index]) {
            setIndex(this, key, undefined);
            this._mapData[index] = undefined;
            {
              this.size -= 1;
            }
            return true;
          } else {
            return false;
          }
        }
      }, {
        key: "entries",
        value: function entries() {
          return new MapIterator(this, KIND_KEY_VALUE);
        }
      }, {
        key: "keys",
        value: function keys() {
          return new MapIterator(this, KIND_KEY);
        }
      }, {
        key: "values",
        value: function values() {
          return new MapIterator(this, KIND_VALUE);
        }
      }, {
        key: "forEach",
        value: function forEach(callback, thisArg) {
          if (typeof callback !== 'function') {
            throw new TypeError('Callback must be callable.');
          }

          var boundCallback = callback.bind(thisArg || undefined);
          var mapData = this._mapData;

          for (var i = 0; i < mapData.length; i++) {
            var entry = mapData[i];

            if (entry != null) {
              boundCallback(entry[1], entry[0], this);
            }
          }
        }
      }]);

      return Map;
    }();

    Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;

    var MapIterator = function () {
      function MapIterator(map, kind) {
        _classCallCheck(this, MapIterator);

        if (!(isObject(map) && map._mapData)) {
          throw new TypeError('Object is not a map.');
        }

        if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {
          throw new Error('Invalid iteration kind.');
        }

        this._map = map;
        this._nextIndex = 0;
        this._kind = kind;
      }

      _createClass(MapIterator, [{
        key: "next",
        value: function next() {
          if (!this instanceof Map) {
            throw new TypeError('Expected to be called on a MapIterator.');
          }

          var map = this._map;
          var index = this._nextIndex;
          var kind = this._kind;

          if (map == null) {
            return createIterResultObject(undefined, true);
          }

          var entries = map._mapData;

          while (index < entries.length) {
            var record = entries[index];
            index += 1;
            this._nextIndex = index;

            if (record) {
              if (kind === KIND_KEY) {
                return createIterResultObject(record[0], false);
              } else if (kind === KIND_VALUE) {
                return createIterResultObject(record[1], false);
              } else if (kind) {
                return createIterResultObject(record, false);
              }
            }
          }

          this._map = undefined;
          return createIterResultObject(undefined, true);
        }
      }]);

      return MapIterator;
    }();

    MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function () {
      return this;
    };

    function getIndex(map, key) {
      if (isObject(key)) {
        var hash = getHash(key);
        return map._objectIndex[hash];
      } else {
        var prefixedKey = KEY_PREFIX + key;

        if (typeof key === 'string') {
          return map._stringIndex[prefixedKey];
        } else {
          return map._otherIndex[prefixedKey];
        }
      }
    }

    function setIndex(map, key, index) {
      var shouldDelete = index == null;

      if (isObject(key)) {
        var hash = getHash(key);

        if (shouldDelete) {
          delete map._objectIndex[hash];
        } else {
          map._objectIndex[hash] = index;
        }
      } else {
        var prefixedKey = KEY_PREFIX + key;

        if (typeof key === 'string') {
          if (shouldDelete) {
            delete map._stringIndex[prefixedKey];
          } else {
            map._stringIndex[prefixedKey] = index;
          }
        } else {
          if (shouldDelete) {
            delete map._otherIndex[prefixedKey];
          } else {
            map._otherIndex[prefixedKey] = index;
          }
        }
      }
    }

    function initMap(map) {
      map._mapData = [];
      map._objectIndex = {};
      map._stringIndex = {};
      map._otherIndex = {};
      map.size = 0;
    }

    function isObject(o) {
      return o != null && (typeof o === 'object' || typeof o === 'function');
    }

    function createIterResultObject(value, done) {
      return {
        value: value,
        done: done
      };
    }

    var isES5 = function () {
      try {
        Object.defineProperty({}, 'x', {});
        return true;
      } catch (e) {
        return false;
      }
    }();

    function isExtensible(o) {
      if (!isES5) {
        return true;
      } else {
        return Object.isExtensible(o);
      }
    }

    var getHash = function () {
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;
      var hashProperty = '__MAP_POLYFILL_INTERNAL_HASH__';
      var hashCounter = 0;
      var nonExtensibleObjects = [];
      var nonExtensibleHashes = [];
      return function getHash(o) {
        if (hasOwn.call(o, hashProperty)) {
          return o[hashProperty];
        }

        if (!isES5) {
          if (hasOwn.call(o, 'propertyIsEnumerable') && hasOwn.call(o.propertyIsEnumerable, hashProperty)) {
            return o.propertyIsEnumerable[hashProperty];
          }
        }

        if (isExtensible(o)) {
          if (isES5) {
            Object.defineProperty(o, hashProperty, {
              enumerable: false,
              writable: false,
              configurable: false,
              value: ++hashCounter
            });
            return hashCounter;
          }

          if (o.propertyIsEnumerable) {
            o.propertyIsEnumerable = function () {
              return propIsEnumerable.apply(this, arguments);
            };

            return o.propertyIsEnumerable[hashProperty] = ++hashCounter;
          }
        }

        var index = nonExtensibleObjects.indexOf(o);

        if (index < 0) {
          index = nonExtensibleObjects.length;
          nonExtensibleObjects[index] = o;
          nonExtensibleHashes[index] = ++hashCounter;
        }

        return nonExtensibleHashes[index];
      };
    }();

    return Map;
  }(Function('return this')());
},85,[22,23,84,86,87]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function guid() {
    return 'f' + (Math.random() * 1073741824).toString(16).replace('.', '');
  }

  module.exports = guid;
},86,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var KIND_KEY = 'key';
  var KIND_VALUE = 'value';
  var KIND_KEY_VAL = 'key+value';
  var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : '@@iterator';

  var toIterator = function () {
    if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {
      return function () {
        var ArrayIterator = function () {
          function ArrayIterator(array, kind) {
            _classCallCheck(this, ArrayIterator);

            if (!Array.isArray(array)) {
              throw new TypeError('Object is not an Array');
            }

            this._iteratedObject = array;
            this._kind = kind;
            this._nextIndex = 0;
          }

          _createClass(ArrayIterator, [{
            key: "next",
            value: function next() {
              if (!this instanceof ArrayIterator) {
                throw new TypeError('Object is not an ArrayIterator');
              }

              if (this._iteratedObject == null) {
                return createIterResultObject(undefined, true);
              }

              var array = this._iteratedObject;
              var len = this._iteratedObject.length;
              var index = this._nextIndex;
              var kind = this._kind;

              if (index >= len) {
                this._iteratedObject = undefined;
                return createIterResultObject(undefined, true);
              }

              this._nextIndex = index + 1;

              if (kind === KIND_KEY) {
                return createIterResultObject(index, false);
              } else if (kind === KIND_VALUE) {
                return createIterResultObject(array[index], false);
              } else if (kind === KIND_KEY_VAL) {
                return createIterResultObject([index, array[index]], false);
              }
            }
          }, {
            key: '@@iterator',
            value: function iterator() {
              return this;
            }
          }]);

          return ArrayIterator;
        }();

        var StringIterator = function () {
          function StringIterator(string) {
            _classCallCheck(this, StringIterator);

            if (typeof string !== 'string') {
              throw new TypeError('Object is not a string');
            }

            this._iteratedString = string;
            this._nextIndex = 0;
          }

          _createClass(StringIterator, [{
            key: "next",
            value: function next() {
              if (!this instanceof StringIterator) {
                throw new TypeError('Object is not a StringIterator');
              }

              if (this._iteratedString == null) {
                return createIterResultObject(undefined, true);
              }

              var index = this._nextIndex;
              var s = this._iteratedString;
              var len = s.length;

              if (index >= len) {
                this._iteratedString = undefined;
                return createIterResultObject(undefined, true);
              }

              var ret;
              var first = s.charCodeAt(index);

              if (first < 0xd800 || first > 0xdbff || index + 1 === len) {
                ret = s[index];
              } else {
                var second = s.charCodeAt(index + 1);

                if (second < 0xdc00 || second > 0xdfff) {
                  ret = s[index];
                } else {
                  ret = s[index] + s[index + 1];
                }
              }

              this._nextIndex = index + ret.length;
              return createIterResultObject(ret, false);
            }
          }, {
            key: '@@iterator',
            value: function iterator() {
              return this;
            }
          }]);

          return StringIterator;
        }();

        function createIterResultObject(value, done) {
          return {
            value: value,
            done: done
          };
        }

        return function (object, kind) {
          if (typeof object === 'string') {
            return new StringIterator(object);
          } else if (Array.isArray(object)) {
            return new ArrayIterator(object, kind || KIND_VALUE);
          } else {
            return object[ITERATOR_SYMBOL]();
          }
        };
      }();
    } else {
      return function (object) {
        return object[ITERATOR_SYMBOL]();
      };
    }
  }();

  _extends(toIterator, {
    KIND_KEY: KIND_KEY,
    KIND_VALUE: KIND_VALUE,
    KIND_KEY_VAL: KIND_KEY_VAL,
    ITERATOR_SYMBOL: ITERATOR_SYMBOL
  });

  module.exports = toIterator;
},87,[11,22,23]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var Map = _$$_REQUIRE(_dependencyMap[2]);

  var _shouldPolyfillES6Collection = _$$_REQUIRE(_dependencyMap[3]);

  var toIterator = _$$_REQUIRE(_dependencyMap[4]);

  module.exports = function (global) {
    if (!_shouldPolyfillES6Collection('Set')) {
      return global.Set;
    }

    var Set = function () {
      function Set(iterable) {
        _classCallCheck(this, Set);

        if (this == null || typeof this !== 'object' && typeof this !== 'function') {
          throw new TypeError('Wrong set object type.');
        }

        initSet(this);

        if (iterable != null) {
          var it = toIterator(iterable);
          var next;

          while (!(next = it.next()).done) {
            this.add(next.value);
          }
        }
      }

      _createClass(Set, [{
        key: "add",
        value: function add(value) {
          this._map.set(value, value);

          this.size = this._map.size;
          return this;
        }
      }, {
        key: "clear",
        value: function clear() {
          initSet(this);
        }
      }, {
        key: "delete",
        value: function _delete(value) {
          var ret = this._map.delete(value);

          this.size = this._map.size;
          return ret;
        }
      }, {
        key: "entries",
        value: function entries() {
          return this._map.entries();
        }
      }, {
        key: "forEach",
        value: function forEach(callback) {
          var thisArg = arguments[1];

          var it = this._map.keys();

          var next;

          while (!(next = it.next()).done) {
            callback.call(thisArg, next.value, next.value, this);
          }
        }
      }, {
        key: "has",
        value: function has(value) {
          return this._map.has(value);
        }
      }, {
        key: "values",
        value: function values() {
          return this._map.values();
        }
      }]);

      return Set;
    }();

    Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;
    Set.prototype.keys = Set.prototype.values;

    function initSet(set) {
      set._map = new Map();
      set.size = set._map.size;
    }

    return Set;
  }(Function('return this')());
},88,[22,23,85,84,87]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},89,[25]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        console.log('Failed to print error: ', ee.message);
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},90,[91,24]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var exceptionID = 0;

  function reportException(e, isFatal) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        ExceptionsManager = _require.ExceptionsManager;

    if (ExceptionsManager) {
      var parseErrorStack = _$$_REQUIRE(_dependencyMap[1]);

      var stack = parseErrorStack(e);
      var currentExceptionID = ++exceptionID;
      var message = e.jsEngine == null ? e.message : e.message + ", js engine: " + e.jsEngine;

      if (isFatal) {
        ExceptionsManager.reportFatalException(message, stack, currentExceptionID);
      } else {
        ExceptionsManager.reportSoftException(message, stack, currentExceptionID);
      }
    }
  }

  function handleException(e, isFatal) {
    if (!e.message) {
      e = new Error(e);
    }

    if (console._errorOriginal) {
      console._errorOriginal(e.message);
    } else {
      console.error(e.message);
    }

    reportException(e, isFatal);
  }

  function reactConsoleErrorHandler() {
    console._errorOriginal.apply(console, arguments);

    if (!console.reportErrorsAsExceptions) {
      return;
    }

    if (arguments[0] && arguments[0].stack) {
      reportException(arguments[0], false);
    } else {
      var stringifySafe = _$$_REQUIRE(_dependencyMap[2]);

      var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');

      if (str.slice(0, 10) === '"Warning: ') {
        return;
      }

      var error = new Error('console.error: ' + str);
      error.framesToPop = 1;
      reportException(error, false);
    }
  }

  function installConsoleErrorReporter() {
    if (console._errorOriginal) {
      return;
    }

    console._errorOriginal = console.error.bind(console);
    console.error = reactConsoleErrorHandler;

    if (console.reportErrorsAsExceptions === undefined) {
      console.reportErrorsAsExceptions = true;
    }
  }

  module.exports = {
    handleException: handleException,
    installConsoleErrorReporter: installConsoleErrorReporter
  };
},91,[8,92,27]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function parseErrorStack(e) {
    if (!e || !e.stack) {
      return [];
    }

    var stacktraceParser = _$$_REQUIRE(_dependencyMap[0]);

    var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);
    var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;

    while (framesToPop--) {
      stack.shift();
    }

    return stack;
  }

  module.exports = parseErrorStack;
},92,[93]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.stackTraceParser = {}));
  })(this, function (exports) {
    'use strict';

    var UNKNOWN_FUNCTION = '<unknown>';

    function parse(stackString) {
      var lines = stackString.split('\n');
      return lines.reduce(function (stack, line) {
        var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseJSC(line) || parseNode(line);

        if (parseResult) {
          stack.push(parseResult);
        }

        return stack;
      }, []);
    }

    var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
    var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

    function parseChrome(line) {
      var parts = chromeRe.exec(line);

      if (!parts) {
        return null;
      }

      var isNative = parts[2] && parts[2].indexOf('native') === 0;
      var isEval = parts[2] && parts[2].indexOf('eval') === 0;
      var submatch = chromeEvalRe.exec(parts[2]);

      if (isEval && submatch != null) {
        parts[2] = submatch[1];
        parts[3] = submatch[2];
        parts[4] = submatch[3];
      }

      return {
        file: !isNative ? parts[2] : null,
        methodName: parts[1] || UNKNOWN_FUNCTION,
        arguments: isNative ? [parts[2]] : [],
        lineNumber: parts[3] ? +parts[3] : null,
        column: parts[4] ? +parts[4] : null
      };
    }

    var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

    function parseWinjs(line) {
      var parts = winjsRe.exec(line);

      if (!parts) {
        return null;
      }

      return {
        file: parts[2],
        methodName: parts[1] || UNKNOWN_FUNCTION,
        arguments: [],
        lineNumber: +parts[3],
        column: parts[4] ? +parts[4] : null
      };
    }

    var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
    var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

    function parseGecko(line) {
      var parts = geckoRe.exec(line);

      if (!parts) {
        return null;
      }

      var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
      var submatch = geckoEvalRe.exec(parts[3]);

      if (isEval && submatch != null) {
        parts[3] = submatch[1];
        parts[4] = submatch[2];
        parts[5] = null;
      }

      return {
        file: parts[3],
        methodName: parts[1] || UNKNOWN_FUNCTION,
        arguments: parts[2] ? parts[2].split(',') : [],
        lineNumber: parts[4] ? +parts[4] : null,
        column: parts[5] ? +parts[5] : null
      };
    }

    var javaScriptCoreRe = /^(?:\s*([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

    function parseJSC(line) {
      var parts = javaScriptCoreRe.exec(line);

      if (!parts) {
        return null;
      }

      return {
        file: parts[3],
        methodName: parts[1] || UNKNOWN_FUNCTION,
        arguments: [],
        lineNumber: +parts[4],
        column: parts[5] ? +parts[5] : null
      };
    }

    var nodeRe = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

    function parseNode(line) {
      var parts = nodeRe.exec(line);

      if (!parts) {
        return null;
      }

      return {
        file: parts[2],
        methodName: parts[1] || UNKNOWN_FUNCTION,
        arguments: [],
        lineNumber: +parts[3],
        column: parts[4] ? +parts[4] : null
      };
    }

    exports.parse = parse;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},93,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeVersionCheck = _$$_REQUIRE(_dependencyMap[0]);

  ReactNativeVersionCheck.checkVersions();
},94,[95]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      PlatformConstants = _require.PlatformConstants;

  var ReactNativeVersion = _$$_REQUIRE(_dependencyMap[1]);

  exports.checkVersions = function checkVersions() {
    if (!PlatformConstants) {
      return;
    }

    var nativeVersion = PlatformConstants.reactNativeVersion;

    if (ReactNativeVersion.version.major !== nativeVersion.major || ReactNativeVersion.version.minor !== nativeVersion.minor) {
      console.error("React Native version mismatch.\n\nJavaScript version: " + _formatVersion(ReactNativeVersion.version) + "\n" + ("Native version: " + _formatVersion(nativeVersion) + "\n\n") + 'Make sure that you have rebuilt the native code. If the problem ' + 'persists try clearing the Watchman and packager caches with ' + '`watchman watch-del-all && react-native start --reset-cache`.');
    }
  };

  function _formatVersion(version) {
    return version.major + "." + version.minor + "." + version.patch + (version.prerelease !== null ? "-" + version.prerelease : '');
  }
},95,[8,96]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.version = {
    major: 0,
    minor: 59,
    patch: 8,
    prerelease: null
  };
},96,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},97,[83,98]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  Promise.prototype.finally = function (onSettled) {
    return this.then(onSettled, onSettled);
  };

  module.exports = Promise;
},98,[99,101]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;
  var TRUE = valuePromise(true);
  var FALSE = valuePromise(false);
  var NULL = valuePromise(null);
  var UNDEFINED = valuePromise(undefined);
  var ZERO = valuePromise(0);
  var EMPTYSTRING = valuePromise('');

  function valuePromise(value) {
    var p = new Promise(Promise._61);
    p._65 = 1;
    p._55 = value;
    return p;
  }

  Promise.resolve = function (value) {
    if (value instanceof Promise) return value;
    if (value === null) return NULL;
    if (value === undefined) return UNDEFINED;
    if (value === true) return TRUE;
    if (value === false) return FALSE;
    if (value === 0) return ZERO;
    if (value === '') return EMPTYSTRING;

    if (typeof value === 'object' || typeof value === 'function') {
      try {
        var then = value.then;

        if (typeof then === 'function') {
          return new Promise(then.bind(value));
        }
      } catch (ex) {
        return new Promise(function (resolve, reject) {
          reject(ex);
        });
      }
    }

    return valuePromise(value);
  };

  Promise.all = function (arr) {
    var args = Array.prototype.slice.call(arr);
    return new Promise(function (resolve, reject) {
      if (args.length === 0) return resolve([]);
      var remaining = args.length;

      function res(i, val) {
        if (val && (typeof val === 'object' || typeof val === 'function')) {
          if (val instanceof Promise && val.then === Promise.prototype.then) {
            while (val._65 === 3) {
              val = val._55;
            }

            if (val._65 === 1) return res(i, val._55);
            if (val._65 === 2) reject(val._55);
            val.then(function (val) {
              res(i, val);
            }, reject);
            return;
          } else {
            var then = val.then;

            if (typeof then === 'function') {
              var p = new Promise(then.bind(val));
              p.then(function (val) {
                res(i, val);
              }, reject);
              return;
            }
          }
        }

        args[i] = val;

        if (--remaining === 0) {
          resolve(args);
        }
      }

      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };

  Promise.reject = function (value) {
    return new Promise(function (resolve, reject) {
      reject(value);
    });
  };

  Promise.race = function (values) {
    return new Promise(function (resolve, reject) {
      values.forEach(function (value) {
        Promise.resolve(value).then(resolve, reject);
      });
    });
  };

  Promise.prototype['catch'] = function (onRejected) {
    return this.then(null, onRejected);
  };
},99,[100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function noop() {}

  var LAST_ERROR = null;
  var IS_ERROR = {};

  function getThen(obj) {
    try {
      return obj.then;
    } catch (ex) {
      LAST_ERROR = ex;
      return IS_ERROR;
    }
  }

  function tryCallOne(fn, a) {
    try {
      return fn(a);
    } catch (ex) {
      LAST_ERROR = ex;
      return IS_ERROR;
    }
  }

  function tryCallTwo(fn, a, b) {
    try {
      fn(a, b);
    } catch (ex) {
      LAST_ERROR = ex;
      return IS_ERROR;
    }
  }

  module.exports = Promise;

  function Promise(fn) {
    if (typeof this !== 'object') {
      throw new TypeError('Promises must be constructed via new');
    }

    if (typeof fn !== 'function') {
      throw new TypeError('Promise constructor\'s argument is not a function');
    }

    this._40 = 0;
    this._65 = 0;
    this._55 = null;
    this._72 = null;
    if (fn === noop) return;
    doResolve(fn, this);
  }

  Promise._37 = null;
  Promise._87 = null;
  Promise._61 = noop;

  Promise.prototype.then = function (onFulfilled, onRejected) {
    if (this.constructor !== Promise) {
      return safeThen(this, onFulfilled, onRejected);
    }

    var res = new Promise(noop);
    handle(this, new Handler(onFulfilled, onRejected, res));
    return res;
  };

  function safeThen(self, onFulfilled, onRejected) {
    return new self.constructor(function (resolve, reject) {
      var res = new Promise(noop);
      res.then(resolve, reject);
      handle(self, new Handler(onFulfilled, onRejected, res));
    });
  }

  function handle(self, deferred) {
    while (self._65 === 3) {
      self = self._55;
    }

    if (Promise._37) {
      Promise._37(self);
    }

    if (self._65 === 0) {
      if (self._40 === 0) {
        self._40 = 1;
        self._72 = deferred;
        return;
      }

      if (self._40 === 1) {
        self._40 = 2;
        self._72 = [self._72, deferred];
        return;
      }

      self._72.push(deferred);

      return;
    }

    handleResolved(self, deferred);
  }

  function handleResolved(self, deferred) {
    setImmediate(function () {
      var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;

      if (cb === null) {
        if (self._65 === 1) {
          resolve(deferred.promise, self._55);
        } else {
          reject(deferred.promise, self._55);
        }

        return;
      }

      var ret = tryCallOne(cb, self._55);

      if (ret === IS_ERROR) {
        reject(deferred.promise, LAST_ERROR);
      } else {
        resolve(deferred.promise, ret);
      }
    });
  }

  function resolve(self, newValue) {
    if (newValue === self) {
      return reject(self, new TypeError('A promise cannot be resolved with itself.'));
    }

    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
      var then = getThen(newValue);

      if (then === IS_ERROR) {
        return reject(self, LAST_ERROR);
      }

      if (then === self.then && newValue instanceof Promise) {
        self._65 = 3;
        self._55 = newValue;
        finale(self);
        return;
      } else if (typeof then === 'function') {
        doResolve(then.bind(newValue), self);
        return;
      }
    }

    self._65 = 1;
    self._55 = newValue;
    finale(self);
  }

  function reject(self, newValue) {
    self._65 = 2;
    self._55 = newValue;

    if (Promise._87) {
      Promise._87(self, newValue);
    }

    finale(self);
  }

  function finale(self) {
    if (self._40 === 1) {
      handle(self, self._72);
      self._72 = null;
    }

    if (self._40 === 2) {
      for (var i = 0; i < self._72.length; i++) {
        handle(self, self._72[i]);
      }

      self._72 = null;
    }
  }

  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  function doResolve(fn, promise) {
    var done = false;
    var res = tryCallTwo(fn, function (value) {
      if (done) return;
      done = true;
      resolve(promise, value);
    }, function (reason) {
      if (done) return;
      done = true;
      reject(promise, reason);
    });

    if (!done && res === IS_ERROR) {
      done = true;
      reject(promise, LAST_ERROR);
    }
  }
},100,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype.done = function (onFulfilled, onRejected) {
    var self = arguments.length ? this.then.apply(this, arguments) : this;
    self.then(null, function (err) {
      setTimeout(function () {
        throw err;
      }, 0);
    });
  };
},101,[100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},102,[83,103]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  !function (global) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    var inModule = typeof module === "object";
    var runtime = global.regeneratorRuntime;

    if (runtime) {
      if (inModule) {
        module.exports = runtime;
      }

      return;
    }

    runtime = global.regeneratorRuntime = inModule ? module.exports : {};

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    runtime.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    runtime.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    runtime.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    runtime.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return Promise.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return Promise.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, reject);
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new Promise(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    runtime.AsyncIterator = AsyncIterator;

    runtime.async = function (innerFn, outerFn, self, tryLocsList) {
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
      return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator.return) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    runtime.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    runtime.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
  }(function () {
    return this;
  }() || Function("return this")());
},103,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  var defineLazyTimer = function defineLazyTimer(name) {
    polyfillGlobal(name, function () {
      return _$$_REQUIRE(_dependencyMap[1])[name];
    });
  };

  defineLazyTimer('setTimeout');
  defineLazyTimer('setInterval');
  defineLazyTimer('setImmediate');
  defineLazyTimer('clearTimeout');
  defineLazyTimer('clearInterval');
  defineLazyTimer('clearImmediate');
  defineLazyTimer('requestAnimationFrame');
  defineLazyTimer('cancelAnimationFrame');
  defineLazyTimer('requestIdleCallback');
  defineLazyTimer('cancelIdleCallback');
},104,[83,105]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var Systrace = _$$_REQUIRE(_dependencyMap[1]);

  var invariant = _$$_REQUIRE(_dependencyMap[2]);

  var _require = _$$_REQUIRE(_dependencyMap[3]),
      Timing = _require.Timing;

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[4]);

  var _performanceNow = null;

  function performanceNow() {
    if (!_performanceNow) {
      _performanceNow = _$$_REQUIRE(_dependencyMap[5]);
    }

    return _performanceNow();
  }

  var FRAME_DURATION = 16.666666666666668;
  var IDLE_CALLBACK_FRAME_DEADLINE = 1;
  var MAX_TIMER_DURATION_MS = 60000;
  var IS_ANDROID = true;
  var ANDROID_LONG_TIMER_MESSAGE = "Setting a timer for a long period of time, i.e. multiple minutes, is a performance and correctness issue on Android as it keeps the timer module awake, and timers can only be called when the app is in the foreground. See https://github.com/facebook/react-native/issues/12981 for more info.";
  var callbacks = [];
  var types = [];
  var timerIDs = [];
  var immediates = [];
  var requestIdleCallbacks = [];
  var requestIdleCallbackTimeouts = {};
  var identifiers = [];
  var GUID = 1;
  var errors = null;
  var hasEmittedTimeDriftWarning = false;

  function _getFreeIndex() {
    var freeIndex = timerIDs.indexOf(null);

    if (freeIndex === -1) {
      freeIndex = timerIDs.length;
    }

    return freeIndex;
  }

  function _allocateCallback(func, type) {
    var id = GUID++;

    var freeIndex = _getFreeIndex();

    timerIDs[freeIndex] = id;
    callbacks[freeIndex] = func;
    types[freeIndex] = type;
    return id;
  }

  function _callTimer(timerID, frameTime, didTimeout) {
    _$$_REQUIRE(_dependencyMap[6])(timerID <= GUID, 'Tried to call timer with ID %s but no such timer exists.', timerID);

    var timerIndex = timerIDs.indexOf(timerID);

    if (timerIndex === -1) {
      return;
    }

    var type = types[timerIndex];
    var callback = callbacks[timerIndex];

    if (!callback || !type) {
      console.error('No callback found for timerID ' + timerID);
      return;
    }

    if (type === 'setTimeout' || type === 'setImmediate' || type === 'requestAnimationFrame' || type === 'requestIdleCallback') {
      _clearIndex(timerIndex);
    }

    try {
      if (type === 'setTimeout' || type === 'setInterval' || type === 'setImmediate') {
        callback();
      } else if (type === 'requestAnimationFrame') {
        callback(performanceNow());
      } else if (type === 'requestIdleCallback') {
        callback({
          timeRemaining: function timeRemaining() {
            return Math.max(0, FRAME_DURATION - (performanceNow() - frameTime));
          },
          didTimeout: !!didTimeout
        });
      } else {
        console.error('Tried to call a callback with invalid type: ' + type);
      }
    } catch (e) {
      if (!errors) {
        errors = [e];
      } else {
        errors.push(e);
      }
    }
  }

  function _callImmediatesPass() {
    if (immediates.length > 0) {
      var passImmediates = immediates.slice();
      immediates = [];

      for (var i = 0; i < passImmediates.length; ++i) {
        _callTimer(passImmediates[i], 0);
      }
    }

    return immediates.length > 0;
  }

  function _clearIndex(i) {
    timerIDs[i] = null;
    callbacks[i] = null;
    types[i] = null;
    identifiers[i] = null;
  }

  function _freeCallback(timerID) {
    if (timerID == null) {
      return;
    }

    var index = timerIDs.indexOf(timerID);

    if (index !== -1) {
      _clearIndex(index);

      var type = types[index];

      if (type !== 'setImmediate' && type !== 'requestIdleCallback') {
        Timing.deleteTimer(timerID);
      }
    }
  }

  var JSTimers = {
    setTimeout: function setTimeout(func, duration) {
      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }

      var id = _allocateCallback(function () {
        return func.apply(undefined, args);
      }, 'setTimeout');

      Timing.createTimer(id, duration || 0, Date.now(), false);
      return id;
    },
    setInterval: function setInterval(func, duration) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      var id = _allocateCallback(function () {
        return func.apply(undefined, args);
      }, 'setInterval');

      Timing.createTimer(id, duration || 0, Date.now(), true);
      return id;
    },
    setImmediate: function setImmediate(func) {
      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
      }

      var id = _allocateCallback(function () {
        return func.apply(undefined, args);
      }, 'setImmediate');

      immediates.push(id);
      return id;
    },
    requestAnimationFrame: function requestAnimationFrame(func) {
      var id = _allocateCallback(func, 'requestAnimationFrame');

      Timing.createTimer(id, 1, Date.now(), false);
      return id;
    },
    requestIdleCallback: function requestIdleCallback(func, options) {
      if (requestIdleCallbacks.length === 0) {
        Timing.setSendIdleEvents(true);
      }

      var timeout = options && options.timeout;

      var id = _allocateCallback(timeout != null ? function (deadline) {
        var timeoutId = requestIdleCallbackTimeouts[id];

        if (timeoutId) {
          JSTimers.clearTimeout(timeoutId);
          delete requestIdleCallbackTimeouts[id];
        }

        return func(deadline);
      } : func, 'requestIdleCallback');

      requestIdleCallbacks.push(id);

      if (timeout != null) {
        var timeoutId = JSTimers.setTimeout(function () {
          var index = requestIdleCallbacks.indexOf(id);

          if (index > -1) {
            requestIdleCallbacks.splice(index, 1);

            _callTimer(id, performanceNow(), true);
          }

          delete requestIdleCallbackTimeouts[id];

          if (requestIdleCallbacks.length === 0) {
            Timing.setSendIdleEvents(false);
          }
        }, timeout);
        requestIdleCallbackTimeouts[id] = timeoutId;
      }

      return id;
    },
    cancelIdleCallback: function cancelIdleCallback(timerID) {
      _freeCallback(timerID);

      var index = requestIdleCallbacks.indexOf(timerID);

      if (index !== -1) {
        requestIdleCallbacks.splice(index, 1);
      }

      var timeoutId = requestIdleCallbackTimeouts[timerID];

      if (timeoutId) {
        JSTimers.clearTimeout(timeoutId);
        delete requestIdleCallbackTimeouts[timerID];
      }

      if (requestIdleCallbacks.length === 0) {
        Timing.setSendIdleEvents(false);
      }
    },
    clearTimeout: function clearTimeout(timerID) {
      _freeCallback(timerID);
    },
    clearInterval: function clearInterval(timerID) {
      _freeCallback(timerID);
    },
    clearImmediate: function clearImmediate(timerID) {
      _freeCallback(timerID);

      var index = immediates.indexOf(timerID);

      if (index !== -1) {
        immediates.splice(index, 1);
      }
    },
    cancelAnimationFrame: function cancelAnimationFrame(timerID) {
      _freeCallback(timerID);
    },
    callTimers: function callTimers(timersToCall) {
      invariant(timersToCall.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');
      errors = null;

      for (var i = 0; i < timersToCall.length; i++) {
        _callTimer(timersToCall[i], 0);
      }

      if (errors) {
        var errorCount = errors.length;

        if (errorCount > 1) {
          for (var ii = 1; ii < errorCount; ii++) {
            JSTimers.setTimeout(function (error) {
              throw error;
            }.bind(null, errors[ii]), 0);
          }
        }

        throw errors[0];
      }
    },
    callIdleCallbacks: function callIdleCallbacks(frameTime) {
      if (FRAME_DURATION - (performanceNow() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
        return;
      }

      errors = null;

      if (requestIdleCallbacks.length > 0) {
        var passIdleCallbacks = requestIdleCallbacks.slice();
        requestIdleCallbacks = [];

        for (var i = 0; i < passIdleCallbacks.length; ++i) {
          _callTimer(passIdleCallbacks[i], frameTime);
        }
      }

      if (requestIdleCallbacks.length === 0) {
        Timing.setSendIdleEvents(false);
      }

      if (errors) {
        errors.forEach(function (error) {
          return JSTimers.setTimeout(function () {
            throw error;
          }, 0);
        });
      }
    },
    callImmediates: function callImmediates() {
      errors = null;

      while (_callImmediatesPass()) {}

      if (errors) {
        errors.forEach(function (error) {
          return JSTimers.setTimeout(function () {
            throw error;
          }, 0);
        });
      }
    },
    emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
      if (hasEmittedTimeDriftWarning) {
        return;
      }

      hasEmittedTimeDriftWarning = true;
      console.warn(warningMessage);
    }
  };
  var ExportedJSTimers;

  if (!Timing) {
    console.warn("Timing native module is not available, can't set timers.");
    ExportedJSTimers = {
      callImmediates: JSTimers.callImmediates,
      setImmediate: JSTimers.setImmediate
    };
  } else {
    ExportedJSTimers = JSTimers;
  }

  BatchedBridge.setImmediatesCallback(ExportedJSTimers.callImmediates.bind(ExportedJSTimers));
  module.exports = ExportedJSTimers;
},105,[43,25,3,8,16,106,5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},106,[107]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},107,[108]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},108,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
},109,[83,110,124,125,127,121,129,130,131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0]);

  var _get = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var EventTarget = _$$_REQUIRE(_dependencyMap[7]);

  var RCTNetworking = _$$_REQUIRE(_dependencyMap[8]);

  var base64 = _$$_REQUIRE(_dependencyMap[9]);

  var invariant = _$$_REQUIRE(_dependencyMap[10]);

  var warning = _$$_REQUIRE(_dependencyMap[11]);

  var BlobManager = _$$_REQUIRE(_dependencyMap[12]);

  if (BlobManager.isAvailable) {
    BlobManager.addNetworkingHandler();
  }

  var UNSENT = 0;
  var OPENED = 1;
  var HEADERS_RECEIVED = 2;
  var LOADING = 3;
  var DONE = 4;
  var SUPPORTED_RESPONSE_TYPES = {
    arraybuffer: typeof global.ArrayBuffer === 'function',
    blob: typeof global.Blob === 'function',
    document: false,
    json: true,
    text: true,
    '': true
  };
  var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];
  var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');

  var XMLHttpRequestEventTarget = function (_EventTarget) {
    _inherits(XMLHttpRequestEventTarget, _EventTarget);

    function XMLHttpRequestEventTarget() {
      _classCallCheck(this, XMLHttpRequestEventTarget);

      return _possibleConstructorReturn(this, _getPrototypeOf(XMLHttpRequestEventTarget).apply(this, arguments));
    }

    return XMLHttpRequestEventTarget;
  }(EventTarget.apply(undefined, REQUEST_EVENTS));

  var XMLHttpRequest = function (_EventTarget2) {
    _inherits(XMLHttpRequest, _EventTarget2);

    _createClass(XMLHttpRequest, null, [{
      key: "setInterceptor",
      value: function setInterceptor(interceptor) {
        XMLHttpRequest._interceptor = interceptor;
      }
    }]);

    function XMLHttpRequest() {
      var _this;

      _classCallCheck(this, XMLHttpRequest);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLHttpRequest).call(this));
      _this.UNSENT = UNSENT;
      _this.OPENED = OPENED;
      _this.HEADERS_RECEIVED = HEADERS_RECEIVED;
      _this.LOADING = LOADING;
      _this.DONE = DONE;
      _this.readyState = UNSENT;
      _this.status = 0;
      _this.timeout = 0;
      _this.withCredentials = true;
      _this.upload = new XMLHttpRequestEventTarget();
      _this._aborted = false;
      _this._hasError = false;
      _this._method = null;
      _this._response = '';
      _this._url = null;
      _this._timedOut = false;
      _this._trackingName = 'unknown';
      _this._incrementalEvents = false;

      _this._reset();

      return _this;
    }

    _createClass(XMLHttpRequest, [{
      key: "_reset",
      value: function _reset() {
        this.readyState = this.UNSENT;
        this.responseHeaders = undefined;
        this.status = 0;
        delete this.responseURL;
        this._requestId = null;
        this._cachedResponse = undefined;
        this._hasError = false;
        this._headers = {};
        this._response = '';
        this._responseType = '';
        this._sent = false;
        this._lowerCaseResponseHeaders = {};

        this._clearSubscriptions();

        this._timedOut = false;
      }
    }, {
      key: "__didCreateRequest",
      value: function __didCreateRequest(requestId) {
        this._requestId = requestId;
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
      }
    }, {
      key: "__didUploadProgress",
      value: function __didUploadProgress(requestId, progress, total) {
        if (requestId === this._requestId) {
          this.upload.dispatchEvent({
            type: 'progress',
            lengthComputable: true,
            loaded: progress,
            total: total
          });
        }
      }
    }, {
      key: "__didReceiveResponse",
      value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
        if (requestId === this._requestId) {
          this.status = status;
          this.setResponseHeaders(responseHeaders);
          this.setReadyState(this.HEADERS_RECEIVED);

          if (responseURL || responseURL === '') {
            this.responseURL = responseURL;
          } else {
            delete this.responseURL;
          }

          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
        }
      }
    }, {
      key: "__didReceiveData",
      value: function __didReceiveData(requestId, response) {
        if (requestId !== this._requestId) {
          return;
        }

        this._response = response;
        this._cachedResponse = undefined;
        this.setReadyState(this.LOADING);
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
      }
    }, {
      key: "__didReceiveIncrementalData",
      value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
        if (requestId !== this._requestId) {
          return;
        }

        if (!this._response) {
          this._response = responseText;
        } else {
          this._response += responseText;
        }

        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);
        this.setReadyState(this.LOADING);

        this.__didReceiveDataProgress(requestId, progress, total);
      }
    }, {
      key: "__didReceiveDataProgress",
      value: function __didReceiveDataProgress(requestId, loaded, total) {
        if (requestId !== this._requestId) {
          return;
        }

        this.dispatchEvent({
          type: 'progress',
          lengthComputable: total >= 0,
          loaded: loaded,
          total: total
        });
      }
    }, {
      key: "__didCompleteResponse",
      value: function __didCompleteResponse(requestId, error, timeOutError) {
        if (requestId === this._requestId) {
          if (error) {
            if (this._responseType === '' || this._responseType === 'text') {
              this._response = error;
            }

            this._hasError = true;

            if (timeOutError) {
              this._timedOut = true;
            }
          }

          this._clearSubscriptions();

          this._requestId = null;
          this.setReadyState(this.DONE);

          if (error) {
            XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
          } else {
            XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
          }
        }
      }
    }, {
      key: "_clearSubscriptions",
      value: function _clearSubscriptions() {
        (this._subscriptions || []).forEach(function (sub) {
          if (sub) {
            sub.remove();
          }
        });
        this._subscriptions = [];
      }
    }, {
      key: "getAllResponseHeaders",
      value: function getAllResponseHeaders() {
        if (!this.responseHeaders) {
          return null;
        }

        var headers = this.responseHeaders || {};
        return Object.keys(headers).map(function (headerName) {
          return headerName + ': ' + headers[headerName];
        }).join('\r\n');
      }
    }, {
      key: "getResponseHeader",
      value: function getResponseHeader(header) {
        var value = this._lowerCaseResponseHeaders[header.toLowerCase()];

        return value !== undefined ? value : null;
      }
    }, {
      key: "setRequestHeader",
      value: function setRequestHeader(header, value) {
        if (this.readyState !== this.OPENED) {
          throw new Error('Request has not been opened');
        }

        this._headers[header.toLowerCase()] = String(value);
      }
    }, {
      key: "setTrackingName",
      value: function setTrackingName(trackingName) {
        this._trackingName = trackingName;
        return this;
      }
    }, {
      key: "open",
      value: function open(method, url, async) {
        if (this.readyState !== this.UNSENT) {
          throw new Error('Cannot open, already sending');
        }

        if (async !== undefined && !async) {
          throw new Error('Synchronous http requests are not supported');
        }

        if (!url) {
          throw new Error('Cannot load an empty url');
        }

        this._method = method.toUpperCase();
        this._url = url;
        this._aborted = false;
        this.setReadyState(this.OPENED);
      }
    }, {
      key: "send",
      value: function send(data) {
        var _this2 = this;

        if (this.readyState !== this.OPENED) {
          throw new Error('Request has not been opened');
        }

        if (this._sent) {
          throw new Error('Request has already been sent');
        }

        this._sent = true;
        var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;

        this._subscriptions.push(RCTNetworking.addListener('didSendNetworkData', function (args) {
          return _this2.__didUploadProgress.apply(_this2, _toConsumableArray(args));
        }));

        this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkResponse', function (args) {
          return _this2.__didReceiveResponse.apply(_this2, _toConsumableArray(args));
        }));

        this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkData', function (args) {
          return _this2.__didReceiveData.apply(_this2, _toConsumableArray(args));
        }));

        this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkIncrementalData', function (args) {
          return _this2.__didReceiveIncrementalData.apply(_this2, _toConsumableArray(args));
        }));

        this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkDataProgress', function (args) {
          return _this2.__didReceiveDataProgress.apply(_this2, _toConsumableArray(args));
        }));

        this._subscriptions.push(RCTNetworking.addListener('didCompleteNetworkResponse', function (args) {
          return _this2.__didCompleteResponse.apply(_this2, _toConsumableArray(args));
        }));

        var nativeResponseType = 'text';

        if (this._responseType === 'arraybuffer') {
          nativeResponseType = 'base64';
        }

        if (this._responseType === 'blob') {
          nativeResponseType = 'blob';
        }

        invariant(this._method, 'Request method needs to be defined.');
        invariant(this._url, 'Request URL needs to be defined.');
        RCTNetworking.sendRequest(this._method, this._trackingName, this._url, this._headers, data, nativeResponseType, incrementalEvents, this.timeout, this.__didCreateRequest.bind(this), this.withCredentials);
      }
    }, {
      key: "abort",
      value: function abort() {
        this._aborted = true;

        if (this._requestId) {
          RCTNetworking.abortRequest(this._requestId);
        }

        if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
          this._reset();

          this.setReadyState(this.DONE);
        }

        this._reset();
      }
    }, {
      key: "setResponseHeaders",
      value: function setResponseHeaders(responseHeaders) {
        this.responseHeaders = responseHeaders || null;
        var headers = responseHeaders || {};
        this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
          lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
          return lcaseHeaders;
        }, {});
      }
    }, {
      key: "setReadyState",
      value: function setReadyState(newState) {
        this.readyState = newState;
        this.dispatchEvent({
          type: 'readystatechange'
        });

        if (newState === this.DONE) {
          if (this._aborted) {
            this.dispatchEvent({
              type: 'abort'
            });
          } else if (this._hasError) {
            if (this._timedOut) {
              this.dispatchEvent({
                type: 'timeout'
              });
            } else {
              this.dispatchEvent({
                type: 'error'
              });
            }
          } else {
            this.dispatchEvent({
              type: 'load'
            });
          }

          this.dispatchEvent({
            type: 'loadend'
          });
        }
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, listener) {
        if (type === 'readystatechange' || type === 'progress') {
          this._incrementalEvents = true;
        }

        _get(_getPrototypeOf(XMLHttpRequest.prototype), "addEventListener", this).call(this, type, listener);
      }
    }, {
      key: "responseType",
      get: function get() {
        return this._responseType;
      },
      set: function set(responseType) {
        if (this._sent) {
          throw new Error("Failed to set the 'responseType' property on 'XMLHttpRequest': The response type cannot be set after the request has been sent.");
        }

        if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
          warning(false, "The provided value '" + responseType + "' is not a valid 'responseType'.");
          return;
        }

        invariant(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', "The provided value '" + responseType + "' is unsupported in this environment.");

        if (responseType === 'blob') {
          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');
        }

        this._responseType = responseType;
      }
    }, {
      key: "responseText",
      get: function get() {
        if (this._responseType !== '' && this._responseType !== 'text') {
          throw new Error("The 'responseText' property is only available if 'responseType' " + ("is set to '' or 'text', but it is '" + this._responseType + "'."));
        }

        if (this.readyState < LOADING) {
          return '';
        }

        return this._response;
      }
    }, {
      key: "response",
      get: function get() {
        var responseType = this.responseType;

        if (responseType === '' || responseType === 'text') {
          return this.readyState < LOADING || this._hasError ? '' : this._response;
        }

        if (this.readyState !== DONE) {
          return null;
        }

        if (this._cachedResponse !== undefined) {
          return this._cachedResponse;
        }

        switch (responseType) {
          case 'document':
            this._cachedResponse = null;
            break;

          case 'arraybuffer':
            this._cachedResponse = base64.toByteArray(this._response).buffer;
            break;

          case 'blob':
            if (typeof this._response === 'object' && this._response) {
              this._cachedResponse = BlobManager.createFromOptions(this._response);
            } else if (this._response === '') {
              this._cachedResponse = null;
            } else {
              throw new Error("Invalid response for blob: " + this._response);
            }

            break;

          case 'json':
            try {
              this._cachedResponse = JSON.parse(this._response);
            } catch (_) {
              this._cachedResponse = null;
            }

            break;

          default:
            this._cachedResponse = null;
        }

        return this._cachedResponse;
      }
    }]);

    return XMLHttpRequest;
  }(EventTarget.apply(undefined, _toConsumableArray(XHR_EVENTS)));

  XMLHttpRequest.UNSENT = UNSENT;
  XMLHttpRequest.OPENED = OPENED;
  XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
  XMLHttpRequest.LOADING = LOADING;
  XMLHttpRequest.DONE = DONE;
  XMLHttpRequest._interceptor = null;
  module.exports = XMLHttpRequest;
},110,[18,34,23,22,30,33,36,111,115,120,3,5,122]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var Commons = _$$_REQUIRE(_dependencyMap[0]);

  var CustomEventTarget = _$$_REQUIRE(_dependencyMap[1]);

  var EventWrapper = _$$_REQUIRE(_dependencyMap[2]);

  var LISTENERS = Commons.LISTENERS;
  var CAPTURE = Commons.CAPTURE;
  var BUBBLE = Commons.BUBBLE;
  var ATTRIBUTE = Commons.ATTRIBUTE;
  var newNode = Commons.newNode;
  var defineCustomEventTarget = CustomEventTarget.defineCustomEventTarget;
  var createEventWrapper = EventWrapper.createEventWrapper;
  var STOP_IMMEDIATE_PROPAGATION_FLAG = EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;
  var HAS_EVENTTARGET_INTERFACE = typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

  var EventTarget = module.exports = function EventTarget() {
    if (this instanceof EventTarget) {
      Object.defineProperty(this, LISTENERS, {
        value: Object.create(null)
      });
    } else if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(EventTarget, arguments[0]);
    } else if (arguments.length > 0) {
      var types = Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(EventTarget, types);
    } else {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE ? window.EventTarget : Object).prototype, {
    constructor: {
      value: EventTarget,
      writable: true,
      configurable: true
    },
    addEventListener: {
      value: function addEventListener(type, listener, capture) {
        if (listener == null) {
          return false;
        }

        if (typeof listener !== "function" && typeof listener !== "object") {
          throw new TypeError("\"listener\" is not an object.");
        }

        var kind = capture ? CAPTURE : BUBBLE;
        var node = this[LISTENERS][type];

        if (node == null) {
          this[LISTENERS][type] = newNode(listener, kind);
          return true;
        }

        var prev = null;

        while (node != null) {
          if (node.listener === listener && node.kind === kind) {
            return false;
          }

          prev = node;
          node = node.next;
        }

        prev.next = newNode(listener, kind);
        return true;
      },
      configurable: true,
      writable: true
    },
    removeEventListener: {
      value: function removeEventListener(type, listener, capture) {
        if (listener == null) {
          return false;
        }

        var kind = capture ? CAPTURE : BUBBLE;
        var prev = null;
        var node = this[LISTENERS][type];

        while (node != null) {
          if (node.listener === listener && node.kind === kind) {
            if (prev == null) {
              this[LISTENERS][type] = node.next;
            } else {
              prev.next = node.next;
            }

            return true;
          }

          prev = node;
          node = node.next;
        }

        return false;
      },
      configurable: true,
      writable: true
    },
    dispatchEvent: {
      value: function dispatchEvent(event) {
        var node = this[LISTENERS][event.type];

        if (node == null) {
          return true;
        }

        var wrapped = createEventWrapper(event, this);

        while (node != null) {
          if (typeof node.listener === "function") {
            node.listener.call(this, wrapped);
          } else if (node.kind !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
            node.listener.handleEvent(wrapped);
          }

          if (wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]) {
            break;
          }

          node = node.next;
        }

        return !wrapped.defaultPrevented;
      },
      configurable: true,
      writable: true
    }
  });
},111,[112,113,114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var createUniqueKey = exports.createUniqueKey = typeof Symbol !== "undefined" ? Symbol : function createUniqueKey(name) {
    return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";
  };
  exports.LISTENERS = createUniqueKey("listeners");
  exports.CAPTURE = 1;
  exports.BUBBLE = 2;
  exports.ATTRIBUTE = 3;

  exports.newNode = function newNode(listener, kind) {
    return {
      listener: listener,
      kind: kind,
      next: null
    };
  };
},112,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var Commons = _$$_REQUIRE(_dependencyMap[0]);

  var LISTENERS = Commons.LISTENERS;
  var ATTRIBUTE = Commons.ATTRIBUTE;
  var newNode = Commons.newNode;

  function getAttributeListener(eventTarget, type) {
    var node = eventTarget[LISTENERS][type];

    while (node != null) {
      if (node.kind === ATTRIBUTE) {
        return node.listener;
      }

      node = node.next;
    }

    return null;
  }

  function setAttributeListener(eventTarget, type, listener) {
    if (typeof listener !== "function" && typeof listener !== "object") {
      listener = null;
    }

    var prev = null;
    var node = eventTarget[LISTENERS][type];

    while (node != null) {
      if (node.kind === ATTRIBUTE) {
        if (prev == null) {
          eventTarget[LISTENERS][type] = node.next;
        } else {
          prev.next = node.next;
        }
      } else {
        prev = node;
      }

      node = node.next;
    }

    if (listener != null) {
      if (prev == null) {
        eventTarget[LISTENERS][type] = newNode(listener, ATTRIBUTE);
      } else {
        prev.next = newNode(listener, ATTRIBUTE);
      }
    }
  }

  exports.defineCustomEventTarget = function (EventTargetBase, types) {
    function EventTarget() {
      EventTargetBase.call(this);
    }

    var descripter = {
      constructor: {
        value: EventTarget,
        configurable: true,
        writable: true
      }
    };
    types.forEach(function (type) {
      descripter["on" + type] = {
        get: function get() {
          return getAttributeListener(this, type);
        },
        set: function set(listener) {
          setAttributeListener(this, type, listener);
        },
        configurable: true,
        enumerable: true
      };
    });
    EventTarget.prototype = Object.create(EventTargetBase.prototype, descripter);
    return EventTarget;
  };
},113,[112]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var createUniqueKey = _$$_REQUIRE(_dependencyMap[0]).createUniqueKey;

  var STOP_IMMEDIATE_PROPAGATION_FLAG = createUniqueKey("stop_immediate_propagation_flag");
  var CANCELED_FLAG = createUniqueKey("canceled_flag");
  var ORIGINAL_EVENT = createUniqueKey("original_event");
  var wrapperPrototypeDefinition = Object.freeze({
    stopPropagation: Object.freeze({
      value: function stopPropagation() {
        var e = this[ORIGINAL_EVENT];

        if (typeof e.stopPropagation === "function") {
          e.stopPropagation();
        }
      },
      writable: true,
      configurable: true
    }),
    stopImmediatePropagation: Object.freeze({
      value: function stopImmediatePropagation() {
        this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;
        var e = this[ORIGINAL_EVENT];

        if (typeof e.stopImmediatePropagation === "function") {
          e.stopImmediatePropagation();
        }
      },
      writable: true,
      configurable: true
    }),
    preventDefault: Object.freeze({
      value: function preventDefault() {
        if (this.cancelable === true) {
          this[CANCELED_FLAG] = true;
        }

        var e = this[ORIGINAL_EVENT];

        if (typeof e.preventDefault === "function") {
          e.preventDefault();
        }
      },
      writable: true,
      configurable: true
    }),
    defaultPrevented: Object.freeze({
      get: function defaultPrevented() {
        return this[CANCELED_FLAG];
      },
      enumerable: true,
      configurable: true
    })
  });
  exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;

  exports.createEventWrapper = function createEventWrapper(event, eventTarget) {
    var timeStamp = typeof event.timeStamp === "number" ? event.timeStamp : Date.now();
    var propertyDefinition = {
      type: {
        value: event.type,
        enumerable: true
      },
      target: {
        value: eventTarget,
        enumerable: true
      },
      currentTarget: {
        value: eventTarget,
        enumerable: true
      },
      eventPhase: {
        value: 2,
        enumerable: true
      },
      bubbles: {
        value: Boolean(event.bubbles),
        enumerable: true
      },
      cancelable: {
        value: Boolean(event.cancelable),
        enumerable: true
      },
      timeStamp: {
        value: timeStamp,
        enumerable: true
      },
      isTrusted: {
        value: false,
        enumerable: true
      }
    };
    propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG] = {
      value: false,
      writable: true
    };
    propertyDefinition[CANCELED_FLAG] = {
      value: false,
      writable: true
    };
    propertyDefinition[ORIGINAL_EVENT] = {
      value: event
    };

    if (typeof event.detail !== "undefined") {
      propertyDefinition.detail = {
        value: event.detail,
        enumerable: true
      };
    }

    return Object.create(Object.create(event, wrapperPrototypeDefinition), propertyDefinition);
  };
},114,[112]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var MissingNativeEventEmitterShim = _$$_REQUIRE(_dependencyMap[6]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[7]);

  var RCTNetworkingNative = _$$_REQUIRE(_dependencyMap[8]).Networking;

  var convertRequestBody = _$$_REQUIRE(_dependencyMap[9]);

  function convertHeadersMapToArray(headers) {
    var headerArray = [];

    for (var name in headers) {
      headerArray.push([name, headers[name]]);
    }

    return headerArray;
  }

  var _requestId = 1;

  function generateRequestId() {
    return _requestId++;
  }

  var RCTNetworking = function (_NativeEventEmitter) {
    _inherits(RCTNetworking, _NativeEventEmitter);

    function RCTNetworking() {
      var _this;

      _classCallCheck(this, RCTNetworking);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(RCTNetworking).call(this, RCTNetworkingNative));
      _this.isAvailable = true;
      return _this;
    }

    _createClass(RCTNetworking, [{
      key: "sendRequest",
      value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {
        var body = convertRequestBody(data);

        if (body && body.formData) {
          body.formData = body.formData.map(function (part) {
            return _objectSpread({}, part, {
              headers: convertHeadersMapToArray(part.headers)
            });
          });
        }

        var requestId = generateRequestId();
        RCTNetworkingNative.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), _objectSpread({}, body, {
          trackingName: trackingName
        }), responseType, incrementalUpdates, timeout, withCredentials);
        callback(requestId);
      }
    }, {
      key: "abortRequest",
      value: function abortRequest(requestId) {
        RCTNetworkingNative.abortRequest(requestId);
      }
    }, {
      key: "clearCookies",
      value: function clearCookies(callback) {
        RCTNetworkingNative.clearCookies(callback);
      }
    }]);

    return RCTNetworking;
  }(NativeEventEmitter);

  {
    RCTNetworking = new RCTNetworking();
  }
  module.exports = RCTNetworking;
},115,[46,22,23,30,33,36,116,117,8,118]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[5]);

  var EventEmitter = _$$_REQUIRE(_dependencyMap[6]);

  var invariant = _$$_REQUIRE(_dependencyMap[7]);

  var MissingNativeEventEmitterShim = function (_EventEmitter) {
    _inherits(MissingNativeEventEmitterShim, _EventEmitter);

    function MissingNativeEventEmitterShim(nativeModuleName, nativeEventEmitterName) {
      var _this;

      _classCallCheck(this, MissingNativeEventEmitterShim);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(MissingNativeEventEmitterShim).call(this, null));
      _this.isAvailable = false;
      _this._nativeModuleName = nativeModuleName;
      _this._nativeEventEmitterName = nativeEventEmitterName;
      return _this;
    }

    _createClass(MissingNativeEventEmitterShim, [{
      key: "throwMissingNativeModule",
      value: function throwMissingNativeModule() {
        invariant(false, "Cannot use '" + this._nativeEventEmitterName + "' module when " + ("native '" + this._nativeModuleName + "' is not included in the build. ") + ("Either include it, or check '" + this._nativeEventEmitterName + "'.isAvailable ") + 'before calling any methods.');
      }
    }, {
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        this.throwMissingNativeModule();
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        this.throwMissingNativeModule();
      }
    }, {
      key: "removeSubscription",
      value: function removeSubscription(subscription) {
        this.throwMissingNativeModule();
      }
    }]);

    return MissingNativeEventEmitterShim;
  }(EventEmitter);

  module.exports = MissingNativeEventEmitterShim;
},116,[22,23,30,33,36,39,38,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var EventEmitter = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[8]);

  var invariant = _$$_REQUIRE(_dependencyMap[9]);

  var NativeEventEmitter = function (_EventEmitter) {
    _inherits(NativeEventEmitter, _EventEmitter);

    function NativeEventEmitter(nativeModule) {
      var _this;

      _classCallCheck(this, NativeEventEmitter);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(NativeEventEmitter).call(this, RCTDeviceEventEmitter.sharedSubscriber));
      return _this;
    }

    _createClass(NativeEventEmitter, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        if (this._nativeModule != null) {
          this._nativeModule.addListener(eventType);
        }

        return _get(_getPrototypeOf(NativeEventEmitter.prototype), "addListener", this).call(this, eventType, listener, context);
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        invariant(eventType, 'eventType argument is required.');
        var count = this.listeners(eventType).length;

        if (this._nativeModule != null) {
          this._nativeModule.removeListeners(count);
        }

        _get(_getPrototypeOf(NativeEventEmitter.prototype), "removeAllListeners", this).call(this, eventType);
      }
    }, {
      key: "removeSubscription",
      value: function removeSubscription(subscription) {
        if (this._nativeModule != null) {
          this._nativeModule.removeListeners(1);
        }

        _get(_getPrototypeOf(NativeEventEmitter.prototype), "removeSubscription", this).call(this, subscription);
      }
    }]);

    return NativeEventEmitter;
  }(EventEmitter);

  module.exports = NativeEventEmitter;
},117,[22,23,30,33,34,36,38,43,29,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var binaryToBase64 = _$$_REQUIRE(_dependencyMap[0]);

  var Blob = _$$_REQUIRE(_dependencyMap[1]);

  var FormData = _$$_REQUIRE(_dependencyMap[2]);

  function convertRequestBody(body) {
    if (typeof body === 'string') {
      return {
        string: body
      };
    }

    if (body instanceof Blob) {
      return {
        blob: body.data
      };
    }

    if (body instanceof FormData) {
      return {
        formData: body.getParts()
      };
    }

    if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
      return {
        base64: binaryToBase64(body)
      };
    }

    return body;
  }

  module.exports = convertRequestBody;
},118,[119,121,124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  function binaryToBase64(data) {
    if (data instanceof ArrayBuffer) {
      data = new Uint8Array(data);
    }

    if (data instanceof Uint8Array) {
      return base64.fromByteArray(data);
    }

    if (!ArrayBuffer.isView(data)) {
      throw new Error('data must be ArrayBuffer or typed array');
    }

    var _data = data,
        buffer = _data.buffer,
        byteOffset = _data.byteOffset,
        byteLength = _data.byteLength;
    return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
  }

  module.exports = binaryToBase64;
},119,[120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  exports.byteLength = byteLength;
  exports.toByteArray = toByteArray;
  exports.fromByteArray = fromByteArray;
  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;

  function getLens(b64) {
    var len = b64.length;

    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4');
    }

    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [validLen, placeHoldersLen];
  }

  function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }

  function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }

  function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

    for (var i = 0; i < len; i += 4) {
      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
      arr[curByte++] = tmp >> 16 & 0xFF;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }

    if (placeHoldersLen === 2) {
      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
      arr[curByte++] = tmp & 0xFF;
    }

    if (placeHoldersLen === 1) {
      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }

    return arr;
  }

  function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
  }

  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];

    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
      output.push(tripletToBase64(tmp));
    }

    return output.join('');
  }

  function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3;
    var parts = [];
    var maxChunkLength = 16383;

    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }

    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + uint8[len - 1];
      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
    }

    return parts.join('');
  }
},120,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var Blob = function () {
    function Blob() {
      var parts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var options = arguments.length > 1 ? arguments[1] : undefined;

      _classCallCheck(this, Blob);

      var BlobManager = _$$_REQUIRE(_dependencyMap[2]);

      this.data = BlobManager.createFromParts(parts, options).data;
    }

    _createClass(Blob, [{
      key: "slice",
      value: function slice(start, end) {
        var BlobManager = _$$_REQUIRE(_dependencyMap[2]);

        var _this$data = this.data,
            offset = _this$data.offset,
            size = _this$data.size;

        if (typeof start === 'number') {
          if (start > size) {
            start = size;
          }

          offset += start;
          size -= start;

          if (typeof end === 'number') {
            if (end < 0) {
              end = this.size + end;
            }

            size = end - start;
          }
        }

        return BlobManager.createFromOptions({
          blobId: this.data.blobId,
          offset: offset,
          size: size
        });
      }
    }, {
      key: "close",
      value: function close() {
        var BlobManager = _$$_REQUIRE(_dependencyMap[2]);

        BlobManager.release(this.data.blobId);
        this.data = null;
      }
    }, {
      key: "data",
      set: function set(data) {
        this._data = data;
      },
      get: function get() {
        if (!this._data) {
          throw new Error('Blob has been closed and is no longer available');
        }

        return this._data;
      }
    }, {
      key: "size",
      get: function get() {
        return this.data.size;
      }
    }, {
      key: "type",
      get: function get() {
        return this.data.type || '';
      }
    }]);

    return Blob;
  }();

  module.exports = Blob;
},121,[22,23,122]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var Blob = _$$_REQUIRE(_dependencyMap[3]);

  var BlobRegistry = _$$_REQUIRE(_dependencyMap[4]);

  var _require = _$$_REQUIRE(_dependencyMap[5]),
      BlobModule = _require.BlobModule;

  function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r = Math.random() * 16 | 0,
          v = c == 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    });
  }

  var BlobManager = function () {
    function BlobManager() {
      _classCallCheck(this, BlobManager);
    }

    _createClass(BlobManager, null, [{
      key: "createFromParts",
      value: function createFromParts(parts, options) {
        var blobId = uuidv4();
        var items = parts.map(function (part) {
          if (part instanceof ArrayBuffer || global.ArrayBufferView && part instanceof global.ArrayBufferView) {
            throw new Error("Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported");
          }

          if (part instanceof Blob) {
            return {
              data: part.data,
              type: 'blob'
            };
          } else {
            return {
              data: String(part),
              type: 'string'
            };
          }
        });
        var size = items.reduce(function (acc, curr) {
          if (curr.type === 'string') {
            return acc + global.unescape(encodeURI(curr.data)).length;
          } else {
            return acc + curr.data.size;
          }
        }, 0);
        BlobModule.createFromParts(items, blobId);
        return BlobManager.createFromOptions({
          blobId: blobId,
          offset: 0,
          size: size,
          type: options ? options.type : '',
          lastModified: options ? options.lastModified : Date.now()
        });
      }
    }, {
      key: "createFromOptions",
      value: function createFromOptions(options) {
        BlobRegistry.register(options.blobId);
        return _extends(Object.create(Blob.prototype), {
          data: options
        });
      }
    }, {
      key: "release",
      value: function release(blobId) {
        BlobRegistry.unregister(blobId);

        if (BlobRegistry.has(blobId)) {
          return;
        }

        BlobModule.release(blobId);
      }
    }, {
      key: "addNetworkingHandler",
      value: function addNetworkingHandler() {
        BlobModule.addNetworkingHandler();
      }
    }, {
      key: "addWebSocketHandler",
      value: function addWebSocketHandler(socketId) {
        BlobModule.addWebSocketHandler(socketId);
      }
    }, {
      key: "removeWebSocketHandler",
      value: function removeWebSocketHandler(socketId) {
        BlobModule.removeWebSocketHandler(socketId);
      }
    }, {
      key: "sendOverSocket",
      value: function sendOverSocket(blob, socketId) {
        BlobModule.sendOverSocket(blob.data, socketId);
      }
    }]);

    return BlobManager;
  }();

  BlobManager.isAvailable = !!BlobModule;
  module.exports = BlobManager;
},122,[11,22,23,121,123,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var registry = {};

  var register = function register(id) {
    if (registry[id]) {
      registry[id]++;
    } else {
      registry[id] = 1;
    }
  };

  var unregister = function unregister(id) {
    if (registry[id]) {
      registry[id]--;

      if (registry[id] <= 0) {
        delete registry[id];
      }
    }
  };

  var has = function has(id) {
    return registry[id] && registry[id] > 0;
  };

  module.exports = {
    register: register,
    unregister: unregister,
    has: has
  };
},123,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var FormData = function () {
    function FormData() {
      _classCallCheck(this, FormData);

      this._parts = [];
    }

    _createClass(FormData, [{
      key: "append",
      value: function append(key, value) {
        this._parts.push([key, value]);
      }
    }, {
      key: "getParts",
      value: function getParts() {
        return this._parts.map(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              name = _ref2[0],
              value = _ref2[1];

          var contentDisposition = 'form-data; name="' + name + '"';
          var headers = {
            'content-disposition': contentDisposition
          };

          if (typeof value === 'object' && value) {
            if (typeof value.name === 'string') {
              headers['content-disposition'] += '; filename="' + value.name + '"';
            }

            if (typeof value.type === 'string') {
              headers['content-type'] = value.type;
            }

            return _objectSpread({}, value, {
              headers: headers,
              fieldName: name
            });
          }

          return {
            string: String(value),
            headers: headers,
            fieldName: name
          };
        });
      }
    }]);

    return FormData;
  }();

  module.exports = FormData;
},124,[46,12,22,23]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var whatwg = _$$_REQUIRE(_dependencyMap[0]);

  if (whatwg && whatwg.fetch) {
    module.exports = whatwg;
  } else {
    module.exports = {
      fetch: fetch,
      Headers: Headers,
      Request: Request,
      Response: Response
    };
  }
},125,[126]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (self) {
    'use strict';

    if (self.fetch) {
      return;
    }

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isDataView = function isDataView(obj) {
        return obj && DataView.prototype.isPrototypeOf(obj);
      };

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ',' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          throw new Error('unsupported BodyInit type');
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'omit';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    self.Headers = Headers;
    self.Request = Request;
    self.Response = Response;

    self.fetch = function (input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);
        var xhr = new XMLHttpRequest();

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });
        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    };

    self.fetch.polyfill = true;
  })(typeof self !== 'undefined' ? self : this);
},126,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var Blob = _$$_REQUIRE(_dependencyMap[6]);

  var EventTarget = _$$_REQUIRE(_dependencyMap[7]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[8]);

  var BlobManager = _$$_REQUIRE(_dependencyMap[9]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[10]);

  var Platform = _$$_REQUIRE(_dependencyMap[11]);

  var WebSocketEvent = _$$_REQUIRE(_dependencyMap[12]);

  var base64 = _$$_REQUIRE(_dependencyMap[13]);

  var binaryToBase64 = _$$_REQUIRE(_dependencyMap[14]);

  var invariant = _$$_REQUIRE(_dependencyMap[15]);

  var WebSocketModule = NativeModules.WebSocketModule;
  var CONNECTING = 0;
  var OPEN = 1;
  var CLOSING = 2;
  var CLOSED = 3;
  var CLOSE_NORMAL = 1000;
  var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];
  var nextWebSocketId = 0;

  var WebSocket = function (_EventTarget) {
    _inherits(WebSocket, _EventTarget);

    function WebSocket(url, protocols, options) {
      var _this;

      _classCallCheck(this, WebSocket);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(WebSocket).call(this));
      _this.CONNECTING = CONNECTING;
      _this.OPEN = OPEN;
      _this.CLOSING = CLOSING;
      _this.CLOSED = CLOSED;
      _this.readyState = CONNECTING;

      if (typeof protocols === 'string') {
        protocols = [protocols];
      }

      var _ref = options || {},
          _ref$headers = _ref.headers,
          headers = _ref$headers === undefined ? {} : _ref$headers,
          unrecognized = _objectWithoutProperties(_ref, ["headers"]);

      if (unrecognized && typeof unrecognized.origin === 'string') {
        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');
        headers.origin = unrecognized.origin;
        delete unrecognized.origin;
      }

      if (Object.keys(unrecognized).length > 0) {
        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');
      }

      if (!Array.isArray(protocols)) {
        protocols = null;
      }

      if (!WebSocket.isAvailable) {
        throw new Error("Cannot initialize WebSocket module. Native module WebSocketModule is missing.");
      }

      _this._eventEmitter = new NativeEventEmitter(WebSocketModule);
      _this._socketId = nextWebSocketId++;

      _this._registerEvents();

      WebSocketModule.connect(url, protocols, {
        headers: headers
      }, _this._socketId);
      return _this;
    }

    _createClass(WebSocket, [{
      key: "close",
      value: function close(code, reason) {
        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
          return;
        }

        this.readyState = this.CLOSING;

        this._close(code, reason);
      }
    }, {
      key: "send",
      value: function send(data) {
        if (this.readyState === this.CONNECTING) {
          throw new Error('INVALID_STATE_ERR');
        }

        if (data instanceof Blob) {
          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');
          BlobManager.sendOverSocket(data, this._socketId);
          return;
        }

        if (typeof data === 'string') {
          WebSocketModule.send(data, this._socketId);
          return;
        }

        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
          WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);
          return;
        }

        throw new Error('Unsupported data type');
      }
    }, {
      key: "ping",
      value: function ping() {
        if (this.readyState === this.CONNECTING) {
          throw new Error('INVALID_STATE_ERR');
        }

        WebSocketModule.ping(this._socketId);
      }
    }, {
      key: "_close",
      value: function _close(code, reason) {
        {
          var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
          var closeReason = typeof reason === 'string' ? reason : '';
          WebSocketModule.close(statusCode, closeReason, this._socketId);
        }

        if (BlobManager.isAvailable && this._binaryType === 'blob') {
          BlobManager.removeWebSocketHandler(this._socketId);
        }
      }
    }, {
      key: "_unregisterEvents",
      value: function _unregisterEvents() {
        this._subscriptions.forEach(function (e) {
          return e.remove();
        });

        this._subscriptions = [];
      }
    }, {
      key: "_registerEvents",
      value: function _registerEvents() {
        var _this2 = this;

        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }

          var data = ev.data;

          switch (ev.type) {
            case 'binary':
              data = base64.toByteArray(ev.data).buffer;
              break;

            case 'blob':
              data = BlobManager.createFromOptions(ev.data);
              break;
          }

          _this2.dispatchEvent(new WebSocketEvent('message', {
            data: data
          }));
        }), this._eventEmitter.addListener('websocketOpen', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }

          _this2.readyState = _this2.OPEN;

          _this2.dispatchEvent(new WebSocketEvent('open'));
        }), this._eventEmitter.addListener('websocketClosed', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }

          _this2.readyState = _this2.CLOSED;

          _this2.dispatchEvent(new WebSocketEvent('close', {
            code: ev.code,
            reason: ev.reason
          }));

          _this2._unregisterEvents();

          _this2.close();
        }), this._eventEmitter.addListener('websocketFailed', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }

          _this2.readyState = _this2.CLOSED;

          _this2.dispatchEvent(new WebSocketEvent('error', {
            message: ev.message
          }));

          _this2.dispatchEvent(new WebSocketEvent('close', {
            message: ev.message
          }));

          _this2._unregisterEvents();

          _this2.close();
        })];
      }
    }, {
      key: "binaryType",
      get: function get() {
        return this._binaryType;
      },
      set: function set(binaryType) {
        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {
          throw new Error("binaryType must be either 'blob' or 'arraybuffer'");
        }

        if (this._binaryType === 'blob' || binaryType === 'blob') {
          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');

          if (binaryType === 'blob') {
            BlobManager.addWebSocketHandler(this._socketId);
          } else {
            BlobManager.removeWebSocketHandler(this._socketId);
          }
        }

        this._binaryType = binaryType;
      }
    }]);

    return WebSocket;
  }(EventTarget.apply(undefined, WEBSOCKET_EVENTS));

  WebSocket.CONNECTING = CONNECTING;
  WebSocket.OPEN = OPEN;
  WebSocket.CLOSING = CLOSING;
  WebSocket.CLOSED = CLOSED;
  WebSocket.isAvailable = !!WebSocketModule;
  module.exports = WebSocket;
},127,[9,22,23,30,33,36,121,111,117,122,8,43,128,120,119,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var WebSocketEvent = function WebSocketEvent(type, eventInitDict) {
    _classCallCheck(this, WebSocketEvent);

    this.type = type.toString();

    _extends(this, eventInitDict);
  };

  module.exports = WebSocketEvent;
},128,[11,22]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var Blob = _$$_REQUIRE(_dependencyMap[5]);

  var invariant = _$$_REQUIRE(_dependencyMap[6]);

  var File = function (_Blob) {
    _inherits(File, _Blob);

    function File(parts, name, options) {
      var _this;

      _classCallCheck(this, File);

      invariant(parts != null && name != null, 'Failed to construct `File`: Must pass both `parts` and `name` arguments.');
      _this = _possibleConstructorReturn(this, _getPrototypeOf(File).call(this, parts, options));
      _this.data.name = name;
      return _this;
    }

    _createClass(File, [{
      key: "name",
      get: function get() {
        invariant(this.data.name != null, 'Files must have a name set.');
        return this.data.name;
      }
    }, {
      key: "lastModified",
      get: function get() {
        return this.data.lastModified || 0;
      }
    }]);

    return File;
  }(Blob);

  module.exports = File;
},129,[22,23,30,33,36,121,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var EventTarget = _$$_REQUIRE(_dependencyMap[5]);

  var Blob = _$$_REQUIRE(_dependencyMap[6]);

  var _require = _$$_REQUIRE(_dependencyMap[7]),
      FileReaderModule = _require.FileReaderModule;

  var READER_EVENTS = ['abort', 'error', 'load', 'loadstart', 'loadend', 'progress'];
  var EMPTY = 0;
  var LOADING = 1;
  var DONE = 2;

  var FileReader = function (_EventTarget) {
    _inherits(FileReader, _EventTarget);

    function FileReader() {
      var _this;

      _classCallCheck(this, FileReader);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(FileReader).call(this));
      _this.EMPTY = EMPTY;
      _this.LOADING = LOADING;
      _this.DONE = DONE;
      _this._aborted = false;
      _this._subscriptions = [];

      _this._reset();

      return _this;
    }

    _createClass(FileReader, [{
      key: "_reset",
      value: function _reset() {
        this._readyState = EMPTY;
        this._error = null;
        this._result = null;
      }
    }, {
      key: "_clearSubscriptions",
      value: function _clearSubscriptions() {
        this._subscriptions.forEach(function (sub) {
          return sub.remove();
        });

        this._subscriptions = [];
      }
    }, {
      key: "_setReadyState",
      value: function _setReadyState(newState) {
        this._readyState = newState;
        this.dispatchEvent({
          type: 'readystatechange'
        });

        if (newState === DONE) {
          if (this._aborted) {
            this.dispatchEvent({
              type: 'abort'
            });
          } else if (this._error) {
            this.dispatchEvent({
              type: 'error'
            });
          } else {
            this.dispatchEvent({
              type: 'load'
            });
          }

          this.dispatchEvent({
            type: 'loadend'
          });
        }
      }
    }, {
      key: "readAsArrayBuffer",
      value: function readAsArrayBuffer() {
        throw new Error('FileReader.readAsArrayBuffer is not implemented');
      }
    }, {
      key: "readAsDataURL",
      value: function readAsDataURL(blob) {
        var _this2 = this;

        this._aborted = false;
        FileReaderModule.readAsDataURL(blob.data).then(function (text) {
          if (_this2._aborted) {
            return;
          }

          _this2._result = text;

          _this2._setReadyState(DONE);
        }, function (error) {
          if (_this2._aborted) {
            return;
          }

          _this2._error = error;

          _this2._setReadyState(DONE);
        });
      }
    }, {
      key: "readAsText",
      value: function readAsText(blob) {
        var _this3 = this;

        var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'UTF-8';
        this._aborted = false;
        FileReaderModule.readAsText(blob.data, encoding).then(function (text) {
          if (_this3._aborted) {
            return;
          }

          _this3._result = text;

          _this3._setReadyState(DONE);
        }, function (error) {
          if (_this3._aborted) {
            return;
          }

          _this3._error = error;

          _this3._setReadyState(DONE);
        });
      }
    }, {
      key: "abort",
      value: function abort() {
        this._aborted = true;

        if (this._readyState !== EMPTY && this._readyState !== DONE) {
          this._reset();

          this._setReadyState(DONE);
        }

        this._reset();
      }
    }, {
      key: "readyState",
      get: function get() {
        return this._readyState;
      }
    }, {
      key: "error",
      get: function get() {
        return this._error;
      }
    }, {
      key: "result",
      get: function get() {
        return this._result;
      }
    }]);

    return FileReader;
  }(EventTarget.apply(undefined, READER_EVENTS));

  FileReader.EMPTY = EMPTY;
  FileReader.LOADING = LOADING;
  FileReader.DONE = DONE;
  module.exports = FileReader;
},130,[22,23,30,33,36,111,121,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.URL = exports.URLSearchParams = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Blob = _$$_REQUIRE(_dependencyMap[3]);

  var _require = _$$_REQUIRE(_dependencyMap[4]),
      BlobModule = _require.BlobModule;

  var BLOB_URL_PREFIX = null;

  if (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {
    BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';

    if (typeof BlobModule.BLOB_URI_HOST === 'string') {
      BLOB_URL_PREFIX += "//" + BlobModule.BLOB_URI_HOST + "/";
    }
  }

  var _Symbol$iterator = typeof Symbol === "function" ? Symbol.iterator : "@@iterator";

  var URLSearchParams = function () {
    function URLSearchParams(params) {
      var _this = this;

      (0, _classCallCheck2.default)(this, URLSearchParams);
      this._searchParams = [];

      if (typeof params === 'object') {
        Object.keys(params).forEach(function (key) {
          return _this.append(key, params[key]);
        });
      }
    }

    (0, _createClass2.default)(URLSearchParams, [{
      key: "append",
      value: function append(key, value) {
        this._searchParams.push([key, value]);
      }
    }, {
      key: "delete",
      value: function _delete(name) {
        throw new Error('not implemented');
      }
    }, {
      key: "get",
      value: function get(name) {
        throw new Error('not implemented');
      }
    }, {
      key: "getAll",
      value: function getAll(name) {
        throw new Error('not implemented');
      }
    }, {
      key: "has",
      value: function has(name) {
        throw new Error('not implemented');
      }
    }, {
      key: "set",
      value: function set(name, value) {
        throw new Error('not implemented');
      }
    }, {
      key: "sort",
      value: function sort() {
        throw new Error('not implemented');
      }
    }, {
      key: _Symbol$iterator,
      value: function value() {
        return this._searchParams[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();
      }
    }, {
      key: "toString",
      value: function toString() {
        if (this._searchParams.length === 0) {
          return '';
        }

        var last = this._searchParams.length - 1;
        return this._searchParams.reduce(function (acc, curr, index) {
          return acc + curr.join('=') + (index === last ? '' : '&');
        }, '');
      }
    }]);
    return URLSearchParams;
  }();

  exports.URLSearchParams = URLSearchParams;

  function validateBaseUrl(url) {
    return /^(?:(?:(?:https?|ftp):)?\/\/)(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(url);
  }

  var URL = function () {
    (0, _createClass2.default)(URL, null, [{
      key: "createObjectURL",
      value: function createObjectURL(blob) {
        if (BLOB_URL_PREFIX === null) {
          throw new Error('Cannot create URL for blob!');
        }

        return "" + BLOB_URL_PREFIX + blob.data.blobId + "?offset=" + blob.data.offset + "&size=" + blob.size;
      }
    }, {
      key: "revokeObjectURL",
      value: function revokeObjectURL(url) {}
    }]);

    function URL(url, base) {
      (0, _classCallCheck2.default)(this, URL);
      this._searchParamsInstance = null;
      var baseUrl = null;

      if (base) {
        if (typeof base === 'string') {
          baseUrl = base;

          if (!validateBaseUrl(baseUrl)) {
            throw new TypeError("Invalid base URL: " + baseUrl);
          }
        } else if (typeof base === 'object') {
          baseUrl = base.toString();
        }

        if (baseUrl.endsWith('/') && url.startsWith('/')) {
          baseUrl = baseUrl.slice(0, baseUrl.length - 1);
        }

        if (baseUrl.endsWith(url)) {
          url = '';
        }

        this._url = "" + baseUrl + url;
      } else {
        this._url = url;

        if (!this._url.endsWith('/')) {
          this._url += '/';
        }
      }
    }

    (0, _createClass2.default)(URL, [{
      key: "toJSON",
      value: function toJSON() {
        return this.toString();
      }
    }, {
      key: "toString",
      value: function toString() {
        if (this._searchParamsInstance === null) {
          return this._url;
        }

        var separator = this._url.indexOf('?') > -1 ? '&' : '?';
        return this._url + separator + this._searchParamsInstance.toString();
      }
    }, {
      key: "hash",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "host",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "hostname",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "href",
      get: function get() {
        return this.toString();
      }
    }, {
      key: "origin",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "password",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "pathname",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "port",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "protocol",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "search",
      get: function get() {
        throw new Error('not implemented');
      }
    }, {
      key: "searchParams",
      get: function get() {
        if (this._searchParamsInstance == null) {
          this._searchParamsInstance = new URLSearchParams();
        }

        return this._searchParamsInstance;
      }
    }, {
      key: "username",
      get: function get() {
        throw new Error('not implemented');
      }
    }]);
    return URL;
  }();

  exports.URL = URL;
},131,[1,22,23,121,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},132,[133]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var RCTAlertManager = NativeModules.AlertManager;

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var Alert = function () {
    function Alert() {
      _classCallCheck(this, Alert);
    }

    _createClass(Alert, null, [{
      key: "alert",
      value: function alert(title, message, buttons, options) {
        {
          AlertAndroid.alert(title, message, buttons, options);
        }
      }
    }, {
      key: "prompt",
      value: function prompt(title, message, callbackOrButtons) {
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
        var defaultValue = arguments.length > 4 ? arguments[4] : undefined;
        var keyboardType = arguments.length > 5 ? arguments[5] : undefined;
      }
    }]);

    return Alert;
  }();

  var AlertIOS = function () {
    function AlertIOS() {
      _classCallCheck(this, AlertIOS);
    }

    _createClass(AlertIOS, null, [{
      key: "alert",
      value: function alert(title, message, callbackOrButtons) {
        this.prompt(title, message, callbackOrButtons, 'default');
      }
    }, {
      key: "prompt",
      value: function prompt(title, message, callbackOrButtons) {
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
        var defaultValue = arguments.length > 4 ? arguments[4] : undefined;
        var keyboardType = arguments.length > 5 ? arguments[5] : undefined;

        if (typeof type === 'function') {
          console.warn("You passed a callback function as the \"type\" argument to Alert.prompt(). React Native is assuming  you want to use the deprecated Alert.prompt(title, defaultValue, buttons, callback) signature. The current signature is Alert.prompt(title, message, callbackOrButtons, type, defaultValue, keyboardType) and the old syntax will be removed in a future version.");
          var callback = type;
          RCTAlertManager.alertWithArgs({
            title: title || '',
            type: 'plain-text',
            defaultValue: message
          }, function (id, value) {
            callback(value);
          });
          return;
        }

        var callbacks = [];
        var buttons = [];
        var cancelButtonKey;
        var destructiveButtonKey;

        if (typeof callbackOrButtons === 'function') {
          callbacks = [callbackOrButtons];
        } else if (Array.isArray(callbackOrButtons)) {
          callbackOrButtons.forEach(function (btn, index) {
            callbacks[index] = btn.onPress;

            if (btn.style === 'cancel') {
              cancelButtonKey = String(index);
            } else if (btn.style === 'destructive') {
              destructiveButtonKey = String(index);
            }

            if (btn.text || index < (callbackOrButtons || []).length - 1) {
              var btnDef = {};
              btnDef[index] = btn.text || '';
              buttons.push(btnDef);
            }
          });
        }

        RCTAlertManager.alertWithArgs({
          title: title || '',
          message: message || undefined,
          buttons: buttons,
          type: type || undefined,
          defaultValue: defaultValue,
          cancelButtonKey: cancelButtonKey,
          destructiveButtonKey: destructiveButtonKey,
          keyboardType: keyboardType
        }, function (id, value) {
          var cb = callbacks[id];
          cb && cb(value);
        });
      }
    }]);

    return AlertIOS;
  }();

  var AlertAndroid = function () {
    function AlertAndroid() {
      _classCallCheck(this, AlertAndroid);
    }

    _createClass(AlertAndroid, null, [{
      key: "alert",
      value: function alert(title, message, buttons, options) {
        var config = {
          title: title || '',
          message: message || ''
        };

        if (options) {
          config = _objectSpread({}, config, {
            cancelable: options.cancelable
          });
        }

        var validButtons = buttons ? buttons.slice(0, 3) : [{
          text: 'OK'
        }];
        var buttonPositive = validButtons.pop();
        var buttonNegative = validButtons.pop();
        var buttonNeutral = validButtons.pop();

        if (buttonNeutral) {
          config = _objectSpread({}, config, {
            buttonNeutral: buttonNeutral.text || ''
          });
        }

        if (buttonNegative) {
          config = _objectSpread({}, config, {
            buttonNegative: buttonNegative.text || ''
          });
        }

        if (buttonPositive) {
          config = _objectSpread({}, config, {
            buttonPositive: buttonPositive.text || ''
          });
        }

        NativeModules.DialogManagerAndroid.showAlert(config, function (errorMessage) {
          return console.warn(errorMessage);
        }, function (action, buttonKey) {
          if (action === NativeModules.DialogManagerAndroid.buttonClicked) {
            if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {
              buttonNeutral.onPress && buttonNeutral.onPress();
            } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonNegative) {
              buttonNegative.onPress && buttonNegative.onPress();
            } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonPositive) {
              buttonPositive.onPress && buttonPositive.onPress();
            }
          } else if (action === NativeModules.DialogManagerAndroid.dismissed) {
            options && options.onDismiss && options.onDismiss();
          }
        });
      }
    }]);

    return AlertAndroid;
  }();

  module.exports = Alert;
},133,[46,22,23,8,43]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
  polyfillObjectProperty(navigator, 'geolocation', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},134,[83,135]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _regeneratorRuntime = _$$_REQUIRE(_dependencyMap[0]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[1]);

  var RCTLocationObserver = _$$_REQUIRE(_dependencyMap[2]).LocationObserver;

  var invariant = _$$_REQUIRE(_dependencyMap[3]);

  var logError = _$$_REQUIRE(_dependencyMap[4]);

  var warning = _$$_REQUIRE(_dependencyMap[5]);

  var LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);

  var Platform = _$$_REQUIRE(_dependencyMap[6]);

  var PermissionsAndroid = _$$_REQUIRE(_dependencyMap[7]);

  var subscriptions = [];
  var updatesEnabled = false;
  var Geolocation = {
    setRNConfiguration: function setRNConfiguration(config) {
      if (RCTLocationObserver.setConfiguration) {
        RCTLocationObserver.setConfiguration(config);
      }
    },
    requestAuthorization: function requestAuthorization() {
      RCTLocationObserver.requestAuthorization();
    },
    getCurrentPosition: function getCurrentPosition(geo_success, geo_error, geo_options) {
      var hasPermission, status;
      return _regeneratorRuntime.async(function getCurrentPosition$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              invariant(typeof geo_success === 'function', 'Must provide a valid geo_success callback.');
              hasPermission = true;

              if (!(Platform.Version >= 23)) {
                _context.next = 11;
                break;
              }

              _context.next = 5;
              return _regeneratorRuntime.awrap(PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

            case 5:
              hasPermission = _context.sent;

              if (hasPermission) {
                _context.next = 11;
                break;
              }

              _context.next = 9;
              return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

            case 9:
              status = _context.sent;
              hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;

            case 11:
              if (hasPermission) {
                RCTLocationObserver.getCurrentPosition(geo_options || {}, geo_success, geo_error || logError);
              }

            case 12:
            case "end":
              return _context.stop();
          }
        }
      });
    },
    watchPosition: function watchPosition(success, error, options) {
      if (!updatesEnabled) {
        RCTLocationObserver.startObserving(options || {});
        updatesEnabled = true;
      }

      var watchID = subscriptions.length;
      subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange', success), error ? LocationEventEmitter.addListener('geolocationError', error) : null]);
      return watchID;
    },
    clearWatch: function clearWatch(watchID) {
      var sub = subscriptions[watchID];

      if (!sub) {
        return;
      }

      sub[0].remove();
      var sub1 = sub[1];
      sub1 && sub1.remove();
      subscriptions[watchID] = undefined;
      var noWatchers = true;

      for (var ii = 0; ii < subscriptions.length; ii++) {
        if (subscriptions[ii]) {
          noWatchers = false;
        }
      }

      if (noWatchers) {
        Geolocation.stopObserving();
      }
    },
    stopObserving: function stopObserving() {
      if (updatesEnabled) {
        RCTLocationObserver.stopObserving();
        updatesEnabled = false;

        for (var ii = 0; ii < subscriptions.length; ii++) {
          var sub = subscriptions[ii];

          if (sub) {
            warning(false, 'Called stopObserving with existing subscriptions.');
            sub[0].remove();
            var sub1 = sub[1];
            sub1 && sub1.remove();
          }
        }

        subscriptions = [];
      }
    }
  };
  module.exports = Geolocation;
},135,[136,117,8,3,138,5,43,139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},136,[137]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return Promise.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return Promise.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new Promise(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList) {
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var logError = function logError() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (args.length === 1 && args[0] instanceof Error) {
      var err = args[0];
      console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
    } else {
      console.error.apply(console, args);
    }
  };

  module.exports = logError;
},138,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _regeneratorRuntime = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var PermissionsAndroid = function () {
    function PermissionsAndroid() {
      _classCallCheck(this, PermissionsAndroid);

      this.PERMISSIONS = {
        READ_CALENDAR: 'android.permission.READ_CALENDAR',
        WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
        CAMERA: 'android.permission.CAMERA',
        READ_CONTACTS: 'android.permission.READ_CONTACTS',
        WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
        GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
        ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
        ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
        RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
        READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
        CALL_PHONE: 'android.permission.CALL_PHONE',
        READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
        WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
        ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
        USE_SIP: 'android.permission.USE_SIP',
        PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
        BODY_SENSORS: 'android.permission.BODY_SENSORS',
        SEND_SMS: 'android.permission.SEND_SMS',
        RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
        READ_SMS: 'android.permission.READ_SMS',
        RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
        RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
        READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
        WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'
      };
      this.RESULTS = {
        GRANTED: 'granted',
        DENIED: 'denied',
        NEVER_ASK_AGAIN: 'never_ask_again'
      };
    }

    _createClass(PermissionsAndroid, [{
      key: "checkPermission",
      value: function checkPermission(permission) {
        console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
        return NativeModules.PermissionsAndroid.checkPermission(permission);
      }
    }, {
      key: "check",
      value: function check(permission) {
        return NativeModules.PermissionsAndroid.checkPermission(permission);
      }
    }, {
      key: "requestPermission",
      value: function requestPermission(permission, rationale) {
        var response;
        return _regeneratorRuntime.async(function requestPermission$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
                _context.next = 3;
                return _regeneratorRuntime.awrap(this.request(permission, rationale));

              case 3:
                response = _context.sent;
                return _context.abrupt("return", response === this.RESULTS.GRANTED);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "request",
      value: function request(permission, rationale) {
        var shouldShowRationale;
        return _regeneratorRuntime.async(function request$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!rationale) {
                  _context2.next = 6;
                  break;
                }

                _context2.next = 3;
                return _regeneratorRuntime.awrap(NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(permission));

              case 3:
                shouldShowRationale = _context2.sent;

                if (!shouldShowRationale) {
                  _context2.next = 6;
                  break;
                }

                return _context2.abrupt("return", new Promise(function (resolve, reject) {
                  NativeModules.DialogManagerAndroid.showAlert(rationale, function () {
                    return reject(new Error('Error showing rationale'));
                  }, function () {
                    return resolve(NativeModules.PermissionsAndroid.requestPermission(permission));
                  });
                }));

              case 6:
                return _context2.abrupt("return", NativeModules.PermissionsAndroid.requestPermission(permission));

              case 7:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }, {
      key: "requestMultiple",
      value: function requestMultiple(permissions) {
        return NativeModules.PermissionsAndroid.requestMultiplePermissions(permissions);
      }
    }]);

    return PermissionsAndroid;
  }();

  PermissionsAndroid = new PermissionsAndroid();
  module.exports = PermissionsAndroid;
},139,[136,22,23,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

  BatchedBridge.registerLazyCallableModule('Systrace', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  BatchedBridge.registerLazyCallableModule('JSTimers', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
    return _$$_REQUIRE(_dependencyMap[3]);
  });
  BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  BatchedBridge.registerLazyCallableModule('RCTLog', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  BatchedBridge.registerLazyCallableModule('PerformanceLogger', function () {
    return _$$_REQUIRE(_dependencyMap[8]);
  });
  BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
    return _$$_REQUIRE(_dependencyMap[9]);
  });
},140,[16,25,105,141,142,143,29,144,145,147]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
        console.log('HeapCapture.captureHeap succeeded: ' + path);
      } catch (e) {
        console.log('HeapCapture.captureHeap error: ' + e.toString());
        error = e.toString();
      }

      _$$_REQUIRE(_dependencyMap[0]).JSCHeapCapture.captureComplete(path, error);
    }
  };
  module.exports = HeapCapture;
},141,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SamplingProfiler = {
    poke: function poke(token) {
      var error = null;
      var result = null;

      try {
        result = global.pokeSamplingProfiler();

        if (result === null) {
          console.log('The JSC Sampling Profiler has started');
        } else {
          console.log('The JSC Sampling Profiler has stopped');
        }
      } catch (e) {
        console.log('Error occurred when restarting Sampling Profiler: ' + e.toString());
        error = e.toString();
      }

      var _require = _$$_REQUIRE(_dependencyMap[0]),
          JSCSamplingProfiler = _require.JSCSamplingProfiler;

      JSCSamplingProfiler.operationComplete(token, result, error);
    }
  };
  module.exports = SamplingProfiler;
},142,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var levelsMap = {
    log: 'log',
    info: 'info',
    warn: 'warn',
    error: 'error',
    fatal: 'error'
  };
  var warningHandler = null;
  var RCTLog = {
    logIfNoNativeHook: function logIfNoNativeHook(level) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (typeof global.nativeLoggingHook === 'undefined') {
        RCTLog.logToConsole.apply(RCTLog, [level].concat(args));
      } else {
        if (warningHandler && level === 'warn') {
          warningHandler.apply(undefined, args);
        }
      }
    },
    logToConsole: function logToConsole(level) {
      var _console;

      var logFn = levelsMap[level];
      invariant(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap).toString());

      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      (_console = console)[logFn].apply(_console, args);
    },
    setWarningHandler: function setWarningHandler(handler) {
      warningHandler = handler;
    }
  };
  module.exports = RCTLog;
},143,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[0]);

  var RCTNativeAppEventEmitter = RCTDeviceEventEmitter;
  module.exports = RCTNativeAppEventEmitter;
},144,[29]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var timespans = {};
  var extras = {};
  var points = {};
  var cookies = {};
  var PRINT_TO_CONSOLE = false;
  var PerformanceLogger = {
    addTimespan: function addTimespan(key, lengthInMs, description) {
      if (timespans[key]) {
        return;
      }

      timespans[key] = {
        description: description,
        totalTime: lengthInMs
      };
    },
    startTimespan: function startTimespan(key, description) {
      if (timespans[key]) {
        return;
      }

      timespans[key] = {
        description: description,
        startTime: performanceNow()
      };
      cookies[key] = Systrace.beginAsyncEvent(key);
    },
    stopTimespan: function stopTimespan(key) {
      var timespan = timespans[key];

      if (!timespan || !timespan.startTime) {
        return;
      }

      if (timespan.endTime) {
        return;
      }

      timespan.endTime = performanceNow();
      timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
      Systrace.endAsyncEvent(key, cookies[key]);
      delete cookies[key];
    },
    clear: function clear() {
      timespans = {};
      extras = {};
      points = {};
    },
    clearCompleted: function clearCompleted() {
      for (var _key in timespans) {
        if (timespans[_key].totalTime) {
          delete timespans[_key];
        }
      }

      extras = {};
      points = {};
    },
    clearExceptTimespans: function clearExceptTimespans(keys) {
      timespans = Object.keys(timespans).reduce(function (previous, key) {
        if (keys.indexOf(key) !== -1) {
          previous[key] = timespans[key];
        }

        return previous;
      }, {});
      extras = {};
      points = {};
    },
    currentTimestamp: function currentTimestamp() {
      return performanceNow();
    },
    getTimespans: function getTimespans() {
      return timespans;
    },
    hasTimespan: function hasTimespan(key) {
      return !!timespans[key];
    },
    logTimespans: function logTimespans() {
      for (var _key2 in timespans) {
        if (timespans[_key2].totalTime) {
          infoLog(_key2 + ': ' + timespans[_key2].totalTime + 'ms');
        }
      }
    },
    addTimespans: function addTimespans(newTimespans, labels) {
      for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
        var label = labels[ii / 2];
        PerformanceLogger.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
      }
    },
    setExtra: function setExtra(key, value) {
      if (extras[key]) {
        return;
      }

      extras[key] = value;
    },
    getExtras: function getExtras() {
      return extras;
    },
    logExtras: function logExtras() {
      infoLog(extras);
    },
    markPoint: function markPoint(key, timestamp) {
      var _timestamp;

      if (points[key]) {
        return;
      }

      points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
    },
    getPoints: function getPoints() {
      return points;
    },
    logPoints: function logPoints() {
      for (var _key3 in points) {
        infoLog(_key3 + ': ' + points[_key3] + 'ms');
      }
    }
  };
  module.exports = PerformanceLogger;
},145,[25,146,106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function infoLog() {
    var _console;

    return (_console = console).log.apply(_console, arguments);
  }

  module.exports = infoLog;
},146,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var JSDevSupport = _$$_REQUIRE(_dependencyMap[0]).JSDevSupport;

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var JSDevSupportModule = {
    getJSHierarchy: function getJSHierarchy(tag) {
      try {
        var computeComponentStackForErrorReporting = ReactNative.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.computeComponentStackForErrorReporting;
        var componentStack = computeComponentStackForErrorReporting(tag);

        if (!componentStack) {
          JSDevSupport.onFailure(JSDevSupport.ERROR_CODE_VIEW_NOT_FOUND, "Component stack doesn't exist for tag " + tag);
        } else {
          JSDevSupport.onSuccess(componentStack);
        }
      } catch (e) {
        JSDevSupport.onFailure(JSDevSupport.ERROR_CODE_EXCEPTION, e.message);
      }
    }
  };
  module.exports = JSDevSupportModule;
},147,[8,78]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  global.__fetchSegment = function (segmentId, options, callback) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        SegmentFetcher = _require.SegmentFetcher;

    if (!SegmentFetcher) {
      throw new Error("SegmentFetcher is missing. Please ensure that it is included as a NativeModule.");
    }

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  };
},148,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  var eventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  exports.eventTypes = eventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          eventTypes[_topLevelType] = customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          eventTypes[_topLevelType2] = customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},149,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

  var RCTEventEmitter = {
    register: function register(eventEmitter) {
      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
    }
  };
  module.exports = RCTEventEmitter;
},150,[16]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepDiffer = function deepDiffer(one, two) {
    var maxDepth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;

    if (maxDepth === 0) {
      return true;
    }

    if (one === two) {
      return false;
    }

    if (typeof one === 'function' && typeof two === 'function') {
      return false;
    }

    if (typeof one !== 'object' || one === null) {
      return one !== two;
    }

    if (typeof two !== 'object' || two === null) {
      return true;
    }

    if (one.constructor !== two.constructor) {
      return true;
    }

    if (Array.isArray(one)) {
      var len = one.length;

      if (two.length !== len) {
        return true;
      }

      for (var ii = 0; ii < len; ii++) {
        if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {
          return true;
        }
      }
    } else {
      for (var key in one) {
        if (deepDiffer(one[key], two[key], maxDepth - 1)) {
          return true;
        }
      }

      for (var twoKey in two) {
        if (one[twoKey] === undefined && two[twoKey] !== undefined) {
          return true;
        }
      }
    }

    return false;
  };

  module.exports = deepDiffer;
},151,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var UIManager = _$$_REQUIRE(_dependencyMap[1]);

  var currentlyFocusedID = null;
  var inputs = new Set();

  function currentlyFocusedField() {
    return currentlyFocusedID;
  }

  function focusTextInput(textFieldID) {
    if (currentlyFocusedID !== textFieldID && textFieldID !== null) {
      currentlyFocusedID = textFieldID;
      {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.getViewManagerConfig('AndroidTextInput').Commands.focusTextInput, null);
      }
    }
  }

  function blurTextInput(textFieldID) {
    if (currentlyFocusedID === textFieldID && textFieldID !== null) {
      currentlyFocusedID = null;
      {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.getViewManagerConfig('AndroidTextInput').Commands.blurTextInput, null);
      }
    }
  }

  function registerInput(textFieldID) {
    inputs.add(textFieldID);
  }

  function unregisterInput(textFieldID) {
    inputs.delete(textFieldID);
  }

  function isTextInput(textFieldID) {
    return inputs.has(textFieldID);
  }

  module.exports = {
    currentlyFocusedField: currentlyFocusedField,
    focusTextInput: focusTextInput,
    blurTextInput: blurTextInput,
    registerInput: registerInput,
    unregisterInput: unregisterInput,
    isTextInput: isTextInput
  };
},152,[43,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},153,[154]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.13.6
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var d = null,
      e = false,
      g = 3,
      k = -1,
      l = -1,
      m = false,
      n = false;

  function p() {
    if (!m) {
      var a = d.expirationTime;
      n ? q() : n = true;

      _r(t, a);
    }
  }

  function u() {
    var a = d,
        b = d.next;
    if (d === b) d = null;else {
      var c = d.previous;
      d = c.next = b;
      b.previous = c;
    }
    a.next = a.previous = null;
    c = a.callback;
    b = a.expirationTime;
    a = a.priorityLevel;
    var f = g,
        Q = l;
    g = a;
    l = b;

    try {
      var h = c();
    } finally {
      g = f, l = Q;
    }

    if ("function" === typeof h) if (h = {
      callback: h,
      priorityLevel: a,
      expirationTime: b,
      next: null,
      previous: null
    }, null === d) d = h.next = h.previous = h;else {
      c = null;
      a = d;

      do {
        if (a.expirationTime >= b) {
          c = a;
          break;
        }

        a = a.next;
      } while (a !== d);

      null === c ? c = d : c === d && (d = h, p());
      b = c.previous;
      b.next = c.previous = h;
      h.next = c;
      h.previous = b;
    }
  }

  function v() {
    if (-1 === k && null !== d && 1 === d.priorityLevel) {
      m = true;

      try {
        do {
          u();
        } while (null !== d && 1 === d.priorityLevel);
      } finally {
        m = false, null !== d ? p() : n = false;
      }
    }
  }

  function t(a) {
    m = true;
    var b = e;
    e = a;

    try {
      if (a) for (; null !== d;) {
        var c = exports.unstable_now();

        if (d.expirationTime <= c) {
          do {
            u();
          } while (null !== d && d.expirationTime <= c);
        } else break;
      } else if (null !== d) {
        do {
          u();
        } while (null !== d && !w());
      }
    } finally {
      m = false, e = b, null !== d ? p() : n = false, v();
    }
  }

  var x = Date,
      y = "function" === typeof setTimeout ? setTimeout : undefined,
      z = "function" === typeof clearTimeout ? clearTimeout : undefined,
      A = "function" === typeof requestAnimationFrame ? requestAnimationFrame : undefined,
      B = "function" === typeof cancelAnimationFrame ? cancelAnimationFrame : undefined,
      C,
      D;

  function E(a) {
    C = A(function (b) {
      z(D);
      a(b);
    });
    D = y(function () {
      B(C);
      a(exports.unstable_now());
    }, 100);
  }

  if ("object" === typeof performance && "function" === typeof performance.now) {
    var F = performance;

    exports.unstable_now = function () {
      return F.now();
    };
  } else exports.unstable_now = function () {
    return x.now();
  };

  var _r,
      q,
      w,
      G = null;

  "undefined" !== typeof window ? G = window : "undefined" !== typeof global && (G = global);

  if (G && G._schedMock) {
    var H = G._schedMock;
    _r = H[0];
    q = H[1];
    w = H[2];
    exports.unstable_now = H[3];
  } else if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var I = null,
        J = function J(a) {
      if (null !== I) try {
        I(a);
      } finally {
        I = null;
      }
    };

    _r = function r(a) {
      null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, false));
    };

    q = function q() {
      I = null;
    };

    w = function w() {
      return false;
    };
  } else {
    "undefined" !== typeof console && ("function" !== typeof A && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"), "function" !== typeof B && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));
    var K = null,
        L = false,
        M = -1,
        N = false,
        O = false,
        P = 0,
        R = 33,
        S = 33;

    w = function w() {
      return P <= exports.unstable_now();
    };

    var T = new MessageChannel(),
        U = T.port2;

    T.port1.onmessage = function () {
      L = false;
      var a = K,
          b = M;
      K = null;
      M = -1;
      var c = exports.unstable_now(),
          f = false;
      if (0 >= P - c) if (-1 !== b && b <= c) f = true;else {
        N || (N = true, E(V));
        K = a;
        M = b;
        return;
      }

      if (null !== a) {
        O = true;

        try {
          a(f);
        } finally {
          O = false;
        }
      }
    };

    var V = function V(a) {
      if (null !== K) {
        E(V);
        var b = a - P + S;
        b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;
        P = a + S;
        L || (L = true, U.postMessage(undefined));
      } else N = false;
    };

    _r = function _r(a, b) {
      K = a;
      M = b;
      O || 0 > b ? U.postMessage(undefined) : N || (N = true, E(V));
    };

    q = function q() {
      K = null;
      L = false;
      M = -1;
    };
  }

  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = g,
        f = k;
    g = a;
    k = exports.unstable_now();

    try {
      return b();
    } finally {
      g = c, k = f, v();
    }
  };

  exports.unstable_next = function (a) {
    switch (g) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = g;
    }

    var c = g,
        f = k;
    g = b;
    k = exports.unstable_now();

    try {
      return a();
    } finally {
      g = c, k = f, v();
    }
  };

  exports.unstable_scheduleCallback = function (a, b) {
    var c = -1 !== k ? k : exports.unstable_now();
    if ("object" === typeof b && null !== b && "number" === typeof b.timeout) b = c + b.timeout;else switch (g) {
      case 1:
        b = c + -1;
        break;

      case 2:
        b = c + 250;
        break;

      case 5:
        b = c + 1073741823;
        break;

      case 4:
        b = c + 1E4;
        break;

      default:
        b = c + 5E3;
    }
    a = {
      callback: a,
      priorityLevel: g,
      expirationTime: b,
      next: null,
      previous: null
    };
    if (null === d) d = a.next = a.previous = a, p();else {
      c = null;
      var f = d;

      do {
        if (f.expirationTime > b) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== d);

      null === c ? c = d : c === d && (d = a, p());
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (b === a) d = null;else {
        a === d && (d = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = g;
    return function () {
      var c = g,
          f = k;
      g = b;
      k = exports.unstable_now();

      try {
        return a.apply(this, arguments);
      } finally {
        g = c, k = f, v();
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return g;
  };

  exports.unstable_shouldYield = function () {
    return !e && (null !== d && d.expirationTime < l || w());
  };

  exports.unstable_continueExecution = function () {
    null !== d && p();
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return d;
  };
},154,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createReactNativeComponentClass = _$$_REQUIRE(_dependencyMap[0]);

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[1]);

  var requireNativeComponent = function requireNativeComponent(uiViewClassName) {
    return createReactNativeComponentClass(uiViewClassName, function () {
      return getNativeComponentAttributes(uiViewClassName);
    });
  };

  module.exports = requireNativeComponent;
},155,[156,157]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      register = _require.register;

  var createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {
    return register(name, callback);
  };

  module.exports = createReactNativeComponentClass;
},156,[149]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[5]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var processColor = _$$_REQUIRE(_dependencyMap[7]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[8]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[9]);

  var invariant = _$$_REQUIRE(_dependencyMap[10]);

  var warning = _$$_REQUIRE(_dependencyMap[11]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    if (UIManager.ViewManagerNames || UIManager.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, UIManager.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, UIManager.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = getNativeComponentAttributes;
},157,[11,46,56,42,158,159,160,69,161,72,3,5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var dummyInsets = {
    top: undefined,
    left: undefined,
    right: undefined,
    bottom: undefined
  };

  var insetsDiffer = function insetsDiffer(one, two) {
    one = one || dummyInsets;
    two = two || dummyInsets;
    return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
  };

  module.exports = insetsDiffer;
},158,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var matricesDiffer = function matricesDiffer(one, two) {
    if (one === two) {
      return false;
    }

    return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
  };

  module.exports = matricesDiffer;
},159,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var dummyPoint = {
    x: undefined,
    y: undefined
  };

  var pointsDiffer = function pointsDiffer(one, two) {
    one = one || dummyPoint;
    two = two || dummyPoint;
    return one !== two && (one.x !== two.x || one.y !== two.y);
  };

  module.exports = pointsDiffer;
},160,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var AssetRegistry = _$$_REQUIRE(_dependencyMap[0]);

  var AssetSourceResolver = _$$_REQUIRE(_dependencyMap[1]);

  var _customSourceTransformer, _serverURL, _scriptURL;

  var _sourceCodeScriptURL;

  function getSourceCodeScriptURL() {
    if (_sourceCodeScriptURL) {
      return _sourceCodeScriptURL;
    }

    var sourceCode = global.nativeExtensions && global.nativeExtensions.SourceCode;

    if (!sourceCode) {
      var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

      sourceCode = NativeModules && NativeModules.SourceCode;
    }

    _sourceCodeScriptURL = sourceCode.scriptURL;
    return _sourceCodeScriptURL;
  }

  function getDevServerURL() {
    if (_serverURL === undefined) {
      var sourceCodeScriptURL = getSourceCodeScriptURL();
      var match = sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\/\/.*?\//);

      if (match) {
        _serverURL = match[0];
      } else {
        _serverURL = null;
      }
    }

    return _serverURL;
  }

  function _coerceLocalScriptURL(scriptURL) {
    if (scriptURL) {
      if (scriptURL.startsWith('assets://')) {
        return null;
      }

      scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);

      if (!scriptURL.includes('://')) {
        scriptURL = 'file://' + scriptURL;
      }
    }

    return scriptURL;
  }

  function getScriptURL() {
    if (_scriptURL === undefined) {
      _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());
    }

    return _scriptURL;
  }

  function setCustomSourceTransformer(transformer) {
    _customSourceTransformer = transformer;
  }

  function resolveAssetSource(source) {
    if (typeof source === 'object') {
      return source;
    }

    var asset = AssetRegistry.getAssetByID(source);

    if (!asset) {
      return null;
    }

    var resolver = new AssetSourceResolver(getDevServerURL(), getScriptURL(), asset);

    if (_customSourceTransformer) {
      return _customSourceTransformer(resolver);
    }

    return resolver.defaultAsset();
  }

  module.exports = resolveAssetSource;
  module.exports.pickScale = AssetSourceResolver.pickScale;
  module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
},161,[162,163,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var assets = [];

  function registerAsset(asset) {
    return assets.push(asset);
  }

  function getAssetByID(assetId) {
    return assets[assetId - 1];
  }

  module.exports = {
    registerAsset: registerAsset,
    getAssetByID: getAssetByID
  };
},162,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var PixelRatio = _$$_REQUIRE(_dependencyMap[2]);

  var Platform = _$$_REQUIRE(_dependencyMap[3]);

  var assetPathUtils = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  function getScaledAssetPath(asset) {
    var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
    var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
    var assetDir = assetPathUtils.getBasePath(asset);
    return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
  }

  function getAssetPathInDrawableFolder(asset) {
    var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
    var drawbleFolder = assetPathUtils.getAndroidResourceFolderName(asset, scale);
    var fileName = assetPathUtils.getAndroidResourceIdentifier(asset);
    return drawbleFolder + '/' + fileName + '.' + asset.type;
  }

  var AssetSourceResolver = function () {
    function AssetSourceResolver(serverUrl, jsbundleUrl, asset) {
      _classCallCheck(this, AssetSourceResolver);

      this.serverUrl = serverUrl;
      this.jsbundleUrl = jsbundleUrl;
      this.asset = asset;
    }

    _createClass(AssetSourceResolver, [{
      key: "isLoadedFromServer",
      value: function isLoadedFromServer() {
        return !!this.serverUrl;
      }
    }, {
      key: "isLoadedFromFileSystem",
      value: function isLoadedFromFileSystem() {
        return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));
      }
    }, {
      key: "defaultAsset",
      value: function defaultAsset() {
        if (this.isLoadedFromServer()) {
          return this.assetServerURL();
        }

        {
          return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
        }
      }
    }, {
      key: "assetServerURL",
      value: function assetServerURL() {
        invariant(!!this.serverUrl, 'need server to load from');
        return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + "android" + '&hash=' + this.asset.hash);
      }
    }, {
      key: "scaledAssetPath",
      value: function scaledAssetPath() {
        return this.fromSource(getScaledAssetPath(this.asset));
      }
    }, {
      key: "scaledAssetURLNearBundle",
      value: function scaledAssetURLNearBundle() {
        var path = this.jsbundleUrl || 'file://';
        return this.fromSource(path + getScaledAssetPath(this.asset));
      }
    }, {
      key: "resourceIdentifierWithoutScale",
      value: function resourceIdentifierWithoutScale() {
        invariant(true, 'resource identifiers work on Android');
        return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));
      }
    }, {
      key: "drawableFolderInBundle",
      value: function drawableFolderInBundle() {
        var path = this.jsbundleUrl || 'file://';
        return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));
      }
    }, {
      key: "fromSource",
      value: function fromSource(source) {
        return {
          __packager_asset: true,
          width: this.asset.width,
          height: this.asset.height,
          uri: source,
          scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get())
        };
      }
    }], [{
      key: "pickScale",
      value: function pickScale(scales, deviceScale) {
        for (var i = 0; i < scales.length; i++) {
          if (scales[i] >= deviceScale) {
            return scales[i];
          }
        }

        return scales[scales.length - 1] || 1;
      }
    }]);

    return AssetSourceResolver;
  }();

  module.exports = AssetSourceResolver;
},163,[22,23,53,43,164,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},164,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('RCTActivityIndicatorView');
},165,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ProgressBarAndroidNativeComponent = _$$_REQUIRE(_dependencyMap[2]);

  var ProgressBarAndroid = function ProgressBarAndroid(props, forwardedRef) {
    return React.createElement(ProgressBarAndroidNativeComponent, _extends({}, props, {
      ref: forwardedRef
    }));
  };

  var ProgressBarAndroidToExport = React.forwardRef(ProgressBarAndroid);
  ProgressBarAndroidToExport.defaultProps = {
    styleAttr: 'Normal',
    indeterminate: true,
    animating: true
  };
  module.exports = ProgressBarAndroidToExport;
},166,[11,48,167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidProgressBar');
},167,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var Color = _$$_REQUIRE(_dependencyMap[5]);

  var Path = _$$_REQUIRE(_dependencyMap[6]);

  var Transform = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[9]);

  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[10]);

  var createReactNativeComponentClass = _$$_REQUIRE(_dependencyMap[11]);

  var merge = _$$_REQUIRE(_dependencyMap[12]);

  var invariant = _$$_REQUIRE(_dependencyMap[13]);

  function arrayDiffer(a, b) {
    if (a == null || b == null) {
      return true;
    }

    if (a.length !== b.length) {
      return true;
    }

    for (var i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) {
        return true;
      }
    }

    return false;
  }

  function fontAndLinesDiffer(a, b) {
    if (a === b) {
      return false;
    }

    if (a.font !== b.font) {
      if (a.font === null) {
        return true;
      }

      if (b.font === null) {
        return true;
      }

      if (a.font.fontFamily !== b.font.fontFamily || a.font.fontSize !== b.font.fontSize || a.font.fontWeight !== b.font.fontWeight || a.font.fontStyle !== b.font.fontStyle) {
        return true;
      }
    }

    return arrayDiffer(a.lines, b.lines);
  }

  var SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {});
  var NodeAttributes = {
    transform: {
      diff: arrayDiffer
    },
    opacity: true
  };
  var GroupAttributes = merge(NodeAttributes, {
    clipping: {
      diff: arrayDiffer
    }
  });
  var RenderableAttributes = merge(NodeAttributes, {
    fill: {
      diff: arrayDiffer
    },
    stroke: {
      diff: arrayDiffer
    },
    strokeWidth: true,
    strokeCap: true,
    strokeJoin: true,
    strokeDash: {
      diff: arrayDiffer
    }
  });
  var ShapeAttributes = merge(RenderableAttributes, {
    d: {
      diff: arrayDiffer
    }
  });
  var TextAttributes = merge(RenderableAttributes, {
    alignment: true,
    frame: {
      diff: fontAndLinesDiffer
    },
    path: {
      diff: arrayDiffer
    }
  });
  var NativeSurfaceView = createReactNativeComponentClass('ARTSurfaceView', function () {
    return {
      validAttributes: SurfaceViewAttributes,
      uiViewClassName: 'ARTSurfaceView'
    };
  });
  var NativeGroup = createReactNativeComponentClass('ARTGroup', function () {
    return {
      validAttributes: GroupAttributes,
      uiViewClassName: 'ARTGroup'
    };
  });
  var NativeShape = createReactNativeComponentClass('ARTShape', function () {
    return {
      validAttributes: ShapeAttributes,
      uiViewClassName: 'ARTShape'
    };
  });
  var NativeText = createReactNativeComponentClass('ARTText', function () {
    return {
      validAttributes: TextAttributes,
      uiViewClassName: 'ARTText'
    };
  });

  function childrenAsString(children) {
    if (!children) {
      return '';
    }

    if (typeof children === 'string') {
      return children;
    }

    if (children.length) {
      return children.join('\n');
    }

    return '';
  }

  var Surface = function (_React$Component) {
    _inherits(Surface, _React$Component);

    function Surface() {
      _classCallCheck(this, Surface);

      return _possibleConstructorReturn(this, _getPrototypeOf(Surface).apply(this, arguments));
    }

    _createClass(Surface, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          isInSurface: true
        };
      }
    }, {
      key: "render",
      value: function render() {
        var height = extractNumber(this.props.height, 0);
        var width = extractNumber(this.props.width, 0);
        return React.createElement(NativeSurfaceView, {
          style: [this.props.style, {
            height: height,
            width: width
          }]
        }, this.props.children);
      }
    }]);

    return Surface;
  }(React.Component);

  Surface.childContextTypes = {
    isInSurface: PropTypes.bool
  };

  function extractNumber(value, defaultValue) {
    if (value == null) {
      return defaultValue;
    }

    return +value;
  }

  var pooledTransform = new Transform();

  function extractTransform(props) {
    var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;
    var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;
    pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);

    if (props.transform != null) {
      pooledTransform.transform(props.transform);
    }

    return [pooledTransform.xx, pooledTransform.yx, pooledTransform.xy, pooledTransform.yy, pooledTransform.x, pooledTransform.y];
  }

  function extractOpacity(props) {
    if (props.visible === false) {
      return 0;
    }

    if (props.opacity == null) {
      return 1;
    }

    return +props.opacity;
  }

  var Group = function (_React$Component2) {
    _inherits(Group, _React$Component2);

    function Group() {
      _classCallCheck(this, Group);

      return _possibleConstructorReturn(this, _getPrototypeOf(Group).apply(this, arguments));
    }

    _createClass(Group, [{
      key: "render",
      value: function render() {
        var props = this.props;
        invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');
        return React.createElement(NativeGroup, {
          opacity: extractOpacity(props),
          transform: extractTransform(props)
        }, this.props.children);
      }
    }]);

    return Group;
  }(React.Component);

  Group.contextTypes = {
    isInSurface: PropTypes.bool.isRequired
  };

  var ClippingRectangle = function (_React$Component3) {
    _inherits(ClippingRectangle, _React$Component3);

    function ClippingRectangle() {
      _classCallCheck(this, ClippingRectangle);

      return _possibleConstructorReturn(this, _getPrototypeOf(ClippingRectangle).apply(this, arguments));
    }

    _createClass(ClippingRectangle, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var x = extractNumber(props.x, 0);
        var y = extractNumber(props.y, 0);
        var w = extractNumber(props.width, 0);
        var h = extractNumber(props.height, 0);
        var clipping = [x, y, w, h];
        var propsExcludingXAndY = merge(props);
        delete propsExcludingXAndY.x;
        delete propsExcludingXAndY.y;
        return React.createElement(NativeGroup, {
          clipping: clipping,
          opacity: extractOpacity(props),
          transform: extractTransform(propsExcludingXAndY)
        }, this.props.children);
      }
    }]);

    return ClippingRectangle;
  }(React.Component);

  var SOLID_COLOR = 0;
  var LINEAR_GRADIENT = 1;
  var RADIAL_GRADIENT = 2;
  var PATTERN = 3;

  function insertColorIntoArray(color, targetArray, atIndex) {
    var c = new Color(color);
    targetArray[atIndex + 0] = c.red / 255;
    targetArray[atIndex + 1] = c.green / 255;
    targetArray[atIndex + 2] = c.blue / 255;
    targetArray[atIndex + 3] = c.alpha;
  }

  function insertColorsIntoArray(stops, targetArray, atIndex) {
    var i = 0;

    if ('length' in stops) {
      while (i < stops.length) {
        insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);
        i++;
      }
    } else {
      for (var offset in stops) {
        insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);
        i++;
      }
    }

    return atIndex + i * 4;
  }

  function insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {
    var offsetNumber;
    var i = 0;

    if ('length' in stops) {
      while (i < stops.length) {
        offsetNumber = i / (stops.length - 1) * multi;
        targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
        i++;
      }
    } else {
      for (var offsetString in stops) {
        offsetNumber = +offsetString * multi;
        targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
        i++;
      }
    }

    return atIndex + i;
  }

  function insertColorStopsIntoArray(stops, targetArray, atIndex) {
    var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
    insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);
  }

  function insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {
    var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
    lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);
    lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);
    insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);
  }

  function applyBoundingBoxToBrushData(brushData, props) {
    var type = brushData[0];
    var width = +props.width;
    var height = +props.height;

    if (type === LINEAR_GRADIENT) {
      brushData[1] *= width;
      brushData[2] *= height;
      brushData[3] *= width;
      brushData[4] *= height;
    } else if (type === RADIAL_GRADIENT) {
      brushData[1] *= width;
      brushData[2] *= height;
      brushData[3] *= width;
      brushData[4] *= height;
      brushData[5] *= width;
      brushData[6] *= height;
    } else if (type === PATTERN) {}
  }

  function extractBrush(colorOrBrush, props) {
    if (colorOrBrush == null) {
      return null;
    }

    if (colorOrBrush._brush) {
      if (colorOrBrush._bb) {
        applyBoundingBoxToBrushData(colorOrBrush._brush, props);
        colorOrBrush._bb = false;
      }

      return colorOrBrush._brush;
    }

    var c = new Color(colorOrBrush);
    return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];
  }

  function extractColor(color) {
    if (color == null) {
      return null;
    }

    var c = new Color(color);
    return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];
  }

  function extractStrokeCap(strokeCap) {
    switch (strokeCap) {
      case 'butt':
        return 0;

      case 'square':
        return 2;

      default:
        return 1;
    }
  }

  function extractStrokeJoin(strokeJoin) {
    switch (strokeJoin) {
      case 'miter':
        return 0;

      case 'bevel':
        return 2;

      default:
        return 1;
    }
  }

  var Shape = function (_React$Component4) {
    _inherits(Shape, _React$Component4);

    function Shape() {
      _classCallCheck(this, Shape);

      return _possibleConstructorReturn(this, _getPrototypeOf(Shape).apply(this, arguments));
    }

    _createClass(Shape, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var path = props.d || childrenAsString(props.children);
        var d = (path instanceof Path ? path : new Path(path)).toJSON();
        return React.createElement(NativeShape, {
          fill: extractBrush(props.fill, props),
          opacity: extractOpacity(props),
          stroke: extractColor(props.stroke),
          strokeCap: extractStrokeCap(props.strokeCap),
          strokeDash: props.strokeDash || null,
          strokeJoin: extractStrokeJoin(props.strokeJoin),
          strokeWidth: extractNumber(props.strokeWidth, 1),
          transform: extractTransform(props),
          d: d
        });
      }
    }]);

    return Shape;
  }(React.Component);

  var cachedFontObjectsFromString = {};
  var fontFamilyPrefix = /^[\s"']*/;
  var fontFamilySuffix = /[\s"']*$/;

  function extractSingleFontFamily(fontFamilyString) {
    return fontFamilyString.split(',')[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '');
  }

  function parseFontString(font) {
    if (cachedFontObjectsFromString.hasOwnProperty(font)) {
      return cachedFontObjectsFromString[font];
    }

    var regexp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
    var match = regexp.exec(font);

    if (!match) {
      return null;
    }

    var fontFamily = extractSingleFontFamily(match[3]);
    var fontSize = +match[2] || 12;
    var isBold = /bold/.exec(match[1]);
    var isItalic = /italic/.exec(match[1]);
    cachedFontObjectsFromString[font] = {
      fontFamily: fontFamily,
      fontSize: fontSize,
      fontWeight: isBold ? 'bold' : 'normal',
      fontStyle: isItalic ? 'italic' : 'normal'
    };
    return cachedFontObjectsFromString[font];
  }

  function extractFont(font) {
    if (font == null) {
      return null;
    }

    if (typeof font === 'string') {
      return parseFontString(font);
    }

    var fontFamily = extractSingleFontFamily(font.fontFamily);
    var fontSize = +font.fontSize || 12;
    var fontWeight = font.fontWeight != null ? font.fontWeight.toString() : '400';
    return {
      fontFamily: fontFamily,
      fontSize: fontSize,
      fontWeight: fontWeight,
      fontStyle: font.fontStyle
    };
  }

  var newLine = /\n/g;

  function extractFontAndLines(font, text) {
    return {
      font: extractFont(font),
      lines: text.split(newLine)
    };
  }

  function extractAlignment(alignment) {
    switch (alignment) {
      case 'right':
        return 1;

      case 'center':
        return 2;

      default:
        return 0;
    }
  }

  var Text = function (_React$Component5) {
    _inherits(Text, _React$Component5);

    function Text() {
      _classCallCheck(this, Text);

      return _possibleConstructorReturn(this, _getPrototypeOf(Text).apply(this, arguments));
    }

    _createClass(Text, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var path = props.path;
        var textPath = path ? (path instanceof Path ? path : new Path(path)).toJSON() : null;
        var textFrame = extractFontAndLines(props.font, childrenAsString(props.children));
        return React.createElement(NativeText, {
          fill: extractBrush(props.fill, props),
          opacity: extractOpacity(props),
          stroke: extractColor(props.stroke),
          strokeCap: extractStrokeCap(props.strokeCap),
          strokeDash: props.strokeDash || null,
          strokeJoin: extractStrokeJoin(props.strokeJoin),
          strokeWidth: extractNumber(props.strokeWidth, 1),
          transform: extractTransform(props),
          alignment: extractAlignment(props.alignment),
          frame: textFrame,
          path: textPath
        });
      }
    }]);

    return Text;
  }(React.Component);

  function LinearGradient(stops, x1, y1, x2, y2) {
    var type = LINEAR_GRADIENT;

    if (arguments.length < 5) {
      var angle = (x1 == null ? 270 : x1) * Math.PI / 180;
      var x = Math.cos(angle);
      var y = -Math.sin(angle);
      var l = (Math.abs(x) + Math.abs(y)) / 2;
      x *= l;
      y *= l;
      x1 = 0.5 - x;
      x2 = 0.5 + x;
      y1 = 0.5 - y;
      y2 = 0.5 + y;
      this._bb = true;
    } else {
      this._bb = false;
    }

    var brushData = [type, +x1, +y1, +x2, +y2];
    insertColorStopsIntoArray(stops, brushData, 5);
    this._brush = brushData;
  }

  function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {
    if (ry == null) {
      ry = rx;
    }

    if (cx == null) {
      cx = fx;
    }

    if (cy == null) {
      cy = fy;
    }

    if (fx == null) {
      fx = fy = rx = ry = cx = cy = 0.5;
      this._bb = true;
    } else {
      this._bb = false;
    }

    var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];
    insertDoubleColorStopsIntoArray(stops, brushData, 7);
    this._brush = brushData;
  }

  function Pattern(url, width, height, left, top) {
    this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];
  }

  var ReactART = {
    LinearGradient: LinearGradient,
    RadialGradient: RadialGradient,
    Pattern: Pattern,
    Transform: Transform,
    Path: Path,
    Surface: Surface,
    Group: Group,
    ClippingRectangle: ClippingRectangle,
    Shape: Shape,
    Text: Text
  };
  module.exports = ReactART;
},168,[22,23,30,33,36,169,170,173,48,61,174,156,175,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var colors = {
    maroon: '#800000',
    red: '#ff0000',
    orange: '#ffA500',
    yellow: '#ffff00',
    olive: '#808000',
    purple: '#800080',
    fuchsia: "#ff00ff",
    white: '#ffffff',
    lime: '#00ff00',
    green: '#008000',
    navy: '#000080',
    blue: '#0000ff',
    aqua: '#00ffff',
    teal: '#008080',
    black: '#000000',
    silver: '#c0c0c0',
    gray: '#808080'
  };

  var map = function map(array, fn) {
    var results = [];

    for (var i = 0, l = array.length; i < l; i++) {
      results[i] = fn(array[i], i);
    }

    return results;
  };

  var Color = function Color(color, type) {
    if (color.isColor) {
      this.red = color.red;
      this.green = color.green;
      this.blue = color.blue;
      this.alpha = color.alpha;
    } else {
      var namedColor = colors[color];

      if (namedColor) {
        color = namedColor;
        type = 'hex';
      }

      switch (typeof color) {
        case 'string':
          if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';
          break;

        case 'object':
          type = type || 'rgb';
          color = color.toString();
          break;

        case 'number':
          type = 'hex';
          color = color.toString(16);
          break;
      }

      color = Color['parse' + type.toUpperCase()](color);
      this.red = color[0];
      this.green = color[1];
      this.blue = color[2];
      this.alpha = color[3];
    }

    this.isColor = true;
  };

  var limit = function limit(number, min, max) {
    return Math.min(max, Math.max(min, number));
  };

  var listMatch = /([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
  var hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

  Color.parseRGB = function (color) {
    return map(color.match(listMatch).slice(1), function (bit, i) {
      if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);
      return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);
    });
  };

  Color.parseHEX = function (color) {
    if (color.length == 1) color = color + color + color;
    return map(color.match(hexMatch).slice(1), function (bit, i) {
      if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;
      return parseInt(bit.length == 1 ? bit + bit : bit, 16);
    });
  };

  Color.parseHSB = function (color) {
    var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
      if (bit) bit = parseFloat(bit);
      if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
    });
    var a = hsb[3];
    var br = Math.round(hsb[2] / 100 * 255);
    if (hsb[1] == 0) return [br, br, br, a];
    var hue = hsb[0];
    var f = hue % 60;
    var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);
    var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);
    var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);

    switch (Math.floor(hue / 60)) {
      case 0:
        return [br, t, p, a];

      case 1:
        return [q, br, p, a];

      case 2:
        return [p, br, t, a];

      case 3:
        return [p, q, br, a];

      case 4:
        return [t, p, br, a];

      default:
        return [br, p, q, a];
    }
  };

  Color.parseHSL = function (color) {
    var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
      if (bit) bit = parseFloat(bit);
      if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
    });
    var h = hsb[0] / 60;
    var s = hsb[1] / 100;
    var l = hsb[2] / 100;
    var a = hsb[3];
    var c = (1 - Math.abs(2 * l - 1)) * s;
    var x = c * (1 - Math.abs(h % 2 - 1));
    var m = l - c / 2;
    var p = Math.round((c + m) * 255);
    var q = Math.round((x + m) * 255);
    var t = Math.round(m * 255);

    switch (Math.floor(h)) {
      case 0:
        return [p, q, t, a];

      case 1:
        return [q, p, t, a];

      case 2:
        return [t, p, q, a];

      case 3:
        return [t, q, p, a];

      case 4:
        return [q, t, p, a];

      default:
        return [p, t, q, a];
    }
  };

  var toString = function toString(type, array) {
    if (array[3] != 1) type += 'a';else array.pop();
    return type + '(' + array.join(', ') + ')';
  };

  Color.prototype = {
    toHSB: function toHSB(array) {
      var red = this.red,
          green = this.green,
          blue = this.blue,
          alpha = this.alpha;
      var max = Math.max(red, green, blue),
          min = Math.min(red, green, blue),
          delta = max - min;
      var hue = 0,
          saturation = delta != 0 ? delta / max : 0,
          brightness = max / 255;

      if (saturation) {
        var rr = (max - red) / delta,
            gr = (max - green) / delta,
            br = (max - blue) / delta;
        hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
        if ((hue /= 6) < 0) hue++;
      }

      var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];
      return array ? hsb : toString('hsb', hsb);
    },
    toHSL: function toHSL(array) {
      var red = this.red,
          green = this.green,
          blue = this.blue,
          alpha = this.alpha;
      var max = Math.max(red, green, blue),
          min = Math.min(red, green, blue),
          delta = max - min;
      var hue = 0,
          saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,
          lightness = (max + min) / 512;

      if (saturation) {
        var rr = (max - red) / delta,
            gr = (max - green) / delta,
            br = (max - blue) / delta;
        hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
        if ((hue /= 6) < 0) hue++;
      }

      var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];
      return array ? hsl : toString('hsl', hsl);
    },
    toHEX: function toHEX(array) {
      var a = this.alpha;
      var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;
      var hex = map([this.red, this.green, this.blue], function (bit) {
        bit = bit.toString(16);
        return bit.length == 1 ? '0' + bit : bit;
      });
      return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);
    },
    toRGB: function toRGB(array) {
      var rgb = [this.red, this.green, this.blue, this.alpha];
      return array ? rgb : toString('rgb', rgb);
    }
  };
  Color.prototype.toString = Color.prototype.toRGB;

  Color.hex = function (hex) {
    return new Color(hex, 'hex');
  };

  if (this.hex == null) this.hex = Color.hex;

  Color.hsb = function (h, s, b, a) {
    return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');
  };

  if (this.hsb == null) this.hsb = Color.hsb;

  Color.hsl = function (h, s, l, a) {
    return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');
  };

  if (this.hsl == null) this.hsl = Color.hsl;

  Color.rgb = function (r, g, b, a) {
    return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');
  };

  if (this.rgb == null) this.rgb = Color.rgb;

  Color.detach = function (color) {
    color = new Color(color);
    return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];
  };

  module.exports = Color;
},169,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Class = _$$_REQUIRE(_dependencyMap[0]);

  var Path = _$$_REQUIRE(_dependencyMap[1]);

  var MOVE_TO = 0;
  var CLOSE = 1;
  var LINE_TO = 2;
  var CURVE_TO = 3;
  var ARC = 4;
  var SerializablePath = Class(Path, {
    initialize: function initialize(path) {
      this.reset();

      if (path instanceof SerializablePath) {
        this.path = path.path.slice(0);
      } else if (path) {
        if (path.applyToPath) {
          path.applyToPath(this);
        } else {
          this.push(path);
        }
      }
    },
    onReset: function onReset() {
      this.path = [];
    },
    onMove: function onMove(sx, sy, x, y) {
      this.path.push(MOVE_TO, x, y);
    },
    onLine: function onLine(sx, sy, x, y) {
      this.path.push(LINE_TO, x, y);
    },
    onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {
      this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);
    },
    _arcToBezier: Path.prototype.onArc,
    onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
      if (rx !== ry || rotation) {
        return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);
      }

      this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);
    },
    onClose: function onClose() {
      this.path.push(CLOSE);
    },
    toJSON: function toJSON() {
      return this.path;
    }
  });
  module.exports = SerializablePath;
},170,[171,172]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (mixins) {
    var proto = {};

    for (var i = 0, l = arguments.length; i < l; i++) {
      var mixin = arguments[i];
      if (typeof mixin == 'function') mixin = mixin.prototype;

      for (var key in mixin) {
        proto[key] = mixin[key];
      }
    }

    if (!proto.initialize) proto.initialize = function () {};

    proto.constructor = function (a, b, c, d, e, f, g, h) {
      return new proto.initialize(a, b, c, d, e, f, g, h);
    };

    proto.constructor.prototype = proto.initialize.prototype = proto;
    return proto.constructor;
  };
},171,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Class = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Class({
    initialize: function initialize(path) {
      this.reset().push(path);
    },
    push: function push() {
      var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
      if (!p) return this;
      var last,
          cmd = p[0],
          i = 1;

      while (cmd) {
        switch (cmd) {
          case 'm':
            this.move(p[i++], p[i++]);
            break;

          case 'l':
            this.line(p[i++], p[i++]);
            break;

          case 'c':
            this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);
            break;

          case 's':
            this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);
            break;

          case 'q':
            this.curve(p[i++], p[i++], p[i++], p[i++]);
            break;

          case 't':
            this.curve(p[i++], p[i++]);
            break;

          case 'a':
            this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);
            i += 7;
            break;

          case 'h':
            this.line(p[i++], 0);
            break;

          case 'v':
            this.line(0, p[i++]);
            break;

          case 'M':
            this.moveTo(p[i++], p[i++]);
            break;

          case 'L':
            this.lineTo(p[i++], p[i++]);
            break;

          case 'C':
            this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);
            break;

          case 'S':
            this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);
            break;

          case 'Q':
            this.curveTo(p[i++], p[i++], p[i++], p[i++]);
            break;

          case 'T':
            this.curveTo(p[i++], p[i++]);
            break;

          case 'A':
            this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);
            i += 7;
            break;

          case 'H':
            this.lineTo(p[i++], this.penY);
            break;

          case 'V':
            this.lineTo(this.penX, p[i++]);
            break;

          case 'Z':
          case 'z':
            this.close();
            break;

          default:
            cmd = last;
            i--;
            continue;
        }

        last = cmd;
        if (last == 'm') last = 'l';else if (last == 'M') last = 'L';
        cmd = p[i++];
      }

      return this;
    },
    reset: function reset() {
      this.penX = this.penY = 0;
      this.penDownX = this.penDownY = null;
      this._pivotX = this._pivotY = 0;
      this.onReset();
      return this;
    },
    move: function move(x, y) {
      this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);
      return this;
    },
    moveTo: function moveTo(x, y) {
      this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
      return this;
    },
    line: function line(x, y) {
      return this.lineTo(this.penX + +x, this.penY + +y);
    },
    lineTo: function lineTo(x, y) {
      if (this.penDownX == null) {
        this.penDownX = this.penX;
        this.penDownY = this.penY;
      }

      this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
      return this;
    },
    curve: function curve(c1x, c1y, c2x, c2y, ex, ey) {
      var x = this.penX,
          y = this.penY;
      return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);
    },
    curveTo: function curveTo(c1x, c1y, c2x, c2y, ex, ey) {
      var x = this.penX,
          y = this.penY;

      if (c2x == null) {
        c2x = +c1x;
        c2y = +c1y;
        c1x = x * 2 - (this._pivotX || 0);
        c1y = y * 2 - (this._pivotY || 0);
      }

      if (ex == null) {
        this._pivotX = +c1x;
        this._pivotY = +c1y;
        ex = +c2x;
        ey = +c2y;
        c2x = (ex + +c1x * 2) / 3;
        c2y = (ey + +c1y * 2) / 3;
        c1x = (x + +c1x * 2) / 3;
        c1y = (y + +c1y * 2) / 3;
      } else {
        this._pivotX = +c2x;
        this._pivotY = +c2y;
      }

      if (this.penDownX == null) {
        this.penDownX = x;
        this.penDownY = y;
      }

      this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);
      return this;
    },
    arc: function arc(x, y, rx, ry, outer, counterClockwise, rotation) {
      return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);
    },
    arcTo: function arcTo(x, y, rx, ry, outer, counterClockwise, rotation) {
      ry = Math.abs(+ry || +rx || +y - this.penY);
      rx = Math.abs(+rx || +x - this.penX);
      if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);
      var tX = this.penX,
          tY = this.penY,
          clockwise = !+counterClockwise,
          large = !!+outer;
      var rad = rotation ? rotation * Math.PI / 180 : 0,
          cos = Math.cos(rad),
          sin = Math.sin(rad);
      x -= tX;
      y -= tY;
      var cx = cos * x / 2 + sin * y / 2,
          cy = -sin * x / 2 + cos * y / 2,
          rxry = rx * rx * ry * ry,
          rycx = ry * ry * cx * cx,
          rxcy = rx * rx * cy * cy,
          a = rxry - rxcy - rycx;

      if (a < 0) {
        a = Math.sqrt(1 - a / rxry);
        rx *= a;
        ry *= a;
        cx = x / 2;
        cy = y / 2;
      } else {
        a = Math.sqrt(a / (rxcy + rycx));
        if (large == clockwise) a = -a;
        var cxd = -a * cy * rx / ry,
            cyd = a * cx * ry / rx;
        cx = cos * cxd - sin * cyd + x / 2;
        cy = sin * cxd + cos * cyd + y / 2;
      }

      var xx = cos / rx,
          yx = sin / rx,
          xy = -sin / ry,
          yy = cos / ry;
      var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),
          ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));
      cx += tX;
      cy += tY;
      x += tX;
      y += tY;

      if (this.penDownX == null) {
        this.penDownX = this.penX;
        this.penDownY = this.penY;
      }

      this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);
      return this;
    },
    counterArc: function counterArc(x, y, rx, ry, outer) {
      return this.arc(x, y, rx, ry, outer, true);
    },
    counterArcTo: function counterArcTo(x, y, rx, ry, outer) {
      return this.arcTo(x, y, rx, ry, outer, true);
    },
    close: function close() {
      if (this.penDownX != null) {
        this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);
        this.penDownX = null;
      }

      return this;
    },
    onReset: function onReset() {},
    onMove: function onMove(sx, sy, ex, ey) {},
    onLine: function onLine(sx, sy, ex, ey) {
      this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);
    },
    onBezierCurve: function onBezierCurve(sx, sy, c1x, c1y, c2x, c2y, ex, ey) {
      var gx = ex - sx,
          gy = ey - sy,
          g = gx * gx + gy * gy,
          v1,
          v2,
          cx,
          cy,
          u;
      cx = c1x - sx;
      cy = c1y - sy;
      u = cx * gx + cy * gy;

      if (u > g) {
        cx -= gx;
        cy -= gy;
      } else if (u > 0 && g != 0) {
        cx -= u / g * gx;
        cy -= u / g * gy;
      }

      v1 = cx * cx + cy * cy;
      cx = c2x - sx;
      cy = c2y - sy;
      u = cx * gx + cy * gy;

      if (u > g) {
        cx -= gx;
        cy -= gy;
      } else if (u > 0 && g != 0) {
        cx -= u / g * gx;
        cy -= u / g * gy;
      }

      v2 = cx * cx + cy * cy;

      if (v1 < 0.01 && v2 < 0.01) {
        this.onLine(sx, sy, ex, ey);
        return;
      }

      if (isNaN(v1) || isNaN(v2)) {
        throw new Error('Bad input');
      }

      var s1x = (c1x + c2x) * 0.5,
          s1y = (c1y + c2y) * 0.5,
          l1x = (c1x + sx) * 0.5,
          l1y = (c1y + sy) * 0.5,
          l2x = (l1x + s1x) * 0.5,
          l2y = (l1y + s1y) * 0.5,
          r2x = (ex + c2x) * 0.5,
          r2y = (ey + c2y) * 0.5,
          r1x = (r2x + s1x) * 0.5,
          r1y = (r2y + s1y) * 0.5,
          l2r1x = (l2x + r1x) * 0.5,
          l2r1y = (l2y + r1y) * 0.5;
      this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);
      this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);
    },
    onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
      var rad = rotation ? rotation * Math.PI / 180 : 0,
          cos = Math.cos(rad),
          sin = Math.sin(rad),
          xx = cos * rx,
          yx = -sin * ry,
          xy = sin * rx,
          yy = cos * ry;
      var arc = ea - sa;
      if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;
      var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),
          step = arc / n,
          k = 1.3333333333333333 * Math.tan(step / 4);
      var x = Math.cos(sa),
          y = Math.sin(sa);

      for (var i = 0; i < n; i++) {
        var cp1x = x - k * y,
            cp1y = y + k * x;
        sa += step;
        x = Math.cos(sa);
        y = Math.sin(sa);
        var cp2x = x + k * y,
            cp2y = y - k * x;
        this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);
      }
    },
    onClose: function onClose(sx, sy, ex, ey) {
      this.onLine(sx, sy, ex, ey);
    }
  });
},172,[171]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Class = _$$_REQUIRE(_dependencyMap[0]);

  function Transform(xx, yx, xy, yy, x, y) {
    if (xx && typeof xx == 'object') {
      yx = xx.yx;
      yy = xx.yy;
      y = xx.y;
      xy = xx.xy;
      x = xx.x;
      xx = xx.xx;
    }

    this.xx = xx == null ? 1 : xx;
    this.yx = yx || 0;
    this.xy = xy || 0;
    this.yy = yy == null ? 1 : yy;
    this.x = (x == null ? this.x : x) || 0;
    this.y = (y == null ? this.y : y) || 0;

    this._transform();

    return this;
  }

  ;
  module.exports = Class({
    initialize: Transform,
    _transform: function _transform() {},
    xx: 1,
    yx: 0,
    x: 0,
    xy: 0,
    yy: 1,
    y: 0,
    transform: function transform(xx, yx, xy, yy, x, y) {
      var m = this;

      if (xx && typeof xx == 'object') {
        yx = xx.yx;
        yy = xx.yy;
        y = xx.y;
        xy = xx.xy;
        x = xx.x;
        xx = xx.xx;
      }

      if (!x) x = 0;
      if (!y) y = 0;
      return this.transformTo(m.xx * xx + m.xy * yx, m.yx * xx + m.yy * yx, m.xx * xy + m.xy * yy, m.yx * xy + m.yy * yy, m.xx * x + m.xy * y + m.x, m.yx * x + m.yy * y + m.y);
    },
    transformTo: Transform,
    translate: function translate(x, y) {
      return this.transform(1, 0, 0, 1, x, y);
    },
    move: function move(x, y) {
      this.x += x || 0;
      this.y += y || 0;

      this._transform();

      return this;
    },
    scale: function scale(x, y) {
      if (y == null) y = x;
      return this.transform(x, 0, 0, y, 0, 0);
    },
    rotate: function rotate(deg, x, y) {
      if (x == null || y == null) {
        x = (this.left || 0) + (this.width || 0) / 2;
        y = (this.top || 0) + (this.height || 0) / 2;
      }

      var rad = deg * Math.PI / 180,
          sin = Math.sin(rad),
          cos = Math.cos(rad);
      this.transform(1, 0, 0, 1, x, y);
      var m = this;
      return this.transformTo(cos * m.xx - sin * m.yx, sin * m.xx + cos * m.yx, cos * m.xy - sin * m.yy, sin * m.xy + cos * m.yy, m.x, m.y).transform(1, 0, 0, 1, -x, -y);
    },
    moveTo: function moveTo(x, y) {
      var m = this;
      return this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);
    },
    rotateTo: function rotateTo(deg, x, y) {
      var m = this;
      var flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;
      if (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;
      return this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);
    },
    scaleTo: function scaleTo(x, y) {
      var m = this;
      var h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);
      m.xx /= h;
      m.yx /= h;
      h = Math.sqrt(m.yy * m.yy + m.xy * m.xy);
      m.yy /= h;
      m.xy /= h;
      return this.scale(x, y);
    },
    resizeTo: function resizeTo(width, height) {
      var w = this.width,
          h = this.height;
      if (!w || !h) return this;
      return this.scaleTo(width / w, height / h);
    },
    inversePoint: function inversePoint(x, y) {
      var a = this.xx,
          b = this.yx,
          c = this.xy,
          d = this.yy,
          e = this.x,
          f = this.y;
      var det = b * c - a * d;
      if (det == 0) return null;
      return {
        x: (d * (e - x) + c * (y - f)) / det,
        y: (a * (f - y) + b * (x - e)) / det
      };
    },
    point: function point(x, y) {
      var m = this;
      return {
        x: m.xx * x + m.xy * y + m.x,
        y: m.yx * x + m.yy * y + m.y
      };
    }
  });
},173,[171]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewAttributes = {};
  ReactNativeViewAttributes.UIView = {
    pointerEvents: true,
    accessible: true,
    accessibilityActions: true,
    accessibilityLabel: true,
    accessibilityComponentType: true,
    accessibilityLiveRegion: true,
    accessibilityRole: true,
    accessibilityStates: true,
    accessibilityTraits: true,
    accessibilityHint: true,
    importantForAccessibility: true,
    nativeID: true,
    testID: true,
    renderToHardwareTextureAndroid: true,
    shouldRasterizeIOS: true,
    onLayout: true,
    onAccessibilityAction: true,
    onAccessibilityTap: true,
    onMagicTap: true,
    onAccessibilityEscape: true,
    collapsable: true,
    needsOffscreenAlphaCompositing: true,
    style: ReactNativeStyleAttributes
  };
  ReactNativeViewAttributes.RCTView = _objectSpread({}, ReactNativeViewAttributes.UIView, {
    removeClippedSubviews: true
  });
  module.exports = ReactNativeViewAttributes;
},174,[46,56]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var mergeInto = _$$_REQUIRE(_dependencyMap[0]);

  var merge = function merge(one, two) {
    var result = {};
    mergeInto(result, one);
    mergeInto(result, two);
    return result;
  };

  module.exports = merge;
},175,[176]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var mergeHelpers = _$$_REQUIRE(_dependencyMap[0]);

  var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
  var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

  function mergeInto(one, two) {
    checkMergeIntoObjectArg(one);

    if (two != null) {
      checkMergeObjectArg(two);

      for (var key in two) {
        if (!Object.prototype.hasOwnProperty.call(two, key)) {
          continue;
        }

        one[key] = two[key];
      }
    }
  }

  module.exports = mergeInto;
},176,[177]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var MAX_MERGE_DEPTH = 36;

  var isTerminal = function isTerminal(o) {
    return typeof o !== 'object' || o instanceof Date || o === null;
  };

  var mergeHelpers = {
    MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,
    isTerminal: isTerminal,
    normalizeMergeArg: function normalizeMergeArg(arg) {
      return arg === undefined || arg === null ? {} : arg;
    },
    checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
      invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
    },
    checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
      mergeHelpers.checkMergeObjectArg(one);
      mergeHelpers.checkMergeObjectArg(two);
    },
    checkMergeObjectArg: function checkMergeObjectArg(arg) {
      invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
    },
    checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
      invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
    },
    checkMergeLevel: function checkMergeLevel(level) {
      invariant(level < MAX_MERGE_DEPTH, "Maximum deep merge depth exceeded. You may be attempting to merge circular structures in an unsupported way.");
    },
    checkArrayStrategy: function checkArrayStrategy(strategy) {
      invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, "You must provide an array strategy to deep merge functions to instruct the deep merge how to resolve merging two arrays.");
    },
    ArrayStrategies: {
      Clobber: 'Clobber',
      Concat: 'Concat',
      IndexByIndex: 'IndexByIndex'
    }
  };
  module.exports = mergeHelpers;
},177,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var Platform = _$$_REQUIRE(_dependencyMap[6]);

  var React = _$$_REQUIRE(_dependencyMap[7]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[8]);

  var Text = _$$_REQUIRE(_dependencyMap[9]);

  var TouchableNativeFeedback = _$$_REQUIRE(_dependencyMap[10]);

  var TouchableOpacity = _$$_REQUIRE(_dependencyMap[11]);

  var View = _$$_REQUIRE(_dependencyMap[12]);

  var invariant = _$$_REQUIRE(_dependencyMap[13]);

  var Button = function (_React$Component) {
    _inherits(Button, _React$Component);

    function Button() {
      _classCallCheck(this, Button);

      return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));
    }

    _createClass(Button, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            accessibilityLabel = _this$props.accessibilityLabel,
            color = _this$props.color,
            onPress = _this$props.onPress,
            title = _this$props.title,
            hasTVPreferredFocus = _this$props.hasTVPreferredFocus,
            disabled = _this$props.disabled,
            testID = _this$props.testID;
        var buttonStyles = [styles.button];
        var textStyles = [styles.text];

        if (color) {
          {
            buttonStyles.push({
              backgroundColor: color
            });
          }
        }

        var accessibilityStates = [];

        if (disabled) {
          buttonStyles.push(styles.buttonDisabled);
          textStyles.push(styles.textDisabled);
          accessibilityStates.push('disabled');
        }

        invariant(typeof title === 'string', 'The title prop of a Button must be a string');
        var formattedTitle = title.toUpperCase();
        var Touchable = TouchableNativeFeedback;
        return React.createElement(Touchable, {
          accessibilityLabel: accessibilityLabel,
          accessibilityRole: "button",
          accessibilityStates: accessibilityStates,
          hasTVPreferredFocus: hasTVPreferredFocus,
          testID: testID,
          disabled: disabled,
          onPress: onPress
        }, React.createElement(View, {
          style: buttonStyles
        }, React.createElement(Text, {
          style: textStyles,
          disabled: disabled
        }, formattedTitle)));
      }
    }]);

    return Button;
  }(React.Component);

  var styles = StyleSheet.create({
    button: {
      elevation: 4,
      backgroundColor: '#2196F3',
      borderRadius: 2
    },
    text: _objectSpread({
      textAlign: 'center',
      padding: 8
    }, {
      color: 'white',
      fontWeight: '500'
    }),
    buttonDisabled: {
      elevation: 0,
      backgroundColor: '#dfdfdf'
    },
    textDisabled: {
      color: '#a1a1a1'
    }
  });
  module.exports = Button;
},178,[46,22,23,30,33,36,43,48,52,179,192,200,75,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[7]);

  var DeprecatedTextPropTypes = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[10]);

  var TextAncestor = _$$_REQUIRE(_dependencyMap[11]);

  var Touchable = _$$_REQUIRE(_dependencyMap[12]);

  var UIManager = _$$_REQUIRE(_dependencyMap[13]);

  var createReactNativeComponentClass = _$$_REQUIRE(_dependencyMap[14]);

  var nullthrows = _$$_REQUIRE(_dependencyMap[15]);

  var processColor = _$$_REQUIRE(_dependencyMap[16]);

  var PRESS_RECT_OFFSET = {
    top: 20,
    left: 20,
    right: 20,
    bottom: 30
  };
  var viewConfig = {
    validAttributes: _objectSpread({}, ReactNativeViewAttributes.UIView, {
      isHighlighted: true,
      numberOfLines: true,
      ellipsizeMode: true,
      allowFontScaling: true,
      maxFontSizeMultiplier: true,
      disabled: true,
      selectable: true,
      selectionColor: true,
      adjustsFontSizeToFit: true,
      minimumFontScale: true,
      textBreakStrategy: true,
      onTextLayout: true
    }),
    directEventTypes: {
      topTextLayout: {
        registrationName: 'onTextLayout'
      }
    },
    uiViewClassName: 'RCTText'
  };

  var TouchableText = function (_React$Component) {
    _inherits(TouchableText, _React$Component);

    function TouchableText() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, TouchableText);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TouchableText)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = _objectSpread({}, Touchable.Mixin.touchableGetInitialState(), {
        isHighlighted: false,
        createResponderHandlers: _this._createResponseHandlers.bind(_assertThisInitialized(_this)),
        responseHandlers: null
      });
      return _this;
    }

    _createClass(TouchableText, [{
      key: "render",
      value: function render() {
        var props = this.props;

        if (isTouchable(props)) {
          props = _objectSpread({}, props, this.state.responseHandlers, {
            isHighlighted: this.state.isHighlighted
          });
        }

        if (props.selectionColor != null) {
          props = _objectSpread({}, props, {
            selectionColor: processColor(props.selectionColor)
          });
        }

        return React.createElement(TextAncestor.Consumer, null, function (hasTextAncestor) {
          return hasTextAncestor ? React.createElement(RCTVirtualText, _extends({}, props, {
            ref: props.forwardedRef
          })) : React.createElement(TextAncestor.Provider, {
            value: true
          }, React.createElement(RCTText, _extends({}, props, {
            ref: props.forwardedRef
          })));
        });
      }
    }, {
      key: "_createResponseHandlers",
      value: function _createResponseHandlers() {
        var _this2 = this;

        return {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var onStartShouldSetResponder = _this2.props.onStartShouldSetResponder;
            var shouldSetResponder = (onStartShouldSetResponder == null ? false : onStartShouldSetResponder()) || isTouchable(_this2.props);

            if (shouldSetResponder) {
              _this2._attachTouchHandlers();
            }

            return shouldSetResponder;
          },
          onResponderGrant: function onResponderGrant(event, dispatchID) {
            nullthrows(_this2.touchableHandleResponderGrant)(event, dispatchID);

            if (_this2.props.onResponderGrant != null) {
              _this2.props.onResponderGrant.call(_this2, event, dispatchID);
            }
          },
          onResponderMove: function onResponderMove(event) {
            nullthrows(_this2.touchableHandleResponderMove)(event);

            if (_this2.props.onResponderMove != null) {
              _this2.props.onResponderMove.call(_this2, event);
            }
          },
          onResponderRelease: function onResponderRelease(event) {
            nullthrows(_this2.touchableHandleResponderRelease)(event);

            if (_this2.props.onResponderRelease != null) {
              _this2.props.onResponderRelease.call(_this2, event);
            }
          },
          onResponderTerminate: function onResponderTerminate(event) {
            nullthrows(_this2.touchableHandleResponderTerminate)(event);

            if (_this2.props.onResponderTerminate != null) {
              _this2.props.onResponderTerminate.call(_this2, event);
            }
          },
          onResponderTerminationRequest: function onResponderTerminationRequest() {
            var onResponderTerminationRequest = _this2.props.onResponderTerminationRequest;

            if (!nullthrows(_this2.touchableHandleResponderTerminationRequest)()) {
              return false;
            }

            if (onResponderTerminationRequest == null) {
              return true;
            }

            return onResponderTerminationRequest();
          }
        };
      }
    }, {
      key: "_attachTouchHandlers",
      value: function _attachTouchHandlers() {
        var _this3 = this;

        if (this.touchableGetPressRectOffset != null) {
          return;
        }

        for (var key in Touchable.Mixin) {
          if (typeof Touchable.Mixin[key] === 'function') {
            this[key] = Touchable.Mixin[key].bind(this);
          }
        }

        this.touchableHandleActivePressIn = function () {
          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {
            _this3.setState({
              isHighlighted: true
            });
          }
        };

        this.touchableHandleActivePressOut = function () {
          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {
            _this3.setState({
              isHighlighted: false
            });
          }
        };

        this.touchableHandlePress = function (event) {
          if (_this3.props.onPress != null) {
            _this3.props.onPress(event);
          }
        };

        this.touchableHandleLongPress = function (event) {
          if (_this3.props.onLongPress != null) {
            _this3.props.onLongPress(event);
          }
        };

        this.touchableGetPressRectOffset = function () {
          return _this3.props.pressRetentionOffset == null ? PRESS_RECT_OFFSET : _this3.props.pressRetentionOffset;
        };
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        return prevState.responseHandlers == null && isTouchable(nextProps) ? {
          responseHandlers: prevState.createResponderHandlers()
        } : null;
      }
    }]);

    return TouchableText;
  }(React.Component);

  TouchableText.defaultProps = {
    accessible: true,
    allowFontScaling: true,
    ellipsizeMode: 'tail'
  };
  TouchableText.viewConfig = viewConfig;

  var isTouchable = function isTouchable(props) {
    return props.onPress != null || props.onLongPress != null || props.onStartShouldSetResponder != null;
  };

  var RCTText = createReactNativeComponentClass(viewConfig.uiViewClassName, function () {
    return viewConfig;
  });
  var RCTVirtualText = UIManager.getViewManagerConfig('RCTVirtualText') == null ? RCTText : createReactNativeComponentClass('RCTVirtualText', function () {
    return {
      validAttributes: _objectSpread({}, ReactNativeViewAttributes.UIView, {
        isHighlighted: true,
        maxFontSizeMultiplier: true
      }),
      uiViewClassName: 'RCTVirtualText'
    };
  });

  var Text = function Text(props, forwardedRef) {
    return React.createElement(TouchableText, _extends({}, props, {
      forwardedRef: forwardedRef
    }));
  };

  var TextToExport = React.forwardRef(Text);
  TextToExport.displayName = 'Text';
  TextToExport.propTypes = DeprecatedTextPropTypes;
  module.exports = TextToExport;
},179,[11,22,23,30,33,32,36,46,180,48,174,76,184,42,156,191,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var TextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(TextStylePropTypes);
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool
  };
},180,[58,181,182,61,67]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},181,[61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},182,[183,74]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},183,[3,175]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var BoundingDimensions = _$$_REQUIRE(_dependencyMap[2]);

  var Platform = _$$_REQUIRE(_dependencyMap[3]);

  var Position = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[6]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[7]);

  var TVEventHandler = _$$_REQUIRE(_dependencyMap[8]);

  var UIManager = _$$_REQUIRE(_dependencyMap[9]);

  var View = _$$_REQUIRE(_dependencyMap[10]);

  var keyMirror = _$$_REQUIRE(_dependencyMap[11]);

  var normalizeColor = _$$_REQUIRE(_dependencyMap[12]);

  var extractSingleTouch = function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;
    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  };

  var States = keyMirror({
    NOT_RESPONDER: null,
    RESPONDER_INACTIVE_PRESS_IN: null,
    RESPONDER_INACTIVE_PRESS_OUT: null,
    RESPONDER_ACTIVE_PRESS_IN: null,
    RESPONDER_ACTIVE_PRESS_OUT: null,
    RESPONDER_ACTIVE_LONG_PRESS_IN: null,
    RESPONDER_ACTIVE_LONG_PRESS_OUT: null,
    ERROR: null
  });
  var baseStatesConditions = {
    NOT_RESPONDER: false,
    RESPONDER_INACTIVE_PRESS_IN: false,
    RESPONDER_INACTIVE_PRESS_OUT: false,
    RESPONDER_ACTIVE_PRESS_IN: false,
    RESPONDER_ACTIVE_PRESS_OUT: false,
    RESPONDER_ACTIVE_LONG_PRESS_IN: false,
    RESPONDER_ACTIVE_LONG_PRESS_OUT: false,
    ERROR: false
  };

  var IsActive = _objectSpread({}, baseStatesConditions, {
    RESPONDER_ACTIVE_PRESS_OUT: true,
    RESPONDER_ACTIVE_PRESS_IN: true
  });

  var IsPressingIn = _objectSpread({}, baseStatesConditions, {
    RESPONDER_INACTIVE_PRESS_IN: true,
    RESPONDER_ACTIVE_PRESS_IN: true,
    RESPONDER_ACTIVE_LONG_PRESS_IN: true
  });

  var IsLongPressingIn = _objectSpread({}, baseStatesConditions, {
    RESPONDER_ACTIVE_LONG_PRESS_IN: true
  });

  var Signals = keyMirror({
    DELAY: null,
    RESPONDER_GRANT: null,
    RESPONDER_RELEASE: null,
    RESPONDER_TERMINATED: null,
    ENTER_PRESS_RECT: null,
    LEAVE_PRESS_RECT: null,
    LONG_PRESS_DETECTED: null
  });
  var Transitions = {
    NOT_RESPONDER: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
      RESPONDER_RELEASE: States.ERROR,
      RESPONDER_TERMINATED: States.ERROR,
      ENTER_PRESS_RECT: States.ERROR,
      LEAVE_PRESS_RECT: States.ERROR,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_INACTIVE_PRESS_IN: {
      DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_INACTIVE_PRESS_OUT: {
      DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_ACTIVE_PRESS_IN: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
    },
    RESPONDER_ACTIVE_PRESS_OUT: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_ACTIVE_LONG_PRESS_IN: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
    },
    RESPONDER_ACTIVE_LONG_PRESS_OUT: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    error: {
      DELAY: States.NOT_RESPONDER,
      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.NOT_RESPONDER,
      LEAVE_PRESS_RECT: States.NOT_RESPONDER,
      LONG_PRESS_DETECTED: States.NOT_RESPONDER
    }
  };
  var HIGHLIGHT_DELAY_MS = 130;
  var PRESS_EXPAND_PX = 20;
  var LONG_PRESS_THRESHOLD = 500;
  var LONG_PRESS_DELAY_MS = 370;
  var LONG_PRESS_ALLOWED_MOVEMENT = 10;
  var TouchableMixin = {
    componentDidMount: function componentDidMount() {
      if (!Platform.isTV) {
        return;
      }

      this._tvEventHandler = new TVEventHandler();

      this._tvEventHandler.enable(this, function (cmp, evt) {
        var myTag = ReactNative.findNodeHandle(cmp);
        evt.dispatchConfig = {};

        if (myTag === evt.tag) {
          if (evt.eventType === 'focus') {
            cmp.touchableHandleFocus(evt);
          } else if (evt.eventType === 'blur') {
            cmp.touchableHandleBlur(evt);
          } else if (evt.eventType === 'select') {
            cmp.touchableHandlePress && !cmp.props.disabled && cmp.touchableHandlePress(evt);
          }
        }
      });
    },
    componentWillUnmount: function componentWillUnmount() {
      if (this._tvEventHandler) {
        this._tvEventHandler.disable();

        delete this._tvEventHandler;
      }

      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    },
    touchableGetInitialState: function touchableGetInitialState() {
      return {
        touchable: {
          touchState: undefined,
          responderID: null
        }
      };
    },
    touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
      return !this.props.rejectResponderTermination;
    },
    touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
      return !this.props.disabled;
    },
    touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
      return true;
    },
    touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
      var dispatchID = e.currentTarget;
      e.persist();
      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
      this.pressOutDelayTimeout = null;
      this.state.touchable.touchState = States.NOT_RESPONDER;
      this.state.touchable.responderID = dispatchID;

      this._receiveSignal(Signals.RESPONDER_GRANT, e);

      var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
      delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;

      if (delayMS !== 0) {
        this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
      } else {
        this._handleDelay(e);
      }

      var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
      longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
      this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
    },
    touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
      this.pressInLocation = null;

      this._receiveSignal(Signals.RESPONDER_RELEASE, e);
    },
    touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
      this.pressInLocation = null;

      this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
    },
    touchableHandleResponderMove: function touchableHandleResponderMove(e) {
      if (!this.state.touchable.positionOnActivate) {
        return;
      }

      var positionOnActivate = this.state.touchable.positionOnActivate;
      var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
      var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
        left: PRESS_EXPAND_PX,
        right: PRESS_EXPAND_PX,
        top: PRESS_EXPAND_PX,
        bottom: PRESS_EXPAND_PX
      };
      var pressExpandLeft = pressRectOffset.left;
      var pressExpandTop = pressRectOffset.top;
      var pressExpandRight = pressRectOffset.right;
      var pressExpandBottom = pressRectOffset.bottom;
      var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;

      if (hitSlop) {
        pressExpandLeft += hitSlop.left || 0;
        pressExpandTop += hitSlop.top || 0;
        pressExpandRight += hitSlop.right || 0;
        pressExpandBottom += hitSlop.bottom || 0;
      }

      var touch = extractSingleTouch(e.nativeEvent);
      var pageX = touch && touch.pageX;
      var pageY = touch && touch.pageY;

      if (this.pressInLocation) {
        var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);

        if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
          this._cancelLongPressDelayTimeout();
        }
      }

      var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;

      if (isTouchWithinActive) {
        var prevState = this.state.touchable.touchState;

        this._receiveSignal(Signals.ENTER_PRESS_RECT, e);

        var curState = this.state.touchable.touchState;

        if (curState === States.RESPONDER_INACTIVE_PRESS_IN && prevState !== States.RESPONDER_INACTIVE_PRESS_IN) {
          this._cancelLongPressDelayTimeout();
        }
      } else {
        this._cancelLongPressDelayTimeout();

        this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
      }
    },
    touchableHandleFocus: function touchableHandleFocus(e) {
      this.props.onFocus && this.props.onFocus(e);
    },
    touchableHandleBlur: function touchableHandleBlur(e) {
      this.props.onBlur && this.props.onBlur(e);
    },
    _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
      var tag = this.state.touchable.responderID;

      if (tag == null) {
        return;
      }

      UIManager.measure(tag, this._handleQueryLayout);
    },
    _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
      if (!l && !t && !w && !h && !globalX && !globalY) {
        return;
      }

      this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);
      this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
      this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
      this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);
    },
    _handleDelay: function _handleDelay(e) {
      this.touchableDelayTimeout = null;

      this._receiveSignal(Signals.DELAY, e);
    },
    _handleLongDelay: function _handleLongDelay(e) {
      this.longPressDelayTimeout = null;
      var curState = this.state.touchable.touchState;

      if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
        console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
      } else {
        this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
      }
    },
    _receiveSignal: function _receiveSignal(signal, e) {
      var responderID = this.state.touchable.responderID;
      var curState = this.state.touchable.touchState;
      var nextState = Transitions[curState] && Transitions[curState][signal];

      if (!responderID && signal === Signals.RESPONDER_RELEASE) {
        return;
      }

      if (!nextState) {
        throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');
      }

      if (nextState === States.ERROR) {
        throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');
      }

      if (curState !== nextState) {
        this._performSideEffectsForTransition(curState, nextState, signal, e);

        this.state.touchable.touchState = nextState;
      }
    },
    _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
      this.longPressDelayTimeout = null;
    },
    _isHighlight: function _isHighlight(state) {
      return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
    },
    _savePressInLocation: function _savePressInLocation(e) {
      var touch = extractSingleTouch(e.nativeEvent);
      var pageX = touch && touch.pageX;
      var pageY = touch && touch.pageY;
      var locationX = touch && touch.locationX;
      var locationY = touch && touch.locationY;
      this.pressInLocation = {
        pageX: pageX,
        pageY: pageY,
        locationX: locationX,
        locationY: locationY
      };
    },
    _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
      var deltaX = aX - bX;
      var deltaY = aY - bY;
      return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
    },
    _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
      var curIsHighlight = this._isHighlight(curState);

      var newIsHighlight = this._isHighlight(nextState);

      var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;

      if (isFinalSignal) {
        this._cancelLongPressDelayTimeout();
      }

      var isInitialTransition = curState === States.NOT_RESPONDER && nextState === States.RESPONDER_INACTIVE_PRESS_IN;
      var isActiveTransition = !IsActive[curState] && IsActive[nextState];

      if (isInitialTransition || isActiveTransition) {
        this._remeasureMetricsOnActivation();
      }

      if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
        this.touchableHandleLongPress && this.touchableHandleLongPress(e);
      }

      if (newIsHighlight && !curIsHighlight) {
        this._startHighlight(e);
      } else if (!newIsHighlight && curIsHighlight) {
        this._endHighlight(e);
      }

      if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
        var hasLongPressHandler = !!this.props.onLongPress;
        var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());
        var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;

        if (shouldInvokePress && this.touchableHandlePress) {
          if (!newIsHighlight && !curIsHighlight) {
            this._startHighlight(e);

            this._endHighlight(e);
          }

          {
            this._playTouchSound();
          }
          this.touchableHandlePress(e);
        }
      }

      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
      this.touchableDelayTimeout = null;
    },
    _playTouchSound: function _playTouchSound() {
      UIManager.playTouchSound();
    },
    _startHighlight: function _startHighlight(e) {
      this._savePressInLocation(e);

      this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
    },
    _endHighlight: function _endHighlight(e) {
      var _this = this;

      if (this.touchableHandleActivePressOut) {
        if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
          this.pressOutDelayTimeout = setTimeout(function () {
            _this.touchableHandleActivePressOut(e);
          }, this.touchableGetPressOutDelayMS());
        } else {
          this.touchableHandleActivePressOut(e);
        }
      }
    },
    withoutDefaultFocusAndBlur: {}
  };

  var touchableHandleFocus = TouchableMixin.touchableHandleFocus,
      touchableHandleBlur = TouchableMixin.touchableHandleBlur,
      TouchableMixinWithoutDefaultFocusAndBlur = _objectWithoutProperties(TouchableMixin, ["touchableHandleFocus", "touchableHandleBlur"]);

  TouchableMixin.withoutDefaultFocusAndBlur = TouchableMixinWithoutDefaultFocusAndBlur;
  var Touchable = {
    Mixin: TouchableMixin,
    TOUCH_TARGET_DEBUG: false,
    renderDebugView: function renderDebugView(_ref) {
      var color = _ref.color,
          hitSlop = _ref.hitSlop;

      if (!Touchable.TOUCH_TARGET_DEBUG) {
        return null;
      }

      {
        throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
      }
      var debugHitSlopStyle = {};
      hitSlop = hitSlop || {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0
      };

      for (var key in hitSlop) {
        debugHitSlopStyle[key] = -hitSlop[key];
      }

      var normalizedColor = normalizeColor(color);

      if (typeof normalizedColor !== 'number') {
        return null;
      }

      var hexColor = '#' + ('00000000' + normalizedColor.toString(16)).substr(-8);
      return React.createElement(View, {
        pointerEvents: "none",
        style: [styles.debug, _objectSpread({
          borderColor: hexColor.slice(0, -2) + '55',
          backgroundColor: hexColor.slice(0, -2) + '0F'
        }, debugHitSlopStyle)]
      });
    }
  };
  var styles = StyleSheet.create({
    debug: {
      position: 'absolute',
      borderWidth: 1,
      borderStyle: 'dashed'
    }
  });
  module.exports = Touchable;
},184,[9,46,185,43,187,48,78,52,188,42,75,189,59]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PooledClass = _$$_REQUIRE(_dependencyMap[0]);

  var twoArgumentPooler = PooledClass.twoArgumentPooler;

  function BoundingDimensions(width, height) {
    this.width = width;
    this.height = height;
  }

  BoundingDimensions.prototype.destructor = function () {
    this.width = null;
    this.height = null;
  };

  BoundingDimensions.getPooledFromElement = function (element) {
    return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
  };

  PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);
  module.exports = BoundingDimensions;
},185,[186]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
    var Klass = this;

    if (Klass.instancePool.length) {
      var _instance = Klass.instancePool.pop();

      Klass.call(_instance, copyFieldsFrom);
      return _instance;
    } else {
      return new Klass(copyFieldsFrom);
    }
  };

  var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
    var Klass = this;

    if (Klass.instancePool.length) {
      var _instance2 = Klass.instancePool.pop();

      Klass.call(_instance2, a1, a2);
      return _instance2;
    } else {
      return new Klass(a1, a2);
    }
  };

  var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
    var Klass = this;

    if (Klass.instancePool.length) {
      var _instance3 = Klass.instancePool.pop();

      Klass.call(_instance3, a1, a2, a3);
      return _instance3;
    } else {
      return new Klass(a1, a2, a3);
    }
  };

  var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;

    if (Klass.instancePool.length) {
      var _instance4 = Klass.instancePool.pop();

      Klass.call(_instance4, a1, a2, a3, a4);
      return _instance4;
    } else {
      return new Klass(a1, a2, a3, a4);
    }
  };

  var standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    invariant(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
    instance.destructor();

    if (Klass.instancePool.length < Klass.poolSize) {
      Klass.instancePool.push(instance);
    }
  };

  var DEFAULT_POOL_SIZE = 10;
  var DEFAULT_POOLER = oneArgumentPooler;

  var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    NewKlass.instancePool = [];
    NewKlass.getPooled = pooler || DEFAULT_POOLER;

    if (!NewKlass.poolSize) {
      NewKlass.poolSize = DEFAULT_POOL_SIZE;
    }

    NewKlass.release = standardReleaser;
    return NewKlass;
  };

  var PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler
  };
  module.exports = PooledClass;
},186,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PooledClass = _$$_REQUIRE(_dependencyMap[0]);

  var twoArgumentPooler = PooledClass.twoArgumentPooler;

  function Position(left, top) {
    this.left = left;
    this.top = top;
  }

  Position.prototype.destructor = function () {
    this.left = null;
    this.top = null;
  };

  PooledClass.addPoolingTo(Position, twoArgumentPooler);
  module.exports = Position;
},187,[186]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var TVNavigationEventEmitter = _$$_REQUIRE(_dependencyMap[1]).TVNavigationEventEmitter;

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[2]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(TVNavigationEventEmitter);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},188,[43,8,117]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},189,[190]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},190,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},191,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[5]);

  var Touchable = _$$_REQUIRE(_dependencyMap[6]);

  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[7]);

  var UIManager = _$$_REQUIRE(_dependencyMap[8]);

  var View = _$$_REQUIRE(_dependencyMap[9]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[10]);

  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[11]);

  var processColor = _$$_REQUIRE(_dependencyMap[12]);

  var rippleBackgroundPropType = PropTypes.shape({
    type: PropTypes.oneOf(['RippleAndroid']),
    color: PropTypes.number,
    borderless: PropTypes.bool
  });
  var themeAttributeBackgroundPropType = PropTypes.shape({
    type: PropTypes.oneOf(['ThemeAttrAndroid']),
    attribute: PropTypes.string.isRequired
  });
  var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);
  var PRESS_RETENTION_OFFSET = {
    top: 20,
    left: 20,
    right: 20,
    bottom: 30
  };
  var TouchableNativeFeedback = createReactClass({
    displayName: 'TouchableNativeFeedback',
    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {
      background: backgroundPropType,
      hasTVPreferredFocus: PropTypes.bool,
      useForeground: PropTypes.bool
    }),
    statics: {
      SelectableBackground: function SelectableBackground() {
        return {
          type: 'ThemeAttrAndroid',
          attribute: 'selectableItemBackground'
        };
      },
      SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {
        return {
          type: 'ThemeAttrAndroid',
          attribute: 'selectableItemBackgroundBorderless'
        };
      },
      Ripple: function Ripple(color, borderless) {
        return {
          type: 'RippleAndroid',
          color: processColor(color),
          borderless: borderless
        };
      },
      canUseNativeForeground: function canUseNativeForeground() {
        return Platform.Version >= 23;
      }
    },
    mixins: [Touchable.Mixin],
    getDefaultProps: function getDefaultProps() {
      return {
        background: this.SelectableBackground()
      };
    },
    getInitialState: function getInitialState() {
      return this.touchableGetInitialState();
    },
    componentDidMount: function componentDidMount() {
      ensurePositiveDelayProps(this.props);
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      ensurePositiveDelayProps(nextProps);
    },
    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
      this.props.onPressIn && this.props.onPressIn(e);

      this._dispatchPressedStateChange(true);

      if (this.pressInLocation) {
        this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);
      }
    },
    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
      this.props.onPressOut && this.props.onPressOut(e);

      this._dispatchPressedStateChange(false);
    },
    touchableHandlePress: function touchableHandlePress(e) {
      this.props.onPress && this.props.onPress(e);
    },
    touchableHandleLongPress: function touchableHandleLongPress(e) {
      this.props.onLongPress && this.props.onLongPress(e);
    },
    touchableGetPressRectOffset: function touchableGetPressRectOffset() {
      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
    },
    touchableGetHitSlop: function touchableGetHitSlop() {
      return this.props.hitSlop;
    },
    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
      return this.props.delayPressIn;
    },
    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
      return this.props.delayLongPress;
    },
    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
      return this.props.delayPressOut;
    },
    _handleResponderMove: function _handleResponderMove(e) {
      this.touchableHandleResponderMove(e);

      this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);
    },
    _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.getViewManagerConfig('RCTView').Commands.hotspotUpdate, [destX || 0, destY || 0]);
    },
    _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.getViewManagerConfig('RCTView').Commands.setPressed, [pressed]);
    },
    render: function render() {
      var _objectSpread2;

      var child = React.Children.only(this.props.children);
      var children = child.props.children;

      if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {
        if (!Array.isArray(children)) {
          children = [children];
        }

        children.push(Touchable.renderDebugView({
          color: 'brown',
          hitSlop: this.props.hitSlop
        }));
      }

      if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {
        console.warn("Requested foreground ripple, but it is not available on this version of Android. Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different Touchable if the result is false.");
      }

      var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';

      var childProps = _objectSpread({}, child.props, (_objectSpread2 = {}, _defineProperty(_objectSpread2, drawableProp, this.props.background), _defineProperty(_objectSpread2, "accessible", this.props.accessible !== false), _defineProperty(_objectSpread2, "accessibilityLabel", this.props.accessibilityLabel), _defineProperty(_objectSpread2, "accessibilityRole", this.props.accessibilityRole), _defineProperty(_objectSpread2, "accessibilityStates", this.props.accessibilityStates), _defineProperty(_objectSpread2, "children", children), _defineProperty(_objectSpread2, "testID", this.props.testID), _defineProperty(_objectSpread2, "onLayout", this.props.onLayout), _defineProperty(_objectSpread2, "hitSlop", this.props.hitSlop), _defineProperty(_objectSpread2, "isTVSelectable", true), _defineProperty(_objectSpread2, "hasTVPreferredFocus", this.props.hasTVPreferredFocus), _defineProperty(_objectSpread2, "onStartShouldSetResponder", this.touchableHandleStartShouldSetResponder), _defineProperty(_objectSpread2, "onResponderTerminationRequest", this.touchableHandleResponderTerminationRequest), _defineProperty(_objectSpread2, "onResponderGrant", this.touchableHandleResponderGrant), _defineProperty(_objectSpread2, "onResponderMove", this._handleResponderMove), _defineProperty(_objectSpread2, "onResponderRelease", this.touchableHandleResponderRelease), _defineProperty(_objectSpread2, "onResponderTerminate", this.touchableHandleResponderTerminate), _objectSpread2));

      return React.cloneElement(child, childProps);
    }
  });
  module.exports = TouchableNativeFeedback;
},192,[47,46,43,48,61,78,184,193,42,75,194,198,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var React = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var Touchable = _$$_REQUIRE(_dependencyMap[4]);

  var View = _$$_REQUIRE(_dependencyMap[5]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[6]);

  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[7]);

  var _require = _$$_REQUIRE(_dependencyMap[8]),
      DeprecatedAccessibilityComponentTypes = _require.DeprecatedAccessibilityComponentTypes,
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates,
      DeprecatedAccessibilityTraits = _require.DeprecatedAccessibilityTraits;

  var PRESS_RETENTION_OFFSET = {
    top: 20,
    left: 20,
    right: 20,
    bottom: 30
  };
  var OVERRIDE_PROPS = ['accessibilityComponentType', 'accessibilityLabel', 'accessibilityHint', 'accessibilityIgnoresInvertColors', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'hitSlop', 'nativeID', 'onBlur', 'onFocus', 'onLayout', 'testID'];
  var TouchableWithoutFeedback = createReactClass({
    displayName: 'TouchableWithoutFeedback',
    mixins: [Touchable.Mixin],
    propTypes: {
      accessible: PropTypes.bool,
      accessibilityLabel: PropTypes.node,
      accessibilityHint: PropTypes.string,
      accessibilityComponentType: PropTypes.oneOf(DeprecatedAccessibilityComponentTypes),
      accessibilityIgnoresInvertColors: PropTypes.bool,
      accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
      accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
      accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(DeprecatedAccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityTraits))]),
      onFocus: PropTypes.func,
      onBlur: PropTypes.func,
      disabled: PropTypes.bool,
      onPress: PropTypes.func,
      onPressIn: PropTypes.func,
      onPressOut: PropTypes.func,
      onLayout: PropTypes.func,
      onLongPress: PropTypes.func,
      nativeID: PropTypes.string,
      testID: PropTypes.string,
      delayPressIn: PropTypes.number,
      delayPressOut: PropTypes.number,
      delayLongPress: PropTypes.number,
      pressRetentionOffset: DeprecatedEdgeInsetsPropType,
      hitSlop: DeprecatedEdgeInsetsPropType
    },
    getInitialState: function getInitialState() {
      return this.touchableGetInitialState();
    },
    componentDidMount: function componentDidMount() {
      ensurePositiveDelayProps(this.props);
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      ensurePositiveDelayProps(nextProps);
    },
    touchableHandlePress: function touchableHandlePress(e) {
      this.props.onPress && this.props.onPress(e);
    },
    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
      this.props.onPressIn && this.props.onPressIn(e);
    },
    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
      this.props.onPressOut && this.props.onPressOut(e);
    },
    touchableHandleLongPress: function touchableHandleLongPress(e) {
      this.props.onLongPress && this.props.onLongPress(e);
    },
    touchableGetPressRectOffset: function touchableGetPressRectOffset() {
      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
    },
    touchableGetHitSlop: function touchableGetHitSlop() {
      return this.props.hitSlop;
    },
    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
      return this.props.delayPressIn || 0;
    },
    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
      return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
    },
    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
      return this.props.delayPressOut || 0;
    },
    render: function render() {
      var child = React.Children.only(this.props.children);
      var children = child.props.children;

      if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {
        children = React.Children.toArray(children);
        children.push(Touchable.renderDebugView({
          color: 'red',
          hitSlop: this.props.hitSlop
        }));
      }

      var overrides = {};

      for (var _i = 0, _OVERRIDE_PROPS = OVERRIDE_PROPS; _i < _OVERRIDE_PROPS.length; _i++) {
        var prop = _OVERRIDE_PROPS[_i];

        if (this.props[prop] !== undefined) {
          overrides[prop] = this.props[prop];
        }
      }

      return React.cloneElement(child, _objectSpread({}, overrides, {
        accessible: this.props.accessible !== false,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,
        children: children
      }));
    }
  });
  module.exports = TouchableWithoutFeedback;
},193,[46,181,48,61,184,75,194,198,199]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var factory = _$$_REQUIRE(_dependencyMap[1]);

  if (typeof React === 'undefined') {
    throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");
  }

  var ReactNoopUpdateQueue = new React.Component().updater;
  module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
},194,[49,195]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _assign = _$$_REQUIRE(_dependencyMap[0]);

  var emptyObject = _$$_REQUIRE(_dependencyMap[1]);

  var _invariant = _$$_REQUIRE(_dependencyMap[2]);

  var MIXINS_KEY = 'mixins';

  function identity(fn) {
    return fn;
  }

  var ReactPropTypeLocationNames;
  {
    ReactPropTypeLocationNames = {};
  }

  function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
    var injectedMixins = [];
    var ReactClassInterface = {
      mixins: 'DEFINE_MANY',
      statics: 'DEFINE_MANY',
      propTypes: 'DEFINE_MANY',
      contextTypes: 'DEFINE_MANY',
      childContextTypes: 'DEFINE_MANY',
      getDefaultProps: 'DEFINE_MANY_MERGED',
      getInitialState: 'DEFINE_MANY_MERGED',
      getChildContext: 'DEFINE_MANY_MERGED',
      render: 'DEFINE_ONCE',
      componentWillMount: 'DEFINE_MANY',
      componentDidMount: 'DEFINE_MANY',
      componentWillReceiveProps: 'DEFINE_MANY',
      shouldComponentUpdate: 'DEFINE_ONCE',
      componentWillUpdate: 'DEFINE_MANY',
      componentDidUpdate: 'DEFINE_MANY',
      componentWillUnmount: 'DEFINE_MANY',
      UNSAFE_componentWillMount: 'DEFINE_MANY',
      UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',
      UNSAFE_componentWillUpdate: 'DEFINE_MANY',
      updateComponent: 'OVERRIDE_BASE'
    };
    var ReactClassStaticInterface = {
      getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
    };
    var RESERVED_SPEC_KEYS = {
      displayName: function displayName(Constructor, _displayName) {
        Constructor.displayName = _displayName;
      },
      mixins: function mixins(Constructor, _mixins) {
        if (_mixins) {
          for (var i = 0; i < _mixins.length; i++) {
            mixSpecIntoComponent(Constructor, _mixins[i]);
          }
        }
      },
      childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
        Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
      },
      contextTypes: function contextTypes(Constructor, _contextTypes) {
        Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
      },
      getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
        } else {
          Constructor.getDefaultProps = _getDefaultProps;
        }
      },
      propTypes: function propTypes(Constructor, _propTypes) {
        Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
      },
      statics: function statics(Constructor, _statics) {
        mixStaticSpecIntoComponent(Constructor, _statics);
      },
      autobind: function autobind() {}
    };

    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {}
      }
    }

    function validateMethodOverride(isAlreadyDefined, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

      if (ReactClassMixin.hasOwnProperty(name)) {
        _invariant(specPolicy === 'OVERRIDE_BASE', "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", name);
      }

      if (isAlreadyDefined) {
        _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);
      }
    }

    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }

      _invariant(typeof spec !== 'function', "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");

      _invariant(!isValidElement(spec), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");

      var proto = Constructor.prototype;
      var autoBindPairs = proto.__reactAutoBindPairs;

      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }

      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }

        if (name === MIXINS_KEY) {
          continue;
        }

        var property = spec[name];
        var isAlreadyDefined = proto.hasOwnProperty(name);
        validateMethodOverride(isAlreadyDefined, name);

        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

          if (shouldAutoBind) {
            autoBindPairs.push(name, property);
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];

              _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", specPolicy, name);

              if (specPolicy === 'DEFINE_MANY_MERGED') {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === 'DEFINE_MANY') {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
            }
          }
        }
      }
    }

    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }

      for (var name in statics) {
        var property = statics[name];

        if (!statics.hasOwnProperty(name)) {
          continue;
        }

        var isReserved = name in RESERVED_SPEC_KEYS;

        _invariant(!isReserved, "ReactClass: You are attempting to define a reserved property, `%s`, that shouldn't be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.", name);

        var isAlreadyDefined = name in Constructor;

        if (isAlreadyDefined) {
          var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;

          _invariant(specPolicy === 'DEFINE_MANY_MERGED', "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);

          Constructor[name] = createMergedResultFunction(Constructor[name], property);
          return;
        }

        Constructor[name] = property;
      }
    }

    function mergeIntoWithNoDuplicateKeys(one, two) {
      _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          _invariant(one[key] === undefined, "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", key);

          one[key] = two[key];
        }
      }

      return one;
    }

    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);

        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }

        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }

    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }

    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      return boundMethod;
    }

    function bindAutoBindMethods(component) {
      var pairs = component.__reactAutoBindPairs;

      for (var i = 0; i < pairs.length; i += 2) {
        var autoBindKey = pairs[i];
        var method = pairs[i + 1];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }

    var IsMountedPreMixin = {
      componentDidMount: function componentDidMount() {
        this.__isMounted = true;
      }
    };
    var IsMountedPostMixin = {
      componentWillUnmount: function componentWillUnmount() {
        this.__isMounted = false;
      }
    };
    var ReactClassMixin = {
      replaceState: function replaceState(newState, callback) {
        this.updater.enqueueReplaceState(this, newState, callback);
      },
      isMounted: function isMounted() {
        return !!this.__isMounted;
      }
    };

    var ReactClassComponent = function ReactClassComponent() {};

    _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

    function createClass(spec) {
      var Constructor = identity(function (props, context, updater) {
        if (this.__reactAutoBindPairs.length) {
          bindAutoBindMethods(this);
        }

        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
        this.state = null;
        var initialState = this.getInitialState ? this.getInitialState() : null;

        _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

        this.state = initialState;
      });
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      Constructor.prototype.__reactAutoBindPairs = [];
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, IsMountedPreMixin);
      mixSpecIntoComponent(Constructor, spec);
      mixSpecIntoComponent(Constructor, IsMountedPostMixin);

      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }

      _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }

      return Constructor;
    }

    return createClass;
  }

  module.exports = factory;
},195,[51,196,197]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyObject = {};
  module.exports = emptyObject;
},196,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function validateFormat(format) {};

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},197,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var ensurePositiveDelayProps = function ensurePositiveDelayProps(props) {
    invariant(!(props.delayPressIn < 0 || props.delayPressOut < 0 || props.delayLongPress < 0), 'Touchable components cannot have negative delay properties');
  };

  module.exports = ensurePositiveDelayProps;
},198,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityTraits: ['none', 'button', 'link', 'header', 'search', 'image', 'selected', 'plays', 'key', 'text', 'summary', 'disabled', 'frequentUpdates', 'startsMedia', 'adjustable', 'allowsDirectInteraction', 'pageTurn'],
    DeprecatedAccessibilityComponentTypes: ['none', 'button', 'radiobutton_checked', 'radiobutton_unchecked'],
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary'],
    DeprecatedAccessibilityStates: ['selected', 'disabled']
  };
},199,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var Animated = _$$_REQUIRE(_dependencyMap[1]);

  var Easing = _$$_REQUIRE(_dependencyMap[2]);

  var NativeMethodsMixin = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[6]);

  var Touchable = _$$_REQUIRE(_dependencyMap[7]);

  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[8]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[9]);

  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[10]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[11]);

  var PRESS_RETENTION_OFFSET = {
    top: 20,
    left: 20,
    right: 20,
    bottom: 30
  };
  var TouchableOpacity = createReactClass({
    displayName: 'TouchableOpacity',
    mixins: [Touchable.Mixin.withoutDefaultFocusAndBlur, NativeMethodsMixin],
    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {
      activeOpacity: PropTypes.number,
      hasTVPreferredFocus: PropTypes.bool,
      tvParallaxProperties: PropTypes.object
    }),
    getDefaultProps: function getDefaultProps() {
      return {
        activeOpacity: 0.2
      };
    },
    getInitialState: function getInitialState() {
      return _objectSpread({}, this.touchableGetInitialState(), {
        anim: new Animated.Value(this._getChildStyleOpacityWithDefault())
      });
    },
    componentDidMount: function componentDidMount() {
      ensurePositiveDelayProps(this.props);
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      ensurePositiveDelayProps(nextProps);
    },
    componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
      if (this.props.disabled !== prevProps.disabled) {
        this._opacityInactive(250);
      }
    },
    setOpacityTo: function setOpacityTo(value, duration) {
      Animated.timing(this.state.anim, {
        toValue: value,
        duration: duration,
        easing: Easing.inOut(Easing.quad),
        useNativeDriver: true
      }).start();
    },
    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
      if (e.dispatchConfig.registrationName === 'onResponderGrant') {
        this._opacityActive(0);
      } else {
        this._opacityActive(150);
      }

      this.props.onPressIn && this.props.onPressIn(e);
    },
    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
      this._opacityInactive(250);

      this.props.onPressOut && this.props.onPressOut(e);
    },
    touchableHandleFocus: function touchableHandleFocus(e) {
      if (Platform.isTV) {
        this._opacityActive(150);
      }

      this.props.onFocus && this.props.onFocus(e);
    },
    touchableHandleBlur: function touchableHandleBlur(e) {
      if (Platform.isTV) {
        this._opacityInactive(250);
      }

      this.props.onBlur && this.props.onBlur(e);
    },
    touchableHandlePress: function touchableHandlePress(e) {
      this.props.onPress && this.props.onPress(e);
    },
    touchableHandleLongPress: function touchableHandleLongPress(e) {
      this.props.onLongPress && this.props.onLongPress(e);
    },
    touchableGetPressRectOffset: function touchableGetPressRectOffset() {
      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
    },
    touchableGetHitSlop: function touchableGetHitSlop() {
      return this.props.hitSlop;
    },
    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
      return this.props.delayPressIn || 0;
    },
    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
      return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
    },
    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
      return this.props.delayPressOut;
    },
    _opacityActive: function _opacityActive(duration) {
      this.setOpacityTo(this.props.activeOpacity, duration);
    },
    _opacityInactive: function _opacityInactive(duration) {
      this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
    },
    _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {
      var childStyle = flattenStyle(this.props.style) || {};
      return childStyle.opacity == null ? 1 : childStyle.opacity;
    },
    render: function render() {
      return React.createElement(Animated.View, {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityHint: this.props.accessibilityHint,
        accessibilityRole: this.props.accessibilityRole,
        accessibilityStates: this.props.accessibilityStates,
        style: [this.props.style, {
          opacity: this.state.anim
        }],
        nativeID: this.props.nativeID,
        testID: this.props.testID,
        onLayout: this.props.onLayout,
        isTVSelectable: true,
        hasTVPreferredFocus: this.props.hasTVPreferredFocus,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hitSlop: this.props.hitSlop,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate
      }, this.props.children, Touchable.renderDebugView({
        color: 'cyan',
        hitSlop: this.props.hitSlop
      }));
    }
  });
  module.exports = TouchableOpacity;
},200,[46,201,228,262,43,48,61,184,193,194,198,74]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function _Platform() {
    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

    _Platform = function _Platform() {
      return data;
    };

    return data;
  }

  var AnimatedImplementation = _Platform().default.isTesting ? _$$_REQUIRE(_dependencyMap[3]) : _$$_REQUIRE(_dependencyMap[4]);
  module.exports = (0, _objectSpread2.default)({
    get FlatList() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get Image() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get ScrollView() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get SectionList() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get Text() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get View() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  }, AnimatedImplementation);
},201,[1,46,43,202,211,231,250,256,257,260,261]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[1]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[6]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[7]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    return emptyAnimation;
  };

  var timing = function timing(value, config) {
    return emptyAnimation;
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},202,[203,211,205,206,217,204,222,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[2]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[3]),
      shouldUseNativeDriver = _require.shouldUseNativeDriver;

  function attachNativeEvent(viewRef, eventName, argMapping) {
    var eventMappings = [];

    var traverse = function traverse(value, path) {
      if (value instanceof AnimatedValue) {
        value.__makeNative();

        eventMappings.push({
          nativeEventPath: path,
          animatedValueTag: value.__getNativeTag()
        });
      } else if (typeof value === 'object') {
        for (var _key in value) {
          traverse(value[_key], path.concat(_key));
        }
      }
    };

    invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');
    traverse(argMapping[0].nativeEvent, []);
    var viewTag = ReactNative.findNodeHandle(viewRef);
    eventMappings.forEach(function (mapping) {
      NativeAnimatedHelper.API.addAnimatedEventToView(viewTag, eventName, mapping);
    });
    return {
      detach: function detach() {
        eventMappings.forEach(function (mapping) {
          NativeAnimatedHelper.API.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);
        });
      }
    };
  }

  var AnimatedEvent = function () {
    function AnimatedEvent(argMapping) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      _classCallCheck(this, AnimatedEvent);

      this._listeners = [];
      this._argMapping = argMapping;

      if (config.listener) {
        this.__addListener(config.listener);
      }

      this._callListeners = this._callListeners.bind(this);
      this._attachedEvent = null;
      this.__isNative = shouldUseNativeDriver(config);
    }

    _createClass(AnimatedEvent, [{
      key: "__addListener",
      value: function __addListener(callback) {
        this._listeners.push(callback);
      }
    }, {
      key: "__removeListener",
      value: function __removeListener(callback) {
        this._listeners = this._listeners.filter(function (listener) {
          return listener !== callback;
        });
      }
    }, {
      key: "__attach",
      value: function __attach(viewRef, eventName) {
        invariant(this.__isNative, 'Only native driven events need to be attached.');
        this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);
      }
    }, {
      key: "__detach",
      value: function __detach(viewTag, eventName) {
        invariant(this.__isNative, 'Only native driven events need to be detached.');
        this._attachedEvent && this._attachedEvent.detach();
      }
    }, {
      key: "__getHandler",
      value: function __getHandler() {
        var _this = this;

        if (this.__isNative) {
          return this._callListeners;
        }

        return function () {
          for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
            args[_key2] = arguments[_key2];
          }

          var traverse = function traverse(recMapping, recEvt, key) {
            if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {
              recMapping.setValue(recEvt);
            } else if (typeof recMapping === 'object') {
              for (var mappingKey in recMapping) {
                traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
              }
            }
          };

          if (!_this.__isNative) {
            _this._argMapping.forEach(function (mapping, idx) {
              traverse(mapping, args[idx], 'arg' + idx);
            });
          }

          _this._callListeners.apply(_this, args);
        };
      }
    }, {
      key: "_callListeners",
      value: function _callListeners() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
          args[_key3] = arguments[_key3];
        }

        this._listeners.forEach(function (listener) {
          return listener.apply(undefined, args);
        });
      }
    }, {
      key: "_validateMapping",
      value: function _validateMapping() {
        var traverse = function traverse(recMapping, recEvt, key) {
          if (typeof recEvt === 'number') {
            invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');
            return;
          }

          invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);
          invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);

          for (var mappingKey in recMapping) {
            traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
          }
        };
      }
    }]);

    return AnimatedEvent;
  }();

  module.exports = {
    AnimatedEvent: AnimatedEvent,
    attachNativeEvent: attachNativeEvent
  };
},203,[22,23,204,207,78,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[7]);

  var InteractionManager = _$$_REQUIRE(_dependencyMap[8]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[9]);

  var NativeAnimatedAPI = NativeAnimatedHelper.API;

  function _flush(rootNode) {
    var animatedStyles = new Set();

    function findAnimatedStyles(node) {
      if (typeof node.update === 'function') {
        animatedStyles.add(node);
      } else {
        node.__getChildren().forEach(findAnimatedStyles);
      }
    }

    findAnimatedStyles(rootNode);
    animatedStyles.forEach(function (animatedStyle) {
      return animatedStyle.update();
    });
  }

  var AnimatedValue = function (_AnimatedWithChildren) {
    _inherits(AnimatedValue, _AnimatedWithChildren);

    function AnimatedValue(value) {
      var _this;

      _classCallCheck(this, AnimatedValue);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedValue).call(this));
      _this._startingValue = _this._value = value;
      _this._offset = 0;
      _this._animation = null;
      return _this;
    }

    _createClass(AnimatedValue, [{
      key: "__detach",
      value: function __detach() {
        this.stopAnimation();

        _get(_getPrototypeOf(AnimatedValue.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._value + this._offset;
      }
    }, {
      key: "setValue",
      value: function setValue(value) {
        if (this._animation) {
          this._animation.stop();

          this._animation = null;
        }

        this._updateValue(value, !this.__isNative);

        if (this.__isNative) {
          NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);
        }
      }
    }, {
      key: "setOffset",
      value: function setOffset(offset) {
        this._offset = offset;

        if (this.__isNative) {
          NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
        }
      }
    }, {
      key: "flattenOffset",
      value: function flattenOffset() {
        this._value += this._offset;
        this._offset = 0;

        if (this.__isNative) {
          NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
        }
      }
    }, {
      key: "extractOffset",
      value: function extractOffset() {
        this._offset += this._value;
        this._value = 0;

        if (this.__isNative) {
          NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
        }
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation(callback) {
        this.stopTracking();
        this._animation && this._animation.stop();
        this._animation = null;
        callback && callback(this.__getValue());
      }
    }, {
      key: "resetAnimation",
      value: function resetAnimation(callback) {
        this.stopAnimation(callback);
        this._value = this._startingValue;
      }
    }, {
      key: "_onAnimatedValueUpdateReceived",
      value: function _onAnimatedValueUpdateReceived(value) {
        this._updateValue(value, false);
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "animate",
      value: function animate(animation, callback) {
        var _this2 = this;

        var handle = null;

        if (animation.__isInteraction) {
          handle = InteractionManager.createInteractionHandle();
        }

        var previousAnimation = this._animation;
        this._animation && this._animation.stop();
        this._animation = animation;
        animation.start(this._value, function (value) {
          _this2._updateValue(value, true);
        }, function (result) {
          _this2._animation = null;

          if (handle !== null) {
            InteractionManager.clearInteractionHandle(handle);
          }

          callback && callback(result);
        }, previousAnimation, this);
      }
    }, {
      key: "stopTracking",
      value: function stopTracking() {
        this._tracking && this._tracking.__detach();
        this._tracking = null;
      }
    }, {
      key: "track",
      value: function track(tracking) {
        this.stopTracking();
        this._tracking = tracking;
      }
    }, {
      key: "_updateValue",
      value: function _updateValue(value, flush) {
        this._value = value;

        if (flush) {
          _flush(this);
        }

        _get(_getPrototypeOf(AnimatedValue.prototype), "__callListeners", this).call(this, this.__getValue());
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'value',
          value: this._value,
          offset: this._offset
        };
      }
    }]);

    return AnimatedValue;
  }(AnimatedWithChildren);

  module.exports = AnimatedValue;
},204,[22,23,30,33,34,36,205,208,209,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[8]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[9]);

  var invariant = _$$_REQUIRE(_dependencyMap[10]);

  var normalizeColor = _$$_REQUIRE(_dependencyMap[11]);

  var linear = function linear(t) {
    return t;
  };

  function createInterpolation(config) {
    if (config.outputRange && typeof config.outputRange[0] === 'string') {
      return createInterpolationFromStringOutputRange(config);
    }

    var outputRange = config.outputRange;
    checkInfiniteRange('outputRange', outputRange);
    var inputRange = config.inputRange;
    checkInfiniteRange('inputRange', inputRange);
    checkValidInputRange(inputRange);
    invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');
    var easing = config.easing || linear;
    var extrapolateLeft = 'extend';

    if (config.extrapolateLeft !== undefined) {
      extrapolateLeft = config.extrapolateLeft;
    } else if (config.extrapolate !== undefined) {
      extrapolateLeft = config.extrapolate;
    }

    var extrapolateRight = 'extend';

    if (config.extrapolateRight !== undefined) {
      extrapolateRight = config.extrapolateRight;
    } else if (config.extrapolate !== undefined) {
      extrapolateRight = config.extrapolate;
    }

    return function (input) {
      invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');
      var range = findRange(input, inputRange);
      return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
    };
  }

  function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
    var result = input;

    if (result < inputMin) {
      if (extrapolateLeft === 'identity') {
        return result;
      } else if (extrapolateLeft === 'clamp') {
        result = inputMin;
      } else if (extrapolateLeft === 'extend') {}
    }

    if (result > inputMax) {
      if (extrapolateRight === 'identity') {
        return result;
      } else if (extrapolateRight === 'clamp') {
        result = inputMax;
      } else if (extrapolateRight === 'extend') {}
    }

    if (outputMin === outputMax) {
      return outputMin;
    }

    if (inputMin === inputMax) {
      if (input <= inputMin) {
        return outputMin;
      }

      return outputMax;
    }

    if (inputMin === -(1 / 0)) {
      result = -result;
    } else if (inputMax === Infinity) {
      result = result - inputMin;
    } else {
      result = (result - inputMin) / (inputMax - inputMin);
    }

    result = easing(result);

    if (outputMin === -(1 / 0)) {
      result = -result;
    } else if (outputMax === Infinity) {
      result = result + outputMin;
    } else {
      result = result * (outputMax - outputMin) + outputMin;
    }

    return result;
  }

  function colorToRgba(input) {
    var int32Color = normalizeColor(input);

    if (int32Color === null) {
      return input;
    }

    int32Color = int32Color || 0;
    var r = (int32Color & 0xff000000) >>> 24;
    var g = (int32Color & 0x00ff0000) >>> 16;
    var b = (int32Color & 0x0000ff00) >>> 8;
    var a = (int32Color & 0x000000ff) / 255;
    return "rgba(" + r + ", " + g + ", " + b + ", " + a + ")";
  }

  var stringShapeRegex = /[0-9\.-]+/g;

  function createInterpolationFromStringOutputRange(config) {
    var outputRange = config.outputRange;
    invariant(outputRange.length >= 2, 'Bad output range');
    outputRange = outputRange.map(colorToRgba);
    checkPattern(outputRange);
    var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {
      return [];
    });
    outputRange.forEach(function (value) {
      value.match(stringShapeRegex).forEach(function (number, i) {
        outputRanges[i].push(+number);
      });
    });
    var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {
      return createInterpolation(_objectSpread({}, config, {
        outputRange: outputRanges[i]
      }));
    });
    var shouldRound = isRgbOrRgba(outputRange[0]);
    return function (input) {
      var i = 0;
      return outputRange[0].replace(stringShapeRegex, function () {
        var val = +interpolations[i++](input);
        var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
        return String(rounded);
      });
    };
  }

  function isRgbOrRgba(range) {
    return typeof range === 'string' && range.startsWith('rgb');
  }

  function checkPattern(arr) {
    var pattern = arr[0].replace(stringShapeRegex, '');

    for (var i = 1; i < arr.length; ++i) {
      invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);
    }
  }

  function findRange(input, inputRange) {
    var i;

    for (i = 1; i < inputRange.length - 1; ++i) {
      if (inputRange[i] >= input) {
        break;
      }
    }

    return i - 1;
  }

  function checkValidInputRange(arr) {
    invariant(arr.length >= 2, 'inputRange must have at least 2 elements');

    for (var i = 1; i < arr.length; ++i) {
      invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically non-decreasing ' + arr);
    }
  }

  function checkInfiniteRange(name, arr) {
    invariant(arr.length >= 2, name + ' must have at least 2 elements');
    invariant(arr.length !== 2 || arr[0] !== -(1 / 0) || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);
  }

  var AnimatedInterpolation = function (_AnimatedWithChildren) {
    _inherits(AnimatedInterpolation, _AnimatedWithChildren);

    function AnimatedInterpolation(parent, config) {
      var _this;

      _classCallCheck(this, AnimatedInterpolation);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedInterpolation).call(this));
      _this._parent = parent;
      _this._config = config;
      _this._interpolation = createInterpolation(config);
      return _this;
    }

    _createClass(AnimatedInterpolation, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._parent.__makeNative();

        _get(_getPrototypeOf(AnimatedInterpolation.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        var parentValue = this._parent.__getValue();

        invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');
        return this._interpolation(parentValue);
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._parent.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._parent.__removeChild(this);

        _get(_getPrototypeOf(AnimatedInterpolation.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__transformDataType",
      value: function __transformDataType(range) {
        return range.map(NativeAnimatedHelper.transformDataType);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          inputRange: this._config.inputRange,
          outputRange: this.__transformDataType(this._config.outputRange),
          extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
          extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
          type: 'interpolation'
        };
      }
    }]);

    return AnimatedInterpolation;
  }(AnimatedWithChildren);

  AnimatedInterpolation.__createInterpolation = createInterpolation;
  module.exports = AnimatedInterpolation;
},205,[22,23,30,33,34,36,46,206,208,207,3,59]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[2]);

  var NativeAnimatedAPI = NativeAnimatedHelper.API;

  var invariant = _$$_REQUIRE(_dependencyMap[3]);

  var _uniqueId = 1;

  var AnimatedNode = function () {
    _createClass(AnimatedNode, [{
      key: "__attach",
      value: function __attach() {}
    }, {
      key: "__detach",
      value: function __detach() {
        if (this.__isNative && this.__nativeTag != null) {
          NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);
          this.__nativeTag = undefined;
        }
      }
    }, {
      key: "__getValue",
      value: function __getValue() {}
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        return this.__getValue();
      }
    }, {
      key: "__addChild",
      value: function __addChild(child) {}
    }, {
      key: "__removeChild",
      value: function __removeChild(child) {}
    }, {
      key: "__getChildren",
      value: function __getChildren() {
        return [];
      }
    }]);

    function AnimatedNode() {
      _classCallCheck(this, AnimatedNode);

      this._listeners = {};
    }

    _createClass(AnimatedNode, [{
      key: "__makeNative",
      value: function __makeNative() {
        if (!this.__isNative) {
          throw new Error('This node cannot be made a "native" animated node');
        }

        if (this.hasListeners()) {
          this._startListeningToNativeValueUpdates();
        }
      }
    }, {
      key: "addListener",
      value: function addListener(callback) {
        var id = String(_uniqueId++);
        this._listeners[id] = callback;

        if (this.__isNative) {
          this._startListeningToNativeValueUpdates();
        }

        return id;
      }
    }, {
      key: "removeListener",
      value: function removeListener(id) {
        delete this._listeners[id];

        if (this.__isNative && !this.hasListeners()) {
          this._stopListeningForNativeValueUpdates();
        }
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners() {
        this._listeners = {};

        if (this.__isNative) {
          this._stopListeningForNativeValueUpdates();
        }
      }
    }, {
      key: "hasListeners",
      value: function hasListeners() {
        return !!Object.keys(this._listeners).length;
      }
    }, {
      key: "_startListeningToNativeValueUpdates",
      value: function _startListeningToNativeValueUpdates() {
        var _this = this;

        if (this.__nativeAnimatedValueListener) {
          return;
        }

        NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());
        this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
          if (data.tag !== _this.__getNativeTag()) {
            return;
          }

          _this._onAnimatedValueUpdateReceived(data.value);
        });
      }
    }, {
      key: "_onAnimatedValueUpdateReceived",
      value: function _onAnimatedValueUpdateReceived(value) {
        this.__callListeners(value);
      }
    }, {
      key: "__callListeners",
      value: function __callListeners(value) {
        for (var _key in this._listeners) {
          this._listeners[_key]({
            value: value
          });
        }
      }
    }, {
      key: "_stopListeningForNativeValueUpdates",
      value: function _stopListeningForNativeValueUpdates() {
        if (!this.__nativeAnimatedValueListener) {
          return;
        }

        this.__nativeAnimatedValueListener.remove();

        this.__nativeAnimatedValueListener = null;
        NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());
      }
    }, {
      key: "__getNativeTag",
      value: function __getNativeTag() {
        NativeAnimatedHelper.assertNativeAnimatedModule();
        invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');

        if (this.__nativeTag == null) {
          var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
          NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());
          this.__nativeTag = nativeTag;
        }

        return this.__nativeTag;
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        throw new Error('This JS animated node type cannot be used as native animated node');
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return this.__getValue();
      }
    }]);

    return AnimatedNode;
  }();

  module.exports = AnimatedNode;
},206,[22,23,207,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeAnimatedModule = _$$_REQUIRE(_dependencyMap[0]).NativeAnimatedModule;

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[1]);

  var invariant = _$$_REQUIRE(_dependencyMap[2]);

  var __nativeAnimatedNodeTagCount = 1;
  var __nativeAnimationIdCount = 1;
  var nativeEventEmitter;
  var API = {
    createAnimatedNode: function createAnimatedNode(tag, config) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.createAnimatedNode(tag, config);
    },
    startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);
    },
    stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);
    },
    connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);
    },
    disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);
    },
    startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);
    },
    stopAnimation: function stopAnimation(animationId) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.stopAnimation(animationId);
    },
    setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);
    },
    setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);
    },
    flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);
    },
    extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);
    },
    connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);
    },
    disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);
    },
    dropAnimatedNode: function dropAnimatedNode(tag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.dropAnimatedNode(tag);
    },
    addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);
    },
    removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {
      assertNativeAnimatedModule();
      NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);
    }
  };
  var STYLES_WHITELIST = {
    opacity: true,
    transform: true,
    borderRadius: true,
    borderBottomEndRadius: true,
    borderBottomLeftRadius: true,
    borderBottomRightRadius: true,
    borderBottomStartRadius: true,
    borderTopEndRadius: true,
    borderTopLeftRadius: true,
    borderTopRightRadius: true,
    borderTopStartRadius: true,
    elevation: true,
    shadowOpacity: true,
    shadowRadius: true,
    scaleX: true,
    scaleY: true,
    translateX: true,
    translateY: true
  };
  var TRANSFORM_WHITELIST = {
    translateX: true,
    translateY: true,
    scale: true,
    scaleX: true,
    scaleY: true,
    rotate: true,
    rotateX: true,
    rotateY: true,
    perspective: true
  };
  var SUPPORTED_INTERPOLATION_PARAMS = {
    inputRange: true,
    outputRange: true,
    extrapolate: true,
    extrapolateRight: true,
    extrapolateLeft: true
  };

  function addWhitelistedStyleProp(prop) {
    STYLES_WHITELIST[prop] = true;
  }

  function addWhitelistedTransformProp(prop) {
    TRANSFORM_WHITELIST[prop] = true;
  }

  function addWhitelistedInterpolationParam(param) {
    SUPPORTED_INTERPOLATION_PARAMS[param] = true;
  }

  function validateTransform(configs) {
    configs.forEach(function (config) {
      if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {
        throw new Error("Property '" + config.property + "' is not supported by native animated module");
      }
    });
  }

  function validateStyles(styles) {
    for (var key in styles) {
      if (!STYLES_WHITELIST.hasOwnProperty(key)) {
        throw new Error("Style property '" + key + "' is not supported by native animated module");
      }
    }
  }

  function validateInterpolation(config) {
    for (var key in config) {
      if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {
        throw new Error("Interpolation property '" + key + "' is not supported by native animated module");
      }
    }
  }

  function generateNewNodeTag() {
    return __nativeAnimatedNodeTagCount++;
  }

  function generateNewAnimationId() {
    return __nativeAnimationIdCount++;
  }

  function assertNativeAnimatedModule() {
    invariant(NativeAnimatedModule, 'Native animated module is not available');
  }

  var _warnedMissingNativeAnimated = false;

  function shouldUseNativeDriver(config) {
    if (config.useNativeDriver && !NativeAnimatedModule) {
      if (!_warnedMissingNativeAnimated) {
        console.warn("Animated: `useNativeDriver` is not supported because the native animated module is missing. Falling back to JS-based animation. To resolve this, add `RCTAnimation` module to this app, or remove `useNativeDriver`. More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420");
        _warnedMissingNativeAnimated = true;
      }

      return false;
    }

    return config.useNativeDriver || false;
  }

  function transformDataType(value) {
    if (typeof value !== 'string') {
      return value;
    }

    if (/deg$/.test(value)) {
      var degrees = parseFloat(value) || 0;
      var radians = degrees * Math.PI / 180.0;
      return radians;
    } else {
      return parseFloat(value) || 0;
    }
  }

  module.exports = {
    API: API,
    addWhitelistedStyleProp: addWhitelistedStyleProp,
    addWhitelistedTransformProp: addWhitelistedTransformProp,
    addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,
    validateStyles: validateStyles,
    validateTransform: validateTransform,
    validateInterpolation: validateInterpolation,
    generateNewNodeTag: generateNewNodeTag,
    generateNewAnimationId: generateNewAnimationId,
    assertNativeAnimatedModule: assertNativeAnimatedModule,
    shouldUseNativeDriver: shouldUseNativeDriver,
    transformDataType: transformDataType,

    get nativeEventEmitter() {
      if (!nativeEventEmitter) {
        nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);
      }

      return nativeEventEmitter;
    }

  };
},207,[8,117,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[6]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedWithChildren = function (_AnimatedNode) {
    _inherits(AnimatedWithChildren, _AnimatedNode);

    function AnimatedWithChildren() {
      var _this;

      _classCallCheck(this, AnimatedWithChildren);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedWithChildren).call(this));
      _this._children = [];
      return _this;
    }

    _createClass(AnimatedWithChildren, [{
      key: "__makeNative",
      value: function __makeNative() {
        if (!this.__isNative) {
          this.__isNative = true;

          for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var _child = _ref;

            _child.__makeNative();

            NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), _child.__getNativeTag());
          }
        }

        _get(_getPrototypeOf(AnimatedWithChildren.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__addChild",
      value: function __addChild(child) {
        if (this._children.length === 0) {
          this.__attach();
        }

        this._children.push(child);

        if (this.__isNative) {
          child.__makeNative();

          NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }, {
      key: "__removeChild",
      value: function __removeChild(child) {
        var index = this._children.indexOf(child);

        if (index === -1) {
          console.warn("Trying to remove a child that doesn't exist");
          return;
        }

        if (this.__isNative && child.__isNative) {
          NativeAnimatedHelper.API.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }

        this._children.splice(index, 1);

        if (this._children.length === 0) {
          this.__detach();
        }
      }
    }, {
      key: "__getChildren",
      value: function __getChildren() {
        return this._children;
      }
    }, {
      key: "__callListeners",
      value: function __callListeners(value) {
        _get(_getPrototypeOf(AnimatedWithChildren.prototype), "__callListeners", this).call(this, value);

        if (!this.__isNative) {
          for (var _iterator2 = this._children, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
            var _ref2;

            if (_isArray2) {
              if (_i2 >= _iterator2.length) break;
              _ref2 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done) break;
              _ref2 = _i2.value;
            }

            var _child2 = _ref2;

            if (_child2.__getValue) {
              _child2.__callListeners(_child2.__getValue());
            }
          }
        }
      }
    }]);

    return AnimatedWithChildren;
  }(AnimatedNode);

  module.exports = AnimatedWithChildren;
},208,[22,23,30,33,34,36,206,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

  var EventEmitter = _$$_REQUIRE(_dependencyMap[1]);

  var TaskQueue = _$$_REQUIRE(_dependencyMap[2]);

  var infoLog = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var keyMirror = _$$_REQUIRE(_dependencyMap[5]);

  var _emitter = new EventEmitter();

  var DEBUG_DELAY = 0;
  var DEBUG = false;
  var InteractionManager = {
    Events: keyMirror({
      interactionStart: true,
      interactionComplete: true
    }),
    runAfterInteractions: function runAfterInteractions(task) {
      var tasks = [];
      var promise = new Promise(function (resolve) {
        _scheduleUpdate();

        if (task) {
          tasks.push(task);
        }

        tasks.push({
          run: resolve,
          name: 'resolve ' + (task && task.name || '?')
        });

        _taskQueue.enqueueTasks(tasks);
      });
      return {
        then: promise.then.bind(promise),
        done: function done() {
          if (promise.done) {
            return promise.done.apply(promise, arguments);
          } else {
            console.warn('Tried to call done when not supported by current Promise implementation.');
          }
        },
        cancel: function cancel() {
          _taskQueue.cancelTasks(tasks);
        }
      };
    },
    createInteractionHandle: function createInteractionHandle() {
      DEBUG;

      _scheduleUpdate();

      var handle = ++_inc;

      _addInteractionSet.add(handle);

      return handle;
    },
    clearInteractionHandle: function clearInteractionHandle(handle) {
      DEBUG;
      invariant(!!handle, 'Must provide a handle to clear.');

      _scheduleUpdate();

      _addInteractionSet.delete(handle);

      _deleteInteractionSet.add(handle);
    },
    addListener: _emitter.addListener.bind(_emitter),
    setDeadline: function setDeadline(deadline) {
      _deadline = deadline;
    }
  };

  var _interactionSet = new Set();

  var _addInteractionSet = new Set();

  var _deleteInteractionSet = new Set();

  var _taskQueue = new TaskQueue({
    onMoreTasks: _scheduleUpdate
  });

  var _nextUpdateHandle = 0;
  var _inc = 0;

  var _deadline = -1;

  function _scheduleUpdate() {
    if (!_nextUpdateHandle) {
      if (_deadline > 0) {
        _nextUpdateHandle = setTimeout(_processUpdate, 0);
      } else {
        _nextUpdateHandle = setImmediate(_processUpdate);
      }
    }
  }

  function _processUpdate() {
    _nextUpdateHandle = 0;
    var interactionCount = _interactionSet.size;

    _addInteractionSet.forEach(function (handle) {
      return _interactionSet.add(handle);
    });

    _deleteInteractionSet.forEach(function (handle) {
      return _interactionSet.delete(handle);
    });

    var nextInteractionCount = _interactionSet.size;

    if (interactionCount !== 0 && nextInteractionCount === 0) {
      _emitter.emit(InteractionManager.Events.interactionComplete);
    } else if (interactionCount === 0 && nextInteractionCount !== 0) {
      _emitter.emit(InteractionManager.Events.interactionStart);
    }

    if (nextInteractionCount === 0) {
      while (_taskQueue.hasTasksToProcess()) {
        _taskQueue.processNext();

        if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {
          _scheduleUpdate();

          break;
        }
      }
    }

    _addInteractionSet.clear();

    _deleteInteractionSet.clear();
  }

  module.exports = InteractionManager;
},209,[16,38,210,146,3,189]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var infoLog = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var DEBUG = false;

  var TaskQueue = function () {
    function TaskQueue(_ref) {
      var onMoreTasks = _ref.onMoreTasks;

      _classCallCheck(this, TaskQueue);

      this._onMoreTasks = onMoreTasks;
      this._queueStack = [{
        tasks: [],
        popable: false
      }];
    }

    _createClass(TaskQueue, [{
      key: "enqueue",
      value: function enqueue(task) {
        this._getCurrentQueue().push(task);
      }
    }, {
      key: "enqueueTasks",
      value: function enqueueTasks(tasks) {
        var _this = this;

        tasks.forEach(function (task) {
          return _this.enqueue(task);
        });
      }
    }, {
      key: "cancelTasks",
      value: function cancelTasks(tasksToCancel) {
        this._queueStack = this._queueStack.map(function (queue) {
          return _objectSpread({}, queue, {
            tasks: queue.tasks.filter(function (task) {
              return tasksToCancel.indexOf(task) === -1;
            })
          });
        }).filter(function (queue, idx) {
          return queue.tasks.length > 0 || idx === 0;
        });
      }
    }, {
      key: "hasTasksToProcess",
      value: function hasTasksToProcess() {
        return this._getCurrentQueue().length > 0;
      }
    }, {
      key: "processNext",
      value: function processNext() {
        var queue = this._getCurrentQueue();

        if (queue.length) {
          var task = queue.shift();

          try {
            if (task.gen) {
              DEBUG;

              this._genPromise(task);
            } else if (task.run) {
              DEBUG;
              task.run();
            } else {
              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
              DEBUG;
              task();
            }
          } catch (e) {
            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
            throw e;
          }
        }
      }
    }, {
      key: "_getCurrentQueue",
      value: function _getCurrentQueue() {
        var stackIdx = this._queueStack.length - 1;
        var queue = this._queueStack[stackIdx];

        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
          this._queueStack.pop();

          DEBUG;
          return this._getCurrentQueue();
        } else {
          return queue.tasks;
        }
      }
    }, {
      key: "_genPromise",
      value: function _genPromise(task) {
        var _this2 = this;

        this._queueStack.push({
          tasks: [],
          popable: false
        });

        var stackIdx = this._queueStack.length - 1;
        DEBUG;
        DEBUG;
        task.gen().then(function () {
          DEBUG;
          _this2._queueStack[stackIdx].popable = true;
          _this2.hasTasksToProcess() && _this2._onMoreTasks();
        }).catch(function (ex) {
          ex.message = "TaskQueue: Error resolving Promise in task " + task.name + ": " + ex.message;
          throw ex;
        }).done();
      }
    }]);

    return TaskQueue;
  }();

  module.exports = TaskQueue;
},210,[46,22,23,146,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedAddition = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedDiffClamp = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedDivision = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedModulo = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedMultiplication = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = _$$_REQUIRE(_dependencyMap[10]);

  var AnimatedTracking = _$$_REQUIRE(_dependencyMap[11]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[12]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[13]);

  var DecayAnimation = _$$_REQUIRE(_dependencyMap[14]);

  var SpringAnimation = _$$_REQUIRE(_dependencyMap[15]);

  var TimingAnimation = _$$_REQUIRE(_dependencyMap[16]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[17]);

  var add = function add(a, b) {
    return new AnimatedAddition(a, b);
  };

  var subtract = function subtract(a, b) {
    return new AnimatedSubtraction(a, b);
  };

  var divide = function divide(a, b) {
    return new AnimatedDivision(a, b);
  };

  var multiply = function multiply(a, b) {
    return new AnimatedMultiplication(a, b);
  };

  var modulo = function modulo(a, modulus) {
    return new AnimatedModulo(a, modulus);
  };

  var diffClamp = function diffClamp(a, min, max) {
    return new AnimatedDiffClamp(a, min, max);
  };

  var _combineCallbacks = function _combineCallbacks(callback, config) {
    if (callback && config.onComplete) {
      return function () {
        config.onComplete && config.onComplete.apply(config, arguments);
        callback && callback.apply(undefined, arguments);
      };
    } else {
      return callback || config.onComplete;
    }
  };

  var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
    if (value instanceof AnimatedValueXY) {
      var configX = _objectSpread({}, config);

      var configY = _objectSpread({}, config);

      for (var key in config) {
        var _config$key = config[key],
            x = _config$key.x,
            y = _config$key.y;

        if (x !== undefined && y !== undefined) {
          configX[key] = x;
          configY[key] = y;
        }
      }

      var aX = anim(value.x, configX);
      var aY = anim(value.y, configY);
      return parallel([aX, aY], {
        stopTogether: false
      });
    }

    return null;
  };

  var spring = function spring(value, config) {
    var _start = function start(animatedValue, configuration, callback) {
      callback = _combineCallbacks(callback, configuration);
      var singleValue = animatedValue;
      var singleConfig = configuration;
      singleValue.stopTracking();

      if (configuration.toValue instanceof AnimatedNode) {
        singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));
      } else {
        singleValue.animate(new SpringAnimation(singleConfig), callback);
      }
    };

    return maybeVectorAnim(value, config, spring) || {
      start: function start(callback) {
        _start(value, config, callback);
      },
      stop: function stop() {
        value.stopAnimation();
      },
      reset: function reset() {
        value.resetAnimation();
      },
      _startNativeLoop: function _startNativeLoop(iterations) {
        var singleConfig = _objectSpread({}, config, {
          iterations: iterations
        });

        _start(value, singleConfig);
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return config.useNativeDriver || false;
      }
    };
  };

  var timing = function timing(value, config) {
    var _start2 = function start(animatedValue, configuration, callback) {
      callback = _combineCallbacks(callback, configuration);
      var singleValue = animatedValue;
      var singleConfig = configuration;
      singleValue.stopTracking();

      if (configuration.toValue instanceof AnimatedNode) {
        singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));
      } else {
        singleValue.animate(new TimingAnimation(singleConfig), callback);
      }
    };

    return maybeVectorAnim(value, config, timing) || {
      start: function start(callback) {
        _start2(value, config, callback);
      },
      stop: function stop() {
        value.stopAnimation();
      },
      reset: function reset() {
        value.resetAnimation();
      },
      _startNativeLoop: function _startNativeLoop(iterations) {
        var singleConfig = _objectSpread({}, config, {
          iterations: iterations
        });

        _start2(value, singleConfig);
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return config.useNativeDriver || false;
      }
    };
  };

  var decay = function decay(value, config) {
    var _start3 = function start(animatedValue, configuration, callback) {
      callback = _combineCallbacks(callback, configuration);
      var singleValue = animatedValue;
      var singleConfig = configuration;
      singleValue.stopTracking();
      singleValue.animate(new DecayAnimation(singleConfig), callback);
    };

    return maybeVectorAnim(value, config, decay) || {
      start: function start(callback) {
        _start3(value, config, callback);
      },
      stop: function stop() {
        value.stopAnimation();
      },
      reset: function reset() {
        value.resetAnimation();
      },
      _startNativeLoop: function _startNativeLoop(iterations) {
        var singleConfig = _objectSpread({}, config, {
          iterations: iterations
        });

        _start3(value, singleConfig);
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return config.useNativeDriver || false;
      }
    };
  };

  var sequence = function sequence(animations) {
    var current = 0;
    return {
      start: function start(callback) {
        var onComplete = function onComplete(result) {
          if (!result.finished) {
            callback && callback(result);
            return;
          }

          current++;

          if (current === animations.length) {
            callback && callback(result);
            return;
          }

          animations[current].start(onComplete);
        };

        if (animations.length === 0) {
          callback && callback({
            finished: true
          });
        } else {
          animations[current].start(onComplete);
        }
      },
      stop: function stop() {
        if (current < animations.length) {
          animations[current].stop();
        }
      },
      reset: function reset() {
        animations.forEach(function (animation, idx) {
          if (idx <= current) {
            animation.reset();
          }
        });
        current = 0;
      },
      _startNativeLoop: function _startNativeLoop() {
        throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return false;
      }
    };
  };

  var parallel = function parallel(animations, config) {
    var doneCount = 0;
    var hasEnded = {};
    var stopTogether = !(config && config.stopTogether === false);
    var result = {
      start: function start(callback) {
        if (doneCount === animations.length) {
          callback && callback({
            finished: true
          });
          return;
        }

        animations.forEach(function (animation, idx) {
          var cb = function cb(endResult) {
            hasEnded[idx] = true;
            doneCount++;

            if (doneCount === animations.length) {
              doneCount = 0;
              callback && callback(endResult);
              return;
            }

            if (!endResult.finished && stopTogether) {
              result.stop();
            }
          };

          if (!animation) {
            cb({
              finished: true
            });
          } else {
            animation.start(cb);
          }
        });
      },
      stop: function stop() {
        animations.forEach(function (animation, idx) {
          !hasEnded[idx] && animation.stop();
          hasEnded[idx] = true;
        });
      },
      reset: function reset() {
        animations.forEach(function (animation, idx) {
          animation.reset();
          hasEnded[idx] = false;
          doneCount = 0;
        });
      },
      _startNativeLoop: function _startNativeLoop() {
        throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return false;
      }
    };
    return result;
  };

  var delay = function delay(time) {
    return timing(new AnimatedValue(0), {
      toValue: 0,
      delay: time,
      duration: 0
    });
  };

  var stagger = function stagger(time, animations) {
    return parallel(animations.map(function (animation, i) {
      return sequence([delay(time * i), animation]);
    }));
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    var isFinished = false;
    var iterationsSoFar = 0;
    return {
      start: function start(callback) {
        var restart = function restart() {
          var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
            finished: true
          };

          if (isFinished || iterationsSoFar === iterations || result.finished === false) {
            callback && callback(result);
          } else {
            iterationsSoFar++;
            animation.reset();
            animation.start(restart);
          }
        };

        if (!animation || iterations === 0) {
          callback && callback({
            finished: true
          });
        } else {
          if (animation._isUsingNativeDriver()) {
            animation._startNativeLoop(iterations);
          } else {
            restart();
          }
        }
      },
      stop: function stop() {
        isFinished = true;
        animation.stop();
      },
      reset: function reset() {
        iterationsSoFar = 0;
        isFinished = false;
        animation.reset();
      },
      _startNativeLoop: function _startNativeLoop() {
        throw new Error('Loops run using the native driver cannot contain Animated.loop animations');
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return animation._isUsingNativeDriver();
      }
    };
  };

  function forkEvent(event, listener) {
    if (!event) {
      return listener;
    } else if (event instanceof AnimatedEvent) {
      event.__addListener(listener);

      return event;
    } else {
      return function () {
        typeof event === 'function' && event.apply(undefined, arguments);
        listener.apply(undefined, arguments);
      };
    }
  }

  function unforkEvent(event, listener) {
    if (event && event instanceof AnimatedEvent) {
      event.__removeListener(listener);
    }
  }

  var event = function event(argMapping, config) {
    var animatedEvent = new AnimatedEvent(argMapping, config);

    if (animatedEvent.__isNative) {
      return animatedEvent;
    } else {
      return animatedEvent.__getHandler();
    }
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: add,
    subtract: subtract,
    divide: divide,
    multiply: multiply,
    modulo: modulo,
    diffClamp: diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: forkEvent,
    unforkEvent: unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},211,[46,203,212,213,214,205,215,216,206,217,220,221,204,222,223,225,227,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedAddition = function (_AnimatedWithChildren) {
    _inherits(AnimatedAddition, _AnimatedWithChildren);

    function AnimatedAddition(a, b) {
      var _this;

      _classCallCheck(this, AnimatedAddition);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedAddition).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedAddition, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedAddition.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() + this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedAddition.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'addition',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedAddition;
  }(AnimatedWithChildren);

  module.exports = AnimatedAddition;
},212,[22,23,30,33,34,36,205,206,204,208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedDiffClamp = function (_AnimatedWithChildren) {
    _inherits(AnimatedDiffClamp, _AnimatedWithChildren);

    function AnimatedDiffClamp(a, min, max) {
      var _this;

      _classCallCheck(this, AnimatedDiffClamp);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedDiffClamp).call(this));
      _this._a = a;
      _this._min = min;
      _this._max = max;
      _this._value = _this._lastValue = _this._a.__getValue();
      return _this;
    }

    _createClass(AnimatedDiffClamp, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        _get(_getPrototypeOf(AnimatedDiffClamp.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        var value = this._a.__getValue();

        var diff = value - this._lastValue;
        this._lastValue = value;
        this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
        return this._value;
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        _get(_getPrototypeOf(AnimatedDiffClamp.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'diffclamp',
          input: this._a.__getNativeTag(),
          min: this._min,
          max: this._max
        };
      }
    }]);

    return AnimatedDiffClamp;
  }(AnimatedWithChildren);

  module.exports = AnimatedDiffClamp;
},213,[22,23,30,33,34,36,205,206,208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedDivision = function (_AnimatedWithChildren) {
    _inherits(AnimatedDivision, _AnimatedWithChildren);

    function AnimatedDivision(a, b) {
      var _this;

      _classCallCheck(this, AnimatedDivision);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedDivision).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedDivision, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedDivision.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        var a = this._a.__getValue();

        var b = this._b.__getValue();

        if (b === 0) {
          console.error('Detected division by zero in AnimatedDivision');
        }

        return a / b;
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedDivision.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'division',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedDivision;
  }(AnimatedWithChildren);

  module.exports = AnimatedDivision;
},214,[22,23,30,33,34,36,205,206,204,208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedModulo = function (_AnimatedWithChildren) {
    _inherits(AnimatedModulo, _AnimatedWithChildren);

    function AnimatedModulo(a, modulus) {
      var _this;

      _classCallCheck(this, AnimatedModulo);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedModulo).call(this));
      _this._a = a;
      _this._modulus = modulus;
      return _this;
    }

    _createClass(AnimatedModulo, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        _get(_getPrototypeOf(AnimatedModulo.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        _get(_getPrototypeOf(AnimatedModulo.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'modulus',
          input: this._a.__getNativeTag(),
          modulus: this._modulus
        };
      }
    }]);

    return AnimatedModulo;
  }(AnimatedWithChildren);

  module.exports = AnimatedModulo;
},215,[22,23,30,33,34,36,205,206,208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedMultiplication = function (_AnimatedWithChildren) {
    _inherits(AnimatedMultiplication, _AnimatedWithChildren);

    function AnimatedMultiplication(a, b) {
      var _this;

      _classCallCheck(this, AnimatedMultiplication);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedMultiplication).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedMultiplication, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedMultiplication.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() * this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedMultiplication.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'multiplication',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedMultiplication;
  }(AnimatedWithChildren);

  module.exports = AnimatedMultiplication;
},216,[22,23,30,33,34,36,205,206,204,208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _get = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var _require = _$$_REQUIRE(_dependencyMap[7]),
      AnimatedEvent = _require.AnimatedEvent;

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedStyle = _$$_REQUIRE(_dependencyMap[9]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[10]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[11]);

  var invariant = _$$_REQUIRE(_dependencyMap[12]);

  var AnimatedProps = function (_AnimatedNode) {
    _inherits(AnimatedProps, _AnimatedNode);

    function AnimatedProps(props, callback) {
      var _this;

      _classCallCheck(this, AnimatedProps);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedProps).call(this));

      if (props.style) {
        props = _objectSpread({}, props, {
          style: new AnimatedStyle(props.style)
        });
      }

      _this._props = props;
      _this._callback = callback;

      _this.__attach();

      return _this;
    }

    _createClass(AnimatedProps, [{
      key: "__getValue",
      value: function __getValue() {
        var props = {};

        for (var key in this._props) {
          var value = this._props[key];

          if (value instanceof AnimatedNode) {
            if (!value.__isNative || value instanceof AnimatedStyle) {
              props[key] = value.__getValue();
            }
          } else if (value instanceof AnimatedEvent) {
            props[key] = value.__getHandler();
          } else {
            props[key] = value;
          }
        }

        return props;
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        var props = {};

        for (var key in this._props) {
          var value = this._props[key];

          if (value instanceof AnimatedNode) {
            props[key] = value.__getAnimatedValue();
          }
        }

        return props;
      }
    }, {
      key: "__attach",
      value: function __attach() {
        for (var key in this._props) {
          var value = this._props[key];

          if (value instanceof AnimatedNode) {
            value.__addChild(this);
          }
        }
      }
    }, {
      key: "__detach",
      value: function __detach() {
        if (this.__isNative && this._animatedView) {
          this.__disconnectAnimatedView();
        }

        for (var key in this._props) {
          var value = this._props[key];

          if (value instanceof AnimatedNode) {
            value.__removeChild(this);
          }
        }

        _get(_getPrototypeOf(AnimatedProps.prototype), "__detach", this).call(this);
      }
    }, {
      key: "update",
      value: function update() {
        this._callback();
      }
    }, {
      key: "__makeNative",
      value: function __makeNative() {
        if (!this.__isNative) {
          this.__isNative = true;

          for (var key in this._props) {
            var value = this._props[key];

            if (value instanceof AnimatedNode) {
              value.__makeNative();
            }
          }

          if (this._animatedView) {
            this.__connectAnimatedView();
          }
        }
      }
    }, {
      key: "setNativeView",
      value: function setNativeView(animatedView) {
        if (this._animatedView === animatedView) {
          return;
        }

        this._animatedView = animatedView;

        if (this.__isNative) {
          this.__connectAnimatedView();
        }
      }
    }, {
      key: "__connectAnimatedView",
      value: function __connectAnimatedView() {
        invariant(this.__isNative, 'Expected node to be marked as "native"');
        var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
        invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
        NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
      }
    }, {
      key: "__disconnectAnimatedView",
      value: function __disconnectAnimatedView() {
        invariant(this.__isNative, 'Expected node to be marked as "native"');
        var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
        invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
        NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var propsConfig = {};

        for (var propKey in this._props) {
          var value = this._props[propKey];

          if (value instanceof AnimatedNode) {
            propsConfig[propKey] = value.__getNativeTag();
          }
        }

        return {
          type: 'props',
          props: propsConfig
        };
      }
    }]);

    return AnimatedProps;
  }(AnimatedNode);

  module.exports = AnimatedProps;
},217,[46,22,23,30,33,34,36,203,206,218,207,78,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _get = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedTransform = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[10]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[11]);

  var AnimatedStyle = function (_AnimatedWithChildren) {
    _inherits(AnimatedStyle, _AnimatedWithChildren);

    function AnimatedStyle(style) {
      var _this;

      _classCallCheck(this, AnimatedStyle);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedStyle).call(this));
      style = flattenStyle(style) || {};

      if (style.transform) {
        style = _objectSpread({}, style, {
          transform: new AnimatedTransform(style.transform)
        });
      }

      _this._style = style;
      return _this;
    }

    _createClass(AnimatedStyle, [{
      key: "_walkStyleAndGetValues",
      value: function _walkStyleAndGetValues(style) {
        var updatedStyle = {};

        for (var key in style) {
          var value = style[key];

          if (value instanceof AnimatedNode) {
            if (!value.__isNative) {
              updatedStyle[key] = value.__getValue();
            }
          } else if (value && !Array.isArray(value) && typeof value === 'object') {
            updatedStyle[key] = this._walkStyleAndGetValues(value);
          } else {
            updatedStyle[key] = value;
          }
        }

        return updatedStyle;
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._walkStyleAndGetValues(this._style);
      }
    }, {
      key: "_walkStyleAndGetAnimatedValues",
      value: function _walkStyleAndGetAnimatedValues(style) {
        var updatedStyle = {};

        for (var key in style) {
          var value = style[key];

          if (value instanceof AnimatedNode) {
            updatedStyle[key] = value.__getAnimatedValue();
          } else if (value && !Array.isArray(value) && typeof value === 'object') {
            updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);
          }
        }

        return updatedStyle;
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        return this._walkStyleAndGetAnimatedValues(this._style);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        for (var key in this._style) {
          var value = this._style[key];

          if (value instanceof AnimatedNode) {
            value.__addChild(this);
          }
        }
      }
    }, {
      key: "__detach",
      value: function __detach() {
        for (var key in this._style) {
          var value = this._style[key];

          if (value instanceof AnimatedNode) {
            value.__removeChild(this);
          }
        }

        _get(_getPrototypeOf(AnimatedStyle.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__makeNative",
      value: function __makeNative() {
        for (var key in this._style) {
          var value = this._style[key];

          if (value instanceof AnimatedNode) {
            value.__makeNative();
          }
        }

        _get(_getPrototypeOf(AnimatedStyle.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var styleConfig = {};

        for (var styleKey in this._style) {
          if (this._style[styleKey] instanceof AnimatedNode) {
            styleConfig[styleKey] = this._style[styleKey].__getNativeTag();
          }
        }

        NativeAnimatedHelper.validateStyles(styleConfig);
        return {
          type: 'style',
          style: styleConfig
        };
      }
    }]);

    return AnimatedStyle;
  }(AnimatedWithChildren);

  module.exports = AnimatedStyle;
},218,[46,22,23,30,33,34,36,206,219,208,207,74]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[7]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedTransform = function (_AnimatedWithChildren) {
    _inherits(AnimatedTransform, _AnimatedWithChildren);

    function AnimatedTransform(transforms) {
      var _this;

      _classCallCheck(this, AnimatedTransform);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedTransform).call(this));
      _this._transforms = transforms;
      return _this;
    }

    _createClass(AnimatedTransform, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._transforms.forEach(function (transform) {
          for (var key in transform) {
            var value = transform[key];

            if (value instanceof AnimatedNode) {
              value.__makeNative();
            }
          }
        });

        _get(_getPrototypeOf(AnimatedTransform.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._transforms.map(function (transform) {
          var result = {};

          for (var key in transform) {
            var value = transform[key];

            if (value instanceof AnimatedNode) {
              result[key] = value.__getValue();
            } else {
              result[key] = value;
            }
          }

          return result;
        });
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        return this._transforms.map(function (transform) {
          var result = {};

          for (var key in transform) {
            var value = transform[key];

            if (value instanceof AnimatedNode) {
              result[key] = value.__getAnimatedValue();
            } else {
              result[key] = value;
            }
          }

          return result;
        });
      }
    }, {
      key: "__attach",
      value: function __attach() {
        var _this2 = this;

        this._transforms.forEach(function (transform) {
          for (var key in transform) {
            var value = transform[key];

            if (value instanceof AnimatedNode) {
              value.__addChild(_this2);
            }
          }
        });
      }
    }, {
      key: "__detach",
      value: function __detach() {
        var _this3 = this;

        this._transforms.forEach(function (transform) {
          for (var key in transform) {
            var value = transform[key];

            if (value instanceof AnimatedNode) {
              value.__removeChild(_this3);
            }
          }
        });

        _get(_getPrototypeOf(AnimatedTransform.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var transConfigs = [];

        this._transforms.forEach(function (transform) {
          for (var key in transform) {
            var value = transform[key];

            if (value instanceof AnimatedNode) {
              transConfigs.push({
                type: 'animated',
                property: key,
                nodeTag: value.__getNativeTag()
              });
            } else {
              transConfigs.push({
                type: 'static',
                property: key,
                value: NativeAnimatedHelper.transformDataType(value)
              });
            }
          }
        });

        NativeAnimatedHelper.validateTransform(transConfigs);
        return {
          type: 'transform',
          transforms: transConfigs
        };
      }
    }]);

    return AnimatedTransform;
  }(AnimatedWithChildren);

  module.exports = AnimatedTransform;
},219,[22,23,30,33,34,36,206,208,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},220,[22,23,30,33,34,36,205,206,204,208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _get = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[8]);

  var _require = _$$_REQUIRE(_dependencyMap[9]),
      generateNewAnimationId = _require.generateNewAnimationId,
      shouldUseNativeDriver = _require.shouldUseNativeDriver;

  var AnimatedTracking = function (_AnimatedNode) {
    _inherits(AnimatedTracking, _AnimatedNode);

    function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
      var _this;

      _classCallCheck(this, AnimatedTracking);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedTracking).call(this));
      _this._value = value;
      _this._parent = parent;
      _this._animationClass = animationClass;
      _this._animationConfig = animationConfig;
      _this._useNativeDriver = shouldUseNativeDriver(animationConfig);
      _this._callback = callback;

      _this.__attach();

      return _this;
    }

    _createClass(AnimatedTracking, [{
      key: "__makeNative",
      value: function __makeNative() {
        this.__isNative = true;

        this._parent.__makeNative();

        _get(_getPrototypeOf(AnimatedTracking.prototype), "__makeNative", this).call(this);

        this._value.__makeNative();
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._parent.__getValue();
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._parent.__addChild(this);

        if (this._useNativeDriver) {
          this.__makeNative();
        }
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._parent.__removeChild(this);

        _get(_getPrototypeOf(AnimatedTracking.prototype), "__detach", this).call(this);
      }
    }, {
      key: "update",
      value: function update() {
        this._value.animate(new this._animationClass(_objectSpread({}, this._animationConfig, {
          toValue: this._animationConfig.toValue.__getValue()
        })), this._callback);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var animation = new this._animationClass(_objectSpread({}, this._animationConfig, {
          toValue: undefined
        }));

        var animationConfig = animation.__getNativeAnimationConfig();

        return {
          type: 'tracking',
          animationId: generateNewAnimationId(),
          animationConfig: animationConfig,
          toValue: this._parent.__getNativeTag(),
          value: this._value.__getNativeTag()
        };
      }
    }]);

    return AnimatedTracking;
  }(AnimatedNode);

  module.exports = AnimatedTracking;
},221,[46,22,23,30,33,34,36,204,206,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[6]);

  var invariant = _$$_REQUIRE(_dependencyMap[7]);

  var _uniqueId = 1;

  var AnimatedValueXY = function (_AnimatedWithChildren) {
    _inherits(AnimatedValueXY, _AnimatedWithChildren);

    function AnimatedValueXY(valueIn) {
      var _this;

      _classCallCheck(this, AnimatedValueXY);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedValueXY).call(this));
      var value = valueIn || {
        x: 0,
        y: 0
      };

      if (typeof value.x === 'number' && typeof value.y === 'number') {
        _this.x = new AnimatedValue(value.x);
        _this.y = new AnimatedValue(value.y);
      } else {
        invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, "AnimatedValueXY must be initialized with an object of numbers or AnimatedValues.");
        _this.x = value.x;
        _this.y = value.y;
      }

      _this._listeners = {};
      return _this;
    }

    _createClass(AnimatedValueXY, [{
      key: "setValue",
      value: function setValue(value) {
        this.x.setValue(value.x);
        this.y.setValue(value.y);
      }
    }, {
      key: "setOffset",
      value: function setOffset(offset) {
        this.x.setOffset(offset.x);
        this.y.setOffset(offset.y);
      }
    }, {
      key: "flattenOffset",
      value: function flattenOffset() {
        this.x.flattenOffset();
        this.y.flattenOffset();
      }
    }, {
      key: "extractOffset",
      value: function extractOffset() {
        this.x.extractOffset();
        this.y.extractOffset();
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return {
          x: this.x.__getValue(),
          y: this.y.__getValue()
        };
      }
    }, {
      key: "resetAnimation",
      value: function resetAnimation(callback) {
        this.x.resetAnimation();
        this.y.resetAnimation();
        callback && callback(this.__getValue());
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation(callback) {
        this.x.stopAnimation();
        this.y.stopAnimation();
        callback && callback(this.__getValue());
      }
    }, {
      key: "addListener",
      value: function addListener(callback) {
        var _this2 = this;

        var id = String(_uniqueId++);

        var jointCallback = function jointCallback(_ref) {
          var number = _ref.value;
          callback(_this2.__getValue());
        };

        this._listeners[id] = {
          x: this.x.addListener(jointCallback),
          y: this.y.addListener(jointCallback)
        };
        return id;
      }
    }, {
      key: "removeListener",
      value: function removeListener(id) {
        this.x.removeListener(this._listeners[id].x);
        this.y.removeListener(this._listeners[id].y);
        delete this._listeners[id];
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners() {
        this.x.removeAllListeners();
        this.y.removeAllListeners();
        this._listeners = {};
      }
    }, {
      key: "getLayout",
      value: function getLayout() {
        return {
          left: this.x,
          top: this.y
        };
      }
    }, {
      key: "getTranslateTransform",
      value: function getTranslateTransform() {
        return [{
          translateX: this.x
        }, {
          translateY: this.y
        }];
      }
    }]);

    return AnimatedValueXY;
  }(AnimatedWithChildren);

  module.exports = AnimatedValueXY;
},222,[22,23,30,33,36,204,208,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var Animation = _$$_REQUIRE(_dependencyMap[6]);

  var _require = _$$_REQUIRE(_dependencyMap[7]),
      shouldUseNativeDriver = _require.shouldUseNativeDriver;

  var DecayAnimation = function (_Animation) {
    _inherits(DecayAnimation, _Animation);

    function DecayAnimation(config) {
      var _this;

      _classCallCheck(this, DecayAnimation);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(DecayAnimation).call(this));
      _this._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;
      _this._velocity = config.velocity;
      _this._useNativeDriver = shouldUseNativeDriver(config);
      _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
      _this.__iterations = config.iterations !== undefined ? config.iterations : 1;
      return _this;
    }

    _createClass(DecayAnimation, [{
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        return {
          type: 'decay',
          deceleration: this._deceleration,
          velocity: this._velocity,
          iterations: this.__iterations
        };
      }
    }, {
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        this.__active = true;
        this._lastValue = fromValue;
        this._fromValue = fromValue;
        this._onUpdate = onUpdate;
        this.__onEnd = onEnd;
        this._startTime = Date.now();

        if (this._useNativeDriver) {
          this.__startNativeAnimation(animatedValue);
        } else {
          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
        }
      }
    }, {
      key: "onUpdate",
      value: function onUpdate() {
        var now = Date.now();
        var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

        this._onUpdate(value);

        if (Math.abs(this._lastValue - value) < 0.1) {
          this.__debouncedOnEnd({
            finished: true
          });

          return;
        }

        this._lastValue = value;

        if (this.__active) {
          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        _get(_getPrototypeOf(DecayAnimation.prototype), "stop", this).call(this);

        this.__active = false;
        global.cancelAnimationFrame(this._animationFrame);

        this.__debouncedOnEnd({
          finished: false
        });
      }
    }]);

    return DecayAnimation;
  }(Animation);

  module.exports = DecayAnimation;
},223,[22,23,30,33,34,36,224,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[2]);

  var Animation = function () {
    function Animation() {
      _classCallCheck(this, Animation);
    }

    _createClass(Animation, [{
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
    }, {
      key: "stop",
      value: function stop() {
        if (this.__nativeId) {
          NativeAnimatedHelper.API.stopAnimation(this.__nativeId);
        }
      }
    }, {
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        throw new Error('This animation type cannot be offloaded to native');
      }
    }, {
      key: "__debouncedOnEnd",
      value: function __debouncedOnEnd(result) {
        var onEnd = this.__onEnd;
        this.__onEnd = null;
        onEnd && onEnd(result);
      }
    }, {
      key: "__startNativeAnimation",
      value: function __startNativeAnimation(animatedValue) {
        animatedValue.__makeNative();

        this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
        NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
      }
    }]);

    return Animation;
  }();

  module.exports = Animation;
},224,[22,23,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var Animation = _$$_REQUIRE(_dependencyMap[8]);

  var SpringConfig = _$$_REQUIRE(_dependencyMap[9]);

  var invariant = _$$_REQUIRE(_dependencyMap[10]);

  var _require = _$$_REQUIRE(_dependencyMap[11]),
      shouldUseNativeDriver = _require.shouldUseNativeDriver;

  function withDefault(value, defaultValue) {
    if (value === undefined || value === null) {
      return defaultValue;
    }

    return value;
  }

  var SpringAnimation = function (_Animation) {
    _inherits(SpringAnimation, _Animation);

    function SpringAnimation(config) {
      var _this;

      _classCallCheck(this, SpringAnimation);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(SpringAnimation).call(this));
      _this._overshootClamping = withDefault(config.overshootClamping, false);
      _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
      _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
      _this._initialVelocity = withDefault(config.velocity, 0);
      _this._lastVelocity = withDefault(config.velocity, 0);
      _this._toValue = config.toValue;
      _this._delay = withDefault(config.delay, 0);
      _this._useNativeDriver = shouldUseNativeDriver(config);
      _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
      _this.__iterations = config.iterations !== undefined ? config.iterations : 1;

      if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {
        invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
        _this._stiffness = withDefault(config.stiffness, 100);
        _this._damping = withDefault(config.damping, 10);
        _this._mass = withDefault(config.mass, 1);
      } else if (config.bounciness !== undefined || config.speed !== undefined) {
        invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
        var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));
        _this._stiffness = springConfig.stiffness;
        _this._damping = springConfig.damping;
        _this._mass = 1;
      } else {
        var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));

        _this._stiffness = _springConfig.stiffness;
        _this._damping = _springConfig.damping;
        _this._mass = 1;
      }

      invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');
      invariant(_this._damping > 0, 'Damping value must be greater than 0');
      invariant(_this._mass > 0, 'Mass value must be greater than 0');
      return _this;
    }

    _createClass(SpringAnimation, [{
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        return {
          type: 'spring',
          overshootClamping: this._overshootClamping,
          restDisplacementThreshold: this._restDisplacementThreshold,
          restSpeedThreshold: this._restSpeedThreshold,
          stiffness: this._stiffness,
          damping: this._damping,
          mass: this._mass,
          initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),
          toValue: this._toValue,
          iterations: this.__iterations
        };
      }
    }, {
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        var _this2 = this;

        this.__active = true;
        this._startPosition = fromValue;
        this._lastPosition = this._startPosition;
        this._onUpdate = onUpdate;
        this.__onEnd = onEnd;
        this._lastTime = Date.now();
        this._frameTime = 0.0;

        if (previousAnimation instanceof SpringAnimation) {
          var internalState = previousAnimation.getInternalState();
          this._lastPosition = internalState.lastPosition;
          this._lastVelocity = internalState.lastVelocity;
          this._initialVelocity = this._lastVelocity;
          this._lastTime = internalState.lastTime;
        }

        var start = function start() {
          if (_this2._useNativeDriver) {
            _this2.__startNativeAnimation(animatedValue);
          } else {
            _this2.onUpdate();
          }
        };

        if (this._delay) {
          this._timeout = setTimeout(start, this._delay);
        } else {
          start();
        }
      }
    }, {
      key: "getInternalState",
      value: function getInternalState() {
        return {
          lastPosition: this._lastPosition,
          lastVelocity: this._lastVelocity,
          lastTime: this._lastTime
        };
      }
    }, {
      key: "onUpdate",
      value: function onUpdate() {
        var MAX_STEPS = 64;
        var now = Date.now();

        if (now > this._lastTime + MAX_STEPS) {
          now = this._lastTime + MAX_STEPS;
        }

        var deltaTime = (now - this._lastTime) / 1000;
        this._frameTime += deltaTime;
        var c = this._damping;
        var m = this._mass;
        var k = this._stiffness;
        var v0 = -this._initialVelocity;
        var zeta = c / (2 * Math.sqrt(k * m));
        var omega0 = Math.sqrt(k / m);
        var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);
        var x0 = this._toValue - this._startPosition;
        var position = 0.0;
        var velocity = 0.0;
        var t = this._frameTime;

        if (zeta < 1) {
          var envelope = Math.exp(-zeta * omega0 * t);
          position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));
          velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));
        } else {
          var _envelope = Math.exp(-omega0 * t);

          position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);
          velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));
        }

        this._lastTime = now;
        this._lastPosition = position;
        this._lastVelocity = velocity;

        this._onUpdate(position);

        if (!this.__active) {
          return;
        }

        var isOvershooting = false;

        if (this._overshootClamping && this._stiffness !== 0) {
          if (this._startPosition < this._toValue) {
            isOvershooting = position > this._toValue;
          } else {
            isOvershooting = position < this._toValue;
          }
        }

        var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;

        var isDisplacement = true;

        if (this._stiffness !== 0) {
          isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
        }

        if (isOvershooting || isVelocity && isDisplacement) {
          if (this._stiffness !== 0) {
            this._lastPosition = this._toValue;
            this._lastVelocity = 0;

            this._onUpdate(this._toValue);
          }

          this.__debouncedOnEnd({
            finished: true
          });

          return;
        }

        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }, {
      key: "stop",
      value: function stop() {
        _get(_getPrototypeOf(SpringAnimation.prototype), "stop", this).call(this);

        this.__active = false;
        clearTimeout(this._timeout);
        global.cancelAnimationFrame(this._animationFrame);

        this.__debouncedOnEnd({
          finished: false
        });
      }
    }]);

    return SpringAnimation;
  }(Animation);

  module.exports = SpringAnimation;
},225,[22,23,30,33,34,36,204,222,224,226,3,207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function stiffnessFromOrigamiValue(oValue) {
    return (oValue - 30) * 3.62 + 194;
  }

  function dampingFromOrigamiValue(oValue) {
    return (oValue - 8) * 3 + 25;
  }

  function fromOrigamiTensionAndFriction(tension, friction) {
    return {
      stiffness: stiffnessFromOrigamiValue(tension),
      damping: dampingFromOrigamiValue(friction)
    };
  }

  function fromBouncinessAndSpeed(bounciness, speed) {
    function normalize(value, startValue, endValue) {
      return (value - startValue) / (endValue - startValue);
    }

    function projectNormal(n, start, end) {
      return start + n * (end - start);
    }

    function linearInterpolation(t, start, end) {
      return t * end + (1 - t) * start;
    }

    function quadraticOutInterpolation(t, start, end) {
      return linearInterpolation(2 * t - t * t, start, end);
    }

    function b3Friction1(x) {
      return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
    }

    function b3Friction2(x) {
      return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
    }

    function b3Friction3(x) {
      return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
    }

    function b3Nobounce(tension) {
      if (tension <= 18) {
        return b3Friction1(tension);
      } else if (tension > 18 && tension <= 44) {
        return b3Friction2(tension);
      } else {
        return b3Friction3(tension);
      }
    }

    var b = normalize(bounciness / 1.7, 0, 20);
    b = projectNormal(b, 0, 0.8);
    var s = normalize(speed / 1.7, 0, 20);
    var bouncyTension = projectNormal(s, 0.5, 200);
    var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);
    return {
      stiffness: stiffnessFromOrigamiValue(bouncyTension),
      damping: dampingFromOrigamiValue(bouncyFriction)
    };
  }

  module.exports = {
    fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,
    fromBouncinessAndSpeed: fromBouncinessAndSpeed
  };
},226,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var Animation = _$$_REQUIRE(_dependencyMap[8]);

  var _require = _$$_REQUIRE(_dependencyMap[9]),
      shouldUseNativeDriver = _require.shouldUseNativeDriver;

  var _easeInOut;

  function easeInOut() {
    if (!_easeInOut) {
      var Easing = _$$_REQUIRE(_dependencyMap[10]);

      _easeInOut = Easing.inOut(Easing.ease);
    }

    return _easeInOut;
  }

  var TimingAnimation = function (_Animation) {
    _inherits(TimingAnimation, _Animation);

    function TimingAnimation(config) {
      var _this;

      _classCallCheck(this, TimingAnimation);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(TimingAnimation).call(this));
      _this._toValue = config.toValue;
      _this._easing = config.easing !== undefined ? config.easing : easeInOut();
      _this._duration = config.duration !== undefined ? config.duration : 500;
      _this._delay = config.delay !== undefined ? config.delay : 0;
      _this.__iterations = config.iterations !== undefined ? config.iterations : 1;
      _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
      _this._useNativeDriver = shouldUseNativeDriver(config);
      return _this;
    }

    _createClass(TimingAnimation, [{
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        var frameDuration = 16.666666666666668;
        var frames = [];

        for (var dt = 0.0; dt < this._duration; dt += frameDuration) {
          frames.push(this._easing(dt / this._duration));
        }

        frames.push(this._easing(1));
        return {
          type: 'frames',
          frames: frames,
          toValue: this._toValue,
          iterations: this.__iterations
        };
      }
    }, {
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        var _this2 = this;

        this.__active = true;
        this._fromValue = fromValue;
        this._onUpdate = onUpdate;
        this.__onEnd = onEnd;

        var start = function start() {
          if (_this2._duration === 0 && !_this2._useNativeDriver) {
            _this2._onUpdate(_this2._toValue);

            _this2.__debouncedOnEnd({
              finished: true
            });
          } else {
            _this2._startTime = Date.now();

            if (_this2._useNativeDriver) {
              _this2.__startNativeAnimation(animatedValue);
            } else {
              _this2._animationFrame = requestAnimationFrame(_this2.onUpdate.bind(_this2));
            }
          }
        };

        if (this._delay) {
          this._timeout = setTimeout(start, this._delay);
        } else {
          start();
        }
      }
    }, {
      key: "onUpdate",
      value: function onUpdate() {
        var now = Date.now();

        if (now >= this._startTime + this._duration) {
          if (this._duration === 0) {
            this._onUpdate(this._toValue);
          } else {
            this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
          }

          this.__debouncedOnEnd({
            finished: true
          });

          return;
        }

        this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));

        if (this.__active) {
          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        _get(_getPrototypeOf(TimingAnimation.prototype), "stop", this).call(this);

        this.__active = false;
        clearTimeout(this._timeout);
        global.cancelAnimationFrame(this._animationFrame);

        this.__debouncedOnEnd({
          finished: false
        });
      }
    }]);

    return TimingAnimation;
  }(Animation);

  module.exports = TimingAnimation;
},227,[22,23,30,33,34,36,204,222,224,207,228]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _ease;

  var Easing = function () {
    function Easing() {
      _classCallCheck(this, Easing);
    }

    _createClass(Easing, null, [{
      key: "step0",
      value: function step0(n) {
        return n > 0 ? 1 : 0;
      }
    }, {
      key: "step1",
      value: function step1(n) {
        return n >= 1 ? 1 : 0;
      }
    }, {
      key: "linear",
      value: function linear(t) {
        return t;
      }
    }, {
      key: "ease",
      value: function ease(t) {
        if (!_ease) {
          _ease = Easing.bezier(0.42, 0, 1, 1);
        }

        return _ease(t);
      }
    }, {
      key: "quad",
      value: function quad(t) {
        return t * t;
      }
    }, {
      key: "cubic",
      value: function cubic(t) {
        return t * t * t;
      }
    }, {
      key: "poly",
      value: function poly(n) {
        return function (t) {
          return Math.pow(t, n);
        };
      }
    }, {
      key: "sin",
      value: function sin(t) {
        return 1 - Math.cos(t * Math.PI / 2);
      }
    }, {
      key: "circle",
      value: function circle(t) {
        return 1 - Math.sqrt(1 - t * t);
      }
    }, {
      key: "exp",
      value: function exp(t) {
        return Math.pow(2, 10 * (t - 1));
      }
    }, {
      key: "elastic",
      value: function elastic() {
        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
        var p = bounciness * Math.PI;
        return function (t) {
          return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
        };
      }
    }, {
      key: "back",
      value: function back() {
        var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.70158;
        return function (t) {
          return t * t * ((s + 1) * t - s);
        };
      }
    }, {
      key: "bounce",
      value: function bounce(t) {
        if (t < 0.36363636363636365) {
          return 7.5625 * t * t;
        }

        if (t < 0.7272727272727273) {
          var _t = t - 0.5454545454545454;

          return 7.5625 * _t * _t + 0.75;
        }

        if (t < 0.9090909090909091) {
          var _t2 = t - 0.8181818181818182;

          return 7.5625 * _t2 * _t2 + 0.9375;
        }

        var t2 = t - 0.9545454545454546;
        return 7.5625 * t2 * t2 + 0.984375;
      }
    }, {
      key: "bezier",
      value: function bezier(x1, y1, x2, y2) {
        var _bezier = _$$_REQUIRE(_dependencyMap[2]);

        return _bezier(x1, y1, x2, y2);
      }
    }, {
      key: "in",
      value: function _in(easing) {
        return easing;
      }
    }, {
      key: "out",
      value: function out(easing) {
        return function (t) {
          return 1 - easing(1 - t);
        };
      }
    }, {
      key: "inOut",
      value: function inOut(easing) {
        return function (t) {
          if (t < 0.5) {
            return easing(t * 2) / 2;
          }

          return 1 - easing((1 - t) * 2) / 2;
        };
      }
    }]);

    return Easing;
  }();

  module.exports = Easing;
},228,[22,23,229]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NEWTON_ITERATIONS = 4;
  var NEWTON_MIN_SLOPE = 0.001;
  var SUBDIVISION_PRECISION = 0.0000001;
  var SUBDIVISION_MAX_ITERATIONS = 10;
  var kSplineTableSize = 11;
  var kSampleStepSize = 0.1;
  var float32ArraySupported = typeof Float32Array === 'function';

  function A(aA1, aA2) {
    return 1.0 - 3.0 * aA2 + 3.0 * aA1;
  }

  function B(aA1, aA2) {
    return 3.0 * aA2 - 6.0 * aA1;
  }

  function C(aA1) {
    return 3.0 * aA1;
  }

  function calcBezier(aT, aA1, aA2) {
    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
  }

  function getSlope(aT, aA1, aA2) {
    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
  }

  function binarySubdivide(aX, _aA, _aB, mX1, mX2) {
    var currentX,
        currentT,
        i = 0,
        aA = _aA,
        aB = _aB;

    do {
      currentT = aA + (aB - aA) / 2.0;
      currentX = calcBezier(currentT, mX1, mX2) - aX;

      if (currentX > 0.0) {
        aB = currentT;
      } else {
        aA = currentT;
      }
    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);

    return currentT;
  }

  function newtonRaphsonIterate(aX, _aGuessT, mX1, mX2) {
    var aGuessT = _aGuessT;

    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
      var currentSlope = getSlope(aGuessT, mX1, mX2);

      if (currentSlope === 0.0) {
        return aGuessT;
      }

      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
      aGuessT -= currentX / currentSlope;
    }

    return aGuessT;
  }

  module.exports = function bezier(mX1, mY1, mX2, mY2) {
    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {
      throw new Error('bezier x values must be in [0, 1] range');
    }

    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);

    if (mX1 !== mY1 || mX2 !== mY2) {
      for (var i = 0; i < kSplineTableSize; ++i) {
        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
      }
    }

    function getTForX(aX) {
      var intervalStart = 0.0;
      var currentSample = 1;
      var lastSample = 10;

      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
        intervalStart += kSampleStepSize;
      }

      --currentSample;
      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
      var guessForT = intervalStart + dist * kSampleStepSize;
      var initialSlope = getSlope(guessForT, mX1, mX2);

      if (initialSlope >= NEWTON_MIN_SLOPE) {
        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
      } else if (initialSlope === 0.0) {
        return guessForT;
      } else {
        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
      }
    }

    return function BezierEasing(x) {
      if (mX1 === mY1 && mX2 === mY2) {
        return x;
      }

      if (x === 0) {
        return 0;
      }

      if (x === 1) {
        return 1;
      }

      return calcBezier(getTForX(x), mY1, mY2);
    };
  };
},229,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      AnimatedEvent = _require.AnimatedEvent;

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[9]);

  var invariant = _$$_REQUIRE(_dependencyMap[10]);

  function createAnimatedComponent(Component, defaultProps) {
    invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, "`createAnimatedComponent` does not support stateless functional components; use a class component instead.");

    var AnimatedComponent = function (_React$Component) {
      _inherits(AnimatedComponent, _React$Component);

      function AnimatedComponent(props) {
        var _this;

        _classCallCheck(this, AnimatedComponent);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedComponent).call(this, props));
        _this._invokeAnimatedPropsCallbackOnMount = false;
        _this._eventDetachers = [];

        _this._animatedPropsCallback = function () {
          if (_this._component == null) {
            _this._invokeAnimatedPropsCallbackOnMount = true;
          } else if (AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY || typeof _this._component.setNativeProps !== 'function') {
            _this.forceUpdate();
          } else if (!_this._propsAnimated.__isNative) {
            _this._component.setNativeProps(_this._propsAnimated.__getAnimatedValue());
          } else {
            throw new Error("Attempting to run JS driven animation on animated node that has been moved to \"native\" earlier by starting an animation with `useNativeDriver: true`");
          }
        };

        _this._setComponentRef = function (c) {
          _this._prevComponent = _this._component;
          _this._component = c;
        };

        return _this;
      }

      _createClass(AnimatedComponent, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._propsAnimated && this._propsAnimated.__detach();

          this._detachNativeEvents();
        }
      }, {
        key: "setNativeProps",
        value: function setNativeProps(props) {
          this._component.setNativeProps(props);
        }
      }, {
        key: "UNSAFE_componentWillMount",
        value: function UNSAFE_componentWillMount() {
          this._attachProps(this.props);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          if (this._invokeAnimatedPropsCallbackOnMount) {
            this._invokeAnimatedPropsCallbackOnMount = false;

            this._animatedPropsCallback();
          }

          this._propsAnimated.setNativeView(this._component);

          this._attachNativeEvents();
        }
      }, {
        key: "_attachNativeEvents",
        value: function _attachNativeEvents() {
          var _this2 = this;

          var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

          var _loop = function _loop(key) {
            var prop = _this2.props[key];

            if (prop instanceof AnimatedEvent && prop.__isNative) {
              prop.__attach(scrollableNode, key);

              _this2._eventDetachers.push(function () {
                return prop.__detach(scrollableNode, key);
              });
            }
          };

          for (var key in this.props) {
            _loop(key);
          }
        }
      }, {
        key: "_detachNativeEvents",
        value: function _detachNativeEvents() {
          this._eventDetachers.forEach(function (remove) {
            return remove();
          });

          this._eventDetachers = [];
        }
      }, {
        key: "_attachProps",
        value: function _attachProps(nextProps) {
          var oldPropsAnimated = this._propsAnimated;
          this._propsAnimated = new AnimatedProps(nextProps, this._animatedPropsCallback);
          oldPropsAnimated && oldPropsAnimated.__detach();
        }
      }, {
        key: "UNSAFE_componentWillReceiveProps",
        value: function UNSAFE_componentWillReceiveProps(newProps) {
          this._attachProps(newProps);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (this._component !== this._prevComponent) {
            this._propsAnimated.setNativeView(this._component);
          }

          if (this._component !== this._prevComponent || prevProps !== this.props) {
            this._detachNativeEvents();

            this._attachNativeEvents();
          }
        }
      }, {
        key: "render",
        value: function render() {
          var props = this._propsAnimated.__getValue();

          return React.createElement(Component, _extends({}, defaultProps, props, {
            ref: this._setComponentRef,
            collapsable: this._propsAnimated.__isNative ? false : props.collapsable
          }));
        }
      }, {
        key: "getNode",
        value: function getNode() {
          return this._component;
        }
      }]);

      return AnimatedComponent;
    }(React.Component);

    AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;
    var propTypes = Component.propTypes;
    AnimatedComponent.propTypes = {
      style: function style(props, propName, componentName) {
        if (!propTypes) {
          return;
        }

        for (var key in DeprecatedViewStylePropTypes) {
          if (!propTypes[key] && props[key] !== undefined) {
            console.warn('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
          }
        }
      }
    };
    return AnimatedComponent;
  }

  module.exports = createAnimatedComponent;
},230,[11,22,23,30,33,36,203,217,48,68,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList);
},231,[232,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var deepDiffer = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var View = _$$_REQUIRE(_dependencyMap[10]);

  var VirtualizedList = _$$_REQUIRE(_dependencyMap[11]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[12]);

  var invariant = _$$_REQUIRE(_dependencyMap[13]);

  var defaultProps = _objectSpread({}, VirtualizedList.defaultProps, {
    numColumns: 1,
    removeClippedSubviews: true
  });

  var FlatList = function (_React$PureComponent) {
    _inherits(FlatList, _React$PureComponent);

    _createClass(FlatList, [{
      key: "scrollToEnd",
      value: function scrollToEnd(params) {
        if (this._listRef) {
          this._listRef.scrollToEnd(params);
        }
      }
    }, {
      key: "scrollToIndex",
      value: function scrollToIndex(params) {
        if (this._listRef) {
          this._listRef.scrollToIndex(params);
        }
      }
    }, {
      key: "scrollToItem",
      value: function scrollToItem(params) {
        if (this._listRef) {
          this._listRef.scrollToItem(params);
        }
      }
    }, {
      key: "scrollToOffset",
      value: function scrollToOffset(params) {
        if (this._listRef) {
          this._listRef.scrollToOffset(params);
        }
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        if (this._listRef) {
          this._listRef.recordInteraction();
        }
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        if (this._listRef) {
          this._listRef.flashScrollIndicators();
        }
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        if (this._listRef) {
          return this._listRef.getScrollResponder();
        }
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        if (this._listRef) {
          return this._listRef.getScrollableNode();
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        if (this._listRef) {
          this._listRef.setNativeProps(props);
        }
      }
    }]);

    function FlatList(props) {
      var _this;

      _classCallCheck(this, FlatList);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(FlatList).call(this, props));
      _this._virtualizedListPairs = [];

      _this._captureRef = function (ref) {
        _this._listRef = ref;
      };

      _this._getItem = function (data, index) {
        var numColumns = _this.props.numColumns;

        if (numColumns > 1) {
          var ret = [];

          for (var kk = 0; kk < numColumns; kk++) {
            var _item = data[index * numColumns + kk];

            if (_item != null) {
              ret.push(_item);
            }
          }

          return ret;
        } else {
          return data[index];
        }
      };

      _this._getItemCount = function (data) {
        return data ? Math.ceil(data.length / _this.props.numColumns) : 0;
      };

      _this._keyExtractor = function (items, index) {
        var _this$props = _this.props,
            keyExtractor = _this$props.keyExtractor,
            numColumns = _this$props.numColumns;

        if (numColumns > 1) {
          invariant(Array.isArray(items), "FlatList: Encountered internal consistency error, expected each item to consist of an array with 1-%s columns; instead, received a single item.", numColumns);
          return items.map(function (it, kk) {
            return keyExtractor(it, index * numColumns + kk);
          }).join(':');
        } else {
          return keyExtractor(items, index);
        }
      };

      _this._renderItem = function (info) {
        var _this$props2 = _this.props,
            renderItem = _this$props2.renderItem,
            numColumns = _this$props2.numColumns,
            columnWrapperStyle = _this$props2.columnWrapperStyle;

        if (numColumns > 1) {
          var _item2 = info.item,
              _index = info.index;
          invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');
          return React.createElement(View, {
            style: StyleSheet.compose(styles.row, columnWrapperStyle)
          }, _item2.map(function (it, kk) {
            var element = renderItem({
              item: it,
              index: _index * numColumns + kk,
              separators: info.separators
            });
            return element && React.cloneElement(element, {
              key: kk
            });
          }));
        } else {
          return renderItem(info);
        }
      };

      _this._checkProps(_this.props);

      if (_this.props.viewabilityConfigCallbackPairs) {
        _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
          return {
            viewabilityConfig: pair.viewabilityConfig,
            onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)
          };
        });
      } else if (_this.props.onViewableItemsChanged) {
        _this._virtualizedListPairs.push({
          viewabilityConfig: _this.props.viewabilityConfig,
          onViewableItemsChanged: _this._createOnViewableItemsChanged(_this.props.onViewableItemsChanged)
        });
      }

      return _this;
    }

    _createClass(FlatList, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        invariant(prevProps.numColumns === this.props.numColumns, "Changing numColumns on the fly is not supported. Change the key prop on FlatList when changing the number of columns to force a fresh render of the component.");
        invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');
        invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');
        invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');

        this._checkProps(this.props);
      }
    }, {
      key: "_checkProps",
      value: function _checkProps(props) {
        var getItem = props.getItem,
            getItemCount = props.getItemCount,
            horizontal = props.horizontal,
            numColumns = props.numColumns,
            columnWrapperStyle = props.columnWrapperStyle,
            onViewableItemsChanged = props.onViewableItemsChanged,
            viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;
        invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');

        if (numColumns > 1) {
          invariant(!horizontal, 'numColumns does not support horizontal.');
        } else {
          invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');
        }

        invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), "FlatList does not support setting both onViewableItemsChanged and viewabilityConfigCallbackPairs.");
      }
    }, {
      key: "_pushMultiColumnViewable",
      value: function _pushMultiColumnViewable(arr, v) {
        var _this$props3 = this.props,
            numColumns = _this$props3.numColumns,
            keyExtractor = _this$props3.keyExtractor;
        v.item.forEach(function (item, ii) {
          invariant(v.index != null, 'Missing index!');
          var index = v.index * numColumns + ii;
          arr.push(_objectSpread({}, v, {
            item: item,
            key: keyExtractor(item, index),
            index: index
          }));
        });
      }
    }, {
      key: "_createOnViewableItemsChanged",
      value: function _createOnViewableItemsChanged(onViewableItemsChanged) {
        var _this2 = this;

        return function (info) {
          var numColumns = _this2.props.numColumns;

          if (onViewableItemsChanged) {
            if (numColumns > 1) {
              var changed = [];
              var viewableItems = [];
              info.viewableItems.forEach(function (v) {
                return _this2._pushMultiColumnViewable(viewableItems, v);
              });
              info.changed.forEach(function (v) {
                return _this2._pushMultiColumnViewable(changed, v);
              });
              onViewableItemsChanged({
                viewableItems: viewableItems,
                changed: changed
              });
            } else {
              onViewableItemsChanged(info);
            }
          }
        };
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(VirtualizedList, _extends({}, this.props, {
          renderItem: this._renderItem,
          getItem: this._getItem,
          getItemCount: this._getItemCount,
          keyExtractor: this._keyExtractor,
          ref: this._captureRef,
          viewabilityConfigCallbackPairs: this._virtualizedListPairs
        }));
      }
    }]);

    return FlatList;
  }(React.PureComponent);

  FlatList.defaultProps = defaultProps;
  var styles = StyleSheet.create({
    row: {
      flexDirection: 'row'
    }
  });
  module.exports = FlatList;
},232,[11,22,30,33,23,36,46,43,151,48,75,233,52,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[6]);

  var _createClass = _$$_REQUIRE(_dependencyMap[7]);

  var _inherits = _$$_REQUIRE(_dependencyMap[8]);

  var Batchinator = _$$_REQUIRE(_dependencyMap[9]);

  var FillRateHelper = _$$_REQUIRE(_dependencyMap[10]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[11]);

  var React = _$$_REQUIRE(_dependencyMap[12]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[13]);

  var RefreshControl = _$$_REQUIRE(_dependencyMap[14]);

  var ScrollView = _$$_REQUIRE(_dependencyMap[15]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[16]);

  var UIManager = _$$_REQUIRE(_dependencyMap[17]);

  var View = _$$_REQUIRE(_dependencyMap[18]);

  var ViewabilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[20]);

  var infoLog = _$$_REQUIRE(_dependencyMap[21]);

  var invariant = _$$_REQUIRE(_dependencyMap[22]);

  var warning = _$$_REQUIRE(_dependencyMap[23]);

  var _require = _$$_REQUIRE(_dependencyMap[24]),
      computeWindowedRenderLimits = _require.computeWindowedRenderLimits;

  var _usedIndexForKey = false;
  var _keylessItemComponentName = '';

  var VirtualizedList = function (_React$PureComponent) {
    _inherits(VirtualizedList, _React$PureComponent);

    _createClass(VirtualizedList, [{
      key: "scrollToEnd",
      value: function scrollToEnd(params) {
        var animated = params ? params.animated : true;
        var veryLast = this.props.getItemCount(this.props.data) - 1;

        var frame = this._getFrameMetricsApprox(veryLast);

        var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);

        this._scrollRef.scrollTo(this.props.horizontal ? {
          x: offset,
          animated: animated
        } : {
          y: offset,
          animated: animated
        });
      }
    }, {
      key: "scrollToIndex",
      value: function scrollToIndex(params) {
        var _this$props = this.props,
            data = _this$props.data,
            horizontal = _this$props.horizontal,
            getItemCount = _this$props.getItemCount,
            getItemLayout = _this$props.getItemLayout,
            onScrollToIndexFailed = _this$props.onScrollToIndexFailed;
        var animated = params.animated,
            index = params.index,
            viewOffset = params.viewOffset,
            viewPosition = params.viewPosition;
        invariant(index >= 0 && index < getItemCount(data), "scrollToIndex out of range: " + index + " vs " + (getItemCount(data) - 1));

        if (!getItemLayout && index > this._highestMeasuredFrameIndex) {
          invariant(!!onScrollToIndexFailed, "scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, otherwise there is no way to know the location of offscreen indices or handle failures.");
          onScrollToIndexFailed({
            averageItemLength: this._averageCellLength,
            highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,
            index: index
          });
          return;
        }

        var frame = this._getFrameMetricsApprox(index);

        var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);

        this._scrollRef.scrollTo(horizontal ? {
          x: offset,
          animated: animated
        } : {
          y: offset,
          animated: animated
        });
      }
    }, {
      key: "scrollToItem",
      value: function scrollToItem(params) {
        var item = params.item;
        var _this$props2 = this.props,
            data = _this$props2.data,
            getItem = _this$props2.getItem,
            getItemCount = _this$props2.getItemCount;
        var itemCount = getItemCount(data);

        for (var _index = 0; _index < itemCount; _index++) {
          if (getItem(data, _index) === item) {
            this.scrollToIndex(_objectSpread({}, params, {
              index: _index
            }));
            break;
          }
        }
      }
    }, {
      key: "scrollToOffset",
      value: function scrollToOffset(params) {
        var animated = params.animated,
            offset = params.offset;

        this._scrollRef.scrollTo(this.props.horizontal ? {
          x: offset,
          animated: animated
        } : {
          y: offset,
          animated: animated
        });
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        this._nestedChildLists.forEach(function (childList) {
          childList.ref && childList.ref.recordInteraction();
        });

        this._viewabilityTuples.forEach(function (t) {
          t.viewabilityHelper.recordInteraction();
        });

        this._updateViewableItems(this.props.data);
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        this._scrollRef.flashScrollIndicators();
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        if (this._scrollRef && this._scrollRef.getScrollResponder) {
          return this._scrollRef.getScrollResponder();
        }
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        if (this._scrollRef && this._scrollRef.getScrollableNode) {
          return this._scrollRef.getScrollableNode();
        } else {
          return ReactNative.findNodeHandle(this._scrollRef);
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        if (this._scrollRef) {
          this._scrollRef.setNativeProps(props);
        }
      }
    }, {
      key: "getChildContext",
      value: function getChildContext() {
        return {
          virtualizedList: {
            getScrollMetrics: this._getScrollMetrics,
            horizontal: this.props.horizontal,
            getOutermostParentListRef: this._getOutermostParentListRef,
            getNestedChildState: this._getNestedChildState,
            registerAsNestedChild: this._registerAsNestedChild,
            unregisterAsNestedChild: this._unregisterAsNestedChild
          }
        };
      }
    }, {
      key: "_getCellKey",
      value: function _getCellKey() {
        return this.context.virtualizedCell && this.context.virtualizedCell.cellKey || 'rootList';
      }
    }, {
      key: "hasMore",
      value: function hasMore() {
        return this._hasMore;
      }
    }]);

    function VirtualizedList(_props, context) {
      var _this;

      _classCallCheck(this, VirtualizedList);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(VirtualizedList).call(this, _props, context));

      _this._getScrollMetrics = function () {
        return _this._scrollMetrics;
      };

      _this._getOutermostParentListRef = function () {
        if (_this._isNestedWithSameOrientation()) {
          return _this.context.virtualizedList.getOutermostParentListRef();
        } else {
          return _assertThisInitialized(_this);
        }
      };

      _this._getNestedChildState = function (key) {
        var existingChildData = _this._nestedChildLists.get(key);

        return existingChildData && existingChildData.state;
      };

      _this._registerAsNestedChild = function (childList) {
        var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();
        childListsInCell.add(childList.key);

        _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);

        var existingChildData = _this._nestedChildLists.get(childList.key);

        invariant(!(existingChildData && existingChildData.ref !== null), "A VirtualizedList contains a cell which itself contains more than one VirtualizedList of the same orientation as the parent list. You must pass a unique listKey prop to each sibling list.");

        _this._nestedChildLists.set(childList.key, {
          ref: childList.ref,
          state: null
        });

        if (_this._hasInteracted) {
          childList.ref.recordInteraction();
        }
      };

      _this._unregisterAsNestedChild = function (childList) {
        _this._nestedChildLists.set(childList.key, {
          ref: null,
          state: childList.state
        });
      };

      _this._onUpdateSeparators = function (keys, newProps) {
        keys.forEach(function (key) {
          var ref = key != null && _this._cellRefs[key];
          ref && ref.updateSeparatorProps(newProps);
        });
      };

      _this._averageCellLength = 0;
      _this._cellKeysToChildListKeys = new Map();
      _this._cellRefs = {};
      _this._frames = {};
      _this._footerLength = 0;
      _this._hasDataChangedSinceEndReached = true;
      _this._hasDoneInitialScroll = false;
      _this._hasInteracted = false;
      _this._hasMore = false;
      _this._hasWarned = {};
      _this._headerLength = 0;
      _this._hiPriInProgress = false;
      _this._highestMeasuredFrameIndex = 0;
      _this._indicesToKeys = new Map();
      _this._nestedChildLists = new Map();
      _this._offsetFromParentVirtualizedList = 0;
      _this._prevParentOffset = 0;
      _this._scrollMetrics = {
        contentLength: 0,
        dOffset: 0,
        dt: 10,
        offset: 0,
        timestamp: 0,
        velocity: 0,
        visibleLength: 0
      };
      _this._scrollRef = null;
      _this._sentEndForContentLength = 0;
      _this._totalCellLength = 0;
      _this._totalCellsMeasured = 0;
      _this._viewabilityTuples = [];

      _this._captureScrollRef = function (ref) {
        _this._scrollRef = ref;
      };

      _this._defaultRenderScrollComponent = function (props) {
        var onRefresh = props.onRefresh;

        if (_this._isNestedWithSameOrientation()) {
          return React.createElement(View, props);
        } else if (onRefresh) {
          invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');
          return React.createElement(ScrollView, _extends({}, props, {
            refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {
              refreshing: props.refreshing,
              onRefresh: onRefresh,
              progressViewOffset: props.progressViewOffset
            }) : props.refreshControl
          }));
        } else {
          return React.createElement(ScrollView, props);
        }
      };

      _this._onCellUnmount = function (cellKey) {
        var curr = _this._frames[cellKey];

        if (curr) {
          _this._frames[cellKey] = _objectSpread({}, curr, {
            inLayout: false
          });
        }
      };

      _this._onLayout = function (e) {
        if (_this._isNestedWithSameOrientation()) {
          _this.measureLayoutRelativeToContainingList();
        } else {
          _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);
        }

        _this.props.onLayout && _this.props.onLayout(e);

        _this._scheduleCellsToRenderUpdate();

        _this._maybeCallOnEndReached();
      };

      _this._onLayoutEmpty = function (e) {
        _this.props.onLayout && _this.props.onLayout(e);
      };

      _this._onLayoutFooter = function (e) {
        _this._footerLength = _this._selectLength(e.nativeEvent.layout);
      };

      _this._onLayoutHeader = function (e) {
        _this._headerLength = _this._selectLength(e.nativeEvent.layout);
      };

      _this._onContentSizeChange = function (width, height) {
        if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {
          _this.scrollToIndex({
            animated: false,
            index: _this.props.initialScrollIndex
          });

          _this._hasDoneInitialScroll = true;
        }

        if (_this.props.onContentSizeChange) {
          _this.props.onContentSizeChange(width, height);
        }

        _this._scrollMetrics.contentLength = _this._selectLength({
          height: height,
          width: width
        });

        _this._scheduleCellsToRenderUpdate();

        _this._maybeCallOnEndReached();
      };

      _this._convertParentScrollMetrics = function (metrics) {
        var offset = metrics.offset - _this._offsetFromParentVirtualizedList;
        var visibleLength = metrics.visibleLength;
        var dOffset = offset - _this._scrollMetrics.offset;
        var contentLength = _this._scrollMetrics.contentLength;
        return {
          visibleLength: visibleLength,
          contentLength: contentLength,
          offset: offset,
          dOffset: dOffset
        };
      };

      _this._onScroll = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList.ref && childList.ref._onScroll(e);
        });

        if (_this.props.onScroll) {
          _this.props.onScroll(e);
        }

        var timestamp = e.timeStamp;

        var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);

        var contentLength = _this._selectLength(e.nativeEvent.contentSize);

        var offset = _this._selectOffset(e.nativeEvent.contentOffset);

        var dOffset = offset - _this._scrollMetrics.offset;

        if (_this._isNestedWithSameOrientation()) {
          if (_this._scrollMetrics.contentLength === 0) {
            return;
          }

          var _this$_convertParentS = _this._convertParentScrollMetrics({
            visibleLength: visibleLength,
            offset: offset
          });

          visibleLength = _this$_convertParentS.visibleLength;
          contentLength = _this$_convertParentS.contentLength;
          offset = _this$_convertParentS.offset;
          dOffset = _this$_convertParentS.dOffset;
        }

        var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;
        var velocity = dOffset / dt;

        if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {
          infoLog("VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices like PureComponent, shouldComponentUpdate, etc.", {
            dt: dt,
            prevDt: _this._scrollMetrics.dt,
            contentLength: contentLength
          });
          _this._hasWarned.perf = true;
        }

        _this._scrollMetrics = {
          contentLength: contentLength,
          dt: dt,
          dOffset: dOffset,
          offset: offset,
          timestamp: timestamp,
          velocity: velocity,
          visibleLength: visibleLength
        };

        _this._updateViewableItems(_this.props.data);

        if (!_this.props) {
          return;
        }

        _this._maybeCallOnEndReached();

        if (velocity !== 0) {
          _this._fillRateHelper.activate();
        }

        _this._computeBlankness();

        _this._scheduleCellsToRenderUpdate();
      };

      _this._onScrollBeginDrag = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList.ref && childList.ref._onScrollBeginDrag(e);
        });

        _this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.recordInteraction();
        });

        _this._hasInteracted = true;
        _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);
      };

      _this._onScrollEndDrag = function (e) {
        var velocity = e.nativeEvent.velocity;

        if (velocity) {
          _this._scrollMetrics.velocity = _this._selectOffset(velocity);
        }

        _this._computeBlankness();

        _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);
      };

      _this._onMomentumScrollEnd = function (e) {
        _this._scrollMetrics.velocity = 0;

        _this._computeBlankness();

        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);
      };

      _this._updateCellsToRender = function () {
        var _this$props3 = _this.props,
            data = _this$props3.data,
            getItemCount = _this$props3.getItemCount,
            onEndReachedThreshold = _this$props3.onEndReachedThreshold;

        var isVirtualizationDisabled = _this._isVirtualizationDisabled();

        _this._updateViewableItems(data);

        if (!data) {
          return;
        }

        _this.setState(function (state) {
          var newState;

          if (!isVirtualizationDisabled) {
            if (_this._scrollMetrics.visibleLength) {
              if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {
                newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);
              }
            }
          } else {
            var _this$_scrollMetrics = _this._scrollMetrics,
                contentLength = _this$_scrollMetrics.contentLength,
                offset = _this$_scrollMetrics.offset,
                visibleLength = _this$_scrollMetrics.visibleLength;
            var distanceFromEnd = contentLength - visibleLength - offset;
            var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;
            newState = {
              first: 0,
              last: Math.min(state.last + renderAhead, getItemCount(data) - 1)
            };
          }

          if (newState && _this._nestedChildLists.size > 0) {
            var newFirst = newState.first;
            var newLast = newState.last;

            for (var ii = newFirst; ii <= newLast; ii++) {
              var cellKeyForIndex = _this._indicesToKeys.get(ii);

              var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);

              if (!childListKeys) {
                continue;
              }

              var someChildHasMore = false;

              for (var _iterator = childListKeys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();;) {
                var _ref;

                if (_isArray) {
                  if (_i >= _iterator.length) break;
                  _ref = _iterator[_i++];
                } else {
                  _i = _iterator.next();
                  if (_i.done) break;
                  _ref = _i.value;
                }

                var _childKey = _ref;

                var childList = _this._nestedChildLists.get(_childKey);

                if (childList && childList.ref && childList.ref.hasMore()) {
                  someChildHasMore = true;
                  break;
                }
              }

              if (someChildHasMore) {
                newState.last = ii;
                break;
              }
            }
          }

          return newState;
        });
      };

      _this._createViewToken = function (index, isViewable) {
        var _this$props4 = _this.props,
            data = _this$props4.data,
            getItem = _this$props4.getItem,
            keyExtractor = _this$props4.keyExtractor;
        var item = getItem(data, index);
        return {
          index: index,
          item: item,
          key: keyExtractor(item, index),
          isViewable: isViewable
        };
      };

      _this._getFrameMetricsApprox = function (index) {
        var frame = _this._getFrameMetrics(index);

        if (frame && frame.index === index) {
          return frame;
        } else {
          var getItemLayout = _this.props.getItemLayout;
          invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');
          return {
            length: _this._averageCellLength,
            offset: _this._averageCellLength * index
          };
        }
      };

      _this._getFrameMetrics = function (index) {
        var _this$props5 = _this.props,
            data = _this$props5.data,
            getItem = _this$props5.getItem,
            getItemCount = _this$props5.getItemCount,
            getItemLayout = _this$props5.getItemLayout,
            keyExtractor = _this$props5.keyExtractor;
        invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);
        var item = getItem(data, index);

        var frame = item && _this._frames[keyExtractor(item, index)];

        if (!frame || frame.index !== index) {
          if (getItemLayout) {
            frame = getItemLayout(data, index);
          }
        }

        return frame;
      };

      invariant(!_props.onScroll || !_props.onScroll.__isNative, "Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent to support native onScroll events with useNativeDriver");
      invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');
      _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);
      _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);

      if (_this.props.viewabilityConfigCallbackPairs) {
        _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
          return {
            viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),
            onViewableItemsChanged: pair.onViewableItemsChanged
          };
        });
      } else if (_this.props.onViewableItemsChanged) {
        _this._viewabilityTuples.push({
          viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),
          onViewableItemsChanged: _this.props.onViewableItemsChanged
        });
      }

      var initialState = {
        first: _this.props.initialScrollIndex || 0,
        last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1
      };

      if (_this._isNestedWithSameOrientation()) {
        var storedState = _this.context.virtualizedList.getNestedChildState(_this.props.listKey || _this._getCellKey());

        if (storedState) {
          initialState = storedState;
          _this.state = storedState;
          _this._frames = storedState.frames;
        }
      }

      _this.state = initialState;
      return _this;
    }

    _createClass(VirtualizedList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this._isNestedWithSameOrientation()) {
          this.context.virtualizedList.registerAsNestedChild({
            cellKey: this._getCellKey(),
            key: this.props.listKey || this._getCellKey(),
            ref: this
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._isNestedWithSameOrientation()) {
          this.context.virtualizedList.unregisterAsNestedChild({
            key: this.props.listKey || this._getCellKey(),
            state: {
              first: this.state.first,
              last: this.state.last,
              frames: this._frames
            }
          });
        }

        this._updateViewableItems(null);

        this._updateCellsToRenderBatcher.dispose({
          abort: true
        });

        this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.dispose();
        });

        this._fillRateHelper.deactivateAndFlush();
      }
    }, {
      key: "_pushCells",
      value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {
        var _this2 = this;

        var _this$props6 = this.props,
            CellRendererComponent = _this$props6.CellRendererComponent,
            ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,
            data = _this$props6.data,
            getItem = _this$props6.getItem,
            getItemCount = _this$props6.getItemCount,
            horizontal = _this$props6.horizontal,
            keyExtractor = _this$props6.keyExtractor;
        var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;
        var end = getItemCount(data) - 1;
        var prevCellKey;
        last = Math.min(end, last);

        var _loop = function _loop(ii) {
          var item = getItem(data, ii);
          var key = keyExtractor(item, ii);

          _this2._indicesToKeys.set(ii, key);

          if (stickyIndicesFromProps.has(ii + stickyOffset)) {
            stickyHeaderIndices.push(cells.length);
          }

          cells.push(React.createElement(CellRenderer, {
            CellRendererComponent: CellRendererComponent,
            ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,
            cellKey: key,
            fillRateHelper: _this2._fillRateHelper,
            horizontal: horizontal,
            index: ii,
            inversionStyle: inversionStyle,
            item: item,
            key: key,
            prevCellKey: prevCellKey,
            onUpdateSeparators: _this2._onUpdateSeparators,
            onLayout: function onLayout(e) {
              return _this2._onCellLayout(e, key, ii);
            },
            onUnmount: _this2._onCellUnmount,
            parentProps: _this2.props,
            ref: function ref(_ref2) {
              _this2._cellRefs[key] = _ref2;
            }
          }));
          prevCellKey = key;
        };

        for (var ii = first; ii <= last; ii++) {
          _loop(ii);
        }
      }
    }, {
      key: "_isVirtualizationDisabled",
      value: function _isVirtualizationDisabled() {
        return this.props.disableVirtualization;
      }
    }, {
      key: "_isNestedWithSameOrientation",
      value: function _isNestedWithSameOrientation() {
        var nestedContext = this.context.virtualizedList;
        return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props7 = this.props,
            ListEmptyComponent = _this$props7.ListEmptyComponent,
            ListFooterComponent = _this$props7.ListFooterComponent,
            ListHeaderComponent = _this$props7.ListHeaderComponent;
        var _this$props8 = this.props,
            data = _this$props8.data,
            horizontal = _this$props8.horizontal;

        var isVirtualizationDisabled = this._isVirtualizationDisabled();

        var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;
        var cells = [];
        var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
        var stickyHeaderIndices = [];

        if (ListHeaderComponent) {
          if (stickyIndicesFromProps.has(0)) {
            stickyHeaderIndices.push(0);
          }

          var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);
          cells.push(React.createElement(VirtualizedCellWrapper, {
            cellKey: this._getCellKey() + '-header',
            key: "$header"
          }, React.createElement(View, {
            onLayout: this._onLayoutHeader,
            style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)
          }, element)));
        }

        var itemCount = this.props.getItemCount(data);

        if (itemCount > 0) {
          _usedIndexForKey = false;
          _keylessItemComponentName = '';
          var spacerKey = !horizontal ? 'height' : 'width';
          var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;
          var _this$state = this.state,
              first = _this$state.first,
              last = _this$state.last;

          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);

          var firstAfterInitial = Math.max(lastInitialIndex + 1, first);

          if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {
            var insertedStickySpacer = false;

            if (stickyIndicesFromProps.size > 0) {
              var stickyOffset = ListHeaderComponent ? 1 : 0;

              for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {
                if (stickyIndicesFromProps.has(ii + stickyOffset)) {
                  var initBlock = this._getFrameMetricsApprox(lastInitialIndex);

                  var stickyBlock = this._getFrameMetricsApprox(ii);

                  var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);
                  cells.push(React.createElement(View, {
                    key: "$sticky_lead",
                    style: _defineProperty({}, spacerKey, leadSpace)
                  }));

                  this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);

                  var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);
                  cells.push(React.createElement(View, {
                    key: "$sticky_trail",
                    style: _defineProperty({}, spacerKey, trailSpace)
                  }));
                  insertedStickySpacer = true;
                  break;
                }
              }
            }

            if (!insertedStickySpacer) {
              var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);

              var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);

              cells.push(React.createElement(View, {
                key: "$lead_spacer",
                style: _defineProperty({}, spacerKey, firstSpace)
              }));
            }
          }

          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);

          if (!this._hasWarned.keys && _usedIndexForKey) {
            console.warn("VirtualizedList: missing keys for items, make sure to specify a key property on each item or provide a custom keyExtractor.", _keylessItemComponentName);
            this._hasWarned.keys = true;
          }

          if (!isVirtualizationDisabled && last < itemCount - 1) {
            var lastFrame = this._getFrameMetricsApprox(last);

            var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);

            var endFrame = this._getFrameMetricsApprox(end);

            var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);
            cells.push(React.createElement(View, {
              key: "$tail_spacer",
              style: _defineProperty({}, spacerKey, tailSpacerLength)
            }));
          }
        } else if (ListEmptyComponent) {
          var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);

          cells.push(React.cloneElement(_element, {
            key: '$empty',
            onLayout: function onLayout(event) {
              _this3._onLayoutEmpty(event);

              if (_element.props.onLayout) {
                _element.props.onLayout(event);
              }
            },
            style: StyleSheet.compose(inversionStyle, _element.props.style)
          }));
        }

        if (ListFooterComponent) {
          var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);

          cells.push(React.createElement(VirtualizedCellWrapper, {
            cellKey: this._getCellKey() + '-footer',
            key: "$footer"
          }, React.createElement(View, {
            onLayout: this._onLayoutFooter,
            style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)
          }, _element2)));
        }

        var scrollProps = _objectSpread({}, this.props, {
          onContentSizeChange: this._onContentSizeChange,
          onLayout: this._onLayout,
          onScroll: this._onScroll,
          onScrollBeginDrag: this._onScrollBeginDrag,
          onScrollEndDrag: this._onScrollEndDrag,
          onMomentumScrollEnd: this._onMomentumScrollEnd,
          scrollEventThrottle: this.props.scrollEventThrottle,
          invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,
          stickyHeaderIndices: stickyHeaderIndices
        });

        if (inversionStyle) {
          scrollProps.style = [inversionStyle, this.props.style];
        }

        this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;
        var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {
          ref: this._captureScrollRef
        }, cells);

        if (this.props.debug) {
          return React.createElement(View, {
            style: styles.debug
          }, ret, this._renderDebugOverlay());
        } else {
          return ret;
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this$props9 = this.props,
            data = _this$props9.data,
            extraData = _this$props9.extraData;

        if (data !== prevProps.data || extraData !== prevProps.extraData) {
          this._hasDataChangedSinceEndReached = true;

          this._viewabilityTuples.forEach(function (tuple) {
            tuple.viewabilityHelper.resetViewableIndices();
          });
        }

        var hiPriInProgress = this._hiPriInProgress;

        this._scheduleCellsToRenderUpdate();

        if (hiPriInProgress) {
          this._hiPriInProgress = false;
        }
      }
    }, {
      key: "_computeBlankness",
      value: function _computeBlankness() {
        this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);
      }
    }, {
      key: "_onCellLayout",
      value: function _onCellLayout(e, cellKey, index) {
        var layout = e.nativeEvent.layout;
        var next = {
          offset: this._selectOffset(layout),
          length: this._selectLength(layout),
          index: index,
          inLayout: true
        };
        var curr = this._frames[cellKey];

        if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {
          this._totalCellLength += next.length - (curr ? curr.length : 0);
          this._totalCellsMeasured += curr ? 0 : 1;
          this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;
          this._frames[cellKey] = next;
          this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);

          this._scheduleCellsToRenderUpdate();
        } else {
          this._frames[cellKey].inLayout = true;
        }

        var childListKeys = this._cellKeysToChildListKeys.get(cellKey);

        if (childListKeys) {
          for (var _iterator2 = childListKeys, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
            var _ref7;

            if (_isArray2) {
              if (_i2 >= _iterator2.length) break;
              _ref7 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done) break;
              _ref7 = _i2.value;
            }

            var _childKey2 = _ref7;

            var childList = this._nestedChildLists.get(_childKey2);

            childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();
          }
        }

        this._computeBlankness();

        this._updateViewableItems(this.props.data);
      }
    }, {
      key: "measureLayoutRelativeToContainingList",
      value: function measureLayoutRelativeToContainingList() {
        var _this4 = this;

        try {
          UIManager.measureLayout(ReactNative.findNodeHandle(this), ReactNative.findNodeHandle(this.context.virtualizedList.getOutermostParentListRef()), function (error) {
            console.warn("VirtualizedList: Encountered an error while measuring a list's offset from its containing VirtualizedList.");
          }, function (x, y, width, height) {
            _this4._offsetFromParentVirtualizedList = _this4._selectOffset({
              x: x,
              y: y
            });
            _this4._scrollMetrics.contentLength = _this4._selectLength({
              width: width,
              height: height
            });

            var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.virtualizedList.getScrollMetrics());

            _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;
            _this4._scrollMetrics.offset = scrollMetrics.offset;
          });
        } catch (error) {
          console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);
        }
      }
    }, {
      key: "_renderDebugOverlay",
      value: function _renderDebugOverlay() {
        var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);
        var framesInLayout = [];
        var itemCount = this.props.getItemCount(this.props.data);

        for (var ii = 0; ii < itemCount; ii++) {
          var frame = this._getFrameMetricsApprox(ii);

          if (frame.inLayout) {
            framesInLayout.push(frame);
          }
        }

        var windowTop = this._getFrameMetricsApprox(this.state.first).offset;

        var frameLast = this._getFrameMetricsApprox(this.state.last);

        var windowLen = frameLast.offset + frameLast.length - windowTop;
        var visTop = this._scrollMetrics.offset;
        var visLen = this._scrollMetrics.visibleLength;
        return React.createElement(View, {
          style: [styles.debugOverlayBase, styles.debugOverlay]
        }, framesInLayout.map(function (f, ii) {
          return React.createElement(View, {
            key: 'f' + ii,
            style: [styles.debugOverlayBase, styles.debugOverlayFrame, {
              top: f.offset * normalize,
              height: f.length * normalize
            }]
          });
        }), React.createElement(View, {
          style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {
            top: windowTop * normalize,
            height: windowLen * normalize
          }]
        }), React.createElement(View, {
          style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {
            top: visTop * normalize,
            height: visLen * normalize
          }]
        }));
      }
    }, {
      key: "_selectLength",
      value: function _selectLength(metrics) {
        return !this.props.horizontal ? metrics.height : metrics.width;
      }
    }, {
      key: "_selectOffset",
      value: function _selectOffset(metrics) {
        return !this.props.horizontal ? metrics.y : metrics.x;
      }
    }, {
      key: "_maybeCallOnEndReached",
      value: function _maybeCallOnEndReached() {
        var _this$props10 = this.props,
            data = _this$props10.data,
            getItemCount = _this$props10.getItemCount,
            onEndReached = _this$props10.onEndReached,
            onEndReachedThreshold = _this$props10.onEndReachedThreshold;
        var _this$_scrollMetrics2 = this._scrollMetrics,
            contentLength = _this$_scrollMetrics2.contentLength,
            visibleLength = _this$_scrollMetrics2.visibleLength,
            offset = _this$_scrollMetrics2.offset;
        var distanceFromEnd = contentLength - visibleLength - offset;

        if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {
          this._hasDataChangedSinceEndReached = false;
          this._sentEndForContentLength = this._scrollMetrics.contentLength;
          onEndReached({
            distanceFromEnd: distanceFromEnd
          });
        }
      }
    }, {
      key: "_scheduleCellsToRenderUpdate",
      value: function _scheduleCellsToRenderUpdate() {
        var _this$state2 = this.state,
            first = _this$state2.first,
            last = _this$state2.last;
        var _this$_scrollMetrics3 = this._scrollMetrics,
            offset = _this$_scrollMetrics3.offset,
            visibleLength = _this$_scrollMetrics3.visibleLength,
            velocity = _this$_scrollMetrics3.velocity;
        var itemCount = this.props.getItemCount(this.props.data);
        var hiPri = false;
        var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;

        if (first > 0) {
          var distTop = offset - this._getFrameMetricsApprox(first).offset;

          hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;
        }

        if (last < itemCount - 1) {
          var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);
          hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;
        }

        if (hiPri && this._averageCellLength && !this._hiPriInProgress) {
          this._hiPriInProgress = true;

          this._updateCellsToRenderBatcher.dispose({
            abort: true
          });

          this._updateCellsToRender();

          return;
        } else {
          this._updateCellsToRenderBatcher.schedule();
        }
      }
    }, {
      key: "_updateViewableItems",
      value: function _updateViewableItems(data) {
        var _this5 = this;

        var getItemCount = this.props.getItemCount;

        this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.onUpdate(getItemCount(data), _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, _this5.state);
        });
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(newProps, prevState) {
        var data = newProps.data,
            getItemCount = newProps.getItemCount,
            maxToRenderPerBatch = newProps.maxToRenderPerBatch;
        return {
          first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),
          last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))
        };
      }
    }]);

    return VirtualizedList;
  }(React.PureComponent);

  VirtualizedList.defaultProps = {
    disableVirtualization: false,
    horizontal: false,
    initialNumToRender: 10,
    keyExtractor: function keyExtractor(item, index) {
      if (item.key != null) {
        return item.key;
      }

      _usedIndexForKey = true;

      if (item.type && item.type.displayName) {
        _keylessItemComponentName = item.type.displayName;
      }

      return String(index);
    },
    maxToRenderPerBatch: 10,
    onEndReachedThreshold: 2,
    scrollEventThrottle: 50,
    updateCellsBatchingPeriod: 50,
    windowSize: 21
  };
  VirtualizedList.contextTypes = {
    virtualizedCell: PropTypes.shape({
      cellKey: PropTypes.string
    }),
    virtualizedList: PropTypes.shape({
      getScrollMetrics: PropTypes.func,
      horizontal: PropTypes.bool,
      getOutermostParentListRef: PropTypes.func,
      getNestedChildState: PropTypes.func,
      registerAsNestedChild: PropTypes.func,
      unregisterAsNestedChild: PropTypes.func
    })
  };
  VirtualizedList.childContextTypes = {
    virtualizedList: PropTypes.shape({
      getScrollMetrics: PropTypes.func,
      horizontal: PropTypes.bool,
      getOutermostParentListRef: PropTypes.func,
      getNestedChildState: PropTypes.func,
      registerAsNestedChild: PropTypes.func,
      unregisterAsNestedChild: PropTypes.func
    })
  };

  var CellRenderer = function (_React$Component) {
    _inherits(CellRenderer, _React$Component);

    function CellRenderer() {
      var _getPrototypeOf2;

      var _this6;

      _classCallCheck(this, CellRenderer);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this6 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellRenderer)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this6.state = {
        separatorProps: {
          highlighted: false,
          leadingItem: _this6.props.item
        }
      };
      _this6._separators = {
        highlight: function highlight() {
          var _this6$props = _this6.props,
              cellKey = _this6$props.cellKey,
              prevCellKey = _this6$props.prevCellKey;

          _this6.props.onUpdateSeparators([cellKey, prevCellKey], {
            highlighted: true
          });
        },
        unhighlight: function unhighlight() {
          var _this6$props2 = _this6.props,
              cellKey = _this6$props2.cellKey,
              prevCellKey = _this6$props2.prevCellKey;

          _this6.props.onUpdateSeparators([cellKey, prevCellKey], {
            highlighted: false
          });
        },
        updateProps: function updateProps(select, newProps) {
          var _this6$props3 = _this6.props,
              cellKey = _this6$props3.cellKey,
              prevCellKey = _this6$props3.prevCellKey;

          _this6.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);
        }
      };
      return _this6;
    }

    _createClass(CellRenderer, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          virtualizedCell: {
            cellKey: this.props.cellKey
          }
        };
      }
    }, {
      key: "updateSeparatorProps",
      value: function updateSeparatorProps(newProps) {
        this.setState(function (state) {
          return {
            separatorProps: _objectSpread({}, state.separatorProps, newProps)
          };
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.props.onUnmount(this.props.cellKey);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props11 = this.props,
            CellRendererComponent = _this$props11.CellRendererComponent,
            ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,
            fillRateHelper = _this$props11.fillRateHelper,
            horizontal = _this$props11.horizontal,
            item = _this$props11.item,
            index = _this$props11.index,
            inversionStyle = _this$props11.inversionStyle,
            parentProps = _this$props11.parentProps;
        var renderItem = parentProps.renderItem,
            getItemLayout = parentProps.getItemLayout;
        invariant(renderItem, 'no renderItem!');
        var element = renderItem({
          item: item,
          index: index,
          separators: this._separators
        });
        var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;
        var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, this.state.separatorProps);
        var cellStyle = inversionStyle ? horizontal ? [{
          flexDirection: 'row-reverse'
        }, inversionStyle] : [{
          flexDirection: 'column-reverse'
        }, inversionStyle] : horizontal ? [{
          flexDirection: 'row'
        }, inversionStyle] : inversionStyle;

        if (!CellRendererComponent) {
          return React.createElement(View, {
            style: cellStyle,
            onLayout: onLayout
          }, element, itemSeparator);
        }

        return React.createElement(CellRendererComponent, _extends({}, this.props, {
          style: cellStyle,
          onLayout: onLayout
        }), element, itemSeparator);
      }
    }]);

    return CellRenderer;
  }(React.Component);

  CellRenderer.childContextTypes = {
    virtualizedCell: PropTypes.shape({
      cellKey: PropTypes.string
    })
  };

  var VirtualizedCellWrapper = function (_React$Component2) {
    _inherits(VirtualizedCellWrapper, _React$Component2);

    function VirtualizedCellWrapper() {
      _classCallCheck(this, VirtualizedCellWrapper);

      return _possibleConstructorReturn(this, _getPrototypeOf(VirtualizedCellWrapper).apply(this, arguments));
    }

    _createClass(VirtualizedCellWrapper, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          virtualizedCell: {
            cellKey: this.props.cellKey
          }
        };
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.children;
      }
    }]);

    return VirtualizedCellWrapper;
  }(React.Component);

  VirtualizedCellWrapper.childContextTypes = {
    virtualizedCell: PropTypes.shape({
      cellKey: PropTypes.string
    })
  };
  var styles = StyleSheet.create({
    verticallyInverted: {
      transform: [{
        scaleY: -1
      }]
    },
    horizontallyInverted: {
      transform: [{
        scaleX: -1
      }]
    },
    debug: {
      flex: 1
    },
    debugOverlayBase: {
      position: 'absolute',
      top: 0,
      right: 0
    },
    debugOverlay: {
      bottom: 0,
      width: 20,
      borderColor: 'blue',
      borderWidth: 1
    },
    debugOverlayFrame: {
      left: 0,
      backgroundColor: 'orange'
    },
    debugOverlayFrameLast: {
      left: 0,
      borderColor: 'green',
      borderWidth: 2
    },
    debugOverlayFrameVis: {
      left: 0,
      borderColor: 'red',
      borderWidth: 2
    }
  });
  module.exports = VirtualizedList;
},233,[47,11,46,22,30,33,32,23,36,234,235,61,48,78,236,239,52,42,75,248,74,146,3,5,249]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var InteractionManager = _$$_REQUIRE(_dependencyMap[2]);

  var Batchinator = function () {
    function Batchinator(callback, delayMS) {
      _classCallCheck(this, Batchinator);

      this._delay = delayMS;
      this._callback = callback;
    }

    _createClass(Batchinator, [{
      key: "dispose",
      value: function dispose() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
          abort: false
        };

        if (this._taskHandle) {
          this._taskHandle.cancel();

          if (!options.abort) {
            this._callback();
          }

          this._taskHandle = null;
        }
      }
    }, {
      key: "schedule",
      value: function schedule() {
        var _this = this;

        if (this._taskHandle) {
          return;
        }

        var timeoutHandle = setTimeout(function () {
          _this._taskHandle = InteractionManager.runAfterInteractions(function () {
            _this._taskHandle = null;

            _this._callback();
          });
        }, this._delay);
        this._taskHandle = {
          cancel: function cancel() {
            return clearTimeout(timeoutHandle);
          }
        };
      }
    }]);

    return Batchinator;
  }();

  module.exports = Batchinator;
},234,[22,23,209]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var performanceNow = _$$_REQUIRE(_dependencyMap[3]);

  var warning = _$$_REQUIRE(_dependencyMap[4]);

  var Info = function Info() {
    _classCallCheck(this, Info);

    this.any_blank_count = 0;
    this.any_blank_ms = 0;
    this.any_blank_speed_sum = 0;
    this.mostly_blank_count = 0;
    this.mostly_blank_ms = 0;
    this.pixels_blank = 0;
    this.pixels_sampled = 0;
    this.pixels_scrolled = 0;
    this.total_time_spent = 0;
    this.sample_count = 0;
  };

  var DEBUG = false;
  var _listeners = [];
  var _minSampleCount = 10;
  var _sampleRate = null;

  var FillRateHelper = function () {
    _createClass(FillRateHelper, null, [{
      key: "addListener",
      value: function addListener(callback) {
        warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');

        _listeners.push(callback);

        return {
          remove: function remove() {
            _listeners = _listeners.filter(function (listener) {
              return callback !== listener;
            });
          }
        };
      }
    }, {
      key: "setSampleRate",
      value: function setSampleRate(sampleRate) {
        _sampleRate = sampleRate;
      }
    }, {
      key: "setMinSampleCount",
      value: function setMinSampleCount(minSampleCount) {
        _minSampleCount = minSampleCount;
      }
    }]);

    function FillRateHelper(getFrameMetrics) {
      _classCallCheck(this, FillRateHelper);

      this._anyBlankStartTime = null;
      this._enabled = false;
      this._info = new Info();
      this._mostlyBlankStartTime = null;
      this._samplesStartTime = null;
      this._getFrameMetrics = getFrameMetrics;
      this._enabled = (_sampleRate || 0) > Math.random();

      this._resetData();
    }

    _createClass(FillRateHelper, [{
      key: "activate",
      value: function activate() {
        if (this._enabled && this._samplesStartTime == null) {
          DEBUG;
          this._samplesStartTime = performanceNow();
        }
      }
    }, {
      key: "deactivateAndFlush",
      value: function deactivateAndFlush() {
        if (!this._enabled) {
          return;
        }

        var start = this._samplesStartTime;

        if (start == null) {
          DEBUG;
          return;
        }

        if (this._info.sample_count < _minSampleCount) {
          this._resetData();

          return;
        }

        var total_time_spent = performanceNow() - start;

        var info = _objectSpread({}, this._info, {
          total_time_spent: total_time_spent
        });

        _listeners.forEach(function (listener) {
          return listener(info);
        });

        this._resetData();
      }
    }, {
      key: "computeBlankness",
      value: function computeBlankness(props, state, scrollMetrics) {
        if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {
          return 0;
        }

        var dOffset = scrollMetrics.dOffset,
            offset = scrollMetrics.offset,
            velocity = scrollMetrics.velocity,
            visibleLength = scrollMetrics.visibleLength;
        this._info.sample_count++;
        this._info.pixels_sampled += Math.round(visibleLength);
        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));
        var scrollSpeed = Math.round(Math.abs(velocity) * 1000);
        var now = performanceNow();

        if (this._anyBlankStartTime != null) {
          this._info.any_blank_ms += now - this._anyBlankStartTime;
        }

        this._anyBlankStartTime = null;

        if (this._mostlyBlankStartTime != null) {
          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;
        }

        this._mostlyBlankStartTime = null;
        var blankTop = 0;
        var first = state.first;

        var firstFrame = this._getFrameMetrics(first);

        while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {
          firstFrame = this._getFrameMetrics(first);
          first++;
        }

        if (firstFrame && first > 0) {
          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));
        }

        var blankBottom = 0;
        var last = state.last;

        var lastFrame = this._getFrameMetrics(last);

        while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {
          lastFrame = this._getFrameMetrics(last);
          last--;
        }

        if (lastFrame && last < props.getItemCount(props.data) - 1) {
          var bottomEdge = lastFrame.offset + lastFrame.length;
          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));
        }

        var pixels_blank = Math.round(blankTop + blankBottom);
        var blankness = pixels_blank / visibleLength;

        if (blankness > 0) {
          this._anyBlankStartTime = now;
          this._info.any_blank_speed_sum += scrollSpeed;
          this._info.any_blank_count++;
          this._info.pixels_blank += pixels_blank;

          if (blankness > 0.5) {
            this._mostlyBlankStartTime = now;
            this._info.mostly_blank_count++;
          }
        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {
          this.deactivateAndFlush();
        }

        return blankness;
      }
    }, {
      key: "enabled",
      value: function enabled() {
        return this._enabled;
      }
    }, {
      key: "_resetData",
      value: function _resetData() {
        this._anyBlankStartTime = null;
        this._info = new Info();
        this._mostlyBlankStartTime = null;
        this._samplesStartTime = null;
      }
    }]);

    return FillRateHelper;
  }();

  module.exports = FillRateHelper;
},235,[46,23,22,106,5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var _require = _$$_REQUIRE(_dependencyMap[9]),
      NativeComponent = _require.NativeComponent;

  var AndroidSwipeRefreshLayoutNativeComponent = _$$_REQUIRE(_dependencyMap[10]);

  var RCTRefreshControlNativeComponent = _$$_REQUIRE(_dependencyMap[11]);

  var nullthrows = _$$_REQUIRE(_dependencyMap[12]);

  var RefreshLayoutConsts;
  {
    var AndroidSwipeRefreshLayout = _$$_REQUIRE(_dependencyMap[13]).getViewManagerConfig('AndroidSwipeRefreshLayout');

    RefreshLayoutConsts = AndroidSwipeRefreshLayout ? AndroidSwipeRefreshLayout.Constants : {
      SIZE: {}
    };
  }

  var RefreshControl = function (_React$Component) {
    _inherits(RefreshControl, _React$Component);

    function RefreshControl() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, RefreshControl);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RefreshControl)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._lastNativeRefreshing = false;

      _this._onRefresh = function () {
        _this._lastNativeRefreshing = true;
        _this.props.onRefresh && _this.props.onRefresh();

        _this.forceUpdate();
      };

      return _this;
    }

    _createClass(RefreshControl, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._lastNativeRefreshing = this.props.refreshing;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.props.refreshing !== prevProps.refreshing) {
          this._lastNativeRefreshing = this.props.refreshing;
        } else if (this.props.refreshing !== this._lastNativeRefreshing && this._setNativePropsOnRef) {
          this._setNativePropsOnRef({
            refreshing: this.props.refreshing
          });

          this._lastNativeRefreshing = this.props.refreshing;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var setRef = function setRef(ref) {
          return _this2._setNativePropsOnRef = ref ? ref.setNativeProps.bind(ref) : null;
        };

        {
          var _this$props2 = this.props,
              tintColor = _this$props2.tintColor,
              titleColor = _this$props2.titleColor,
              title = _this$props2.title,
              _props = _objectWithoutProperties(_this$props2, ["tintColor", "titleColor", "title"]);

          return React.createElement(AndroidSwipeRefreshLayoutNativeComponent, _extends({}, _props, {
            ref: setRef,
            onRefresh: this._onRefresh
          }));
        }
      }
    }]);

    return RefreshControl;
  }(React.Component);

  RefreshControl.SIZE = RefreshLayoutConsts.SIZE;
  module.exports = RefreshControl;
},236,[11,9,22,23,30,33,36,43,48,78,237,238,191,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var AndroidSwipeRefreshLayout = _$$_REQUIRE(_dependencyMap[1]).getViewManagerConfig('AndroidSwipeRefreshLayout');

  var RefreshLayoutConsts = AndroidSwipeRefreshLayout ? AndroidSwipeRefreshLayout.Constants : {
    SIZE: {}
  };
  module.exports = requireNativeComponent('AndroidSwipeRefreshLayout');
},237,[155,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('RCTRefreshControl');
},238,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[8]);

  var Platform = _$$_REQUIRE(_dependencyMap[9]);

  var React = _$$_REQUIRE(_dependencyMap[10]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[11]);

  var ScrollResponder = _$$_REQUIRE(_dependencyMap[12]);

  var ScrollViewStickyHeader = _$$_REQUIRE(_dependencyMap[13]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[14]);

  var View = _$$_REQUIRE(_dependencyMap[15]);

  var InternalScrollViewType = _$$_REQUIRE(_dependencyMap[16]);

  var dismissKeyboard = _$$_REQUIRE(_dependencyMap[17]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[18]);

  var invariant = _$$_REQUIRE(_dependencyMap[19]);

  var processDecelerationRate = _$$_REQUIRE(_dependencyMap[20]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[21]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[22]);

  var AndroidScrollView;
  var AndroidHorizontalScrollContentView;
  var AndroidHorizontalScrollView;
  var RCTScrollView;
  var RCTScrollContentView;
  {
    AndroidScrollView = requireNativeComponent('RCTScrollView');
    AndroidHorizontalScrollView = requireNativeComponent('AndroidHorizontalScrollView');
    AndroidHorizontalScrollContentView = requireNativeComponent('AndroidHorizontalScrollContentView');
  }

  function createScrollResponder(node) {
    var scrollResponder = _objectSpread({}, ScrollResponder.Mixin);

    for (var key in scrollResponder) {
      if (typeof scrollResponder[key] === 'function') {
        scrollResponder[key] = scrollResponder[key].bind(node);
      }
    }

    return scrollResponder;
  }

  var ScrollView = function (_React$Component) {
    _inherits(ScrollView, _React$Component);

    function ScrollView() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, ScrollView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScrollView)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._scrollResponder = createScrollResponder(_assertThisInitialized(_this));
      _this._scrollAnimatedValue = new AnimatedImplementation.Value(0);
      _this._scrollAnimatedValueAttachment = null;
      _this._stickyHeaderRefs = new Map();
      _this._headerLayoutYs = new Map();
      _this.state = _objectSpread({
        layoutHeight: null
      }, ScrollResponder.Mixin.scrollResponderMixinGetInitialState());

      _this._handleScroll = function (e) {
        {
          if (_this.props.keyboardDismissMode === 'on-drag' && _this.state.isTouching) {
            dismissKeyboard();
          }
        }

        _this._scrollResponder.scrollResponderHandleScroll(e);
      };

      _this._handleLayout = function (e) {
        if (_this.props.invertStickyHeaders) {
          _this.setState({
            layoutHeight: e.nativeEvent.layout.height
          });
        }

        if (_this.props.onLayout) {
          _this.props.onLayout(e);
        }
      };

      _this._handleContentOnLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;
        _this.props.onContentSizeChange && _this.props.onContentSizeChange(width, height);
      };

      _this._scrollViewRef = null;

      _this._setScrollViewRef = function (ref) {
        _this._scrollViewRef = ref;
      };

      _this._innerViewRef = null;

      _this._setInnerViewRef = function (ref) {
        _this._innerViewRef = ref;
      };

      for (var key in ScrollResponder.Mixin) {
        if (typeof ScrollResponder.Mixin[key] === 'function' && key.startsWith('scrollResponder')) {
          _assertThisInitialized(_this)[key] = ScrollResponder.Mixin[key].bind(_assertThisInitialized(_this));
        }
      }

      Object.keys(ScrollResponder.Mixin).filter(function (key) {
        return typeof ScrollResponder.Mixin[key] !== 'function';
      }).forEach(function (key) {
        _assertThisInitialized(_this)[key] = ScrollResponder.Mixin[key];
      });
      return _this;
    }

    _createClass(ScrollView, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this._scrollResponder.UNSAFE_componentWillMount();

        this._scrollAnimatedValue = new AnimatedImplementation.Value(this.props.contentOffset ? this.props.contentOffset.y : 0);

        this._scrollAnimatedValue.setOffset(this.props.contentInset ? this.props.contentInset.top : 0);

        this._stickyHeaderRefs = new Map();
        this._headerLayoutYs = new Map();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var currentContentInsetTop = this.props.contentInset ? this.props.contentInset.top : 0;
        var nextContentInsetTop = nextProps.contentInset ? nextProps.contentInset.top : 0;

        if (currentContentInsetTop !== nextContentInsetTop) {
          this._scrollAnimatedValue.setOffset(nextContentInsetTop || 0);
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this._updateAnimatedNodeAttachment();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this._updateAnimatedNodeAttachment();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._scrollResponder.componentWillUnmount();

        if (this._scrollAnimatedValueAttachment) {
          this._scrollAnimatedValueAttachment.detach();
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        this._scrollViewRef && this._scrollViewRef.setNativeProps(props);
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        return this;
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        return ReactNative.findNodeHandle(this._scrollViewRef);
      }
    }, {
      key: "getInnerViewNode",
      value: function getInnerViewNode() {
        return ReactNative.findNodeHandle(this._innerViewRef);
      }
    }, {
      key: "scrollTo",
      value: function scrollTo(y, x, animated) {
        if (typeof y === 'number') {
          console.warn("`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.");
        } else {
          var _ref = y || {};

          x = _ref.x;
          y = _ref.y;
          animated = _ref.animated;
        }

        this._scrollResponder.scrollResponderScrollTo({
          x: x || 0,
          y: y || 0,
          animated: animated !== false
        });
      }
    }, {
      key: "scrollToEnd",
      value: function scrollToEnd(options) {
        var animated = (options && options.animated) !== false;

        this._scrollResponder.scrollResponderScrollToEnd({
          animated: animated
        });
      }
    }, {
      key: "scrollWithoutAnimationTo",
      value: function scrollWithoutAnimationTo() {
        var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
        this.scrollTo({
          x: x,
          y: y,
          animated: false
        });
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        this._scrollResponder.scrollResponderFlashScrollIndicators();
      }
    }, {
      key: "_getKeyForIndex",
      value: function _getKeyForIndex(index, childArray) {
        var child = childArray[index];
        return child && child.key;
      }
    }, {
      key: "_updateAnimatedNodeAttachment",
      value: function _updateAnimatedNodeAttachment() {
        if (this._scrollAnimatedValueAttachment) {
          this._scrollAnimatedValueAttachment.detach();
        }

        if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {
          this._scrollAnimatedValueAttachment = AnimatedImplementation.attachNativeEvent(this._scrollViewRef, 'onScroll', [{
            nativeEvent: {
              contentOffset: {
                y: this._scrollAnimatedValue
              }
            }
          }]);
        }
      }
    }, {
      key: "_setStickyHeaderRef",
      value: function _setStickyHeaderRef(key, ref) {
        if (ref) {
          this._stickyHeaderRefs.set(key, ref);
        } else {
          this._stickyHeaderRefs.delete(key);
        }
      }
    }, {
      key: "_onStickyHeaderLayout",
      value: function _onStickyHeaderLayout(index, event, key) {
        var stickyHeaderIndices = this.props.stickyHeaderIndices;

        if (!stickyHeaderIndices) {
          return;
        }

        var childArray = React.Children.toArray(this.props.children);

        if (key !== this._getKeyForIndex(index, childArray)) {
          return;
        }

        var layoutY = event.nativeEvent.layout.y;

        this._headerLayoutYs.set(key, layoutY);

        var indexOfIndex = stickyHeaderIndices.indexOf(index);
        var previousHeaderIndex = stickyHeaderIndices[indexOfIndex - 1];

        if (previousHeaderIndex != null) {
          var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));

          previousHeader && previousHeader.setNextHeaderY(layoutY);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var ScrollViewClass;
        var ScrollContentContainerViewClass;
        {
          if (this.props.horizontal) {
            ScrollViewClass = AndroidHorizontalScrollView;
            ScrollContentContainerViewClass = AndroidHorizontalScrollContentView;
          } else {
            ScrollViewClass = AndroidScrollView;
            ScrollContentContainerViewClass = View;
          }
        }
        invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');
        invariant(ScrollContentContainerViewClass !== undefined, 'ScrollContentContainerViewClass must not be undefined');
        var contentContainerStyle = [this.props.horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
        var contentSizeChangeProps = {};

        if (this.props.onContentSizeChange) {
          contentSizeChangeProps = {
            onLayout: this._handleContentOnLayout
          };
        }

        var stickyHeaderIndices = this.props.stickyHeaderIndices;
        var children = this.props.children;

        if (stickyHeaderIndices != null && stickyHeaderIndices.length > 0) {
          var childArray = React.Children.toArray(this.props.children);
          children = childArray.map(function (child, index) {
            var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;

            if (indexOfIndex > -1) {
              var key = child.key;
              var nextIndex = stickyHeaderIndices[indexOfIndex + 1];
              return React.createElement(ScrollViewStickyHeader, {
                key: key,
                ref: function ref(_ref2) {
                  return _this2._setStickyHeaderRef(key, _ref2);
                },
                nextHeaderLayoutY: _this2._headerLayoutYs.get(_this2._getKeyForIndex(nextIndex, childArray)),
                onLayout: function onLayout(event) {
                  return _this2._onStickyHeaderLayout(index, event, key);
                },
                scrollAnimatedValue: _this2._scrollAnimatedValue,
                inverted: _this2.props.invertStickyHeaders,
                scrollViewHeight: _this2.state.layoutHeight
              }, child);
            } else {
              return child;
            }
          });
        }

        var hasStickyHeaders = stickyHeaderIndices && stickyHeaderIndices.length > 0;
        var contentContainer = React.createElement(ScrollContentContainerViewClass, _extends({}, contentSizeChangeProps, {
          ref: this._setInnerViewRef,
          style: contentContainerStyle,
          removeClippedSubviews: hasStickyHeaders ? false : this.props.removeClippedSubviews,
          collapsable: false
        }), children);
        var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;
        var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;
        var DEPRECATED_sendUpdatedChildFrames = !!this.props.DEPRECATED_sendUpdatedChildFrames;
        var baseStyle = this.props.horizontal ? styles.baseHorizontal : styles.baseVertical;

        var props = _objectSpread({}, this.props, {
          alwaysBounceHorizontal: alwaysBounceHorizontal,
          alwaysBounceVertical: alwaysBounceVertical,
          style: [baseStyle, this.props.style],
          onContentSizeChange: null,
          onLayout: this._handleLayout,
          onMomentumScrollBegin: this._scrollResponder.scrollResponderHandleMomentumScrollBegin,
          onMomentumScrollEnd: this._scrollResponder.scrollResponderHandleMomentumScrollEnd,
          onResponderGrant: this._scrollResponder.scrollResponderHandleResponderGrant,
          onResponderReject: this._scrollResponder.scrollResponderHandleResponderReject,
          onResponderRelease: this._scrollResponder.scrollResponderHandleResponderRelease,
          onResponderTerminate: this._scrollResponder.scrollResponderHandleTerminate,
          onResponderTerminationRequest: this._scrollResponder.scrollResponderHandleTerminationRequest,
          onScrollBeginDrag: this._scrollResponder.scrollResponderHandleScrollBeginDrag,
          onScrollEndDrag: this._scrollResponder.scrollResponderHandleScrollEndDrag,
          onScrollShouldSetResponder: this._scrollResponder.scrollResponderHandleScrollShouldSetResponder,
          onStartShouldSetResponder: this._scrollResponder.scrollResponderHandleStartShouldSetResponder,
          onStartShouldSetResponderCapture: this._scrollResponder.scrollResponderHandleStartShouldSetResponderCapture,
          onTouchEnd: this._scrollResponder.scrollResponderHandleTouchEnd,
          onTouchMove: this._scrollResponder.scrollResponderHandleTouchMove,
          onTouchStart: this._scrollResponder.scrollResponderHandleTouchStart,
          onTouchCancel: this._scrollResponder.scrollResponderHandleTouchCancel,
          onScroll: this._handleScroll,
          scrollBarThumbImage: resolveAssetSource(this.props.scrollBarThumbImage),
          scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,
          sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,
          DEPRECATED_sendUpdatedChildFrames: DEPRECATED_sendUpdatedChildFrames,
          snapToStart: this.props.snapToStart !== false,
          snapToEnd: this.props.snapToEnd !== false,
          pagingEnabled: this.props.pagingEnabled || this.props.snapToInterval != null || this.props.snapToOffsets != null
        });

        var decelerationRate = this.props.decelerationRate;

        if (decelerationRate != null) {
          props.decelerationRate = processDecelerationRate(decelerationRate);
        }

        var refreshControl = this.props.refreshControl;

        if (refreshControl) {
          {
            return React.cloneElement(refreshControl, {
              style: props.style
            }, React.createElement(ScrollViewClass, _extends({}, props, {
              style: baseStyle,
              ref: this._setScrollViewRef
            }), contentContainer));
          }
        }

        return React.createElement(ScrollViewClass, _extends({}, props, {
          ref: this._setScrollViewRef
        }), contentContainer);
      }
    }]);

    return ScrollView;
  }(React.Component);

  var TypedScrollView = ScrollView;
  var styles = StyleSheet.create({
    baseVertical: {
      flexGrow: 1,
      flexShrink: 1,
      flexDirection: 'column',
      overflow: 'scroll'
    },
    baseHorizontal: {
      flexGrow: 1,
      flexShrink: 1,
      flexDirection: 'row',
      overflow: 'scroll'
    },
    contentContainerHorizontal: {
      flexDirection: 'row'
    }
  });
  module.exports = TypedScrollView;
},239,[11,22,23,30,33,32,36,46,211,43,48,78,240,245,52,75,246,244,74,3,247,155,161]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Dimensions = _$$_REQUIRE(_dependencyMap[0]);

  var FrameRateLogger = _$$_REQUIRE(_dependencyMap[1]);

  var Keyboard = _$$_REQUIRE(_dependencyMap[2]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[3]);

  var TextInputState = _$$_REQUIRE(_dependencyMap[4]);

  var UIManager = _$$_REQUIRE(_dependencyMap[5]);

  var invariant = _$$_REQUIRE(_dependencyMap[6]);

  var nullthrows = _$$_REQUIRE(_dependencyMap[7]);

  var performanceNow = _$$_REQUIRE(_dependencyMap[8]);

  var warning = _$$_REQUIRE(_dependencyMap[9]);

  var _require = _$$_REQUIRE(_dependencyMap[10]),
      ScrollViewManager = _require.ScrollViewManager;

  var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;
  var ScrollResponderMixin = {
    _subscriptionKeyboardWillShow: null,
    _subscriptionKeyboardWillHide: null,
    _subscriptionKeyboardDidShow: null,
    _subscriptionKeyboardDidHide: null,
    scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {
      return {
        isTouching: false,
        lastMomentumScrollBeginTime: 0,
        lastMomentumScrollEndTime: 0,
        observedScrollSinceBecomingResponder: false,
        becameResponderWhileAnimating: false
      };
    },
    scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {
      return this.state.isTouching;
    },
    scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder(e) {
      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

      if (this.props.keyboardShouldPersistTaps === 'handled' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput) {
        return true;
      }

      return false;
    },
    scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {
      if (this.scrollResponderIsAnimating()) {
        return true;
      }

      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
      var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;
      var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';

      if (keyboardNeverPersistTaps && currentlyFocusedTextInput != null && e.target && !TextInputState.isTextInput(e.target)) {
        return true;
      }

      return false;
    },
    scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {},
    scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {
      return !this.state.observedScrollSinceBecomingResponder;
    },
    scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {
      var nativeEvent = e.nativeEvent;
      this.state.isTouching = nativeEvent.touches.length !== 0;
      this.props.onTouchEnd && this.props.onTouchEnd(e);
    },
    scrollResponderHandleTouchCancel: function scrollResponderHandleTouchCancel(e) {
      this.state.isTouching = false;
      this.props.onTouchCancel && this.props.onTouchCancel(e);
    },
    scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {
      this.props.onResponderRelease && this.props.onResponderRelease(e);
      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

      if (this.props.keyboardShouldPersistTaps !== true && this.props.keyboardShouldPersistTaps !== 'always' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {
        this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);
        TextInputState.blurTextInput(currentlyFocusedTextInput);
      }
    },
    scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {
      this.state.observedScrollSinceBecomingResponder = true;
      this.props.onScroll && this.props.onScroll(e);
    },
    scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {
      this.state.observedScrollSinceBecomingResponder = false;
      this.props.onResponderGrant && this.props.onResponderGrant(e);
      this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();
    },
    scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {
      FrameRateLogger.beginScroll();
      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
    },
    scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {
      var velocity = e.nativeEvent.velocity;

      if (!this.scrollResponderIsAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {
        FrameRateLogger.endScroll();
      }

      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
    },
    scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {
      this.state.lastMomentumScrollBeginTime = performanceNow();
      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
    },
    scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {
      FrameRateLogger.endScroll();
      this.state.lastMomentumScrollEndTime = performanceNow();
      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
    },
    scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {
      this.state.isTouching = true;
      this.props.onTouchStart && this.props.onTouchStart(e);
    },
    scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {
      this.props.onTouchMove && this.props.onTouchMove(e);
    },
    scrollResponderIsAnimating: function scrollResponderIsAnimating() {
      var now = performanceNow();
      var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;
      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
      return isAnimating;
    },
    scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {
      return this.getScrollableNode ? this.getScrollableNode() : ReactNative.findNodeHandle(this);
    },
    scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {
      if (typeof x === 'number') {
        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
      } else {
        var _ref = x || {};

        x = _ref.x;
        y = _ref.y;
        animated = _ref.animated;
      }

      UIManager.dispatchViewManagerCommand(nullthrows(this.scrollResponderGetScrollableNode()), UIManager.getViewManagerConfig('RCTScrollView').Commands.scrollTo, [x || 0, y || 0, animated !== false]);
    },
    scrollResponderScrollToEnd: function scrollResponderScrollToEnd(options) {
      var animated = (options && options.animated) !== false;
      UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.getViewManagerConfig('RCTScrollView').Commands.scrollToEnd, [animated]);
    },
    scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {
      console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
      this.scrollResponderScrollTo({
        x: offsetX,
        y: offsetY,
        animated: false
      });
    },
    scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated) {
      invariant(ScrollViewManager && ScrollViewManager.zoomToRect, 'zoomToRect is not implemented');

      if ('animated' in rect) {
        animated = rect.animated;
        delete rect.animated;
      } else if (typeof animated !== 'undefined') {
        console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
      }

      ScrollViewManager.zoomToRect(this.scrollResponderGetScrollableNode(), rect, animated !== false);
    },
    scrollResponderFlashScrollIndicators: function scrollResponderFlashScrollIndicators() {
      UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.getViewManagerConfig('RCTScrollView').Commands.flashScrollIndicators, []);
    },
    scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {
      this.additionalScrollOffset = additionalOffset || 0;
      this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
      UIManager.measureLayout(nodeHandle, ReactNative.findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);
    },
    scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {
      var keyboardScreenY = Dimensions.get('window').height;

      if (this.keyboardWillOpenTo) {
        keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;
      }

      var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;

      if (this.preventNegativeScrollOffset) {
        scrollOffsetY = Math.max(0, scrollOffsetY);
      }

      this.scrollResponderScrollTo({
        x: 0,
        y: scrollOffsetY,
        animated: true
      });
      this.additionalOffset = 0;
      this.preventNegativeScrollOffset = false;
    },
    scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(msg) {
      console.error('Error measuring text field: ', msg);
    },
    UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {
      var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;
      warning(typeof keyboardShouldPersistTaps !== 'boolean', "'keyboardShouldPersistTaps={" + keyboardShouldPersistTaps + "}' is deprecated. " + ("Use 'keyboardShouldPersistTaps=\"" + (keyboardShouldPersistTaps ? 'always' : 'never') + "\"' instead"));
      this.keyboardWillOpenTo = null;
      this.additionalScrollOffset = 0;
      this._subscriptionKeyboardWillShow = Keyboard.addListener('keyboardWillShow', this.scrollResponderKeyboardWillShow);
      this._subscriptionKeyboardWillHide = Keyboard.addListener('keyboardWillHide', this.scrollResponderKeyboardWillHide);
      this._subscriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', this.scrollResponderKeyboardDidShow);
      this._subscriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', this.scrollResponderKeyboardDidHide);
    },
    componentWillUnmount: function componentWillUnmount() {
      if (this._subscriptionKeyboardWillShow != null) {
        this._subscriptionKeyboardWillShow.remove();
      }

      if (this._subscriptionKeyboardWillHide != null) {
        this._subscriptionKeyboardWillHide.remove();
      }

      if (this._subscriptionKeyboardDidShow != null) {
        this._subscriptionKeyboardDidShow.remove();
      }

      if (this._subscriptionKeyboardDidHide != null) {
        this._subscriptionKeyboardDidHide.remove();
      }
    },
    scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {
      this.keyboardWillOpenTo = e;
      this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);
    },
    scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {
      this.keyboardWillOpenTo = null;
      this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);
    },
    scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {
      if (e) {
        this.keyboardWillOpenTo = e;
      }

      this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);
    },
    scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {
      this.keyboardWillOpenTo = null;
      this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);
    }
  };
  var ScrollResponder = {
    Mixin: ScrollResponderMixin
  };
  module.exports = ScrollResponder;
},240,[54,241,242,78,152,42,3,191,106,5,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeModules = _$$_REQUIRE(_dependencyMap[0]);

  var invariant = _$$_REQUIRE(_dependencyMap[1]);

  var FrameRateLogger = {
    setGlobalOptions: function setGlobalOptions(options) {
      if (options.debug !== undefined) {
        invariant(NativeModules.FrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');
      }

      if (NativeModules.FrameRateLogger) {
        var optionsClone = {
          debug: !!options.debug,
          reportStackTraces: !!options.reportStackTraces
        };
        Object.freeze(optionsClone);
        Object.seal(optionsClone);
        NativeModules.FrameRateLogger.setGlobalOptions(optionsClone);
      }
    },
    setContext: function setContext(context) {
      NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setContext(context);
    },
    beginScroll: function beginScroll() {
      NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.beginScroll();
    },
    endScroll: function endScroll() {
      NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.endScroll();
    }
  };
  module.exports = FrameRateLogger;
},241,[8,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var LayoutAnimation = _$$_REQUIRE(_dependencyMap[0]);

  var invariant = _$$_REQUIRE(_dependencyMap[1]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[2]);

  var KeyboardObserver = _$$_REQUIRE(_dependencyMap[3]).KeyboardObserver;

  var dismissKeyboard = _$$_REQUIRE(_dependencyMap[4]);

  var KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);
  var Keyboard = {
    addListener: function addListener(eventName, callback) {
      invariant(false, 'Dummy method used for documentation');
    },
    removeListener: function removeListener(eventName, callback) {
      invariant(false, 'Dummy method used for documentation');
    },
    removeAllListeners: function removeAllListeners(eventName) {
      invariant(false, 'Dummy method used for documentation');
    },
    dismiss: function dismiss() {
      invariant(false, 'Dummy method used for documentation');
    },
    scheduleLayoutAnimation: function scheduleLayoutAnimation(event) {
      invariant(false, 'Dummy method used for documentation');
    }
  };
  Keyboard = KeyboardEventEmitter;
  Keyboard.dismiss = dismissKeyboard;

  Keyboard.scheduleLayoutAnimation = function (event) {
    var duration = event.duration,
        easing = event.easing;

    if (duration != null && duration !== 0) {
      LayoutAnimation.configureNext({
        duration: duration,
        update: {
          duration: duration,
          type: easing != null && LayoutAnimation.Types[easing] || 'keyboard'
        }
      });
    }
  };

  module.exports = Keyboard;
},242,[243,3,117,8,244]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  function _Platform() {
    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

    _Platform = function _Platform() {
      return data;
    };

    return data;
  }

  var UIManager = _$$_REQUIRE(_dependencyMap[2]);

  function configureNext(config, onAnimationDidEnd) {
    if (!_Platform().default.isTesting) {
      var _onAnimationDidEnd;

      UIManager.configureNextLayoutAnimation(config, (_onAnimationDidEnd = onAnimationDidEnd) != null ? _onAnimationDidEnd : function () {}, function () {});
    }
  }

  function create(duration, type, property) {
    return {
      duration: duration,
      create: {
        type: type,
        property: property
      },
      update: {
        type: type
      },
      delete: {
        type: type,
        property: property
      }
    };
  }

  var Presets = {
    easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),
    linear: create(500, 'linear', 'opacity'),
    spring: {
      duration: 700,
      create: {
        type: 'linear',
        property: 'opacity'
      },
      update: {
        type: 'spring',
        springDamping: 0.4
      },
      delete: {
        type: 'linear',
        property: 'opacity'
      }
    }
  };
  var LayoutAnimation = {
    configureNext: configureNext,
    create: create,
    Types: Object.freeze({
      spring: 'spring',
      linear: 'linear',
      easeInEaseOut: 'easeInEaseOut',
      easeIn: 'easeIn',
      easeOut: 'easeOut',
      keyboard: 'keyboard'
    }),
    Properties: Object.freeze({
      opacity: 'opacity',
      scaleX: 'scaleX',
      scaleY: 'scaleY',
      scaleXY: 'scaleXY'
    }),
    checkConfig: function checkConfig() {
      console.error('LayoutAnimation.checkConfig(...) has been disabled.');
    },
    Presets: Presets,
    easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
    linear: configureNext.bind(null, Presets.linear),
    spring: configureNext.bind(null, Presets.spring)
  };
  module.exports = LayoutAnimation;
},243,[1,43,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var TextInputState = _$$_REQUIRE(_dependencyMap[0]);

  function dismissKeyboard() {
    TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
  }

  module.exports = dismissKeyboard;
},244,[152]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[5]);

  var React = _$$_REQUIRE(_dependencyMap[6]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[7]);

  var View = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedView = AnimatedImplementation.createAnimatedComponent(View);

  var ScrollViewStickyHeader = function (_React$Component) {
    _inherits(ScrollViewStickyHeader, _React$Component);

    function ScrollViewStickyHeader() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, ScrollViewStickyHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScrollViewStickyHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        measured: false,
        layoutY: 0,
        layoutHeight: 0,
        nextHeaderLayoutY: _this.props.nextHeaderLayoutY
      };

      _this._onLayout = function (event) {
        _this.setState({
          measured: true,
          layoutY: event.nativeEvent.layout.y,
          layoutHeight: event.nativeEvent.layout.height
        });

        _this.props.onLayout(event);

        var child = React.Children.only(_this.props.children);

        if (child.props.onLayout) {
          child.props.onLayout(event);
        }
      };

      return _this;
    }

    _createClass(ScrollViewStickyHeader, [{
      key: "setNextHeaderY",
      value: function setNextHeaderY(y) {
        this.setState({
          nextHeaderLayoutY: y
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            inverted = _this$props.inverted,
            scrollViewHeight = _this$props.scrollViewHeight;
        var _this$state = this.state,
            measured = _this$state.measured,
            layoutHeight = _this$state.layoutHeight,
            layoutY = _this$state.layoutY,
            nextHeaderLayoutY = _this$state.nextHeaderLayoutY;
        var inputRange = [-1, 0];
        var outputRange = [0, 0];

        if (measured) {
          if (inverted) {
            if (scrollViewHeight != null) {
              var stickStartPoint = layoutY + layoutHeight - scrollViewHeight;

              if (stickStartPoint > 0) {
                inputRange.push(stickStartPoint);
                outputRange.push(0);
                inputRange.push(stickStartPoint + 1);
                outputRange.push(1);
                var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;

                if (collisionPoint > stickStartPoint) {
                  inputRange.push(collisionPoint, collisionPoint + 1);
                  outputRange.push(collisionPoint - stickStartPoint, collisionPoint - stickStartPoint);
                }
              }
            }
          } else {
            inputRange.push(layoutY);
            outputRange.push(0);

            var _collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;

            if (_collisionPoint >= layoutY) {
              inputRange.push(_collisionPoint, _collisionPoint + 1);
              outputRange.push(_collisionPoint - layoutY, _collisionPoint - layoutY);
            } else {
              inputRange.push(layoutY + 1);
              outputRange.push(1);
            }
          }
        }

        var translateY = this.props.scrollAnimatedValue.interpolate({
          inputRange: inputRange,
          outputRange: outputRange
        });
        var child = React.Children.only(this.props.children);
        return React.createElement(AnimatedView, {
          collapsable: false,
          onLayout: this._onLayout,
          style: [child.props.style, styles.header, {
            transform: [{
              translateY: translateY
            }]
          }]
        }, React.cloneElement(child, {
          style: styles.fill,
          onLayout: undefined
        }));
      }
    }]);

    return ScrollViewStickyHeader;
  }(React.Component);

  var styles = StyleSheet.create({
    header: {
      zIndex: 10
    },
    fill: {
      flex: 1
    }
  });
  module.exports = ScrollViewStickyHeader;
},245,[22,23,30,33,36,211,48,52,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[5]);

  var InternalScrollViewType = function (_ReactNative$NativeCo) {
    "use strict";

    _inherits(InternalScrollViewType, _ReactNative$NativeCo);

    function InternalScrollViewType() {
      _classCallCheck(this, InternalScrollViewType);

      return _possibleConstructorReturn(this, _getPrototypeOf(InternalScrollViewType).apply(this, arguments));
    }

    _createClass(InternalScrollViewType, [{
      key: "scrollTo",
      value: function scrollTo(y, x, animated) {}
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {}
    }, {
      key: "scrollToEnd",
      value: function scrollToEnd(options) {}
    }, {
      key: "scrollWithoutAnimationTo",
      value: function scrollWithoutAnimationTo() {
        var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {}
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {}
    }, {
      key: "getInnerViewNode",
      value: function getInnerViewNode() {}
    }, {
      key: "scrollResponderScrollNativeHandleToKeyboard",
      value: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {}
    }, {
      key: "scrollResponderScrollTo",
      value: function scrollResponderScrollTo(x, y, animated) {}
    }]);

    return InternalScrollViewType;
  }(ReactNative.NativeComponent);

  module.exports = InternalScrollViewType;
},246,[22,23,30,33,36,78]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  function processDecelerationRate(decelerationRate) {
    if (decelerationRate === 'normal') {
      return 0.985;
    } else if (decelerationRate === 'fast') {
      return 0.9;
    }

    return decelerationRate;
  }

  module.exports = processDecelerationRate;
},247,[43]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var ViewabilityHelper = function () {
    function ViewabilityHelper() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        viewAreaCoveragePercentThreshold: 0
      };

      _classCallCheck(this, ViewabilityHelper);

      this._hasInteracted = false;
      this._timers = new Set();
      this._viewableIndices = [];
      this._viewableItems = new Map();
      this._config = config;
    }

    _createClass(ViewabilityHelper, [{
      key: "dispose",
      value: function dispose() {
        this._timers.forEach(clearTimeout);
      }
    }, {
      key: "computeViewableItems",
      value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {
        var _this$_config = this._config,
            itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,
            viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;
        var viewAreaMode = viewAreaCoveragePercentThreshold != null;
        var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;
        invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');
        var viewableIndices = [];

        if (itemCount === 0) {
          return viewableIndices;
        }

        var firstVisible = -1;

        var _ref = renderRange || {
          first: 0,
          last: itemCount - 1
        },
            first = _ref.first,
            last = _ref.last;

        if (last >= itemCount) {
          console.warn('Invalid render range computing viewability ' + JSON.stringify({
            renderRange: renderRange,
            itemCount: itemCount
          }));
          return [];
        }

        for (var idx = first; idx <= last; idx++) {
          var metrics = getFrameMetrics(idx);

          if (!metrics) {
            continue;
          }

          var top = metrics.offset - scrollOffset;
          var bottom = top + metrics.length;

          if (top < viewportHeight && bottom > 0) {
            firstVisible = idx;

            if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {
              viewableIndices.push(idx);
            }
          } else if (firstVisible >= 0) {
            break;
          }
        }

        return viewableIndices;
      }
    }, {
      key: "onUpdate",
      value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {
        var _this = this;

        if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {
          return;
        }

        var viewableIndices = [];

        if (itemCount) {
          viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);
        }

        if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {
          return v === viewableIndices[ii];
        })) {
          return;
        }

        this._viewableIndices = viewableIndices;

        if (this._config.minimumViewTime) {
          var handle = setTimeout(function () {
            _this._timers.delete(handle);

            _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
          }, this._config.minimumViewTime);

          this._timers.add(handle);
        } else {
          this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
        }
      }
    }, {
      key: "resetViewableIndices",
      value: function resetViewableIndices() {
        this._viewableIndices = [];
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        this._hasInteracted = true;
      }
    }, {
      key: "_onUpdateSync",
      value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {
        var _this2 = this;

        viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {
          return _this2._viewableIndices.includes(ii);
        });
        var prevItems = this._viewableItems;
        var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {
          var viewable = createViewToken(ii, true);
          return [viewable.key, viewable];
        }));
        var changed = [];

        for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref4;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref4 = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref4 = _i.value;
          }

          var _ref8 = _ref4;

          var _ref3 = _slicedToArray(_ref8, 2);

          var _key2 = _ref3[0];
          var _viewable2 = _ref3[1];

          if (!prevItems.has(_key2)) {
            changed.push(_viewable2);
          }
        }

        for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref7;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref7 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref7 = _i2.value;
          }

          var _ref9 = _ref7;

          var _ref6 = _slicedToArray(_ref9, 2);

          var _key3 = _ref6[0];
          var _viewable3 = _ref6[1];

          if (!nextItems.has(_key3)) {
            changed.push(_objectSpread({}, _viewable3, {
              isViewable: false
            }));
          }
        }

        if (changed.length > 0) {
          this._viewableItems = nextItems;
          onViewableItemsChanged({
            viewableItems: Array.from(nextItems.values()),
            changed: changed,
            viewabilityConfig: this._config
          });
        }
      }
    }]);

    return ViewabilityHelper;
  }();

  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {
    if (_isEntirelyVisible(top, bottom, viewportHeight)) {
      return true;
    } else {
      var pixels = _getPixelsVisible(top, bottom, viewportHeight);

      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
      return percent >= viewablePercentThreshold;
    }
  }

  function _getPixelsVisible(top, bottom, viewportHeight) {
    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
    return Math.max(0, visibleHeight);
  }

  function _isEntirelyVisible(top, bottom, viewportHeight) {
    return top >= 0 && bottom <= viewportHeight && bottom > top;
  }

  module.exports = ViewabilityHelper;
},248,[46,12,22,23,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var invariant = _$$_REQUIRE(_dependencyMap[1]);

  function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {
    var out = [];
    var outLength = 0;

    for (var ii = 0; ii < itemCount; ii++) {
      var frame = getFrameMetrics(ii);
      var trailingOffset = frame.offset + frame.length;

      for (var kk = 0; kk < offsets.length; kk++) {
        if (out[kk] == null && trailingOffset >= offsets[kk]) {
          out[kk] = ii;
          outLength++;

          if (kk === offsets.length - 1) {
            invariant(outLength === offsets.length, 'bad offsets input, should be in increasing order: %s', JSON.stringify(offsets));
            return out;
          }
        }
      }
    }

    return out;
  }

  function newRangeCount(prev, next) {
    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));
  }

  function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {
    var data = props.data,
        getItemCount = props.getItemCount,
        maxToRenderPerBatch = props.maxToRenderPerBatch,
        windowSize = props.windowSize;
    var itemCount = getItemCount(data);

    if (itemCount === 0) {
      return prev;
    }

    var offset = scrollMetrics.offset,
        velocity = scrollMetrics.velocity,
        visibleLength = scrollMetrics.visibleLength;
    var visibleBegin = Math.max(0, offset);
    var visibleEnd = visibleBegin + visibleLength;
    var overscanLength = (windowSize - 1) * visibleLength;
    var leadFactor = 0.5;
    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';
    var overscanBegin = Math.max(0, visibleBegin - 0.5 * overscanLength);
    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);
    var lastItemOffset = getFrameMetricsApprox(itemCount - 1).offset;

    if (lastItemOffset < overscanBegin) {
      return {
        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),
        last: itemCount - 1
      };
    }

    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),
        _elementsThatOverlapO2 = _slicedToArray(_elementsThatOverlapO, 4),
        overscanFirst = _elementsThatOverlapO2[0],
        first = _elementsThatOverlapO2[1],
        last = _elementsThatOverlapO2[2],
        overscanLast = _elementsThatOverlapO2[3];

    overscanFirst = overscanFirst == null ? 0 : overscanFirst;
    first = first == null ? Math.max(0, overscanFirst) : first;
    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;
    var visible = {
      first: first,
      last: last
    };
    var newCellCount = newRangeCount(prev, visible);

    while (true) {
      if (first <= overscanFirst && last >= overscanLast) {
        break;
      }

      var maxNewCells = newCellCount >= maxToRenderPerBatch;
      var firstWillAddMore = first <= prev.first || first > prev.last;
      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);
      var lastWillAddMore = last >= prev.last || last < prev.first;
      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);

      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
        break;
      }

      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {
        if (firstWillAddMore) {
          newCellCount++;
        }

        first--;
      }

      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {
        if (lastWillAddMore) {
          newCellCount++;
        }

        last++;
      }
    }

    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {
      throw new Error('Bad window calculation ' + JSON.stringify({
        first: first,
        last: last,
        itemCount: itemCount,
        overscanFirst: overscanFirst,
        overscanLast: overscanLast,
        visible: visible
      }));
    }

    return {
      first: first,
      last: last
    };
  }

  var VirtualizeUtils = {
    computeWindowedRenderLimits: computeWindowedRenderLimits,
    elementsThatOverlapOffsets: elementsThatOverlapOffsets,
    newRangeCount: newRangeCount
  };
  module.exports = VirtualizeUtils;
},249,[12,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},250,[251,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _regeneratorRuntime = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedImageStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ImageViewNativeComponent = _$$_REQUIRE(_dependencyMap[5]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[6]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var TextAncestor = _$$_REQUIRE(_dependencyMap[11]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[12]);

  var merge = _$$_REQUIRE(_dependencyMap[13]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[14]);

  var ImageLoader = NativeModules.ImageLoader;

  var TextInlineImageNativeComponent = _$$_REQUIRE(_dependencyMap[15]);

  var _requestId = 1;

  function generateRequestId() {
    return _requestId++;
  }

  var ImageProps = _objectSpread({}, DeprecatedViewPropTypes, {
    style: DeprecatedStyleSheetPropType(DeprecatedImageStylePropTypes),
    source: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string,
      headers: PropTypes.objectOf(PropTypes.string)
    }), PropTypes.number, PropTypes.arrayOf(PropTypes.shape({
      uri: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number,
      headers: PropTypes.objectOf(PropTypes.string)
    }))]),
    blurRadius: PropTypes.number,
    defaultSource: PropTypes.number,
    loadingIndicatorSource: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number]),
    progressiveRenderingEnabled: PropTypes.bool,
    fadeDuration: PropTypes.number,
    onLoadStart: PropTypes.func,
    onError: PropTypes.func,
    onLoad: PropTypes.func,
    onLoadEnd: PropTypes.func,
    testID: PropTypes.string,
    resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),
    resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'repeat', 'center'])
  });

  function getSize(url, success, failure) {
    return ImageLoader.getSize(url).then(function (sizes) {
      success(sizes.width, sizes.height);
    }).catch(failure || function () {
      console.warn('Failed to get size for image: ' + url);
    });
  }

  function prefetch(url, callback) {
    var requestId = generateRequestId();
    callback && callback(requestId);
    return ImageLoader.prefetchImage(url, requestId);
  }

  function abortPrefetch(requestId) {
    ImageLoader.abortRequest(requestId);
  }

  function queryCache(urls) {
    return _regeneratorRuntime.async(function queryCache$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regeneratorRuntime.awrap(ImageLoader.queryCache(urls));

          case 2:
            return _context.abrupt("return", _context.sent);

          case 3:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  var Image = function Image(props, forwardedRef) {
    var _source, _source3;

    var source = resolveAssetSource(props.source);
    var defaultSource = resolveAssetSource(props.defaultSource);
    var loadingIndicatorSource = resolveAssetSource(props.loadingIndicatorSource);

    if (source && source.uri === '') {
      console.warn('source.uri should not be an empty string');
    }

    if (props.src) {
      console.warn('The <Image> component requires a `source` property rather than `src`.');
    }

    if (props.children) {
      throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');
    }

    if (props.defaultSource && props.loadingIndicatorSource) {
      throw new Error('The <Image> component cannot have defaultSource and loadingIndicatorSource at the same time. Please use either defaultSource or loadingIndicatorSource.');
    }

    if (source && !source.uri && !Array.isArray(source)) {
      source = null;
    }

    var style;
    var sources;

    if (((_source = source) == null ? undefined : _source.uri) != null) {
      var _source2 = source,
          _width = _source2.width,
          _height = _source2.height;
      style = flattenStyle([{
        width: _width,
        height: _height
      }, styles.base, props.style]);
      sources = [{
        uri: source.uri
      }];
    } else {
      style = flattenStyle([styles.base, props.style]);
      sources = source;
    }

    var onLoadStart = props.onLoadStart,
        onLoad = props.onLoad,
        onLoadEnd = props.onLoadEnd,
        onError = props.onError;
    var nativeProps = merge(props, {
      style: style,
      shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),
      src: sources,
      headers: (_source3 = source) == null ? undefined : _source3.headers,
      defaultSrc: defaultSource ? defaultSource.uri : null,
      loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null,
      ref: forwardedRef
    });
    return React.createElement(TextAncestor.Consumer, null, function (hasTextAncestor) {
      return hasTextAncestor ? React.createElement(TextInlineImageNativeComponent, nativeProps) : React.createElement(ImageViewNativeComponent, nativeProps);
    });
  };

  Image = React.forwardRef(Image);
  Image.displayName = 'Image';
  Image.getSize = getSize;
  Image.prefetch = prefetch;
  Image.abortPrefetch = abortPrefetch;
  Image.queryCache = queryCache;
  Image.resolveAssetSource = resolveAssetSource;
  Image.propTypes = ImageProps;
  var styles = StyleSheet.create({
    base: {
      overflow: 'hidden'
    }
  });
  module.exports = Image;
},251,[136,46,57,182,252,254,8,61,48,78,52,76,74,175,161,255]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[4]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityComponentTypes = _require.DeprecatedAccessibilityComponentTypes,
      DeprecatedAccessibilityTraits = _require.DeprecatedAccessibilityTraits,
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityComponentType: PropTypes.oneOf(DeprecatedAccessibilityComponentTypes),
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(DeprecatedAccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityTraits))]),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},252,[46,181,253,61,182,68,199]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';
},253,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},254,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},255,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},256,[239,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList);
},257,[258,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var ScrollView = _$$_REQUIRE(_dependencyMap[9]);

  var VirtualizedSectionList = _$$_REQUIRE(_dependencyMap[10]);

  var defaultProps = _objectSpread({}, VirtualizedSectionList.defaultProps, {
    stickySectionHeadersEnabled: false
  });

  var SectionList = function (_React$PureComponent) {
    _inherits(SectionList, _React$PureComponent);

    function SectionList() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, SectionList);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SectionList)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._captureRef = function (ref) {
        _this._wrapperListRef = ref;
      };

      return _this;
    }

    _createClass(SectionList, [{
      key: "scrollToLocation",
      value: function scrollToLocation(params) {
        if (this._wrapperListRef != null) {
          this._wrapperListRef.scrollToLocation(params);
        }
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();

        listRef && listRef.recordInteraction();
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();

        listRef && listRef.flashScrollIndicators();
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();

        if (listRef) {
          return listRef.getScrollResponder();
        }
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();

        if (listRef) {
          return listRef.getScrollableNode();
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();

        if (listRef) {
          listRef.setNativeProps(props);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(VirtualizedSectionList, _extends({}, this.props, {
          ref: this._captureRef
        }));
      }
    }]);

    return SectionList;
  }(React.PureComponent);

  SectionList.defaultProps = defaultProps;
  module.exports = SectionList;
},258,[11,22,23,30,33,36,46,43,48,239,259]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[5]);

  var _createClass = _$$_REQUIRE(_dependencyMap[6]);

  var _inherits = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var View = _$$_REQUIRE(_dependencyMap[10]);

  var VirtualizedList = _$$_REQUIRE(_dependencyMap[11]);

  var invariant = _$$_REQUIRE(_dependencyMap[12]);

  var VirtualizedSectionList = function (_React$PureComponent) {
    _inherits(VirtualizedSectionList, _React$PureComponent);

    _createClass(VirtualizedSectionList, [{
      key: "scrollToLocation",
      value: function scrollToLocation(params) {
        var index = params.itemIndex + 1;

        for (var ii = 0; ii < params.sectionIndex; ii++) {
          index += this.props.sections[ii].data.length + 2;
        }

        var toIndexParams = _objectSpread({}, params, {
          index: index
        });

        this._listRef.scrollToIndex(toIndexParams);
      }
    }, {
      key: "getListRef",
      value: function getListRef() {
        return this._listRef;
      }
    }]);

    function VirtualizedSectionList(props, context) {
      var _this;

      _classCallCheck(this, VirtualizedSectionList);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(VirtualizedSectionList).call(this, props, context));

      _this._keyExtractor = function (item, index) {
        var info = _this._subExtractor(index);

        return info && info.key || String(index);
      };

      _this._convertViewable = function (viewable) {
        invariant(viewable.index != null, 'Received a broken ViewToken');

        var info = _this._subExtractor(viewable.index);

        if (!info) {
          return null;
        }

        var keyExtractor = info.section.keyExtractor || _this.props.keyExtractor;
        return _objectSpread({}, viewable, {
          index: info.index,
          key: keyExtractor(viewable.item, info.index),
          section: info.section
        });
      };

      _this._onViewableItemsChanged = function (_ref) {
        var viewableItems = _ref.viewableItems,
            changed = _ref.changed;

        if (_this.props.onViewableItemsChanged) {
          _this.props.onViewableItemsChanged({
            viewableItems: viewableItems.map(_this._convertViewable, _assertThisInitialized(_this)).filter(Boolean),
            changed: changed.map(_this._convertViewable, _assertThisInitialized(_this)).filter(Boolean)
          });
        }
      };

      _this._renderItem = function (_ref2) {
        var item = _ref2.item,
            index = _ref2.index;

        var info = _this._subExtractor(index);

        if (!info) {
          return null;
        }

        var infoIndex = info.index;

        if (infoIndex == null) {
          var section = info.section;

          if (info.header === true) {
            var renderSectionHeader = _this.props.renderSectionHeader;
            return renderSectionHeader ? renderSectionHeader({
              section: section
            }) : null;
          } else {
            var renderSectionFooter = _this.props.renderSectionFooter;
            return renderSectionFooter ? renderSectionFooter({
              section: section
            }) : null;
          }
        } else {
          var renderItem = info.section.renderItem || _this.props.renderItem;

          var SeparatorComponent = _this._getSeparatorComponent(index, info);

          invariant(renderItem, 'no renderItem!');
          return React.createElement(ItemWithSeparator, {
            SeparatorComponent: SeparatorComponent,
            LeadingSeparatorComponent: infoIndex === 0 ? _this.props.SectionSeparatorComponent : undefined,
            cellKey: info.key,
            index: infoIndex,
            item: item,
            leadingItem: info.leadingItem,
            leadingSection: info.leadingSection,
            onUpdateSeparator: _this._onUpdateSeparator,
            prevCellKey: (_this._subExtractor(index - 1) || {}).key,
            ref: function ref(_ref3) {
              _this._cellRefs[info.key] = _ref3;
            },
            renderItem: renderItem,
            section: info.section,
            trailingItem: info.trailingItem,
            trailingSection: info.trailingSection
          });
        }
      };

      _this._onUpdateSeparator = function (key, newProps) {
        var ref = _this._cellRefs[key];
        ref && ref.updateSeparatorProps(newProps);
      };

      _this._cellRefs = {};

      _this._captureRef = function (ref) {
        _this._listRef = ref;
      };

      _this.state = _this._computeState(props);
      return _this;
    }

    _createClass(VirtualizedSectionList, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        this.setState(this._computeState(nextProps));
      }
    }, {
      key: "_computeState",
      value: function _computeState(props) {
        var offset = props.ListHeaderComponent ? 1 : 0;
        var stickyHeaderIndices = [];
        var itemCount = props.sections.reduce(function (v, section) {
          stickyHeaderIndices.push(v + offset);
          return v + section.data.length + 2;
        }, 0);
        return {
          childProps: _objectSpread({}, props, {
            renderItem: this._renderItem,
            ItemSeparatorComponent: undefined,
            data: props.sections,
            getItemCount: function getItemCount() {
              return itemCount;
            },
            getItem: getItem,
            keyExtractor: this._keyExtractor,
            onViewableItemsChanged: props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,
            stickyHeaderIndices: props.stickySectionHeadersEnabled ? stickyHeaderIndices : undefined
          })
        };
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(VirtualizedList, _extends({}, this.state.childProps, {
          ref: this._captureRef
        }));
      }
    }, {
      key: "_subExtractor",
      value: function _subExtractor(index) {
        var itemIndex = index;
        var sections = this.props.sections;

        for (var ii = 0; ii < sections.length; ii++) {
          var section = sections[ii];
          var key = section.key || String(ii);
          itemIndex -= 1;

          if (itemIndex >= section.data.length + 1) {
            itemIndex -= section.data.length + 1;
          } else if (itemIndex === -1) {
            return {
              section: section,
              key: key + ':header',
              index: null,
              header: true,
              trailingSection: sections[ii + 1]
            };
          } else if (itemIndex === section.data.length) {
            return {
              section: section,
              key: key + ':footer',
              index: null,
              header: false,
              trailingSection: sections[ii + 1]
            };
          } else {
            var keyExtractor = section.keyExtractor || this.props.keyExtractor;
            return {
              section: section,
              key: key + ':' + keyExtractor(section.data[itemIndex], itemIndex),
              index: itemIndex,
              leadingItem: section.data[itemIndex - 1],
              leadingSection: sections[ii - 1],
              trailingItem: section.data.length > itemIndex + 1 ? section.data[itemIndex + 1] : undefined,
              trailingSection: sections[ii + 1]
            };
          }
        }
      }
    }, {
      key: "_getSeparatorComponent",
      value: function _getSeparatorComponent(index, info) {
        info = info || this._subExtractor(index);

        if (!info) {
          return null;
        }

        var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
        var SectionSeparatorComponent = this.props.SectionSeparatorComponent;
        var isLastItemInList = index === this.state.childProps.getItemCount() - 1;
        var isLastItemInSection = info.index === info.section.data.length - 1;

        if (SectionSeparatorComponent && isLastItemInSection) {
          return SectionSeparatorComponent;
        }

        if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
          return ItemSeparatorComponent;
        }

        return null;
      }
    }]);

    return VirtualizedSectionList;
  }(React.PureComponent);

  VirtualizedSectionList.defaultProps = _objectSpread({}, VirtualizedList.defaultProps, {
    data: []
  });

  var ItemWithSeparator = function (_React$Component) {
    _inherits(ItemWithSeparator, _React$Component);

    function ItemWithSeparator() {
      var _getPrototypeOf2;

      var _this2;

      _classCallCheck(this, ItemWithSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItemWithSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this2.state = {
        separatorProps: {
          highlighted: false,
          leadingItem: _this2.props.item,
          leadingSection: _this2.props.leadingSection,
          section: _this2.props.section,
          trailingItem: _this2.props.trailingItem,
          trailingSection: _this2.props.trailingSection
        },
        leadingSeparatorProps: {
          highlighted: false,
          leadingItem: _this2.props.leadingItem,
          leadingSection: _this2.props.leadingSection,
          section: _this2.props.section,
          trailingItem: _this2.props.item,
          trailingSection: _this2.props.trailingSection
        }
      };
      _this2._separators = {
        highlight: function highlight() {
          ['leading', 'trailing'].forEach(function (s) {
            return _this2._separators.updateProps(s, {
              highlighted: true
            });
          });
        },
        unhighlight: function unhighlight() {
          ['leading', 'trailing'].forEach(function (s) {
            return _this2._separators.updateProps(s, {
              highlighted: false
            });
          });
        },
        updateProps: function updateProps(select, newProps) {
          var _this2$props = _this2.props,
              LeadingSeparatorComponent = _this2$props.LeadingSeparatorComponent,
              cellKey = _this2$props.cellKey,
              prevCellKey = _this2$props.prevCellKey;

          if (select === 'leading' && LeadingSeparatorComponent != null) {
            _this2.setState(function (state) {
              return {
                leadingSeparatorProps: _objectSpread({}, state.leadingSeparatorProps, newProps)
              };
            });
          } else {
            _this2.props.onUpdateSeparator(select === 'leading' && prevCellKey || cellKey, newProps);
          }
        }
      };
      return _this2;
    }

    _createClass(ItemWithSeparator, [{
      key: "updateSeparatorProps",
      value: function updateSeparatorProps(newProps) {
        this.setState(function (state) {
          return {
            separatorProps: _objectSpread({}, state.separatorProps, newProps)
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            LeadingSeparatorComponent = _this$props.LeadingSeparatorComponent,
            SeparatorComponent = _this$props.SeparatorComponent,
            item = _this$props.item,
            index = _this$props.index,
            section = _this$props.section;
        var element = this.props.renderItem({
          item: item,
          index: index,
          section: section,
          separators: this._separators
        });
        var leadingSeparator = LeadingSeparatorComponent && React.createElement(LeadingSeparatorComponent, this.state.leadingSeparatorProps);
        var separator = SeparatorComponent && React.createElement(SeparatorComponent, this.state.separatorProps);
        return leadingSeparator || separator ? React.createElement(View, null, leadingSeparator, element, separator) : element;
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props, prevState) {
        return {
          separatorProps: _objectSpread({}, prevState.separatorProps, {
            leadingItem: props.item,
            leadingSection: props.leadingSection,
            section: props.section,
            trailingItem: props.trailingItem,
            trailingSection: props.trailingSection
          }),
          leadingSeparatorProps: _objectSpread({}, prevState.leadingSeparatorProps, {
            leadingItem: props.leadingItem,
            leadingSection: props.leadingSection,
            section: props.section,
            trailingItem: props.item,
            trailingSection: props.trailingSection
          })
        };
      }
    }]);

    return ItemWithSeparator;
  }(React.Component);

  function getItem(sections, index) {
    if (!sections) {
      return null;
    }

    var itemIdx = index - 1;

    for (var ii = 0; ii < sections.length; ii++) {
      if (itemIdx === -1 || itemIdx === sections[ii].data.length) {
        return sections[ii];
      } else if (itemIdx < sections[ii].data.length) {
        return sections[ii].data[itemIdx];
      } else {
        itemIdx -= sections[ii].data.length + 2;
      }
    }

    return null;
  }

  module.exports = VirtualizedSectionList;
},259,[11,46,22,30,33,32,23,36,43,48,75,233,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},260,[179,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},261,[75,230]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

  var NativeMethodsMixin = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;
  module.exports = NativeMethodsMixin;
},262,[78]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass = _$$_REQUIRE(_dependencyMap[4]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[5]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[6]);

  var _inherits = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[9]);

  var AndroidCheckBoxNativeComponent = _$$_REQUIRE(_dependencyMap[10]);

  var nullthrows = _$$_REQUIRE(_dependencyMap[11]);

  var setAndForwardRef = _$$_REQUIRE(_dependencyMap[12]);

  var CheckBox = function (_React$Component) {
    _inherits(CheckBox, _React$Component);

    function CheckBox() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, CheckBox);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckBox)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._nativeRef = null;
      _this._setNativeRef = setAndForwardRef({
        getForwardedRef: function getForwardedRef() {
          return _this.props.forwardedRef;
        },
        setLocalRef: function setLocalRef(ref) {
          _this._nativeRef = ref;
        }
      });

      _this._onChange = function (event) {
        var _this$props$value;

        var value = (_this$props$value = _this.props.value) != null ? _this$props$value : false;
        nullthrows(_this._nativeRef).setNativeProps({
          value: value
        });
        _this.props.onChange && _this.props.onChange(event);
        _this.props.onValueChange && _this.props.onValueChange(event.nativeEvent.value);
      };

      return _this;
    }

    _createClass(CheckBox, [{
      key: "render",
      value: function render() {
        var _this$props$disabled, _this$props$value2;

        var _this$props = this.props,
            _ = _this$props.disabled,
            __ = _this$props.value,
            style = _this$props.style,
            forwardedRef = _this$props.forwardedRef,
            props = _objectWithoutProperties(_this$props, ["disabled", "value", "style", "forwardedRef"]);

        var disabled = (_this$props$disabled = this.props.disabled) != null ? _this$props$disabled : false;
        var value = (_this$props$value2 = this.props.value) != null ? _this$props$value2 : false;

        var nativeProps = _objectSpread({}, props, {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderTerminationRequest: function onResponderTerminationRequest() {
            return false;
          },
          enabled: !disabled,
          on: value,
          style: [styles.rctCheckBox, style]
        });

        return React.createElement(AndroidCheckBoxNativeComponent, _extends({}, nativeProps, {
          ref: this._setNativeRef,
          onChange: this._onChange
        }));
      }
    }]);

    return CheckBox;
  }(React.Component);

  var styles = StyleSheet.create({
    rctCheckBox: {
      height: 32,
      width: 32
    }
  });
  var CheckBoxWithRef = React.forwardRef(function CheckBoxWithRef(props, ref) {
    return React.createElement(CheckBox, _extends({}, props, {
      forwardedRef: ref
    }));
  });
  module.exports = CheckBoxWithRef;
},263,[11,46,9,22,23,30,33,36,48,52,264,191,265]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},264,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},265,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[6]);

  var Text = _$$_REQUIRE(_dependencyMap[7]);

  var View = _$$_REQUIRE(_dependencyMap[8]);

  var DummyDatePickerIOS = function (_React$Component) {
    _inherits(DummyDatePickerIOS, _React$Component);

    function DummyDatePickerIOS() {
      _classCallCheck(this, DummyDatePickerIOS);

      return _possibleConstructorReturn(this, _getPrototypeOf(DummyDatePickerIOS).apply(this, arguments));
    }

    _createClass(DummyDatePickerIOS, [{
      key: "render",
      value: function render() {
        return React.createElement(View, {
          style: [styles.dummyDatePickerIOS, this.props.style]
        }, React.createElement(Text, {
          style: styles.datePickerText
        }, "DatePickerIOS is not supported on this platform!"));
      }
    }]);

    return DummyDatePickerIOS;
  }(React.Component);

  var styles = StyleSheet.create({
    dummyDatePickerIOS: {
      height: 100,
      width: 300,
      backgroundColor: '#ffbcbc',
      borderWidth: 1,
      borderColor: 'red',
      alignItems: 'center',
      justifyContent: 'center',
      margin: 10
    },
    datePickerText: {
      color: '#333333',
      margin: 20
    }
  });
  module.exports = DummyDatePickerIOS;
},266,[22,23,30,33,36,48,52,179,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[9]);

  var StatusBar = _$$_REQUIRE(_dependencyMap[10]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[11]);

  var UIManager = _$$_REQUIRE(_dependencyMap[12]);

  var View = _$$_REQUIRE(_dependencyMap[13]);

  var nullthrows = _$$_REQUIRE(_dependencyMap[14]);

  var DrawerConsts = UIManager.getViewManagerConfig('AndroidDrawerLayout').Constants;

  var dismissKeyboard = _$$_REQUIRE(_dependencyMap[15]);

  var AndroidDrawerLayoutNativeComponent = _$$_REQUIRE(_dependencyMap[16]);

  var DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];

  var DrawerLayoutAndroid = function (_React$Component) {
    _inherits(DrawerLayoutAndroid, _React$Component);

    function DrawerLayoutAndroid() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, DrawerLayoutAndroid);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrawerLayoutAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._nativeRef = React.createRef();
      _this.state = {
        statusBarBackgroundColor: null
      };

      _this._onDrawerSlide = function (event) {
        if (_this.props.onDrawerSlide) {
          _this.props.onDrawerSlide(event);
        }

        if (_this.props.keyboardDismissMode === 'on-drag') {
          dismissKeyboard();
        }
      };

      _this._onDrawerOpen = function () {
        if (_this.props.onDrawerOpen) {
          _this.props.onDrawerOpen();
        }
      };

      _this._onDrawerClose = function () {
        if (_this.props.onDrawerClose) {
          _this.props.onDrawerClose();
        }
      };

      _this._onDrawerStateChanged = function (event) {
        if (_this.props.onDrawerStateChanged) {
          _this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);
        }
      };

      return _this;
    }

    _createClass(DrawerLayoutAndroid, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            onDrawerStateChanged = _this$props.onDrawerStateChanged,
            props = _objectWithoutProperties(_this$props, ["onDrawerStateChanged"]);

        var drawStatusBar = Platform.Version >= 21 && this.props.statusBarBackgroundColor;
        var drawerViewWrapper = React.createElement(View, {
          style: [styles.drawerSubview, {
            width: this.props.drawerWidth,
            backgroundColor: this.props.drawerBackgroundColor
          }],
          collapsable: false
        }, this.props.renderNavigationView(), drawStatusBar && React.createElement(View, {
          style: styles.drawerStatusBar
        }));
        var childrenWrapper = React.createElement(View, {
          style: styles.mainSubview,
          collapsable: false
        }, drawStatusBar && React.createElement(StatusBar, {
          translucent: true,
          backgroundColor: this.props.statusBarBackgroundColor
        }), drawStatusBar && React.createElement(View, {
          style: [styles.statusBar, {
            backgroundColor: this.props.statusBarBackgroundColor
          }]
        }), this.props.children);
        return React.createElement(AndroidDrawerLayoutNativeComponent, _extends({}, props, {
          ref: this._nativeRef,
          drawerWidth: this.props.drawerWidth,
          drawerPosition: this.props.drawerPosition,
          drawerLockMode: this.props.drawerLockMode,
          style: [styles.base, this.props.style],
          onDrawerSlide: this._onDrawerSlide,
          onDrawerOpen: this._onDrawerOpen,
          onDrawerClose: this._onDrawerClose,
          onDrawerStateChanged: this._onDrawerStateChanged
        }), childrenWrapper, drawerViewWrapper);
      }
    }, {
      key: "openDrawer",
      value: function openDrawer() {
        UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.getViewManagerConfig('AndroidDrawerLayout').Commands.openDrawer, null);
      }
    }, {
      key: "closeDrawer",
      value: function closeDrawer() {
        UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.getViewManagerConfig('AndroidDrawerLayout').Commands.closeDrawer, null);
      }
    }, {
      key: "_getDrawerLayoutHandle",
      value: function _getDrawerLayoutHandle() {
        return ReactNative.findNodeHandle(this._nativeRef.current);
      }
    }, {
      key: "blur",
      value: function blur() {
        nullthrows(this._nativeRef.current).blur();
      }
    }, {
      key: "focus",
      value: function focus() {
        nullthrows(this._nativeRef.current).focus();
      }
    }, {
      key: "measure",
      value: function measure(callback) {
        nullthrows(this._nativeRef.current).measure(callback);
      }
    }, {
      key: "measureInWindow",
      value: function measureInWindow(callback) {
        nullthrows(this._nativeRef.current).measureInWindow(callback);
      }
    }, {
      key: "measureLayout",
      value: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        nullthrows(this._nativeRef.current).measureLayout(relativeToNativeNode, onSuccess, onFail);
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(nativeProps) {
        nullthrows(this._nativeRef.current).setNativeProps(nativeProps);
      }
    }]);

    return DrawerLayoutAndroid;
  }(React.Component);

  DrawerLayoutAndroid.positions = DrawerConsts.DrawerPosition;
  DrawerLayoutAndroid.defaultProps = {
    drawerBackgroundColor: 'white'
  };
  var styles = StyleSheet.create({
    base: {
      flex: 1,
      elevation: 16
    },
    mainSubview: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    drawerSubview: {
      position: 'absolute',
      top: 0,
      bottom: 0
    },
    statusBar: {
      height: StatusBar.currentHeight
    },
    drawerStatusBar: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      height: StatusBar.currentHeight,
      backgroundColor: 'rgba(0, 0, 0, 0.251)'
    }
  });
  module.exports = DrawerLayoutAndroid;
},267,[11,9,22,23,30,33,36,43,48,78,268,52,42,75,191,244,269]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var _extends = _$$_REQUIRE(_dependencyMap[5]);

  var _StatusBarManager$DEF;

  var React = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var StatusBarManager = _$$_REQUIRE(_dependencyMap[9]).StatusBarManager;

  function mergePropsStack(propsStack, defaultValues) {
    return propsStack.reduce(function (prev, cur) {
      for (var prop in cur) {
        if (cur[prop] != null) {
          prev[prop] = cur[prop];
        }
      }

      return prev;
    }, _extends({}, defaultValues));
  }

  function createStackEntry(props) {
    return {
      backgroundColor: props.backgroundColor != null ? {
        value: props.backgroundColor,
        animated: props.animated
      } : null,
      barStyle: props.barStyle != null ? {
        value: props.barStyle,
        animated: props.animated
      } : null,
      translucent: props.translucent,
      hidden: props.hidden != null ? {
        value: props.hidden,
        animated: props.animated,
        transition: props.showHideTransition
      } : null,
      networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
    };
  }

  var StatusBar = function (_React$Component) {
    _inherits(StatusBar, _React$Component);

    function StatusBar() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, StatusBar);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StatusBar)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._stackEntry = null;
      return _this;
    }

    _createClass(StatusBar, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._stackEntry = StatusBar.pushStackEntry(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        StatusBar.popStackEntry(this._stackEntry);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this._stackEntry = StatusBar.replaceStackEntry(this._stackEntry, this.props);
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }], [{
      key: "setHidden",
      value: function setHidden(hidden, animation) {
        animation = animation || 'none';
        StatusBar._defaultProps.hidden.value = hidden;
        {
          StatusBarManager.setHidden(hidden);
        }
      }
    }, {
      key: "setBarStyle",
      value: function setBarStyle(style, animated) {
        animated = animated || false;
        StatusBar._defaultProps.barStyle.value = style;
        {
          StatusBarManager.setStyle(style);
        }
      }
    }, {
      key: "setNetworkActivityIndicatorVisible",
      value: function setNetworkActivityIndicatorVisible(visible) {
        {
          console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
          return;
        }
        StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
        StatusBarManager.setNetworkActivityIndicatorVisible(visible);
      }
    }, {
      key: "setBackgroundColor",
      value: function setBackgroundColor(color, animated) {
        animated = animated || false;
        StatusBar._defaultProps.backgroundColor.value = color;
        StatusBarManager.setColor(processColor(color), animated);
      }
    }, {
      key: "setTranslucent",
      value: function setTranslucent(translucent) {
        StatusBar._defaultProps.translucent = translucent;
        StatusBarManager.setTranslucent(translucent);
      }
    }, {
      key: "pushStackEntry",
      value: function pushStackEntry(props) {
        var entry = createStackEntry(props);

        StatusBar._propsStack.push(entry);

        StatusBar._updatePropsStack();

        return entry;
      }
    }, {
      key: "popStackEntry",
      value: function popStackEntry(entry) {
        var index = StatusBar._propsStack.indexOf(entry);

        if (index !== -1) {
          StatusBar._propsStack.splice(index, 1);
        }

        StatusBar._updatePropsStack();
      }
    }, {
      key: "replaceStackEntry",
      value: function replaceStackEntry(entry, props) {
        var newEntry = createStackEntry(props);

        var index = StatusBar._propsStack.indexOf(entry);

        if (index !== -1) {
          StatusBar._propsStack[index] = newEntry;
        }

        StatusBar._updatePropsStack();

        return newEntry;
      }
    }]);

    return StatusBar;
  }(React.Component);

  StatusBar._propsStack = [];
  StatusBar._defaultProps = createStackEntry({
    animated: false,
    showHideTransition: 'fade',
    backgroundColor: (_StatusBarManager$DEF = StatusBarManager.DEFAULT_BACKGROUND_COLOR) != null ? _StatusBarManager$DEF : 'black',
    barStyle: 'default',
    translucent: false,
    hidden: false,
    networkActivityIndicatorVisible: false
  });
  StatusBar._updateImmediate = null;
  StatusBar._currentValues = null;
  StatusBar.currentHeight = StatusBarManager.HEIGHT;
  StatusBar.defaultProps = {
    animated: false,
    showHideTransition: 'fade'
  };

  StatusBar._updatePropsStack = function () {
    clearImmediate(StatusBar._updateImmediate);
    StatusBar._updateImmediate = setImmediate(function () {
      var oldProps = StatusBar._currentValues;
      var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);
      {
        if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
          StatusBarManager.setStyle(mergedProps.barStyle.value);
        }

        if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {
          StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);
        }

        if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
          StatusBarManager.setHidden(mergedProps.hidden.value);
        }

        if (!oldProps || oldProps.translucent !== mergedProps.translucent) {
          StatusBarManager.setTranslucent(mergedProps.translucent);
        }
      }
      StatusBar._currentValues = mergedProps;
    });
  };

  module.exports = StatusBar;
},268,[22,23,30,33,36,11,48,43,69,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidDrawerLayout');
},269,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var Image = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[9]);

  var View = _$$_REQUIRE(_dependencyMap[10]);

  var ensureComponentIsNative = _$$_REQUIRE(_dependencyMap[11]);

  var ImageBackground = function (_React$Component) {
    _inherits(ImageBackground, _React$Component);

    function ImageBackground() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, ImageBackground);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageBackground)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._viewRef = null;

      _this._captureRef = function (ref) {
        _this._viewRef = ref;
      };

      return _this;
    }

    _createClass(ImageBackground, [{
      key: "setNativeProps",
      value: function setNativeProps(props) {
        var viewRef = this._viewRef;

        if (viewRef) {
          ensureComponentIsNative(viewRef);
          viewRef.setNativeProps(props);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            style = _this$props.style,
            imageStyle = _this$props.imageStyle,
            imageRef = _this$props.imageRef,
            props = _objectWithoutProperties(_this$props, ["children", "style", "imageStyle", "imageRef"]);

        return React.createElement(View, {
          accessibilityIgnoresInvertColors: true,
          style: style,
          ref: this._captureRef
        }, React.createElement(Image, _extends({}, props, {
          style: [StyleSheet.absoluteFill, {
            width: style.width,
            height: style.height
          }, imageStyle],
          ref: imageRef
        })), children);
      }
    }]);

    return ImageBackground;
  }(React.Component);

  module.exports = ImageBackground;
},270,[11,9,22,23,30,33,36,251,48,52,75,271]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var ensureComponentIsNative = function ensureComponentIsNative(component) {
    invariant(component && typeof component.setNativeProps === 'function', "Touchable child must either be native or forward setNativeProps to a native component");
  };

  module.exports = ensureComponentIsNative;
},271,[3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var RCTImageEditingManager = _$$_REQUIRE(_dependencyMap[2]).ImageEditingManager;

  var ImageEditor = function () {
    function ImageEditor() {
      _classCallCheck(this, ImageEditor);
    }

    _createClass(ImageEditor, null, [{
      key: "cropImage",
      value: function cropImage(uri, cropData, success, failure) {
        RCTImageEditingManager.cropImage(uri, cropData, success, failure);
      }
    }]);

    return ImageEditor;
  }();

  module.exports = ImageEditor;
},272,[22,23,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var RCTImageStoreManager = _$$_REQUIRE(_dependencyMap[2]).ImageStoreManager;

  var Platform = _$$_REQUIRE(_dependencyMap[3]);

  var warnOnce = _$$_REQUIRE(_dependencyMap[4]);

  function warnUnimplementedMethod(methodName) {
    warnOnce("imagestore-" + methodName, "react-native: ImageStore." + methodName + "() is not implemented on " + "android");
  }

  var ImageStore = function () {
    function ImageStore() {
      _classCallCheck(this, ImageStore);
    }

    _createClass(ImageStore, null, [{
      key: "hasImageForTag",
      value: function hasImageForTag(uri, callback) {
        if (RCTImageStoreManager.hasImageForTag) {
          RCTImageStoreManager.hasImageForTag(uri, callback);
        } else {
          warnUnimplementedMethod('hasImageForTag');
        }
      }
    }, {
      key: "removeImageForTag",
      value: function removeImageForTag(uri) {
        if (RCTImageStoreManager.removeImageForTag) {
          RCTImageStoreManager.removeImageForTag(uri);
        } else {
          warnUnimplementedMethod('removeImageForTag');
        }
      }
    }, {
      key: "addImageFromBase64",
      value: function addImageFromBase64(base64ImageData, success, failure) {
        if (RCTImageStoreManager.addImageFromBase64) {
          RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);
        } else {
          warnUnimplementedMethod('addImageFromBase64');
        }
      }
    }, {
      key: "getBase64ForTag",
      value: function getBase64ForTag(uri, success, failure) {
        if (RCTImageStoreManager.getBase64ForTag) {
          RCTImageStoreManager.getBase64ForTag(uri, success, failure);
        } else {
          warnUnimplementedMethod('getBase64ForTag');
        }
      }
    }]);

    return ImageStore;
  }();

  module.exports = ImageStore;
},273,[22,23,8,43,4]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[5]);

  var Platform = _$$_REQUIRE(_dependencyMap[6]);

  var React = _$$_REQUIRE(_dependencyMap[7]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[8]);

  var RCTInputAccessoryViewNativeComponent = _$$_REQUIRE(_dependencyMap[9]);

  var InputAccessoryView = function (_React$Component) {
    _inherits(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      _classCallCheck(this, InputAccessoryView);

      return _possibleConstructorReturn(this, _getPrototypeOf(InputAccessoryView).apply(this, arguments));
    }

    _createClass(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {
          console.warn('<InputAccessoryView> is only supported on iOS.');
        }

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(RCTInputAccessoryViewNativeComponent, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);

    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},274,[22,23,30,33,36,58,43,48,52,275]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('RCTInputAccessoryView');
},275,[48,155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var Keyboard = _$$_REQUIRE(_dependencyMap[7]);

  var LayoutAnimation = _$$_REQUIRE(_dependencyMap[8]);

  var Platform = _$$_REQUIRE(_dependencyMap[9]);

  var React = _$$_REQUIRE(_dependencyMap[10]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[11]);

  var View = _$$_REQUIRE(_dependencyMap[12]);

  var KeyboardAvoidingView = function (_React$Component) {
    _inherits(KeyboardAvoidingView, _React$Component);

    function KeyboardAvoidingView(props) {
      var _this;

      _classCallCheck(this, KeyboardAvoidingView);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(KeyboardAvoidingView).call(this, props));
      _this._frame = null;
      _this._subscriptions = [];
      _this._initialFrameHeight = 0;

      _this._onKeyboardChange = function (event) {
        if (event == null) {
          _this.setState({
            bottom: 0
          });

          return;
        }

        var duration = event.duration,
            easing = event.easing,
            endCoordinates = event.endCoordinates;

        var height = _this._relativeKeyboardHeight(endCoordinates);

        if (_this.state.bottom === height) {
          return;
        }

        if (duration && easing) {
          LayoutAnimation.configureNext({
            duration: duration > 10 ? duration : 10,
            update: {
              duration: duration > 10 ? duration : 10,
              type: LayoutAnimation.Types[easing] || 'keyboard'
            }
          });
        }

        _this.setState({
          bottom: height
        });
      };

      _this._onLayout = function (event) {
        _this._frame = event.nativeEvent.layout;

        if (!_this._initialFrameHeight) {
          _this._initialFrameHeight = _this._frame.height;
        }
      };

      _this.state = {
        bottom: 0
      };
      _this.viewRef = React.createRef();
      return _this;
    }

    _createClass(KeyboardAvoidingView, [{
      key: "_relativeKeyboardHeight",
      value: function _relativeKeyboardHeight(keyboardFrame) {
        var frame = this._frame;

        if (!frame || !keyboardFrame) {
          return 0;
        }

        var keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;
        return Math.max(frame.y + frame.height - keyboardY, 0);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        {
          this._subscriptions = [Keyboard.addListener('keyboardDidHide', this._onKeyboardChange), Keyboard.addListener('keyboardDidShow', this._onKeyboardChange)];
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._subscriptions.forEach(function (subscription) {
          subscription.remove();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            behavior = _this$props.behavior,
            children = _this$props.children,
            contentContainerStyle = _this$props.contentContainerStyle,
            enabled = _this$props.enabled,
            keyboardVerticalOffset = _this$props.keyboardVerticalOffset,
            style = _this$props.style,
            props = _objectWithoutProperties(_this$props, ["behavior", "children", "contentContainerStyle", "enabled", "keyboardVerticalOffset", "style"]);

        var bottomHeight = enabled ? this.state.bottom : 0;

        switch (behavior) {
          case 'height':
            var heightStyle;

            if (this._frame != null && this.state.bottom > 0) {
              heightStyle = {
                height: this._initialFrameHeight - bottomHeight,
                flex: 0
              };
            }

            return React.createElement(View, _extends({
              ref: this.viewRef,
              style: StyleSheet.compose(style, heightStyle),
              onLayout: this._onLayout
            }, props), children);

          case 'position':
            return React.createElement(View, _extends({
              ref: this.viewRef,
              style: style,
              onLayout: this._onLayout
            }, props), React.createElement(View, {
              style: StyleSheet.compose(contentContainerStyle, {
                bottom: bottomHeight
              })
            }, children));

          case 'padding':
            return React.createElement(View, _extends({
              ref: this.viewRef,
              style: StyleSheet.compose(style, {
                paddingBottom: bottomHeight
              }),
              onLayout: this._onLayout
            }, props), children);

          default:
            return React.createElement(View, _extends({
              ref: this.viewRef,
              onLayout: this._onLayout,
              style: style
            }, props), children);
        }
      }
    }]);

    return KeyboardAvoidingView;
  }(React.Component);

  KeyboardAvoidingView.defaultProps = {
    enabled: true,
    keyboardVerticalOffset: 0
  };
  module.exports = KeyboardAvoidingView;
},276,[11,9,22,23,30,33,36,242,243,43,48,52,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var InternalListViewType = _$$_REQUIRE(_dependencyMap[2]);

  var ListViewDataSource = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[6]);

  var RCTScrollViewManager = _$$_REQUIRE(_dependencyMap[7]).ScrollViewManager;

  var ScrollView = _$$_REQUIRE(_dependencyMap[8]);

  var ScrollResponder = _$$_REQUIRE(_dependencyMap[9]);

  var StaticRenderer = _$$_REQUIRE(_dependencyMap[10]);

  var View = _$$_REQUIRE(_dependencyMap[11]);

  var cloneReferencedElement = _$$_REQUIRE(_dependencyMap[12]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[13]);

  var isEmpty = _$$_REQUIRE(_dependencyMap[14]);

  var merge = _$$_REQUIRE(_dependencyMap[15]);

  var DEFAULT_PAGE_SIZE = 1;
  var DEFAULT_INITIAL_ROWS = 10;
  var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
  var DEFAULT_END_REACHED_THRESHOLD = 1000;
  var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;
  var ListView = createReactClass({
    displayName: 'ListView',
    _rafIds: [],
    _childFrames: [],
    _sentEndForContentLength: null,
    _scrollComponent: null,
    _prevRenderedRowsCount: 0,
    _visibleRows: {},
    scrollProperties: {},
    mixins: [ScrollResponder.Mixin],
    statics: {
      DataSource: ListViewDataSource
    },
    getMetrics: function getMetrics() {
      return {
        contentLength: this.scrollProperties.contentLength,
        totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
        renderedRows: this.state.curRenderedRowsCount,
        visibleRows: Object.keys(this._visibleRows).length
      };
    },
    getScrollResponder: function getScrollResponder() {
      if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
        return this._scrollComponent.getScrollResponder();
      }
    },
    getScrollableNode: function getScrollableNode() {
      if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
        return this._scrollComponent.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._scrollComponent);
      }
    },
    scrollTo: function scrollTo() {
      if (this._scrollComponent && this._scrollComponent.scrollTo) {
        var _this$_scrollComponen;

        (_this$_scrollComponen = this._scrollComponent).scrollTo.apply(_this$_scrollComponen, arguments);
      }
    },
    scrollToEnd: function scrollToEnd(options) {
      if (this._scrollComponent) {
        if (this._scrollComponent.scrollToEnd) {
          this._scrollComponent.scrollToEnd(options);
        } else {
          console.warn("The scroll component used by the ListView does not support scrollToEnd. Check the renderScrollComponent prop of your ListView.");
        }
      }
    },
    flashScrollIndicators: function flashScrollIndicators() {
      if (this._scrollComponent && this._scrollComponent.flashScrollIndicators) {
        this._scrollComponent.flashScrollIndicators();
      }
    },
    setNativeProps: function setNativeProps(props) {
      if (this._scrollComponent) {
        this._scrollComponent.setNativeProps(props);
      }
    },
    getDefaultProps: function getDefaultProps() {
      return {
        initialListSize: DEFAULT_INITIAL_ROWS,
        pageSize: DEFAULT_PAGE_SIZE,
        renderScrollComponent: function renderScrollComponent(props) {
          return React.createElement(ScrollView, props);
        },
        scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
        onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
        stickySectionHeadersEnabled: false,
        stickyHeaderIndices: []
      };
    },
    getInitialState: function getInitialState() {
      return {
        curRenderedRowsCount: this.props.initialListSize,
        highlightedRow: {}
      };
    },
    getInnerViewNode: function getInnerViewNode() {
      return this._scrollComponent && this._scrollComponent.getInnerViewNode();
    },
    UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {
      this.scrollProperties = {
        visibleLength: null,
        contentLength: null,
        offset: 0
      };
      this._rafIds = [];
      this._childFrames = [];
      this._visibleRows = {};
      this._prevRenderedRowsCount = 0;
      this._sentEndForContentLength = null;
    },
    componentWillUnmount: function componentWillUnmount() {
      this._rafIds.forEach(cancelAnimationFrame);

      this._rafIds = [];
    },
    componentDidMount: function componentDidMount() {
      var _this = this;

      this._requestAnimationFrame(function () {
        _this._measureAndUpdateScrollProps();
      });
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
        this.setState(function (state, props) {
          _this2._prevRenderedRowsCount = 0;
          return {
            curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
          };
        }, function () {
          return _this2._renderMoreRowsIfNeeded();
        });
      }
    },
    componentDidUpdate: function componentDidUpdate() {
      var _this3 = this;

      this._requestAnimationFrame(function () {
        _this3._measureAndUpdateScrollProps();
      });
    },
    _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
      this.setState({
        highlightedRow: {
          sectionID: sectionID,
          rowID: rowID
        }
      });
    },
    render: function render() {
      var bodyComponents = [];
      var dataSource = this.props.dataSource;
      var allRowIDs = dataSource.rowIdentities;
      var rowCount = 0;
      var stickySectionHeaderIndices = [];
      var renderSectionHeader = this.props.renderSectionHeader;
      var header = this.props.renderHeader && this.props.renderHeader();
      var footer = this.props.renderFooter && this.props.renderFooter();
      var totalIndex = header ? 1 : 0;

      for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
        var sectionID = dataSource.sectionIdentities[sectionIdx];
        var rowIDs = allRowIDs[sectionIdx];

        if (rowIDs.length === 0) {
          if (this.props.enableEmptySections === undefined) {
            var warning = _$$_REQUIRE(_dependencyMap[16]);

            warning(false, "In next release empty section headers will be rendered. In this release you can use 'enableEmptySections' flag to render empty section headers.");
            continue;
          } else {
            var invariant = _$$_REQUIRE(_dependencyMap[17]);

            invariant(this.props.enableEmptySections, "In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered. If empty section headers are not desirable their indices should be excluded from sectionIDs object. In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.");
          }
        }

        if (renderSectionHeader) {
          var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);

          if (element) {
            bodyComponents.push(React.cloneElement(element, {
              key: 's_' + sectionID
            }));

            if (this.props.stickySectionHeadersEnabled) {
              stickySectionHeaderIndices.push(totalIndex);
            }

            totalIndex++;
          }
        }

        for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
          var rowID = rowIDs[rowIdx];
          var comboID = sectionID + '_' + rowID;
          var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
          var row = React.createElement(StaticRenderer, {
            key: 'r_' + comboID,
            shouldUpdate: !!shouldUpdateRow,
            render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted)
          });
          bodyComponents.push(row);
          totalIndex++;

          if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
            var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
            var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);

            if (separator) {
              bodyComponents.push(React.createElement(View, {
                key: 's_' + comboID
              }, separator));
              totalIndex++;
            }
          }

          if (++rowCount === this.state.curRenderedRowsCount) {
            break;
          }
        }

        if (rowCount >= this.state.curRenderedRowsCount) {
          break;
        }
      }

      var _this$props = this.props,
          renderScrollComponent = _this$props.renderScrollComponent,
          props = _objectWithoutProperties(_this$props, ["renderScrollComponent"]);

      if (!props.scrollEventThrottle) {
        props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
      }

      if (props.removeClippedSubviews === undefined) {
        props.removeClippedSubviews = true;
      }

      _extends(props, {
        onScroll: this._onScroll,
        stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),
        onKeyboardWillShow: undefined,
        onKeyboardWillHide: undefined,
        onKeyboardDidShow: undefined,
        onKeyboardDidHide: undefined
      });

      return cloneReferencedElement(renderScrollComponent(props), {
        ref: this._setScrollComponentRef,
        onContentSizeChange: this._onContentSizeChange,
        onLayout: this._onLayout,
        DEPRECATED_sendUpdatedChildFrames: typeof props.onChangeVisibleRows !== undefined
      }, header, bodyComponents, footer);
    },
    _requestAnimationFrame: function _requestAnimationFrame(fn) {
      var _this4 = this;

      var rafId = requestAnimationFrame(function () {
        _this4._rafIds = _this4._rafIds.filter(function (id) {
          return id !== rafId;
        });
        fn();
      });

      this._rafIds.push(rafId);
    },
    _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
      var scrollComponent = this.getScrollResponder();

      if (!scrollComponent || !scrollComponent.getInnerViewNode) {
        return;
      }

      RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
    },
    _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
      this._scrollComponent = scrollComponent;
    },
    _onContentSizeChange: function _onContentSizeChange(width, height) {
      var contentLength = !this.props.horizontal ? height : width;

      if (contentLength !== this.scrollProperties.contentLength) {
        this.scrollProperties.contentLength = contentLength;

        this._updateVisibleRows();

        this._renderMoreRowsIfNeeded();
      }

      this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
    },
    _onLayout: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      var visibleLength = !this.props.horizontal ? height : width;

      if (visibleLength !== this.scrollProperties.visibleLength) {
        this.scrollProperties.visibleLength = visibleLength;

        this._updateVisibleRows();

        this._renderMoreRowsIfNeeded();
      }

      this.props.onLayout && this.props.onLayout(event);
    },
    _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
      if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
        this._sentEndForContentLength = this.scrollProperties.contentLength;
        this.props.onEndReached(event);
        return true;
      }

      return false;
    },
    _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
      if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
        this._maybeCallOnEndReached();

        return;
      }

      var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);

      if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
        this._pageInNewRows();
      }
    },
    _pageInNewRows: function _pageInNewRows() {
      var _this5 = this;

      this.setState(function (state, props) {
        var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
        _this5._prevRenderedRowsCount = state.curRenderedRowsCount;
        return {
          curRenderedRowsCount: rowsToRender
        };
      }, function () {
        _this5._measureAndUpdateScrollProps();

        _this5._prevRenderedRowsCount = _this5.state.curRenderedRowsCount;
      });
    },
    _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
      return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
    },
    _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
      var _this6 = this;

      if (!this.props.onChangeVisibleRows) {
        return;
      }

      if (updatedFrames) {
        updatedFrames.forEach(function (newFrame) {
          _this6._childFrames[newFrame.index] = merge(newFrame);
        });
      }

      var isVertical = !this.props.horizontal;
      var dataSource = this.props.dataSource;
      var visibleMin = this.scrollProperties.offset;
      var visibleMax = visibleMin + this.scrollProperties.visibleLength;
      var allRowIDs = dataSource.rowIdentities;
      var header = this.props.renderHeader && this.props.renderHeader();
      var totalIndex = header ? 1 : 0;
      var visibilityChanged = false;
      var changedRows = {};

      for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
        var rowIDs = allRowIDs[sectionIdx];

        if (rowIDs.length === 0) {
          continue;
        }

        var sectionID = dataSource.sectionIdentities[sectionIdx];

        if (this.props.renderSectionHeader) {
          totalIndex++;
        }

        var visibleSection = this._visibleRows[sectionID];

        if (!visibleSection) {
          visibleSection = {};
        }

        for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
          var rowID = rowIDs[rowIdx];
          var frame = this._childFrames[totalIndex];
          totalIndex++;

          if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
            totalIndex++;
          }

          if (!frame) {
            break;
          }

          var rowVisible = visibleSection[rowID];
          var min = isVertical ? frame.y : frame.x;
          var max = min + (isVertical ? frame.height : frame.width);

          if (!min && !max || min === max) {
            break;
          }

          if (min > visibleMax || max < visibleMin) {
            if (rowVisible) {
              visibilityChanged = true;
              delete visibleSection[rowID];

              if (!changedRows[sectionID]) {
                changedRows[sectionID] = {};
              }

              changedRows[sectionID][rowID] = false;
            }
          } else if (!rowVisible) {
            visibilityChanged = true;
            visibleSection[rowID] = true;

            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }

            changedRows[sectionID][rowID] = true;
          }
        }

        if (!isEmpty(visibleSection)) {
          this._visibleRows[sectionID] = visibleSection;
        } else if (this._visibleRows[sectionID]) {
          delete this._visibleRows[sectionID];
        }
      }

      visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
    },
    _onScroll: function _onScroll(e) {
      var isVertical = !this.props.horizontal;
      this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
      this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
      this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];

      this._updateVisibleRows(e.nativeEvent.updatedChildFrames);

      if (!this._maybeCallOnEndReached(e)) {
        this._renderMoreRowsIfNeeded();
      }

      if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
        this._sentEndForContentLength = null;
      }

      this.props.onScroll && this.props.onScroll(e);
    }
  });
  module.exports = ListView;
},277,[11,9,278,279,43,48,78,8,239,240,281,75,282,194,280,175,5,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var ListViewDataSource = _$$_REQUIRE(_dependencyMap[6]);

  var InternalListViewType = function (_React$Component) {
    "use strict";

    _inherits(InternalListViewType, _React$Component);

    function InternalListViewType() {
      _classCallCheck(this, InternalListViewType);

      return _possibleConstructorReturn(this, _getPrototypeOf(InternalListViewType).apply(this, arguments));
    }

    _createClass(InternalListViewType, [{
      key: "setNativeProps",
      value: function setNativeProps(props) {}
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {}
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {}
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {}
    }, {
      key: "getMetrics",
      value: function getMetrics() {}
    }, {
      key: "scrollTo",
      value: function scrollTo() {}
    }, {
      key: "scrollToEnd",
      value: function scrollToEnd(options) {}
    }]);

    return InternalListViewType;
  }(React.Component);

  InternalListViewType.DataSource = ListViewDataSource;
  module.exports = InternalListViewType;
},278,[22,23,30,33,36,48,279]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var invariant = _$$_REQUIRE(_dependencyMap[3]);

  var isEmpty = _$$_REQUIRE(_dependencyMap[4]);

  var warning = _$$_REQUIRE(_dependencyMap[5]);

  function defaultGetRowData(dataBlob, sectionID, rowID) {
    return dataBlob[sectionID][rowID];
  }

  function defaultGetSectionHeaderData(dataBlob, sectionID) {
    return dataBlob[sectionID];
  }

  var ListViewDataSource = function () {
    function ListViewDataSource(params) {
      _classCallCheck(this, ListViewDataSource);

      invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
      this._rowHasChanged = params.rowHasChanged;
      this._getRowData = params.getRowData || defaultGetRowData;
      this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
      this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;
      this._dataBlob = null;
      this._dirtyRows = [];
      this._dirtySections = [];
      this._cachedRowCount = 0;
      this.rowIdentities = [];
      this.sectionIdentities = [];
    }

    _createClass(ListViewDataSource, [{
      key: "cloneWithRows",
      value: function cloneWithRows(dataBlob, rowIdentities) {
        var rowIds = rowIdentities ? [_toConsumableArray(rowIdentities)] : null;

        if (!this._sectionHeaderHasChanged) {
          this._sectionHeaderHasChanged = function () {
            return false;
          };
        }

        return this.cloneWithRowsAndSections({
          s1: dataBlob
        }, ['s1'], rowIds);
      }
    }, {
      key: "cloneWithRowsAndSections",
      value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
        invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
        invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');
        var newSource = new ListViewDataSource({
          getRowData: this._getRowData,
          getSectionHeaderData: this._getSectionHeaderData,
          rowHasChanged: this._rowHasChanged,
          sectionHeaderHasChanged: this._sectionHeaderHasChanged
        });
        newSource._dataBlob = dataBlob;

        if (sectionIdentities) {
          newSource.sectionIdentities = sectionIdentities;
        } else {
          newSource.sectionIdentities = Object.keys(dataBlob);
        }

        if (rowIdentities) {
          newSource.rowIdentities = rowIdentities;
        } else {
          newSource.rowIdentities = [];
          newSource.sectionIdentities.forEach(function (sectionID) {
            newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
          });
        }

        newSource._cachedRowCount = countRows(newSource.rowIdentities);

        newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

        return newSource;
      }
    }, {
      key: "getRowCount",
      value: function getRowCount() {
        return this._cachedRowCount;
      }
    }, {
      key: "getRowAndSectionCount",
      value: function getRowAndSectionCount() {
        return this._cachedRowCount + this.sectionIdentities.length;
      }
    }, {
      key: "rowShouldUpdate",
      value: function rowShouldUpdate(sectionIndex, rowIndex) {
        var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
        warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
        return needsUpdate;
      }
    }, {
      key: "getRowData",
      value: function getRowData(sectionIndex, rowIndex) {
        var sectionID = this.sectionIdentities[sectionIndex];
        var rowID = this.rowIdentities[sectionIndex][rowIndex];
        warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
        return this._getRowData(this._dataBlob, sectionID, rowID);
      }
    }, {
      key: "getRowIDForFlatIndex",
      value: function getRowIDForFlatIndex(index) {
        var accessIndex = index;

        for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
          if (accessIndex >= this.rowIdentities[ii].length) {
            accessIndex -= this.rowIdentities[ii].length;
          } else {
            return this.rowIdentities[ii][accessIndex];
          }
        }

        return null;
      }
    }, {
      key: "getSectionIDForFlatIndex",
      value: function getSectionIDForFlatIndex(index) {
        var accessIndex = index;

        for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
          if (accessIndex >= this.rowIdentities[ii].length) {
            accessIndex -= this.rowIdentities[ii].length;
          } else {
            return this.sectionIdentities[ii];
          }
        }

        return null;
      }
    }, {
      key: "getSectionLengths",
      value: function getSectionLengths() {
        var results = [];

        for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
          results.push(this.rowIdentities[ii].length);
        }

        return results;
      }
    }, {
      key: "sectionHeaderShouldUpdate",
      value: function sectionHeaderShouldUpdate(sectionIndex) {
        var needsUpdate = this._dirtySections[sectionIndex];
        warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
        return needsUpdate;
      }
    }, {
      key: "getSectionHeaderData",
      value: function getSectionHeaderData(sectionIndex) {
        if (!this._getSectionHeaderData) {
          return null;
        }

        var sectionID = this.sectionIdentities[sectionIndex];
        warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
        return this._getSectionHeaderData(this._dataBlob, sectionID);
      }
    }, {
      key: "_calculateDirtyArrays",
      value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
        var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
        var prevRowsHash = {};

        for (var ii = 0; ii < prevRowIDs.length; ii++) {
          var sectionID = prevSectionIDs[ii];
          warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
          prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
        }

        this._dirtySections = [];
        this._dirtyRows = [];
        var dirty;

        for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
          var _sectionID = this.sectionIdentities[sIndex];
          dirty = !prevSectionsHash[_sectionID];
          var sectionHeaderHasChanged = this._sectionHeaderHasChanged;

          if (!dirty && sectionHeaderHasChanged) {
            dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, _sectionID), this._getSectionHeaderData(this._dataBlob, _sectionID));
          }

          this._dirtySections.push(!!dirty);

          this._dirtyRows[sIndex] = [];

          for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
            var rowID = this.rowIdentities[sIndex][rIndex];
            dirty = !prevSectionsHash[_sectionID] || !prevRowsHash[_sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, _sectionID, rowID), this._getRowData(this._dataBlob, _sectionID, rowID));

            this._dirtyRows[sIndex].push(!!dirty);
          }
        }
      }
    }]);

    return ListViewDataSource;
  }();

  function countRows(allRowIDs) {
    var totalRows = 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      totalRows += rowIDs.length;
    }

    return totalRows;
  }

  function keyedDictionaryFromArray(arr) {
    if (isEmpty(arr)) {
      return {};
    }

    var result = {};

    for (var ii = 0; ii < arr.length; ii++) {
      var _key = arr[ii];
      warning(!result[_key], 'Value appears more than once in array: ' + _key);
      result[_key] = true;
    }

    return result;
  }

  module.exports = ListViewDataSource;
},279,[18,22,23,3,280,5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function isEmpty(obj) {
    if (Array.isArray(obj)) {
      return obj.length === 0;
    } else if (typeof obj === 'object') {
      for (var i in obj) {
        return false;
      }

      return true;
    } else {
      return !obj;
    }
  }

  module.exports = isEmpty;
},280,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StaticRenderer = function (_React$Component) {
    _inherits(StaticRenderer, _React$Component);

    function StaticRenderer() {
      _classCallCheck(this, StaticRenderer);

      return _possibleConstructorReturn(this, _getPrototypeOf(StaticRenderer).apply(this, arguments));
    }

    _createClass(StaticRenderer, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.render();
      }
    }]);

    return StaticRenderer;
  }(React.Component);

  module.exports = StaticRenderer;
},281,[22,23,30,33,36,48]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  function cloneReferencedElement(element, config) {
    var cloneRef = config.ref;
    var originalRef = element.ref;

    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    if (originalRef == null || cloneRef == null) {
      return React.cloneElement.apply(React, [element, config].concat(children));
    }

    if (typeof originalRef !== 'function') {
      return React.cloneElement.apply(React, [element, config].concat(children));
    }

    return React.cloneElement.apply(React, [element, _objectSpread({}, config, {
      ref: function ref(component) {
        cloneRef(component);
        originalRef(component);
      }
    })].concat(children));
  }

  module.exports = cloneReferencedElement;
},282,[46,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},283,[284]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[6]);

  var UnimplementedView = function (_React$Component) {
    _inherits(UnimplementedView, _React$Component);

    function UnimplementedView() {
      _classCallCheck(this, UnimplementedView);

      return _possibleConstructorReturn(this, _getPrototypeOf(UnimplementedView).apply(this, arguments));
    }

    _createClass(UnimplementedView, [{
      key: "setNativeProps",
      value: function setNativeProps() {}
    }, {
      key: "render",
      value: function render() {
        var View = _$$_REQUIRE(_dependencyMap[7]);

        return React.createElement(View, {
          style: [styles.unimplementedView, this.props.style]
        }, this.props.children);
      }
    }]);

    return UnimplementedView;
  }(React.Component);

  var styles = StyleSheet.create({
    unimplementedView: {}
  });
  module.exports = UnimplementedView;
},284,[22,23,30,33,36,48,52,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var _container;

  var AppContainer = _$$_REQUIRE(_dependencyMap[6]);

  var I18nManager = _$$_REQUIRE(_dependencyMap[7]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[8]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[9]);

  var Platform = _$$_REQUIRE(_dependencyMap[10]);

  var React = _$$_REQUIRE(_dependencyMap[11]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[12]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[13]);

  var View = _$$_REQUIRE(_dependencyMap[14]);

  var RCTModalHostView = _$$_REQUIRE(_dependencyMap[15]);

  var ModalEventEmitter = null;
  var uniqueModalIdentifier = 0;

  var Modal = function (_React$Component) {
    _inherits(Modal, _React$Component);

    function Modal(props) {
      var _this;

      _classCallCheck(this, Modal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this, props));

      Modal._confirmProps(props);

      _this._identifier = uniqueModalIdentifier++;
      return _this;
    }

    _createClass(Modal, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          virtualizedList: null
        };
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._eventSubscription) {
          this._eventSubscription.remove();
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        Modal._confirmProps(nextProps);
      }
    }, {
      key: "render",
      value: function render() {
        if (this.props.visible !== true) {
          return null;
        }

        var containerStyles = {
          backgroundColor: this.props.transparent ? 'transparent' : 'white'
        };
        var animationType = this.props.animationType;

        if (!animationType) {
          animationType = 'none';

          if (this.props.animated) {
            animationType = 'slide';
          }
        }

        var presentationStyle = this.props.presentationStyle;

        if (!presentationStyle) {
          presentationStyle = 'fullScreen';

          if (this.props.transparent) {
            presentationStyle = 'overFullScreen';
          }
        }

        var innerChildren = this.props.children;
        return React.createElement(RCTModalHostView, {
          animationType: animationType,
          presentationStyle: presentationStyle,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          identifier: this._identifier,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange
        }, React.createElement(View, {
          style: [styles.container, containerStyles]
        }, innerChildren));
      }
    }, {
      key: "_shouldSetResponder",
      value: function _shouldSetResponder() {
        return true;
      }
    }], [{
      key: "_confirmProps",
      value: function _confirmProps(props) {
        if (props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent) {
          console.warn("Modal with '" + props.presentationStyle + "' presentation style and 'transparent' value is not supported.");
        }
      }
    }]);

    return Modal;
  }(React.Component);

  Modal.defaultProps = {
    visible: true,
    hardwareAccelerated: false
  };
  Modal.contextTypes = {
    rootTag: PropTypes.number
  };
  Modal.childContextTypes = {
    virtualizedList: PropTypes.object
  };
  var side = I18nManager.isRTL ? 'right' : 'left';
  var styles = StyleSheet.create({
    modal: {
      position: 'absolute'
    },
    container: (_container = {
      position: 'absolute'
    }, _defineProperty(_container, side, 0), _defineProperty(_container, "top", 0), _container)
  });
  module.exports = Modal;
},285,[47,22,23,30,33,36,286,287,117,8,43,48,61,52,75,288]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[5]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[6]);

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var View = _$$_REQUIRE(_dependencyMap[11]);

  var AppContainer = function (_React$Component) {
    _inherits(AppContainer, _React$Component);

    function AppContainer() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, AppContainer);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        inspector: null,
        mainKey: 1
      };
      _this._subscription = null;
      return _this;
    }

    _createClass(AppContainer, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          rootTag: this.props.rootTag
        };
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._subscription != null) {
          this._subscription.remove();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var yellowBox = null;
        var innerView = React.createElement(View, {
          collapsable: !this.state.inspector,
          key: this.state.mainKey,
          pointerEvents: "box-none",
          style: styles.appContainer,
          ref: function ref(_ref) {
            _this3._mainRef = _ref;
          }
        }, this.props.children);
        var Wrapper = this.props.WrapperComponent;

        if (Wrapper != null) {
          innerView = React.createElement(Wrapper, null, innerView);
        }

        return React.createElement(View, {
          style: styles.appContainer,
          pointerEvents: "box-none"
        }, innerView, yellowBox, this.state.inspector);
      }
    }]);

    return AppContainer;
  }(React.Component);

  AppContainer.childContextTypes = {
    rootTag: PropTypes.number
  };
  var styles = StyleSheet.create({
    appContainer: {
      flex: 1
    }
  });
  module.exports = AppContainer;
},286,[22,23,30,33,36,39,61,29,48,78,52,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var I18nManager = _$$_REQUIRE(_dependencyMap[0]).I18nManager || {
    isRTL: false,
    doLeftAndRightSwapInRTL: true,
    allowRTL: function allowRTL() {},
    forceRTL: function forceRTL() {},
    swapLeftAndRightInRTL: function swapLeftAndRightInRTL() {}
  };
  module.exports = I18nManager;
},287,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('RCTModalHostView');
},288,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var PickerAndroid = _$$_REQUIRE(_dependencyMap[5]);

  var PickerIOS = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var UnimplementedView = _$$_REQUIRE(_dependencyMap[9]);

  var MODE_DIALOG = 'dialog';
  var MODE_DROPDOWN = 'dropdown';

  var PickerItem = function (_React$Component) {
    _inherits(PickerItem, _React$Component);

    function PickerItem() {
      _classCallCheck(this, PickerItem);

      return _possibleConstructorReturn(this, _getPrototypeOf(PickerItem).apply(this, arguments));
    }

    _createClass(PickerItem, [{
      key: "render",
      value: function render() {
        throw null;
      }
    }]);

    return PickerItem;
  }(React.Component);

  var Picker = function (_React$Component2) {
    _inherits(Picker, _React$Component2);

    function Picker() {
      _classCallCheck(this, Picker);

      return _possibleConstructorReturn(this, _getPrototypeOf(Picker).apply(this, arguments));
    }

    _createClass(Picker, [{
      key: "render",
      value: function render() {
        {
          return React.createElement(PickerAndroid, this.props, this.props.children);
        }
      }
    }]);

    return Picker;
  }(React.Component);

  Picker.MODE_DIALOG = MODE_DIALOG;
  Picker.MODE_DROPDOWN = MODE_DROPDOWN;
  Picker.Item = PickerItem;
  Picker.defaultProps = {
    mode: MODE_DIALOG
  };
  module.exports = Picker;
},289,[22,23,30,33,36,290,293,43,48,284]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[3]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AndroidDropdownPickerNativeComponent = _$$_REQUIRE(_dependencyMap[6]);

  var AndroidDialogPickerNativeComponent = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[9]);

  var processColor = _$$_REQUIRE(_dependencyMap[10]);

  var REF_PICKER = 'picker';
  var MODE_DROPDOWN = 'dropdown';

  var PickerAndroid = function (_React$Component) {
    _inherits(PickerAndroid, _React$Component);

    function PickerAndroid() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, PickerAndroid);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PickerAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = PickerAndroid.getDerivedStateFromProps(_this.props);

      _this._onChange = function (event) {
        if (_this.props.onValueChange) {
          var position = event.nativeEvent.position;

          if (position >= 0) {
            var children = React.Children.toArray(_this.props.children);
            var value = children[position].props.value;

            _this.props.onValueChange(value, position);
          } else {
            _this.props.onValueChange(null, position);
          }
        }

        if (_this.refs[REF_PICKER] && _this.state.selectedIndex !== event.nativeEvent.position) {
          _this.refs[REF_PICKER].setNativeProps({
            selected: _this.state.selectedIndex
          });
        }
      };

      return _this;
    }

    _createClass(PickerAndroid, [{
      key: "render",
      value: function render() {
        var Picker = this.props.mode === MODE_DROPDOWN ? AndroidDropdownPickerNativeComponent : AndroidDialogPickerNativeComponent;
        var nativeProps = {
          enabled: this.props.enabled,
          items: this.state.items,
          mode: this.props.mode,
          onSelect: this._onChange,
          prompt: this.props.prompt,
          selected: this.state.selectedIndex,
          testID: this.props.testID,
          style: [styles.pickerAndroid, this.props.style],
          accessibilityLabel: this.props.accessibilityLabel
        };
        return React.createElement(Picker, _extends({
          ref: REF_PICKER
        }, nativeProps));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props) {
        var selectedIndex = 0;
        var items = React.Children.map(props.children, function (child, index) {
          if (child.props.value === props.selectedValue) {
            selectedIndex = index;
          }

          var childProps = {
            value: child.props.value,
            label: child.props.label
          };

          if (child.props.color) {
            childProps.color = processColor(child.props.color);
          }

          return childProps;
        });
        return {
          selectedIndex: selectedIndex,
          items: items
        };
      }
    }]);

    return PickerAndroid;
  }(React.Component);

  var styles = StyleSheet.create({
    pickerAndroid: {
      height: 50
    }
  });
  module.exports = PickerAndroid;
},290,[11,22,23,30,33,36,291,292,48,52,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidDropdownPicker');
},291,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidDialogPicker');
},292,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},293,[284]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[6]);

  var Text = _$$_REQUIRE(_dependencyMap[7]);

  var View = _$$_REQUIRE(_dependencyMap[8]);

  var DummyProgressViewIOS = function (_React$Component) {
    _inherits(DummyProgressViewIOS, _React$Component);

    function DummyProgressViewIOS() {
      _classCallCheck(this, DummyProgressViewIOS);

      return _possibleConstructorReturn(this, _getPrototypeOf(DummyProgressViewIOS).apply(this, arguments));
    }

    _createClass(DummyProgressViewIOS, [{
      key: "render",
      value: function render() {
        return React.createElement(View, {
          style: [styles.dummy, this.props.style]
        }, React.createElement(Text, {
          style: styles.text
        }, "ProgressViewIOS is not supported on this platform!"));
      }
    }]);

    return DummyProgressViewIOS;
  }(React.Component);

  var styles = StyleSheet.create({
    dummy: {
      width: 120,
      height: 20,
      backgroundColor: '#ffbcbc',
      borderWidth: 1,
      borderColor: 'red',
      alignItems: 'center',
      justifyContent: 'center'
    },
    text: {
      color: '#333333',
      margin: 5,
      fontSize: 10
    }
  });
  module.exports = DummyProgressViewIOS;
},294,[22,23,30,33,36,48,52,179,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var View = _$$_REQUIRE(_dependencyMap[9]);

  var exported;
  {
    exported = function (_React$Component) {
      "use strict";

      _inherits(SafeAreaView, _React$Component);

      function SafeAreaView() {
        _classCallCheck(this, SafeAreaView);

        return _possibleConstructorReturn(this, _getPrototypeOf(SafeAreaView).apply(this, arguments));
      }

      _createClass(SafeAreaView, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              emulateUnlessSupported = _this$props.emulateUnlessSupported,
              props = _objectWithoutProperties(_this$props, ["emulateUnlessSupported"]);

          return React.createElement(View, props);
        }
      }]);

      return SafeAreaView;
    }(React.Component);
  }
  module.exports = exported;
},295,[11,9,22,23,30,33,36,43,48,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[6]);

  var Text = _$$_REQUIRE(_dependencyMap[7]);

  var View = _$$_REQUIRE(_dependencyMap[8]);

  var DummySegmentedControlIOS = function (_React$Component) {
    _inherits(DummySegmentedControlIOS, _React$Component);

    function DummySegmentedControlIOS() {
      _classCallCheck(this, DummySegmentedControlIOS);

      return _possibleConstructorReturn(this, _getPrototypeOf(DummySegmentedControlIOS).apply(this, arguments));
    }

    _createClass(DummySegmentedControlIOS, [{
      key: "render",
      value: function render() {
        return React.createElement(View, {
          style: [styles.dummy, this.props.style]
        }, React.createElement(Text, {
          style: styles.text
        }, "SegmentedControlIOS is not supported on this platform!"));
      }
    }]);

    return DummySegmentedControlIOS;
  }(React.Component);

  var styles = StyleSheet.create({
    dummy: {
      width: 120,
      height: 50,
      backgroundColor: '#ffbcbc',
      borderWidth: 1,
      borderColor: 'red',
      alignItems: 'center',
      justifyContent: 'center'
    },
    text: {
      color: '#333333',
      margin: 5,
      fontSize: 10
    }
  });
  module.exports = DummySegmentedControlIOS;
},296,[22,23,30,33,36,48,52,179,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var RCTSliderNativeComponent = _$$_REQUIRE(_dependencyMap[3]);

  var React = _$$_REQUIRE(_dependencyMap[4]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[5]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[6]);

  var Slider = function Slider(props, forwardedRef) {
    var style = StyleSheet.compose(styles.slider, props.style);

    var onValueChange = props.onValueChange,
        onSlidingComplete = props.onSlidingComplete,
        localProps = _objectWithoutProperties(props, ["onValueChange", "onSlidingComplete"]);

    var onValueChangeEvent = onValueChange ? function (event) {
      var userEvent = true;
      {
        userEvent = event.nativeEvent.fromUser != null && event.nativeEvent.fromUser;
      }
      userEvent && onValueChange(event.nativeEvent.value);
    } : null;
    var onChangeEvent = onValueChangeEvent;
    var onSlidingCompleteEvent = onSlidingComplete ? function (event) {
      onSlidingComplete(event.nativeEvent.value);
    } : null;
    return React.createElement(RCTSliderNativeComponent, _extends({}, localProps, {
      ref: forwardedRef,
      style: style,
      onChange: onChangeEvent,
      onSlidingComplete: onSlidingCompleteEvent,
      onValueChange: onValueChangeEvent,
      enabled: !props.disabled,
      onStartShouldSetResponder: function onStartShouldSetResponder() {
        return true;
      },
      onResponderTerminationRequest: function onResponderTerminationRequest() {
        return false;
      }
    }));
  };

  var SliderWithRef = React.forwardRef(Slider);
  SliderWithRef.defaultProps = {
    disabled: false,
    value: 0,
    minimumValue: 0,
    maximumValue: 1,
    step: 0
  };
  var styles;
  {
    styles = StyleSheet.create({
      slider: {}
    });
  }
  module.exports = SliderWithRef;
},297,[11,9,43,298,48,78,52]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('RCTSlider');
},298,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},299,[284]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var SwitchNativeComponent = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var Switch = function (_React$Component) {
    _inherits(Switch, _React$Component);

    function Switch() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, Switch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Switch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._handleChange = function (event) {
        if (_this._nativeSwitchRef == null) {
          return;
        }

        var value = _this.props.value === true;
        {
          _this._nativeSwitchRef.setNativeProps({
            on: value
          });
        }

        if (_this.props.onChange != null) {
          _this.props.onChange(event);
        }

        if (_this.props.onValueChange != null) {
          _this.props.onValueChange(event.nativeEvent.value);
        }
      };

      _this._handleSwitchNativeComponentRef = function (ref) {
        _this._nativeSwitchRef = ref;
      };

      return _this;
    }

    _createClass(Switch, [{
      key: "render",
      value: function render() {
        var _props$accessibilityR;

        var _this$props = this.props,
            disabled = _this$props.disabled,
            ios_backgroundColor = _this$props.ios_backgroundColor,
            onChange = _this$props.onChange,
            onValueChange = _this$props.onValueChange,
            style = _this$props.style,
            thumbColor = _this$props.thumbColor,
            trackColor = _this$props.trackColor,
            value = _this$props.value,
            props = _objectWithoutProperties(_this$props, ["disabled", "ios_backgroundColor", "onChange", "onValueChange", "style", "thumbColor", "trackColor", "value"]);

        var _thumbColor = thumbColor;

        var _trackColorForFalse = trackColor == null ? undefined : trackColor.false;

        var _trackColorForTrue = trackColor == null ? undefined : trackColor.true;

        var _ref = props,
            thumbTintColor = _ref.thumbTintColor,
            tintColor = _ref.tintColor,
            onTintColor = _ref.onTintColor;

        if (thumbTintColor != null) {
          _thumbColor = thumbTintColor;
        }

        if (tintColor != null) {
          _trackColorForFalse = tintColor;
        }

        if (onTintColor != null) {
          _trackColorForTrue = onTintColor;
        }

        var platformProps = {
          enabled: disabled !== true,
          on: value === true,
          style: style,
          thumbTintColor: _thumbColor,
          trackColorForFalse: _trackColorForFalse,
          trackColorForTrue: _trackColorForTrue,
          trackTintColor: value === true ? _trackColorForTrue : _trackColorForFalse
        };
        return React.createElement(SwitchNativeComponent, _extends({}, props, platformProps, {
          accessibilityRole: (_props$accessibilityR = props.accessibilityRole) != null ? _props$accessibilityR : 'button',
          onChange: this._handleChange,
          onResponderTerminationRequest: returnsFalse,
          onStartShouldSetResponder: returnsTrue,
          ref: this._handleSwitchNativeComponentRef
        }));
      }
    }]);

    return Switch;
  }(React.Component);

  var returnsFalse = function returnsFalse() {
    return false;
  };

  var returnsTrue = function returnsTrue() {
    return true;
  };

  module.exports = Switch;
},300,[11,9,22,23,30,33,36,301,43,48,52]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[2]);

  var SwitchNativeComponent = requireNativeComponent('AndroidSwitch');
  module.exports = SwitchNativeComponent;
},301,[43,78,155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var React = _$$_REQUIRE(_dependencyMap[7]);

  var SwipeableRow = _$$_REQUIRE(_dependencyMap[8]);

  var FlatList = _$$_REQUIRE(_dependencyMap[9]);

  var SwipeableFlatList = function (_React$Component) {
    _inherits(SwipeableFlatList, _React$Component);

    function SwipeableFlatList(props, context) {
      var _this;

      _classCallCheck(this, SwipeableFlatList);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(SwipeableFlatList).call(this, props, context));
      _this._flatListRef = null;
      _this._shouldBounceFirstRowOnMount = false;

      _this._onScroll = function (e) {
        if (_this.state.openRowKey) {
          _this.setState({
            openRowKey: null
          });
        }

        _this.props.onScroll && _this.props.onScroll(e);
      };

      _this._renderItem = function (info) {
        var slideoutView = _this.props.renderQuickActions(info);

        var key = _this.props.keyExtractor(info.item, info.index);

        if (!slideoutView) {
          return _this.props.renderItem(info);
        }

        var shouldBounceOnMount = false;

        if (_this._shouldBounceFirstRowOnMount) {
          _this._shouldBounceFirstRowOnMount = false;
          shouldBounceOnMount = true;
        }

        return React.createElement(SwipeableRow, {
          slideoutView: slideoutView,
          isOpen: key === _this.state.openRowKey,
          maxSwipeDistance: _this._getMaxSwipeDistance(info),
          onOpen: function onOpen() {
            return _this._onOpen(key);
          },
          onClose: function onClose() {
            return _this._onClose(key);
          },
          shouldBounceOnMount: shouldBounceOnMount,
          onSwipeEnd: _this._setListViewScrollable,
          onSwipeStart: _this._setListViewNotScrollable
        }, _this.props.renderItem(info));
      };

      _this._setListViewScrollable = function () {
        _this._setListViewScrollableTo(true);
      };

      _this._setListViewNotScrollable = function () {
        _this._setListViewScrollableTo(false);
      };

      _this.state = {
        openRowKey: null
      };
      _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
      return _this;
    }

    _createClass(SwipeableFlatList, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return React.createElement(FlatList, _extends({}, this.props, {
          ref: function ref(_ref) {
            _this2._flatListRef = _ref;
          },
          onScroll: this._onScroll,
          renderItem: this._renderItem,
          extraData: this.state
        }));
      }
    }, {
      key: "_getMaxSwipeDistance",
      value: function _getMaxSwipeDistance(info) {
        if (typeof this.props.maxSwipeDistance === 'function') {
          return this.props.maxSwipeDistance(info);
        }

        return this.props.maxSwipeDistance;
      }
    }, {
      key: "_setListViewScrollableTo",
      value: function _setListViewScrollableTo(value) {
        if (this._flatListRef) {
          this._flatListRef.setNativeProps({
            scrollEnabled: value
          });
        }
      }
    }, {
      key: "_onOpen",
      value: function _onOpen(key) {
        this.setState({
          openRowKey: key
        });
      }
    }, {
      key: "_onClose",
      value: function _onClose(key) {
        this.setState({
          openRowKey: null
        });
      }
    }]);

    return SwipeableFlatList;
  }(React.Component);

  SwipeableFlatList.defaultProps = _objectSpread({}, FlatList.defaultProps, {
    bounceFirstRowOnMount: true,
    renderQuickActions: function renderQuickActions() {
      return null;
    }
  });
  module.exports = SwipeableFlatList;
},302,[46,11,22,23,30,33,36,48,303,232]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var Animated = _$$_REQUIRE(_dependencyMap[5]);

  var I18nManager = _$$_REQUIRE(_dependencyMap[6]);

  var PanResponder = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[9]);

  var View = _$$_REQUIRE(_dependencyMap[10]);

  var IS_RTL = I18nManager.isRTL;
  var CLOSED_LEFT_POSITION = 0;
  var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;
  var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;
  var SLOW_SPEED_SWIPE_FACTOR = 4;
  var SWIPE_DURATION = 300;
  var ON_MOUNT_BOUNCE_DELAY = 700;
  var ON_MOUNT_BOUNCE_DURATION = 400;
  var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
  var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;
  var RIGHT_SWIPE_THRESHOLD = 120;
  var DEFAULT_SWIPE_THRESHOLD = 30;

  var emptyFunction = function emptyFunction() {};

  var SwipeableRow = function (_React$Component) {
    _inherits(SwipeableRow, _React$Component);

    function SwipeableRow() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, SwipeableRow);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SwipeableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._handleMoveShouldSetPanResponderCapture = function (event, gestureState) {
        return gestureState.dy < 10 && _this._isValidSwipe(gestureState);
      };

      _this._handlePanResponderGrant = function (event, gestureState) {};

      _this._handlePanResponderMove = function (event, gestureState) {
        if (_this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
          return;
        }

        _this.props.onSwipeStart && _this.props.onSwipeStart();

        if (_this._isSwipingRightFromClosed(gestureState)) {
          _this._swipeSlowSpeed(gestureState);
        } else {
          _this._swipeFullSpeed(gestureState);
        }
      };

      _this._onPanResponderTerminationRequest = function (event, gestureState) {
        return false;
      };

      _this._handlePanResponderEnd = function (event, gestureState) {
        var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;

        if (_this._isSwipingRightFromClosed(gestureState)) {
          _this.props.onOpen && _this.props.onOpen();

          _this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
        } else if (_this._shouldAnimateRemainder(gestureState)) {
          if (horizontalDistance < 0) {
            _this.props.onOpen && _this.props.onOpen();

            _this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
          } else {
            _this.props.onClose && _this.props.onClose();

            _this._animateToClosedPosition();
          }
        } else {
          if (_this._previousLeft === CLOSED_LEFT_POSITION) {
            _this._animateToClosedPosition();
          } else {
            _this._animateToOpenPosition();
          }
        }

        _this.props.onSwipeEnd && _this.props.onSwipeEnd();
      };

      _this._panResponder = PanResponder.create({
        onMoveShouldSetPanResponderCapture: _this._handleMoveShouldSetPanResponderCapture,
        onPanResponderGrant: _this._handlePanResponderGrant,
        onPanResponderMove: _this._handlePanResponderMove,
        onPanResponderRelease: _this._handlePanResponderEnd,
        onPanResponderTerminationRequest: _this._onPanResponderTerminationRequest,
        onPanResponderTerminate: _this._handlePanResponderEnd,
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
          return false;
        }
      });
      _this._previousLeft = CLOSED_LEFT_POSITION;
      _this._timeoutID = null;
      _this.state = {
        currentLeft: new Animated.Value(_this._previousLeft),
        isSwipeableViewRendered: false,
        rowHeight: null
      };

      _this._onSwipeableViewLayout = function (event) {
        _this.setState({
          isSwipeableViewRendered: true,
          rowHeight: event.nativeEvent.layout.height
        });
      };

      _this._animateToClosedPositionDuringBounce = function () {
        _this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
      };

      return _this;
    }

    _createClass(SwipeableRow, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        if (this.props.shouldBounceOnMount) {
          this._timeoutID = setTimeout(function () {
            _this2._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
          }, ON_MOUNT_BOUNCE_DELAY);
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var _this$props$isOpen, _nextProps$isOpen;

        var isOpen = (_this$props$isOpen = this.props.isOpen) != null ? _this$props$isOpen : false;
        var nextIsOpen = (_nextProps$isOpen = nextProps.isOpen) != null ? _nextProps$isOpen : false;

        if (isOpen && !nextIsOpen) {
          this._animateToClosedPosition();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._timeoutID != null) {
          clearTimeout(this._timeoutID);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var slideOutView;

        if (this.state.isSwipeableViewRendered && this.state.rowHeight) {
          slideOutView = React.createElement(View, {
            style: [styles.slideOutContainer, {
              height: this.state.rowHeight
            }]
          }, this.props.slideoutView);
        }

        var swipeableView = React.createElement(Animated.View, {
          onLayout: this._onSwipeableViewLayout,
          style: {
            transform: [{
              translateX: this.state.currentLeft
            }]
          }
        }, this.props.children);
        return React.createElement(View, this._panResponder.panHandlers, slideOutView, swipeableView);
      }
    }, {
      key: "close",
      value: function close() {
        this.props.onClose && this.props.onClose();

        this._animateToClosedPosition();
      }
    }, {
      key: "_isSwipingRightFromClosed",
      value: function _isSwipingRightFromClosed(gestureState) {
        var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
        return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
      }
    }, {
      key: "_swipeFullSpeed",
      value: function _swipeFullSpeed(gestureState) {
        this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
      }
    }, {
      key: "_swipeSlowSpeed",
      value: function _swipeSlowSpeed(gestureState) {
        this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
      }
    }, {
      key: "_isSwipingExcessivelyRightFromClosedPosition",
      value: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
        var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
        return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
      }
    }, {
      key: "_animateTo",
      value: function _animateTo(toValue) {
        var _this3 = this;

        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
        var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;
        Animated.timing(this.state.currentLeft, {
          duration: duration,
          toValue: toValue,
          useNativeDriver: true
        }).start(function () {
          _this3._previousLeft = toValue;
          callback();
        });
      }
    }, {
      key: "_animateToOpenPosition",
      value: function _animateToOpenPosition() {
        var _this$props$maxSwipeD;

        var maxSwipeDistance = (_this$props$maxSwipeD = this.props.maxSwipeDistance) != null ? _this$props$maxSwipeD : 0;
        var directionAwareMaxSwipeDistance = IS_RTL ? -maxSwipeDistance : maxSwipeDistance;

        this._animateTo(-directionAwareMaxSwipeDistance);
      }
    }, {
      key: "_animateToOpenPositionWith",
      value: function _animateToOpenPositionWith(speed, distMoved) {
        var _this$props$maxSwipeD2;

        speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
        var maxSwipeDistance = (_this$props$maxSwipeD2 = this.props.maxSwipeDistance) != null ? _this$props$maxSwipeD2 : 0;
        var duration = Math.abs((maxSwipeDistance - Math.abs(distMoved)) / speed);
        var directionAwareMaxSwipeDistance = IS_RTL ? -maxSwipeDistance : maxSwipeDistance;

        this._animateTo(-directionAwareMaxSwipeDistance, duration);
      }
    }, {
      key: "_animateToClosedPosition",
      value: function _animateToClosedPosition() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

        this._animateTo(CLOSED_LEFT_POSITION, duration);
      }
    }, {
      key: "_animateBounceBack",
      value: function _animateBounceBack(duration) {
        var swipeBounceBackDistance = IS_RTL ? -30 : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;

        this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
      }
    }, {
      key: "_isValidSwipe",
      value: function _isValidSwipe(gestureState) {
        var _this$props$preventSw;

        var preventSwipeRight = (_this$props$preventSw = this.props.preventSwipeRight) != null ? _this$props$preventSw : false;

        if (preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {
          return false;
        }

        return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
      }
    }, {
      key: "_shouldAnimateRemainder",
      value: function _shouldAnimateRemainder(gestureState) {
        var _this$props$swipeThre;

        var swipeThreshold = (_this$props$swipeThre = this.props.swipeThreshold) != null ? _this$props$swipeThre : DEFAULT_SWIPE_THRESHOLD;
        return Math.abs(gestureState.dx) > swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
      }
    }]);

    return SwipeableRow;
  }(React.Component);

  var styles = StyleSheet.create({
    slideOutContainer: {
      bottom: 0,
      left: 0,
      position: 'absolute',
      right: 0,
      top: 0
    }
  });
  module.exports = SwipeableRow;
},303,[22,23,30,33,36,201,287,304,48,52,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var InteractionManager = _$$_REQUIRE(_dependencyMap[0]);

  var TouchHistoryMath = _$$_REQUIRE(_dependencyMap[1]);

  var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
  var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
  var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
  var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
  var currentCentroidX = TouchHistoryMath.currentCentroidX;
  var currentCentroidY = TouchHistoryMath.currentCentroidY;
  var PanResponder = {
    _initializeGestureState: function _initializeGestureState(gestureState) {
      gestureState.moveX = 0;
      gestureState.moveY = 0;
      gestureState.x0 = 0;
      gestureState.y0 = 0;
      gestureState.dx = 0;
      gestureState.dy = 0;
      gestureState.vx = 0;
      gestureState.vy = 0;
      gestureState.numberActiveTouches = 0;
      gestureState._accountsForMovesUpTo = 0;
    },
    _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
      gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
      gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
      gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
      var movedAfter = gestureState._accountsForMovesUpTo;
      var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
      var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
      var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
      var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
      var nextDX = gestureState.dx + (x - prevX);
      var nextDY = gestureState.dy + (y - prevY);
      var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
      gestureState.vx = (nextDX - gestureState.dx) / dt;
      gestureState.vy = (nextDY - gestureState.dy) / dt;
      gestureState.dx = nextDX;
      gestureState.dy = nextDY;
      gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
    },
    create: function create(config) {
      var interactionState = {
        handle: null
      };
      var gestureState = {
        stateID: Math.random(),
        moveX: 0,
        moveY: 0,
        x0: 0,
        y0: 0,
        dx: 0,
        dy: 0,
        vx: 0,
        vy: 0,
        numberActiveTouches: 0,
        _accountsForMovesUpTo: 0
      };
      var panHandlers = {
        onStartShouldSetResponder: function onStartShouldSetResponder(event) {
          return config.onStartShouldSetPanResponder == null ? false : config.onStartShouldSetPanResponder(event, gestureState);
        },
        onMoveShouldSetResponder: function onMoveShouldSetResponder(event) {
          return config.onMoveShouldSetPanResponder == null ? false : config.onMoveShouldSetPanResponder(event, gestureState);
        },
        onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(event) {
          if (event.nativeEvent.touches.length === 1) {
            PanResponder._initializeGestureState(gestureState);
          }

          gestureState.numberActiveTouches = event.touchHistory.numberActiveTouches;
          return config.onStartShouldSetPanResponderCapture != null ? config.onStartShouldSetPanResponderCapture(event, gestureState) : false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(event) {
          var touchHistory = event.touchHistory;

          if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
            return false;
          }

          PanResponder._updateGestureStateOnMove(gestureState, touchHistory);

          return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(event, gestureState) : false;
        },
        onResponderGrant: function onResponderGrant(event) {
          if (!interactionState.handle) {
            interactionState.handle = InteractionManager.createInteractionHandle();
          }

          gestureState.x0 = currentCentroidX(event.touchHistory);
          gestureState.y0 = currentCentroidY(event.touchHistory);
          gestureState.dx = 0;
          gestureState.dy = 0;

          if (config.onPanResponderGrant) {
            config.onPanResponderGrant(event, gestureState);
          }

          return config.onShouldBlockNativeResponder == null ? true : config.onShouldBlockNativeResponder(event, gestureState);
        },
        onResponderReject: function onResponderReject(event) {
          clearInteractionHandle(interactionState, config.onPanResponderReject, event, gestureState);
        },
        onResponderRelease: function onResponderRelease(event) {
          clearInteractionHandle(interactionState, config.onPanResponderRelease, event, gestureState);

          PanResponder._initializeGestureState(gestureState);
        },
        onResponderStart: function onResponderStart(event) {
          var touchHistory = event.touchHistory;
          gestureState.numberActiveTouches = touchHistory.numberActiveTouches;

          if (config.onPanResponderStart) {
            config.onPanResponderStart(event, gestureState);
          }
        },
        onResponderMove: function onResponderMove(event) {
          var touchHistory = event.touchHistory;

          if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
            return;
          }

          PanResponder._updateGestureStateOnMove(gestureState, touchHistory);

          if (config.onPanResponderMove) {
            config.onPanResponderMove(event, gestureState);
          }
        },
        onResponderEnd: function onResponderEnd(event) {
          var touchHistory = event.touchHistory;
          gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
          clearInteractionHandle(interactionState, config.onPanResponderEnd, event, gestureState);
        },
        onResponderTerminate: function onResponderTerminate(event) {
          clearInteractionHandle(interactionState, config.onPanResponderTerminate, event, gestureState);

          PanResponder._initializeGestureState(gestureState);
        },
        onResponderTerminationRequest: function onResponderTerminationRequest(event) {
          return config.onPanResponderTerminationRequest == null ? true : config.onPanResponderTerminationRequest(event, gestureState);
        }
      };
      return {
        panHandlers: panHandlers,
        getInteractionHandle: function getInteractionHandle() {
          return interactionState.handle;
        }
      };
    }
  };

  function clearInteractionHandle(interactionState, callback, event, gestureState) {
    if (interactionState.handle) {
      InteractionManager.clearInteractionHandle(interactionState.handle);
      interactionState.handle = null;
    }

    if (callback) {
      callback(event, gestureState);
    }
  }

  module.exports = PanResponder;
},304,[209,305]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var ListView = _$$_REQUIRE(_dependencyMap[6]);

  var React = _$$_REQUIRE(_dependencyMap[7]);

  var SwipeableListViewDataSource = _$$_REQUIRE(_dependencyMap[8]);

  var SwipeableRow = _$$_REQUIRE(_dependencyMap[9]);

  var SwipeableListView = function (_React$Component) {
    _inherits(SwipeableListView, _React$Component);

    _createClass(SwipeableListView, null, [{
      key: "getNewDataSource",
      value: function getNewDataSource() {
        return new SwipeableListViewDataSource({
          getRowData: function getRowData(data, sectionID, rowID) {
            return data[sectionID][rowID];
          },
          getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
            return data[sectionID];
          },
          rowHasChanged: function rowHasChanged(row1, row2) {
            return row1 !== row2;
          },
          sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
            return s1 !== s2;
          }
        });
      }
    }]);

    function SwipeableListView(props, context) {
      var _this;

      _classCallCheck(this, SwipeableListView);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(SwipeableListView).call(this, props, context));
      _this._listViewRef = null;
      _this._shouldBounceFirstRowOnMount = false;

      _this._onScroll = function (e) {
        if (_this.props.dataSource.getOpenRowID()) {
          _this.setState({
            dataSource: _this.state.dataSource.setOpenRowID(null)
          });
        }

        _this.props.onScroll && _this.props.onScroll(e);
      };

      _this._renderRow = function (rowData, sectionID, rowID) {
        var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

        if (!slideoutView) {
          return _this.props.renderRow(rowData, sectionID, rowID);
        }

        var shouldBounceOnMount = false;

        if (_this._shouldBounceFirstRowOnMount) {
          _this._shouldBounceFirstRowOnMount = false;
          shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
        }

        return React.createElement(SwipeableRow, {
          slideoutView: slideoutView,
          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
          key: rowID,
          onOpen: function onOpen() {
            return _this._onOpen(rowData.id);
          },
          onClose: function onClose() {
            return _this._onClose(rowData.id);
          },
          onSwipeEnd: function onSwipeEnd() {
            return _this._setListViewScrollable(true);
          },
          onSwipeStart: function onSwipeStart() {
            return _this._setListViewScrollable(false);
          },
          shouldBounceOnMount: shouldBounceOnMount
        }, _this.props.renderRow(rowData, sectionID, rowID));
      };

      _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
      _this.state = {
        dataSource: _this.props.dataSource
      };
      return _this;
    }

    _createClass(SwipeableListView, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
          this.setState({
            dataSource: nextProps.dataSource
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return React.createElement(ListView, _extends({}, this.props, {
          ref: function ref(_ref) {
            _this2._listViewRef = _ref;
          },
          dataSource: this.state.dataSource.getDataSource(),
          onScroll: this._onScroll,
          renderRow: this._renderRow
        }));
      }
    }, {
      key: "_setListViewScrollable",
      value: function _setListViewScrollable(value) {
        if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
          this._listViewRef.setNativeProps({
            scrollEnabled: value
          });
        }
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
          return this._listViewRef.getScrollResponder();
        }
      }
    }, {
      key: "_getMaxSwipeDistance",
      value: function _getMaxSwipeDistance(rowData, sectionID, rowID) {
        if (typeof this.props.maxSwipeDistance === 'function') {
          return this.props.maxSwipeDistance(rowData, sectionID, rowID);
        }

        return this.props.maxSwipeDistance;
      }
    }, {
      key: "_onOpen",
      value: function _onOpen(rowID) {
        this.setState({
          dataSource: this.state.dataSource.setOpenRowID(rowID)
        });
      }
    }, {
      key: "_onClose",
      value: function _onClose(rowID) {
        this.setState({
          dataSource: this.state.dataSource.setOpenRowID(null)
        });
      }
    }]);

    return SwipeableListView;
  }(React.Component);

  SwipeableListView.defaultProps = {
    bounceFirstRowOnMount: false,
    renderQuickActions: function renderQuickActions() {
      return null;
    }
  };
  module.exports = SwipeableListView;
},306,[11,22,30,33,23,36,277,48,307,303]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var ListViewDataSource = _$$_REQUIRE(_dependencyMap[2]);

  var SwipeableListViewDataSource = function () {
    function SwipeableListViewDataSource(params) {
      var _this = this;

      _classCallCheck(this, SwipeableListViewDataSource);

      this._dataSource = new ListViewDataSource({
        getRowData: params.getRowData,
        getSectionHeaderData: params.getSectionHeaderData,
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
        },
        sectionHeaderHasChanged: params.sectionHeaderHasChanged
      });
    }

    _createClass(SwipeableListViewDataSource, [{
      key: "cloneWithRowsAndSections",
      value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
        this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);
        this._dataBlob = dataBlob;
        this.rowIdentities = this._dataSource.rowIdentities;
        this.sectionIdentities = this._dataSource.sectionIdentities;
        return this;
      }
    }, {
      key: "getDataSource",
      value: function getDataSource() {
        return this._dataSource;
      }
    }, {
      key: "getOpenRowID",
      value: function getOpenRowID() {
        return this._openRowID;
      }
    }, {
      key: "getFirstRowID",
      value: function getFirstRowID() {
        if (this.rowIdentities) {
          return this.rowIdentities[0] && this.rowIdentities[0][0];
        }

        return Object.keys(this._dataBlob)[0];
      }
    }, {
      key: "getLastRowID",
      value: function getLastRowID() {
        if (this.rowIdentities && this.rowIdentities.length) {
          var lastSection = this.rowIdentities[this.rowIdentities.length - 1];

          if (lastSection && lastSection.length) {
            return lastSection[lastSection.length - 1];
          }
        }

        return Object.keys(this._dataBlob)[this._dataBlob.length - 1];
      }
    }, {
      key: "setOpenRowID",
      value: function setOpenRowID(rowID) {
        this._previousOpenRowID = this._openRowID;
        this._openRowID = rowID;
        this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);
        return this;
      }
    }]);

    return SwipeableListViewDataSource;
  }();

  module.exports = SwipeableListViewDataSource;
},307,[22,23,279]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var _extends = _$$_REQUIRE(_dependencyMap[5]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[6]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[8]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[9]);

  var NativeMethodsMixin = _$$_REQUIRE(_dependencyMap[10]);

  var Platform = _$$_REQUIRE(_dependencyMap[11]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[12]);

  var React = _$$_REQUIRE(_dependencyMap[13]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[14]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[15]);

  var Text = _$$_REQUIRE(_dependencyMap[16]);

  var TextAncestor = _$$_REQUIRE(_dependencyMap[17]);

  var TextInputState = _$$_REQUIRE(_dependencyMap[18]);

  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[19]);

  var UIManager = _$$_REQUIRE(_dependencyMap[20]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[21]);

  var invariant = _$$_REQUIRE(_dependencyMap[22]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[23]);

  var warning = _$$_REQUIRE(_dependencyMap[24]);

  var AndroidTextInput;
  var RCTMultilineTextInputView;
  var RCTSinglelineTextInputView;
  {
    AndroidTextInput = requireNativeComponent('AndroidTextInput');
  }
  var onlyMultiline = {
    onTextInput: true,
    children: true
  };
  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

  var emptyFunctionThatReturnsTrue = function emptyFunctionThatReturnsTrue() {
    return true;
  };

  var TextInput = createReactClass({
    displayName: 'TextInput',
    statics: {
      State: {
        currentlyFocusedField: TextInputState.currentlyFocusedField,
        focusTextInput: TextInputState.focusTextInput,
        blurTextInput: TextInputState.blurTextInput
      }
    },
    propTypes: _objectSpread({}, DeprecatedViewPropTypes, {
      autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
      autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
      autoCorrect: PropTypes.bool,
      spellCheck: PropTypes.bool,
      autoFocus: PropTypes.bool,
      allowFontScaling: PropTypes.bool,
      maxFontSizeMultiplier: PropTypes.number,
      editable: PropTypes.bool,
      keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
      keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
      returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
      returnKeyLabel: PropTypes.string,
      maxLength: PropTypes.number,
      numberOfLines: PropTypes.number,
      disableFullscreenUI: PropTypes.bool,
      enablesReturnKeyAutomatically: PropTypes.bool,
      multiline: PropTypes.bool,
      textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
      onBlur: PropTypes.func,
      onFocus: PropTypes.func,
      onChange: PropTypes.func,
      onChangeText: PropTypes.func,
      onContentSizeChange: PropTypes.func,
      onTextInput: PropTypes.func,
      onEndEditing: PropTypes.func,
      onSelectionChange: PropTypes.func,
      onSubmitEditing: PropTypes.func,
      onKeyPress: PropTypes.func,
      onLayout: PropTypes.func,
      onScroll: PropTypes.func,
      placeholder: PropTypes.string,
      placeholderTextColor: DeprecatedColorPropType,
      scrollEnabled: PropTypes.bool,
      secureTextEntry: PropTypes.bool,
      selectionColor: DeprecatedColorPropType,
      selectionState: PropTypes.instanceOf(DocumentSelectionState),
      selection: PropTypes.shape({
        start: PropTypes.number.isRequired,
        end: PropTypes.number
      }),
      value: PropTypes.string,
      defaultValue: PropTypes.string,
      clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
      clearTextOnFocus: PropTypes.bool,
      selectTextOnFocus: PropTypes.bool,
      blurOnSubmit: PropTypes.bool,
      style: Text.propTypes.style,
      underlineColorAndroid: DeprecatedColorPropType,
      inlineImageLeft: PropTypes.string,
      inlineImagePadding: PropTypes.number,
      rejectResponderTermination: PropTypes.bool,
      dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
      caretHidden: PropTypes.bool,
      contextMenuHidden: PropTypes.bool,
      inputAccessoryViewID: PropTypes.string,
      textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode'])
    }),
    getDefaultProps: function getDefaultProps() {
      return {
        allowFontScaling: true,
        rejectResponderTermination: true,
        underlineColorAndroid: 'transparent'
      };
    },
    mixins: [NativeMethodsMixin],
    isFocused: function isFocused() {
      return TextInputState.currentlyFocusedField() === ReactNative.findNodeHandle(this._inputRef);
    },
    _inputRef: undefined,
    _focusSubscription: undefined,
    _lastNativeText: undefined,
    _lastNativeSelection: undefined,
    _rafId: null,
    componentDidMount: function componentDidMount() {
      this._lastNativeText = this.props.value;
      var tag = ReactNative.findNodeHandle(this._inputRef);

      if (tag != null) {
        TextInputState.registerInput(tag);
      }

      if (this.props.autoFocus) {
        this._rafId = requestAnimationFrame(this.focus);
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      this._focusSubscription && this._focusSubscription.remove();

      if (this.isFocused()) {
        this.blur();
      }

      var tag = ReactNative.findNodeHandle(this._inputRef);

      if (tag != null) {
        TextInputState.unregisterInput(tag);
      }

      if (this._rafId != null) {
        cancelAnimationFrame(this._rafId);
      }
    },
    clear: function clear() {
      this.setNativeProps({
        text: ''
      });
    },
    render: function render() {
      var textInput;
      {
        textInput = this._renderAndroid();
      }
      return React.createElement(TextAncestor.Provider, {
        value: true
      }, textInput);
    },
    _getText: function _getText() {
      return typeof this.props.value === 'string' ? this.props.value : typeof this.props.defaultValue === 'string' ? this.props.defaultValue : '';
    },
    _setNativeRef: function _setNativeRef(ref) {
      this._inputRef = ref;
    },
    _renderIOSLegacy: function _renderIOSLegacy() {
      var textContainer;

      var props = _extends({}, this.props);

      props.style = [this.props.style];

      if (props.selection && props.selection.end == null) {
        props.selection = {
          start: props.selection.start,
          end: props.selection.start
        };
      }

      if (!props.multiline) {
        textContainer = React.createElement(RCTSinglelineTextInputView, _extends({
          ref: this._setNativeRef
        }, props, {
          onFocus: this._onFocus,
          onBlur: this._onBlur,
          onChange: this._onChange,
          onSelectionChange: this._onSelectionChange,
          onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,
          text: this._getText()
        }));
      } else {
        var children = props.children;
        var childCount = 0;
        React.Children.forEach(children, function () {
          return ++childCount;
        });
        invariant(!(props.value && childCount), 'Cannot specify both value and children.');

        if (childCount >= 1) {
          children = React.createElement(Text, {
            style: props.style,
            allowFontScaling: props.allowFontScaling,
            maxFontSizeMultiplier: props.maxFontSizeMultiplier
          }, children);
        }

        if (props.inputView) {
          children = [children, props.inputView];
        }

        props.style.unshift(styles.multilineInput);
        textContainer = React.createElement(RCTMultilineTextInputView, _extends({
          ref: this._setNativeRef
        }, props, {
          children: children,
          onFocus: this._onFocus,
          onBlur: this._onBlur,
          onChange: this._onChange,
          onContentSizeChange: this.props.onContentSizeChange,
          onSelectionChange: this._onSelectionChange,
          onTextInput: this._onTextInput,
          onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,
          text: this._getText(),
          dataDetectorTypes: this.props.dataDetectorTypes,
          onScroll: this._onScroll
        }));
      }

      return React.createElement(TouchableWithoutFeedback, {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: true,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityRole: props.accessibilityRole,
        accessibilityStates: props.accessibilityStates,
        nativeID: this.props.nativeID,
        testID: props.testID
      }, textContainer);
    },
    _renderIOS: function _renderIOS() {
      var props = _extends({}, this.props);

      props.style = [this.props.style];

      if (props.selection && props.selection.end == null) {
        props.selection = {
          start: props.selection.start,
          end: props.selection.start
        };
      }

      var RCTTextInputView = props.multiline ? RCTMultilineTextInputView : RCTSinglelineTextInputView;

      if (props.multiline) {
        props.style.unshift(styles.multilineInput);
      }

      var textContainer = React.createElement(RCTTextInputView, _extends({
        ref: this._setNativeRef
      }, props, {
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onContentSizeChange: this.props.onContentSizeChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,
        text: this._getText(),
        dataDetectorTypes: this.props.dataDetectorTypes,
        onScroll: this._onScroll
      }));
      return React.createElement(TouchableWithoutFeedback, {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: props.rejectResponderTermination,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityRole: props.accessibilityRole,
        accessibilityStates: props.accessibilityStates,
        nativeID: this.props.nativeID,
        testID: props.testID
      }, textContainer);
    },
    _renderAndroid: function _renderAndroid() {
      var props = _extends({}, this.props);

      props.style = [this.props.style];
      props.autoCapitalize = UIManager.getViewManagerConfig('AndroidTextInput').Constants.AutoCapitalizationType[props.autoCapitalize || 'sentences'];
      var children = this.props.children;
      var childCount = 0;
      React.Children.forEach(children, function () {
        return ++childCount;
      });
      invariant(!(this.props.value && childCount), 'Cannot specify both value and children.');

      if (childCount > 1) {
        children = React.createElement(Text, null, children);
      }

      if (props.selection && props.selection.end == null) {
        props.selection = {
          start: props.selection.start,
          end: props.selection.start
        };
      }

      var textContainer = React.createElement(AndroidTextInput, _extends({
        ref: this._setNativeRef
      }, props, {
        mostRecentEventCount: 0,
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        text: this._getText(),
        children: children,
        disableFullscreenUI: this.props.disableFullscreenUI,
        textBreakStrategy: this.props.textBreakStrategy,
        onScroll: this._onScroll
      }));
      return React.createElement(TouchableWithoutFeedback, {
        onLayout: props.onLayout,
        onPress: this._onPress,
        accessible: this.props.accessible,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityRole: this.props.accessibilityRole,
        accessibilityStates: this.props.accessibilityStates,
        nativeID: this.props.nativeID,
        testID: this.props.testID
      }, textContainer);
    },
    _onFocus: function _onFocus(event) {
      if (this.props.onFocus) {
        this.props.onFocus(event);
      }

      if (this.props.selectionState) {
        this.props.selectionState.focus();
      }
    },
    _onPress: function _onPress(event) {
      if (this.props.editable || this.props.editable === undefined) {
        this.focus();
      }
    },
    _onChange: function _onChange(event) {
      if (this._inputRef && this._inputRef.setNativeProps) {
        this._inputRef.setNativeProps({
          mostRecentEventCount: event.nativeEvent.eventCount
        });
      }

      var text = event.nativeEvent.text;
      this.props.onChange && this.props.onChange(event);
      this.props.onChangeText && this.props.onChangeText(text);

      if (!this._inputRef) {
        return;
      }

      this._lastNativeText = text;
      this.forceUpdate();
    },
    _onSelectionChange: function _onSelectionChange(event) {
      this.props.onSelectionChange && this.props.onSelectionChange(event);

      if (!this._inputRef) {
        return;
      }

      this._lastNativeSelection = event.nativeEvent.selection;

      if (this.props.selection || this.props.selectionState) {
        this.forceUpdate();
      }
    },
    componentDidUpdate: function componentDidUpdate() {
      var nativeProps = {};

      if (this._lastNativeText !== this.props.value && typeof this.props.value === 'string') {
        nativeProps.text = this.props.value;
      }

      var selection = this.props.selection;

      if (this._lastNativeSelection && selection && (this._lastNativeSelection.start !== selection.start || this._lastNativeSelection.end !== selection.end)) {
        nativeProps.selection = this.props.selection;
      }

      if (Object.keys(nativeProps).length > 0 && this._inputRef && this._inputRef.setNativeProps) {
        this._inputRef.setNativeProps(nativeProps);
      }

      if (this.props.selectionState && selection) {
        this.props.selectionState.update(selection.start, selection.end);
      }
    },
    _onBlur: function _onBlur(event) {
      this.blur();

      if (this.props.onBlur) {
        this.props.onBlur(event);
      }

      if (this.props.selectionState) {
        this.props.selectionState.blur();
      }
    },
    _onTextInput: function _onTextInput(event) {
      this.props.onTextInput && this.props.onTextInput(event);
    },
    _onScroll: function _onScroll(event) {
      this.props.onScroll && this.props.onScroll(event);
    }
  });

  var InternalTextInputType = function (_ReactNative$NativeCo) {
    _inherits(InternalTextInputType, _ReactNative$NativeCo);

    function InternalTextInputType() {
      _classCallCheck(this, InternalTextInputType);

      return _possibleConstructorReturn(this, _getPrototypeOf(InternalTextInputType).apply(this, arguments));
    }

    _createClass(InternalTextInputType, [{
      key: "clear",
      value: function clear() {}
    }, {
      key: "isFocused",
      value: function isFocused() {}
    }]);

    return InternalTextInputType;
  }(ReactNative.NativeComponent);

  var TypedTextInput = TextInput;
  var styles = StyleSheet.create({
    multilineInput: {
      paddingTop: 5
    }
  });
  module.exports = TypedTextInput;
},308,[22,23,30,33,36,11,46,58,252,309,262,43,61,48,78,52,179,76,152,193,42,194,3,155,5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var mixInEventEmitter = _$$_REQUIRE(_dependencyMap[2]);

  var DocumentSelectionState = function () {
    function DocumentSelectionState(anchor, focus) {
      _classCallCheck(this, DocumentSelectionState);

      this._anchorOffset = anchor;
      this._focusOffset = focus;
      this._hasFocus = false;
    }

    _createClass(DocumentSelectionState, [{
      key: "update",
      value: function update(anchor, focus) {
        if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
          this._anchorOffset = anchor;
          this._focusOffset = focus;
          this.emit('update');
        }
      }
    }, {
      key: "constrainLength",
      value: function constrainLength(maxLength) {
        this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));
      }
    }, {
      key: "focus",
      value: function focus() {
        if (!this._hasFocus) {
          this._hasFocus = true;
          this.emit('focus');
        }
      }
    }, {
      key: "blur",
      value: function blur() {
        if (this._hasFocus) {
          this._hasFocus = false;
          this.emit('blur');
        }
      }
    }, {
      key: "hasFocus",
      value: function hasFocus() {
        return this._hasFocus;
      }
    }, {
      key: "isCollapsed",
      value: function isCollapsed() {
        return this._anchorOffset === this._focusOffset;
      }
    }, {
      key: "isBackward",
      value: function isBackward() {
        return this._anchorOffset > this._focusOffset;
      }
    }, {
      key: "getAnchorOffset",
      value: function getAnchorOffset() {
        return this._hasFocus ? this._anchorOffset : null;
      }
    }, {
      key: "getFocusOffset",
      value: function getFocusOffset() {
        return this._hasFocus ? this._focusOffset : null;
      }
    }, {
      key: "getStartOffset",
      value: function getStartOffset() {
        return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;
      }
    }, {
      key: "getEndOffset",
      value: function getEndOffset() {
        return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;
      }
    }, {
      key: "overlaps",
      value: function overlaps(start, end) {
        return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();
      }
    }]);

    return DocumentSelectionState;
  }();

  mixInEventEmitter(DocumentSelectionState, {
    blur: true,
    focus: true,
    update: true
  });
  module.exports = DocumentSelectionState;
},309,[22,23,310]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var EventEmitter = _$$_REQUIRE(_dependencyMap[1]);

  var EventEmitterWithHolding = _$$_REQUIRE(_dependencyMap[2]);

  var EventHolder = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var keyOf = _$$_REQUIRE(_dependencyMap[5]);

  var TYPES_KEY = keyOf({
    __types: true
  });

  function mixInEventEmitter(cls, types) {
    invariant(types, 'Must supply set of valid event types');
    var target = cls.prototype || cls;
    invariant(!target.__eventEmitter, 'An active emitter is already mixed in');
    var ctor = cls.constructor;

    if (ctor) {
      invariant(ctor === Object || ctor === Function, 'Mix EventEmitter into a class, not an instance');
    }

    if (target.hasOwnProperty(TYPES_KEY)) {
      _extends(target.__types, types);
    } else if (target.__types) {
      target.__types = _extends({}, target.__types, types);
    } else {
      target.__types = types;
    }

    _extends(target, EventEmitterMixin);
  }

  var EventEmitterMixin = {
    emit: function emit(eventType, a, b, c, d, e, _) {
      return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);
    },
    emitAndHold: function emitAndHold(eventType, a, b, c, d, e, _) {
      return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);
    },
    addListener: function addListener(eventType, listener, context) {
      return this.__getEventEmitter().addListener(eventType, listener, context);
    },
    once: function once(eventType, listener, context) {
      return this.__getEventEmitter().once(eventType, listener, context);
    },
    addRetroactiveListener: function addRetroactiveListener(eventType, listener, context) {
      return this.__getEventEmitter().addRetroactiveListener(eventType, listener, context);
    },
    addListenerMap: function addListenerMap(listenerMap, context) {
      return this.__getEventEmitter().addListenerMap(listenerMap, context);
    },
    addRetroactiveListenerMap: function addRetroactiveListenerMap(listenerMap, context) {
      return this.__getEventEmitter().addListenerMap(listenerMap, context);
    },
    removeAllListeners: function removeAllListeners() {
      this.__getEventEmitter().removeAllListeners();
    },
    removeCurrentListener: function removeCurrentListener() {
      this.__getEventEmitter().removeCurrentListener();
    },
    releaseHeldEventType: function releaseHeldEventType(eventType) {
      this.__getEventEmitter().releaseHeldEventType(eventType);
    },
    __getEventEmitter: function __getEventEmitter() {
      if (!this.__eventEmitter) {
        var emitter = new EventEmitter();
        var holder = new EventHolder();
        this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);
      }

      return this.__eventEmitter;
    }
  };
  module.exports = mixInEventEmitter;
},310,[11,38,311,312,3,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var EventEmitterWithHolding = function () {
    function EventEmitterWithHolding(emitter, holder) {
      _classCallCheck(this, EventEmitterWithHolding);

      this._emitter = emitter;
      this._eventHolder = holder;
      this._currentEventToken = null;
      this._emittingHeldEvents = false;
    }

    _createClass(EventEmitterWithHolding, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        return this._emitter.addListener(eventType, listener, context);
      }
    }, {
      key: "once",
      value: function once(eventType, listener, context) {
        return this._emitter.once(eventType, listener, context);
      }
    }, {
      key: "addRetroactiveListener",
      value: function addRetroactiveListener(eventType, listener, context) {
        var subscription = this._emitter.addListener(eventType, listener, context);

        this._emittingHeldEvents = true;

        this._eventHolder.emitToListener(eventType, listener, context);

        this._emittingHeldEvents = false;
        return subscription;
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        this._emitter.removeAllListeners(eventType);
      }
    }, {
      key: "removeCurrentListener",
      value: function removeCurrentListener() {
        this._emitter.removeCurrentListener();
      }
    }, {
      key: "listeners",
      value: function listeners(eventType) {
        return this._emitter.listeners(eventType);
      }
    }, {
      key: "emit",
      value: function emit(eventType) {
        var _this$_emitter;

        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (_this$_emitter = this._emitter).emit.apply(_this$_emitter, [eventType].concat(args));
      }
    }, {
      key: "emitAndHold",
      value: function emitAndHold(eventType) {
        var _this$_eventHolder, _this$_emitter2;

        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        this._currentEventToken = (_this$_eventHolder = this._eventHolder).holdEvent.apply(_this$_eventHolder, [eventType].concat(args));

        (_this$_emitter2 = this._emitter).emit.apply(_this$_emitter2, [eventType].concat(args));

        this._currentEventToken = null;
      }
    }, {
      key: "releaseCurrentEvent",
      value: function releaseCurrentEvent() {
        if (this._currentEventToken) {
          this._eventHolder.releaseEvent(this._currentEventToken);
        } else if (this._emittingHeldEvents) {
          this._eventHolder.releaseCurrentEvent();
        }
      }
    }, {
      key: "releaseHeldEventType",
      value: function releaseHeldEventType(eventType) {
        this._eventHolder.releaseEventType(eventType);
      }
    }]);

    return EventEmitterWithHolding;
  }();

  module.exports = EventEmitterWithHolding;
},311,[22,23]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var invariant = _$$_REQUIRE(_dependencyMap[2]);

  var EventHolder = function () {
    function EventHolder() {
      _classCallCheck(this, EventHolder);

      this._heldEvents = {};
      this._currentEventKey = null;
    }

    _createClass(EventHolder, [{
      key: "holdEvent",
      value: function holdEvent(eventType) {
        this._heldEvents[eventType] = this._heldEvents[eventType] || [];
        var eventsOfType = this._heldEvents[eventType];
        var key = {
          eventType: eventType,
          index: eventsOfType.length
        };

        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        eventsOfType.push(args);
        return key;
      }
    }, {
      key: "emitToListener",
      value: function emitToListener(eventType, listener, context) {
        var _this = this;

        var eventsOfType = this._heldEvents[eventType];

        if (!eventsOfType) {
          return;
        }

        var origEventKey = this._currentEventKey;
        eventsOfType.forEach(function (eventHeld, index) {
          if (!eventHeld) {
            return;
          }

          _this._currentEventKey = {
            eventType: eventType,
            index: index
          };
          listener.apply(context, eventHeld);
        });
        this._currentEventKey = origEventKey;
      }
    }, {
      key: "releaseCurrentEvent",
      value: function releaseCurrentEvent() {
        invariant(this._currentEventKey !== null, 'Not in an emitting cycle; there is no current event');
        this._currentEventKey && this.releaseEvent(this._currentEventKey);
      }
    }, {
      key: "releaseEvent",
      value: function releaseEvent(token) {
        delete this._heldEvents[token.eventType][token.index];
      }
    }, {
      key: "releaseEventType",
      value: function releaseEventType(type) {
        this._heldEvents[type] = [];
      }
    }]);

    return EventHolder;
  }();

  module.exports = EventHolder;
},312,[22,23,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},313,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass = _$$_REQUIRE(_dependencyMap[4]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[5]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[6]);

  var _inherits = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var UIManager = _$$_REQUIRE(_dependencyMap[9]);

  var ToolbarAndroidNativeComponent = _$$_REQUIRE(_dependencyMap[10]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[11]);

  var ToolbarAndroid = function (_React$Component) {
    _inherits(ToolbarAndroid, _React$Component);

    function ToolbarAndroid() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, ToolbarAndroid);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolbarAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._onSelect = function (event) {
        var position = event.nativeEvent.position;

        if (position === -1) {
          _this.props.onIconClicked && _this.props.onIconClicked();
        } else {
          _this.props.onActionSelected && _this.props.onActionSelected(position);
        }
      };

      return _this;
    }

    _createClass(ToolbarAndroid, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            onIconClicked = _this$props.onIconClicked,
            onActionSelected = _this$props.onActionSelected,
            forwardedRef = _this$props.forwardedRef,
            otherProps = _objectWithoutProperties(_this$props, ["onIconClicked", "onActionSelected", "forwardedRef"]);

        var nativeProps = _objectSpread({}, otherProps);

        if (this.props.logo) {
          nativeProps.logo = resolveAssetSource(this.props.logo);
        }

        if (this.props.navIcon) {
          nativeProps.navIcon = resolveAssetSource(this.props.navIcon);
        }

        if (this.props.overflowIcon) {
          nativeProps.overflowIcon = resolveAssetSource(this.props.overflowIcon);
        }

        if (this.props.actions) {
          var nativeActions = [];

          for (var i = 0; i < this.props.actions.length; i++) {
            var action = {
              icon: this.props.actions[i].icon,
              show: this.props.actions[i].show
            };

            if (action.icon) {
              action.icon = resolveAssetSource(action.icon);
            }

            if (action.show) {
              action.show = UIManager.getViewManagerConfig('ToolbarAndroid').Constants.ShowAsAction[action.show];
            }

            nativeActions.push(_objectSpread({}, this.props.actions[i], action));
          }

          nativeProps.nativeActions = nativeActions;
        }

        return React.createElement(ToolbarAndroidNativeComponent, _extends({
          onSelect: this._onSelect
        }, nativeProps, {
          ref: forwardedRef
        }));
      }
    }]);

    return ToolbarAndroid;
  }(React.Component);

  var ToolbarAndroidToExport = React.forwardRef(function (props, forwardedRef) {
    return React.createElement(ToolbarAndroid, _extends({}, props, {
      forwardedRef: forwardedRef
    }));
  });
  module.exports = ToolbarAndroidToExport;
},314,[11,46,9,22,23,30,33,36,48,42,315,161]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('ToolbarAndroid');
},315,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var NativeMethodsMixin = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var React = _$$_REQUIRE(_dependencyMap[6]);

  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[7]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[8]);

  var Touchable = _$$_REQUIRE(_dependencyMap[9]);

  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[10]);

  var View = _$$_REQUIRE(_dependencyMap[11]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[12]);

  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[13]);

  var DEFAULT_PROPS = {
    activeOpacity: 0.85,
    delayPressOut: 100,
    underlayColor: 'black'
  };
  var PRESS_RETENTION_OFFSET = {
    top: 20,
    left: 20,
    right: 20,
    bottom: 30
  };
  var TouchableHighlight = createReactClass({
    displayName: 'TouchableHighlight',
    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {
      activeOpacity: PropTypes.number,
      underlayColor: DeprecatedColorPropType,
      style: DeprecatedViewPropTypes.style,
      onShowUnderlay: PropTypes.func,
      onHideUnderlay: PropTypes.func,
      hasTVPreferredFocus: PropTypes.bool,
      tvParallaxProperties: PropTypes.object,
      testOnly_pressed: PropTypes.bool
    }),
    mixins: [NativeMethodsMixin, Touchable.Mixin.withoutDefaultFocusAndBlur],
    getDefaultProps: function getDefaultProps() {
      return DEFAULT_PROPS;
    },
    getInitialState: function getInitialState() {
      this._isMounted = false;

      if (this.props.testOnly_pressed) {
        return _objectSpread({}, this.touchableGetInitialState(), {
          extraChildStyle: {
            opacity: this.props.activeOpacity
          },
          extraUnderlayStyle: {
            backgroundColor: this.props.underlayColor
          }
        });
      } else {
        return _objectSpread({}, this.touchableGetInitialState(), {
          extraChildStyle: null,
          extraUnderlayStyle: null
        });
      }
    },
    componentDidMount: function componentDidMount() {
      this._isMounted = true;
      ensurePositiveDelayProps(this.props);
    },
    componentWillUnmount: function componentWillUnmount() {
      this._isMounted = false;
      clearTimeout(this._hideTimeout);
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      ensurePositiveDelayProps(nextProps);
    },
    viewConfig: {
      uiViewClassName: 'RCTView',
      validAttributes: ReactNativeViewAttributes.RCTView
    },
    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
      clearTimeout(this._hideTimeout);
      this._hideTimeout = null;

      this._showUnderlay();

      this.props.onPressIn && this.props.onPressIn(e);
    },
    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
      if (!this._hideTimeout) {
        this._hideUnderlay();
      }

      this.props.onPressOut && this.props.onPressOut(e);
    },
    touchableHandleFocus: function touchableHandleFocus(e) {
      if (Platform.isTV) {
        this._showUnderlay();
      }

      this.props.onFocus && this.props.onFocus(e);
    },
    touchableHandleBlur: function touchableHandleBlur(e) {
      if (Platform.isTV) {
        this._hideUnderlay();
      }

      this.props.onBlur && this.props.onBlur(e);
    },
    touchableHandlePress: function touchableHandlePress(e) {
      clearTimeout(this._hideTimeout);

      if (!Platform.isTV) {
        this._showUnderlay();

        this._hideTimeout = setTimeout(this._hideUnderlay, this.props.delayPressOut);
      }

      this.props.onPress && this.props.onPress(e);
    },
    touchableHandleLongPress: function touchableHandleLongPress(e) {
      this.props.onLongPress && this.props.onLongPress(e);
    },
    touchableGetPressRectOffset: function touchableGetPressRectOffset() {
      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
    },
    touchableGetHitSlop: function touchableGetHitSlop() {
      return this.props.hitSlop;
    },
    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
      return this.props.delayPressIn;
    },
    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
      return this.props.delayLongPress;
    },
    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
      return this.props.delayPressOut;
    },
    _showUnderlay: function _showUnderlay() {
      if (!this._isMounted || !this._hasPressHandler()) {
        return;
      }

      this.setState({
        extraChildStyle: {
          opacity: this.props.activeOpacity
        },
        extraUnderlayStyle: {
          backgroundColor: this.props.underlayColor
        }
      });
      this.props.onShowUnderlay && this.props.onShowUnderlay();
    },
    _hideUnderlay: function _hideUnderlay() {
      clearTimeout(this._hideTimeout);
      this._hideTimeout = null;

      if (this.props.testOnly_pressed) {
        return;
      }

      if (this._hasPressHandler()) {
        this.setState({
          extraChildStyle: null,
          extraUnderlayStyle: null
        });
        this.props.onHideUnderlay && this.props.onHideUnderlay();
      }
    },
    _hasPressHandler: function _hasPressHandler() {
      return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);
    },
    render: function render() {
      var child = React.Children.only(this.props.children);
      return React.createElement(View, {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityHint: this.props.accessibilityHint,
        accessibilityRole: this.props.accessibilityRole,
        accessibilityStates: this.props.accessibilityStates,
        style: StyleSheet.compose(this.props.style, this.state.extraUnderlayStyle),
        onLayout: this.props.onLayout,
        hitSlop: this.props.hitSlop,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hasTVPreferredFocus: this.props.hasTVPreferredFocus,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,
        nativeID: this.props.nativeID,
        testID: this.props.testID
      }, React.cloneElement(child, {
        style: StyleSheet.compose(child.props.style, this.state.extraChildStyle)
      }), Touchable.renderDebugView({
        color: 'green',
        hitSlop: this.props.hitSlop
      }));
    }
  });
  module.exports = TouchableHighlight;
},316,[46,58,252,262,43,61,48,174,52,184,193,75,194,198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[6]);

  var _inherits = _$$_REQUIRE(_dependencyMap[7]);

  var React = _$$_REQUIRE(_dependencyMap[8]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[9]);

  var UIManager = _$$_REQUIRE(_dependencyMap[10]);

  var dismissKeyboard = _$$_REQUIRE(_dependencyMap[11]);

  var NativeAndroidViewPager = _$$_REQUIRE(_dependencyMap[12]);

  var VIEWPAGER_REF = 'viewPager';

  var ViewPagerAndroid = function (_React$Component) {
    _inherits(ViewPagerAndroid, _React$Component);

    function ViewPagerAndroid() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, ViewPagerAndroid);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewPagerAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.getInnerViewNode = function () {
        return _this.refs[VIEWPAGER_REF].getInnerViewNode();
      };

      _this._childrenWithOverridenStyle = function () {
        return React.Children.map(_this.props.children, function (child) {
          if (!child) {
            return null;
          }

          var newProps = _objectSpread({}, child.props, {
            style: [child.props.style, {
              position: 'absolute',
              left: 0,
              top: 0,
              right: 0,
              bottom: 0,
              width: undefined,
              height: undefined
            }],
            collapsable: false
          });

          if (child.type && child.type.displayName && child.type.displayName !== 'RCTView' && child.type.displayName !== 'View') {
            console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName);
          }

          return React.createElement(child.type, newProps);
        });
      };

      _this._onPageScroll = function (e) {
        if (_this.props.onPageScroll) {
          _this.props.onPageScroll(e);
        }

        if (_this.props.keyboardDismissMode === 'on-drag') {
          dismissKeyboard();
        }
      };

      _this._onPageScrollStateChanged = function (e) {
        if (_this.props.onPageScrollStateChanged) {
          _this.props.onPageScrollStateChanged(e);
        }
      };

      _this._onPageSelected = function (e) {
        if (_this.props.onPageSelected) {
          _this.props.onPageSelected(e);
        }
      };

      _this.setPage = function (selectedPage) {
        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_this)), UIManager.getViewManagerConfig('AndroidViewPager').Commands.setPage, [selectedPage]);
      };

      _this.setPageWithoutAnimation = function (selectedPage) {
        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_this)), UIManager.getViewManagerConfig('AndroidViewPager').Commands.setPageWithoutAnimation, [selectedPage]);
      };

      return _this;
    }

    _createClass(ViewPagerAndroid, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.initialPage != null) {
          this.setPageWithoutAnimation(this.props.initialPage);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(NativeAndroidViewPager, _extends({}, this.props, {
          ref: VIEWPAGER_REF,
          style: this.props.style,
          onPageScroll: this._onPageScroll,
          onPageScrollStateChanged: this._onPageScrollStateChanged,
          onPageSelected: this._onPageSelected,
          children: this._childrenWithOverridenStyle()
        }));
      }
    }]);

    return ViewPagerAndroid;
  }(React.Component);

  module.exports = ViewPagerAndroid;
},317,[11,46,22,23,30,33,32,36,48,78,42,244,318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidViewPager');
},318,[155]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits = _$$_REQUIRE(_dependencyMap[6]);

  var ActivityIndicator = _$$_REQUIRE(_dependencyMap[7]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[8]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[9]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[10]);

  var React = _$$_REQUIRE(_dependencyMap[11]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[12]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[13]);

  var UIManager = _$$_REQUIRE(_dependencyMap[14]);

  var View = _$$_REQUIRE(_dependencyMap[15]);

  var WebViewShared = _$$_REQUIRE(_dependencyMap[16]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[17]);

  var keyMirror = _$$_REQUIRE(_dependencyMap[18]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[19]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[20]);

  var RCT_WEBVIEW_REF = 'webview';
  var WebViewState = keyMirror({
    IDLE: null,
    LOADING: null,
    ERROR: null
  });

  var defaultRenderLoading = function defaultRenderLoading() {
    return React.createElement(View, {
      style: styles.loadingView
    }, React.createElement(ActivityIndicator, {
      style: styles.loadingProgressBar
    }));
  };

  var WebView = function (_React$Component) {
    _inherits(WebView, _React$Component);

    function WebView() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, WebView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WebView)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        viewState: WebViewState.IDLE,
        lastErrorEvent: null,
        startInLoadingState: true
      };

      _this.goForward = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.getViewManagerConfig('RCTWebView').Commands.goForward, null);
      };

      _this.goBack = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.getViewManagerConfig('RCTWebView').Commands.goBack, null);
      };

      _this.reload = function () {
        _this.setState({
          viewState: WebViewState.LOADING
        });

        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.getViewManagerConfig('RCTWebView').Commands.reload, null);
      };

      _this.stopLoading = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.getViewManagerConfig('RCTWebView').Commands.stopLoading, null);
      };

      _this.postMessage = function (data) {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.getViewManagerConfig('RCTWebView').Commands.postMessage, [String(data)]);
      };

      _this.injectJavaScript = function (data) {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.getViewManagerConfig('RCTWebView').Commands.injectJavaScript, [data]);
      };

      _this.updateNavigationState = function (event) {
        if (_this.props.onNavigationStateChange) {
          _this.props.onNavigationStateChange(event.nativeEvent);
        }
      };

      _this.getWebViewHandle = function () {
        return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);
      };

      _this.onLoadingStart = function (event) {
        var onLoadStart = _this.props.onLoadStart;
        onLoadStart && onLoadStart(event);

        _this.updateNavigationState(event);
      };

      _this.onLoadingError = function (event) {
        event.persist();
        var _this$props = _this.props,
            onError = _this$props.onError,
            onLoadEnd = _this$props.onLoadEnd;
        onError && onError(event);
        onLoadEnd && onLoadEnd(event);
        console.warn('Encountered an error loading page', event.nativeEvent);

        _this.setState({
          lastErrorEvent: event.nativeEvent,
          viewState: WebViewState.ERROR
        });
      };

      _this.onLoadingFinish = function (event) {
        var _this$props2 = _this.props,
            onLoad = _this$props2.onLoad,
            onLoadEnd = _this$props2.onLoadEnd;
        onLoad && onLoad(event);
        onLoadEnd && onLoadEnd(event);

        _this.setState({
          viewState: WebViewState.IDLE
        });

        _this.updateNavigationState(event);
      };

      _this.onMessage = function (event) {
        var onMessage = _this.props.onMessage;
        onMessage && onMessage(event);
      };

      return _this;
    }

    _createClass(WebView, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        if (this.props.startInLoadingState) {
          this.setState({
            viewState: WebViewState.LOADING
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var otherView = null;

        if (this.state.viewState === WebViewState.LOADING) {
          otherView = (this.props.renderLoading || defaultRenderLoading)();
        } else if (this.state.viewState === WebViewState.ERROR) {
          var errorEvent = this.state.lastErrorEvent;
          otherView = this.props.renderError && this.props.renderError(errorEvent.domain, errorEvent.code, errorEvent.description);
        } else if (this.state.viewState !== WebViewState.IDLE) {
          console.error('RCTWebView invalid state encountered: ' + this.state.loading);
        }

        var webViewStyles = [styles.container, this.props.style];

        if (this.state.viewState === WebViewState.LOADING || this.state.viewState === WebViewState.ERROR) {
          webViewStyles.push(styles.hidden);
        }

        var source = this.props.source || {};

        if (this.props.html) {
          source.html = this.props.html;
        } else if (this.props.url) {
          source.uri = this.props.url;
        }

        if (source.method === 'POST' && source.headers) {
          console.warn('WebView: `source.headers` is not supported when using POST.');
        } else if (source.method === 'GET' && source.body) {
          console.warn('WebView: `source.body` is not supported when using GET.');
        }

        var nativeConfig = this.props.nativeConfig || {};
        var originWhitelist = (this.props.originWhitelist || []).map(WebViewShared.originWhitelistToRegex);
        var NativeWebView = nativeConfig.component || RCTWebView;
        var webView = React.createElement(NativeWebView, _extends({
          ref: RCT_WEBVIEW_REF,
          key: "webViewKey",
          style: webViewStyles,
          source: resolveAssetSource(source),
          scalesPageToFit: this.props.scalesPageToFit,
          allowFileAccess: this.props.allowFileAccess,
          injectedJavaScript: this.props.injectedJavaScript,
          userAgent: this.props.userAgent,
          javaScriptEnabled: this.props.javaScriptEnabled,
          hardwareAccelerationEnabledExperimental: this.props.hardwareAccelerationEnabledExperimental,
          thirdPartyCookiesEnabled: this.props.thirdPartyCookiesEnabled,
          domStorageEnabled: this.props.domStorageEnabled,
          messagingEnabled: typeof this.props.onMessage === 'function',
          onMessage: this.onMessage,
          contentInset: this.props.contentInset,
          automaticallyAdjustContentInsets: this.props.automaticallyAdjustContentInsets,
          onContentSizeChange: this.props.onContentSizeChange,
          onLoadingStart: this.onLoadingStart,
          onLoadingFinish: this.onLoadingFinish,
          onLoadingError: this.onLoadingError,
          testID: this.props.testID,
          geolocationEnabled: this.props.geolocationEnabled,
          mediaPlaybackRequiresUserAction: this.props.mediaPlaybackRequiresUserAction,
          allowUniversalAccessFromFileURLs: this.props.allowUniversalAccessFromFileURLs,
          originWhitelist: originWhitelist,
          mixedContentMode: this.props.mixedContentMode,
          saveFormDataDisabled: this.props.saveFormDataDisabled,
          urlPrefixesForDefaultIntent: this.props.urlPrefixesForDefaultIntent
        }, nativeConfig.props));
        return React.createElement(View, {
          style: styles.container
        }, webView, otherView);
      }
    }]);

    return WebView;
  }(React.Component);

  WebView.propTypes = _objectSpread({}, DeprecatedViewPropTypes, {
    renderError: PropTypes.func,
    renderLoading: PropTypes.func,
    onLoad: PropTypes.func,
    onLoadEnd: PropTypes.func,
    onLoadStart: PropTypes.func,
    onError: PropTypes.func,
    automaticallyAdjustContentInsets: PropTypes.bool,
    contentInset: DeprecatedEdgeInsetsPropType,
    onNavigationStateChange: PropTypes.func,
    onMessage: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    startInLoadingState: PropTypes.bool,
    style: DeprecatedViewPropTypes.style,
    html: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),
    url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),
    source: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string,
      method: PropTypes.oneOf(['GET', 'POST']),
      headers: PropTypes.object,
      body: PropTypes.string
    }), PropTypes.shape({
      html: PropTypes.string,
      baseUrl: PropTypes.string
    }), PropTypes.number]),
    useWebKit: PropTypes.bool,
    hardwareAccelerationEnabledExperimental: PropTypes.bool,
    javaScriptEnabled: PropTypes.bool,
    thirdPartyCookiesEnabled: PropTypes.bool,
    domStorageEnabled: PropTypes.bool,
    geolocationEnabled: PropTypes.bool,
    injectedJavaScript: PropTypes.string,
    scalesPageToFit: PropTypes.bool,
    allowFileAccess: PropTypes.bool,
    userAgent: PropTypes.string,
    testID: PropTypes.string,
    mediaPlaybackRequiresUserAction: PropTypes.bool,
    allowUniversalAccessFromFileURLs: PropTypes.bool,
    originWhitelist: PropTypes.arrayOf(PropTypes.string),
    injectJavaScript: PropTypes.func,
    mixedContentMode: PropTypes.oneOf(['never', 'always', 'compatibility']),
    saveFormDataDisabled: PropTypes.bool,
    nativeConfig: PropTypes.shape({
      component: PropTypes.any,
      props: PropTypes.object,
      viewManager: PropTypes.object
    }),
    urlPrefixesForDefaultIntent: PropTypes.arrayOf(PropTypes.string)
  });
  WebView.defaultProps = {
    javaScriptEnabled: true,
    thirdPartyCookiesEnabled: true,
    scalesPageToFit: true,
    hardwareAccelerationEnabledExperimental: true,
    saveFormDataDisabled: false,
    originWhitelist: WebViewShared.defaultOriginWhitelist
  };
  var RCTWebView = requireNativeComponent('RCTWebView');
  var styles = StyleSheet.create({
    container: {
      flex: 1
    },
    hidden: {
      height: 0,
      flex: 0
    },
    loadingView: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    loadingProgressBar: {
      height: 20
    }
  });
  module.exports = WebView;
},319,[46,11,22,23,30,33,36,45,252,181,61,48,78,52,42,75,320,66,189,155,161]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var escapeStringRegexp = _$$_REQUIRE(_dependencyMap[0]);

  var WebViewShared = {
    defaultOriginWhitelist: ['http://*', 'https://*'],
    extractOrigin: function extractOrigin(url) {
      var result = /^[A-Za-z0-9]+:(\/\/)?[^/]*/.exec(url);
      return result === null ? null : result[0];
    },
    originWhitelistToRegex: function originWhitelistToRegex(originWhitelist) {
      return escapeStringRegexp(originWhitelist).replace(/\\\*/g, '.*');
    }
  };
  module.exports = WebViewShared;
},320,[321]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

  module.exports = function (str) {
    if (typeof str !== 'string') {
      throw new TypeError('Expected a string');
    }

    return str.replace(matchOperatorsRe, '\\$&');
  };
},321,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var RCTActionSheetManager = _$$_REQUIRE(_dependencyMap[1]).ActionSheetManager;

  var invariant = _$$_REQUIRE(_dependencyMap[2]);

  var processColor = _$$_REQUIRE(_dependencyMap[3]);

  var ActionSheetIOS = {
    showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
      invariant(typeof callback === 'function', 'Must provide a valid callback');
      RCTActionSheetManager.showActionSheetWithOptions(_objectSpread({}, options, {
        tintColor: processColor(options.tintColor)
      }), callback);
    },
    showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
      invariant(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
      invariant(typeof successCallback === 'function', 'Must provide a valid successCallback');
      RCTActionSheetManager.showShareActionSheetWithOptions(_objectSpread({}, options, {
        tintColor: processColor(options.tintColor)
      }), failureCallback, successCallback);
    }
  };
  module.exports = ActionSheetIOS;
},322,[46,8,3,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[1]);

  var BugReporting = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[4]);

  var SceneTracker = _$$_REQUIRE(_dependencyMap[5]);

  var infoLog = _$$_REQUIRE(_dependencyMap[6]);

  var invariant = _$$_REQUIRE(_dependencyMap[7]);

  var renderApplication = _$$_REQUIRE(_dependencyMap[8]);

  var runnables = {};
  var runCount = 1;
  var sections = {};
  var tasks = new Map();

  var componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {
    return component();
  };

  var wrapperComponentProvider;
  var AppRegistry = {
    setWrapperComponentProvider: function setWrapperComponentProvider(provider) {
      wrapperComponentProvider = provider;
    },
    registerConfig: function registerConfig(config) {
      config.forEach(function (appConfig) {
        if (appConfig.run) {
          AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
        } else {
          invariant(appConfig.component != null, "AppRegistry.registerConfig(...): Every config is expected to set either `run` or `component`, but `%s` has neither.", appConfig.appKey);
          AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);
        }
      });
    },
    registerComponent: function registerComponent(appKey, componentProvider, section) {
      console.log("registerComponent", "start");
      runnables[appKey] = {
        componentProvider: componentProvider,
        run: function run(appParameters) {
          renderApplication(componentProviderInstrumentationHook(componentProvider), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters), appParameters.fabric);
        }
      };

      if (section) {
        sections[appKey] = runnables[appKey];
      }

      return appKey;
    },
    registerRunnable: function registerRunnable(appKey, run) {
      runnables[appKey] = {
        run: run
      };
      return appKey;
    },
    registerSection: function registerSection(appKey, component) {
      AppRegistry.registerComponent(appKey, component, true);
    },
    getAppKeys: function getAppKeys() {
      return Object.keys(runnables);
    },
    getSectionKeys: function getSectionKeys() {
      return Object.keys(sections);
    },
    getSections: function getSections() {
      return _objectSpread({}, sections);
    },
    getRunnable: function getRunnable(appKey) {
      return runnables[appKey];
    },
    getRegistry: function getRegistry() {
      return {
        sections: AppRegistry.getSectionKeys(),
        runnables: _objectSpread({}, runnables)
      };
    },
    setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {
      componentProviderInstrumentationHook = hook;
    },
    runApplication: function runApplication(appKey, appParameters) {
      var msg = 'Running application "' + appKey + '" with appParams: ' + JSON.stringify(appParameters) + '. ' + '__DEV__ === ' + String(false) + ', development-level warning are ' + 'OFF' + ', performance optimizations are ' + 'ON';
      infoLog(msg);
      BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {
        return msg;
      });
      invariant(runnables[appKey] && runnables[appKey].run, 'Application ' + appKey + ' has not been registered.\n\n' + "Hint: This error often happens when you're running the packager " + '(local dev server) from a wrong folder. For example you have ' + 'multiple apps and the packager is still running for the app you ' + 'were working on before.\nIf this is the case, simply kill the old ' + 'packager instance (e.g. close the packager terminal window) ' + 'and start the packager in the correct app folder (e.g. cd into app ' + "folder and run 'npm start').\n\n" + 'This error can also happen due to a require() error during ' + 'initialization or failure to call AppRegistry.registerComponent.\n\n');
      SceneTracker.setActiveScene({
        name: appKey
      });
      runnables[appKey].run(appParameters);
    },
    unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
      ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);
    },
    registerHeadlessTask: function registerHeadlessTask(taskKey, task) {
      if (tasks.has(taskKey)) {
        console.warn("registerHeadlessTask called multiple times for same key '" + taskKey + "'");
      }

      tasks.set(taskKey, task);
    },
    startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
      var taskProvider = tasks.get(taskKey);

      if (!taskProvider) {
        throw new Error("No task registered for key " + taskKey);
      }

      taskProvider()(data).then(function () {
        return NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
      }).catch(function (reason) {
        console.error(reason);
        NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
      });
    }
  };
  BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);
  module.exports = AppRegistry;
},323,[46,16,324,8,78,326,146,3,327]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  var infoLog = _$$_REQUIRE(_dependencyMap[4]);

  function defaultExtras() {
    BugReporting.addFileSource('react_hierarchy.txt', function () {
      return _$$_REQUIRE(_dependencyMap[5])();
    });
  }

  var BugReporting = function () {
    function BugReporting() {
      _classCallCheck(this, BugReporting);
    }

    _createClass(BugReporting, null, [{
      key: "_maybeInit",
      value: function _maybeInit() {
        if (!BugReporting._subscription) {
          BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
          defaultExtras();
        }

        if (!BugReporting._redboxSubscription) {
          BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener('collectRedBoxExtraData', BugReporting.collectExtraData, null);
        }
      }
    }, {
      key: "addSource",
      value: function addSource(key, callback) {
        return this._addSource(key, callback, BugReporting._extraSources);
      }
    }, {
      key: "addFileSource",
      value: function addFileSource(key, callback) {
        return this._addSource(key, callback, BugReporting._fileSources);
      }
    }, {
      key: "_addSource",
      value: function _addSource(key, callback, source) {
        BugReporting._maybeInit();

        if (source.has(key)) {
          console.warn("BugReporting.add* called multiple times for same key '" + key + "'");
        }

        source.set(key, callback);
        return {
          remove: function remove() {
            source.delete(key);
          }
        };
      }
    }, {
      key: "collectExtraData",
      value: function collectExtraData() {
        var extraData = {};

        for (var _iterator = BugReporting._extraSources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref3;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref3 = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref3 = _i.value;
          }

          var _ref7 = _ref3;

          var _ref2 = _slicedToArray(_ref7, 2);

          var _key3 = _ref2[0];
          var _callback2 = _ref2[1];
          extraData[_key3] = _callback2();
        }

        var fileData = {};

        for (var _iterator2 = BugReporting._fileSources, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref6;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref6 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref6 = _i2.value;
          }

          var _ref8 = _ref6;

          var _ref5 = _slicedToArray(_ref8, 2);

          var _key4 = _ref5[0];
          var _callback3 = _ref5[1];
          fileData[_key4] = _callback3();
        }

        infoLog('BugReporting extraData:', extraData);

        var BugReportingNativeModule = _$$_REQUIRE(_dependencyMap[6]).BugReporting;

        BugReportingNativeModule && BugReportingNativeModule.setExtraData && BugReportingNativeModule.setExtraData(extraData, fileData);

        var RedBoxNativeModule = _$$_REQUIRE(_dependencyMap[6]).RedBox;

        RedBoxNativeModule && RedBoxNativeModule.setExtraData && RedBoxNativeModule.setExtraData(extraData, 'From BugReporting.js');
        return {
          extras: extraData,
          files: fileData
        };
      }
    }]);

    return BugReporting;
  }();

  BugReporting._extraSources = new Map();
  BugReporting._fileSources = new Map();
  BugReporting._subscription = null;
  BugReporting._redboxSubscription = null;
  module.exports = BugReporting;
},324,[12,22,23,29,146,325,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function dumpReactTree() {
    try {
      return getReactTree();
    } catch (e) {
      return 'Failed to dump react tree: ' + e;
    }
  }

  function getReactTree() {
    return "React tree dumps have been temporarily disabled while React is upgraded to Fiber.";
  }

  module.exports = dumpReactTree;
},325,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _listeners = [];
  var _activeScene = {
    name: 'default'
  };
  var SceneTracker = {
    setActiveScene: function setActiveScene(scene) {
      _activeScene = scene;

      _listeners.forEach(function (listener) {
        return listener(_activeScene);
      });
    },
    getActiveScene: function getActiveScene() {
      return _activeScene;
    },
    addActiveSceneChangedListener: function addActiveSceneChangedListener(callback) {
      _listeners.push(callback);

      return {
        remove: function remove() {
          _listeners = _listeners.filter(function (listener) {
            return callback !== listener;
          });
        }
      };
    }
  };
  module.exports = SceneTracker;
},326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _PerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var AppContainer = _$$_REQUIRE(_dependencyMap[3]);

  var React = _$$_REQUIRE(_dependencyMap[4]);

  var ReactFabricIndicator = _$$_REQUIRE(_dependencyMap[5]);

  var invariant = _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent, fabric, showFabricIndicator) {
    invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
    var renderable = React.createElement(AppContainer, {
      rootTag: rootTag,
      WrapperComponent: WrapperComponent
    }, React.createElement(RootComponent, (0, _extends2.default)({}, initialProps, {
      rootTag: rootTag
    })), fabric === true && showFabricIndicator === true ? React.createElement(ReactFabricIndicator, null) : null);

    if (RootComponent.prototype != null && RootComponent.prototype.unstable_isAsyncReactComponent === true) {
      var ConcurrentMode = React.unstable_ConcurrentMode;
      renderable = React.createElement(ConcurrentMode, null, renderable);
    }

    _PerformanceLogger.default.startTimespan('renderApplication_React_render');

    if (fabric) {
      _$$_REQUIRE(_dependencyMap[8]).render(renderable, rootTag);
    } else {
      _$$_REQUIRE(_dependencyMap[9]).render(renderable, rootTag);
    }

    _PerformanceLogger.default.stopTimespan('renderApplication_React_render');
  }

  module.exports = renderApplication;
},327,[1,11,145,286,48,328,3,329,330,78]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},328,[48,52,179,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeviceEventManager = _$$_REQUIRE(_dependencyMap[0]).DeviceEventManager;

  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[1]);

  var DEVICE_BACK_EVENT = 'hardwareBackPress';
  var _backPressSubscriptions = [];
  RCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {
    for (var i = _backPressSubscriptions.length - 1; i >= 0; i--) {
      if (_backPressSubscriptions[i]()) {
        return;
      }
    }

    BackHandler.exitApp();
  });
  var BackHandler = {
    exitApp: function exitApp() {
      DeviceEventManager.invokeDefaultBackPressHandler();
    },
    addEventListener: function addEventListener(eventName, handler) {
      if (_backPressSubscriptions.indexOf(handler) === -1) {
        _backPressSubscriptions.push(handler);
      }

      return {
        remove: function remove() {
          return BackHandler.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      if (_backPressSubscriptions.indexOf(handler) !== -1) {
        _backPressSubscriptions.splice(_backPressSubscriptions.indexOf(handler), 1);
      }
    }
  };
  module.exports = BackHandler;
},329,[8,29]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }
  BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);
  module.exports = ReactFabric;
},330,[16,331]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[2]),
      UIManager = _$$_REQUIRE(_dependencyMap[3]),
      React = _$$_REQUIRE(_dependencyMap[4]),
      deepDiffer = _$$_REQUIRE(_dependencyMap[5]),
      flattenStyle = _$$_REQUIRE(_dependencyMap[6]),
      TextInputState = _$$_REQUIRE(_dependencyMap[7]),
      FabricUIManager = _$$_REQUIRE(_dependencyMap[8]);

  var scheduler = _$$_REQUIRE(_dependencyMap[9]),
      ExceptionsManager = _$$_REQUIRE(_dependencyMap[10]);

  function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      condition = undefined;
      if (undefined === format) condition = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
        var args = [a, b, c, d, e, f],
            argIndex = 0;
        condition = Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        condition.name = "Invariant Violation";
      }
      condition.framesToPop = 1;
      throw condition;
    }
  }

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else invariant(false, "clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."), error = undefined;

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      invariant(-1 < pluginIndex, "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.", pluginName);

      if (!plugins[pluginIndex]) {
        invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.", pluginName);
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          invariant(!eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0), "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.", eventName$jscomp$0);
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          invariant(JSCompiler_inline_result, "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    invariant(!registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {},
      getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`.");
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined.");
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];
          namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = true);
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    invariant(!listener || "function" === typeof listener, "Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    invariant(event instanceof this, "Trying to release an event instance into a pool of a different type.");
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    invariant(null != _ref, "Touch object is missing identifier.");
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\nTouch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\nTouch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
  }

  function printTouch(touch) {
    return JSON.stringify({
      identifier: touch.identifier,
      pageX: touch.pageX,
      pageY: touch.pageY,
      timestamp: timestampForTouch(touch)
    });
  }

  function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, 20));
    20 < touchBank.length && (printed += " (original size: " + touchBank.length + ")");
    return printed;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined.");
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes$1 = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes$1,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes$1.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes$1.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes$1.selectionChangeShouldSetResponder : eventTypes$1.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes$1.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes$1.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes$1.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes$1.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes$1.responderStart : targetInst ? eventTypes$1.responderMove : depthA ? eventTypes$1.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes$1.responderTerminate : topLevelType ? eventTypes$1.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      ReactNativeBridgeEventPlugin = {
    eventTypes: ReactNativeViewConfigRegistry.eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (null == targetInst) return null;
      var bubbleDispatchConfig = ReactNativeViewConfigRegistry.customBubblingEventTypes[topLevelType],
          directDispatchConfig = ReactNativeViewConfigRegistry.customDirectEventTypes[topLevelType];
      invariant(bubbleDispatchConfig || directDispatchConfig, 'Unsupported top level event type "%s" dispatched', topLevelType);
      topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
      if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
      return topLevelType;
    }
  };
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    invariant(inst, "All native instances should have a tag.");
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116,
      MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_CONCURRENT_MODE_TYPE:
        return "ConcurrentMode";

      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    invariant(2 === isFiberMountedImpl(fiber), "Unable to find node on an unmounted component.");
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) return alternate = isFiberMountedImpl(fiber), invariant(3 !== alternate, "Unable to find node on an unmounted component."), 1 === alternate ? null : fiber;

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return,
          parentB = parentA ? parentA.alternate : null;
      if (!parentA || !parentB) break;

      if (parentA.child === parentB.child) {
        for (var child = parentA.child; child;) {
          if (child === a) return assertIsMounted(parentA), fiber;
          if (child === b) return assertIsMounted(parentA), alternate;
          child = child.sibling;
        }

        invariant(false, "Unable to find node on an unmounted component.");
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        child = false;

        for (var _child = parentA.child; _child;) {
          if (_child === a) {
            child = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            child = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!child) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              child = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              child = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          invariant(child, "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
        }
      }
      invariant(a.alternate === b, "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
    }

    invariant(3 === a.tag, "Unable to find node on an unmounted component.");
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var now$1 = "object" === typeof performance && "function" === typeof performance.now ? function () {
    return performance.now();
  } : function () {
    return Date.now();
  },
      scheduledCallback = null,
      frameDeadline = 0;

  function setTimeoutCallback() {
    frameDeadline = now$1() + 5;
    var callback = scheduledCallback;
    scheduledCallback = null;
    null !== callback && callback();
  }

  function scheduleDeferredCallback$1(callback) {
    scheduledCallback = callback;
    return setTimeout(setTimeoutCallback, 1);
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (target = getInstanceFromNode(target)) {
      invariant(false, "setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
      var props = getFiberCurrentPropsFromNode(target.stateNode);
      null(target.stateNode, target.type, props);
    }
  }

  function _batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function _flushInteractiveUpdatesImpl() {}

  var isBatching = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isBatching) return fn(bookkeeping);
    isBatching = true;

    try {
      return _batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isBatching = false, null !== restoreTarget || null !== restoreQueue) if (_flushInteractiveUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;
      if (events && (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."), hasRethrowError)) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
    });
  }

  function shim$1() {
    invariant(false, "The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue.");
  }

  var nextReactTag = 2;
  FabricUIManager.registerEventHandler && FabricUIManager.registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    invariant(hostContext.isInAParentText, "Text strings must be rendered within a <Text> component.");
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: FabricUIManager.createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: FabricUIManager.cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  function cloneUnhiddenInstance(instance, type, props) {
    var viewConfig = instance.canonical.viewConfig;
    type = instance.node;

    var prevProps = _extends({}, props, {
      style: [props.style, {
        display: "none"
      }]
    });

    props = diffProperties(null, prevProps, props, viewConfig.validAttributes);
    return {
      node: FabricUIManager.cloneNodeWithNewProps(type, props),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    invariant(contextStackCursor.current === emptyContextObject, "Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      invariant(contextKey in fiber, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(type) || "Unknown", contextKey);
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    invariant(instance, "Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function catchErrors(fn) {
    return function (arg) {
      try {
        return fn(arg);
      } catch (err) {}
    };
  }

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);
      onCommitFiberRoot = catchErrors(function (root) {
        return hook.onCommitFiberRoot(rendererID, root);
      });
      onCommitFiberUnmount = catchErrors(function (fiber) {
        return hook.onCommitFiberUnmount(rendererID, fiber);
      });
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    workInProgress.contextDependencies = current.contextDependencies;
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        return createFiberFromMode(pendingProps, mode | 3, expirationTime, key);

      case REACT_STRICT_MODE_TYPE:
        return createFiberFromMode(pendingProps, mode | 2, expirationTime, key);

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 4), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_TYPE, type.type = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        invariant(false, "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, "");
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromMode(pendingProps, mode, expirationTime, key) {
    pendingProps = createFiber(8, pendingProps, key, mode);
    mode = 0 === (mode & 1) ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;
    pendingProps.elementType = mode;
    pendingProps.type = mode;
    pendingProps.expirationTime = expirationTime;
    return pendingProps;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function markPendingPriorityLevel(root, expirationTime) {
    root.didError = false;
    var earliestPendingTime = root.earliestPendingTime;
    0 === earliestPendingTime ? root.earliestPendingTime = root.latestPendingTime = expirationTime : earliestPendingTime < expirationTime ? root.earliestPendingTime = expirationTime : root.latestPendingTime > expirationTime && (root.latestPendingTime = expirationTime);
    findNextExpirationTimeToWorkOn(expirationTime, root);
  }

  function markCommittedPriorityLevels(root, earliestRemainingTime) {
    root.didError = false;
    if (0 === earliestRemainingTime) root.earliestPendingTime = 0, root.latestPendingTime = 0, root.earliestSuspendedTime = 0, root.latestSuspendedTime = 0, root.latestPingedTime = 0;else {
      earliestRemainingTime < root.latestPingedTime && (root.latestPingedTime = 0);
      var latestPendingTime = root.latestPendingTime;
      0 !== latestPendingTime && (latestPendingTime > earliestRemainingTime ? root.earliestPendingTime = root.latestPendingTime = 0 : root.earliestPendingTime > earliestRemainingTime && (root.earliestPendingTime = root.latestPendingTime));
      latestPendingTime = root.earliestSuspendedTime;
      0 === latestPendingTime ? markPendingPriorityLevel(root, earliestRemainingTime) : earliestRemainingTime < root.latestSuspendedTime ? (root.earliestSuspendedTime = 0, root.latestSuspendedTime = 0, root.latestPingedTime = 0, markPendingPriorityLevel(root, earliestRemainingTime)) : earliestRemainingTime > latestPendingTime && markPendingPriorityLevel(root, earliestRemainingTime);
    }
    findNextExpirationTimeToWorkOn(0, root);
  }

  function markSuspendedPriorityLevel(root, suspendedTime) {
    root.didError = false;
    root.latestPingedTime >= suspendedTime && (root.latestPingedTime = 0);
    var earliestPendingTime = root.earliestPendingTime,
        latestPendingTime = root.latestPendingTime;
    earliestPendingTime === suspendedTime ? root.earliestPendingTime = latestPendingTime === suspendedTime ? root.latestPendingTime = 0 : latestPendingTime : latestPendingTime === suspendedTime && (root.latestPendingTime = earliestPendingTime);
    earliestPendingTime = root.earliestSuspendedTime;
    latestPendingTime = root.latestSuspendedTime;
    0 === earliestPendingTime ? root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime : earliestPendingTime < suspendedTime ? root.earliestSuspendedTime = suspendedTime : latestPendingTime > suspendedTime && (root.latestSuspendedTime = suspendedTime);
    findNextExpirationTimeToWorkOn(suspendedTime, root);
  }

  function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {
    var earliestPendingTime = root.earliestPendingTime;
    root = root.earliestSuspendedTime;
    earliestPendingTime > renderExpirationTime && (renderExpirationTime = earliestPendingTime);
    root > renderExpirationTime && (renderExpirationTime = root);
    return renderExpirationTime;
  }

  function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {
    var earliestSuspendedTime = root.earliestSuspendedTime,
        latestSuspendedTime = root.latestSuspendedTime,
        earliestPendingTime = root.earliestPendingTime,
        latestPingedTime = root.latestPingedTime;
    earliestPendingTime = 0 !== earliestPendingTime ? earliestPendingTime : latestPingedTime;
    0 === earliestPendingTime && (0 === completedExpirationTime || latestSuspendedTime < completedExpirationTime) && (earliestPendingTime = latestSuspendedTime);
    completedExpirationTime = earliestPendingTime;
    0 !== completedExpirationTime && earliestSuspendedTime > completedExpirationTime && (completedExpirationTime = earliestSuspendedTime);
    root.nextExpirationTimeToWorkOn = earliestPendingTime;
    root.expirationTime = completedExpirationTime;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, inst);
      var update = createUpdate(currentTime);
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      flushPassiveEffects();
      enqueueUpdate(inst, update);
      scheduleWork(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, inst);
      var update = createUpdate(currentTime);
      update.tag = ReplaceState;
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      flushPassiveEffects();
      enqueueUpdate(inst, update);
      scheduleWork(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, inst);
      var update = createUpdate(currentTime);
      update.tag = ForceUpdate;
      undefined !== callback && null !== callback && (update.callback = callback);
      flushPassiveEffects();
      enqueueUpdate(inst, update);
      scheduleWork(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;
        element && (invariant(1 === element.tag, "Function components cannot have refs. Did you mean to use React.forwardRef()?"), inst = element.stateNode);
        invariant(inst, "Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.", returnFiber);
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      invariant("string" === typeof returnFiber, "Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
      invariant(element._owner, "Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.", returnFiber);
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    "textarea" !== returnFiber.type && invariant(false, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, "");
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          if (oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime)) currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber;
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        if (nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime)) shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber;
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      invariant("function" === typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      invariant(null != newChildrenIterable, "An iterable object provided no iterator.");

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          oldFiber || (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                } else {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                  break;
                }
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);
              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                } else {
                  deleteRemainingChildren(returnFiber, currentFirstChild);
                  break;
                }
              } else deleteChild(returnFiber, currentFirstChild);
              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          expirationTime = returnFiber.type, invariant(false, "%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.", expirationTime.displayName || expirationTime.name || "Component");
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    invariant(false, "Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)");
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    invariant(!current, "Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      invariant(null !== nextCurrentHook, "Rendered more hooks than during the previous render.");
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    invariant(null !== queue, "Should have a queue. This is likely a bug in React. Please file an issue.");

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.eagerReducer = reducer;
          queue.eagerState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action);
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.eagerReducer = reducer;
      queue.eagerState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    invariant(25 > numberOfReRenders, "Too many re-renders. React limits the number of renders to prevent an infinite loop.");
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      flushPassiveEffects();
      var currentTime = requestCurrentTime();
      currentTime = computeExpirationForFiber(currentTime, fiber);
      var _update2 = {
        expirationTime: currentTime,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      },
          _last = queue.last;
      if (null === _last) _update2.next = _update2;else {
        var first = _last.next;
        null !== first && (_update2.next = first);
        _last.next = _update2;
      }
      queue.last = _update2;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.eagerReducer, null !== alternate)) try {
        var currentState = queue.eagerState,
            _eagerState = alternate(currentState, action);

        _update2.eagerReducer = alternate;
        _update2.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleWork(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        eagerReducer: reducer,
        eagerState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        eagerReducer: basicStateReducer,
        eagerState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var unmaskedContext = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    unmaskedContext = getMaskedContext(workInProgress, unmaskedContext);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, unmaskedContext, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        nextState = workInProgress.memoizedState;

    if (0 === (workInProgress.effectTag & 64)) {
      nextState = null;
      var nextDidTimeout = false;
    } else nextState = {
      timedOutAt: null !== nextState ? nextState.timedOutAt : 0
    }, nextDidTimeout = true, workInProgress.effectTag &= -65;

    if (null === current$$1) {
      if (nextDidTimeout) {
        var nextFallbackChildren = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        0 === (workInProgress.mode & 1) && (current$$1.child = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child);
        mode = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
        current$$1.sibling = mode;
        renderExpirationTime = current$$1;
        renderExpirationTime.return = mode.return = workInProgress;
      } else renderExpirationTime = mode = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else null !== current$$1.memoizedState ? (mode = current$$1.child, nextFallbackChildren = mode.sibling, nextDidTimeout ? (renderExpirationTime = nextProps.fallback, nextProps = createWorkInProgress(mode, mode.pendingProps, 0), 0 === (workInProgress.mode & 1) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== mode.child && (nextProps.child = nextDidTimeout)), mode = nextProps.sibling = createWorkInProgress(nextFallbackChildren, renderExpirationTime, nextFallbackChildren.expirationTime), renderExpirationTime = nextProps, nextProps.childExpirationTime = 0, renderExpirationTime.return = mode.return = workInProgress) : renderExpirationTime = mode = reconcileChildFibers(workInProgress, mode.child, nextProps.children, renderExpirationTime)) : (nextFallbackChildren = current$$1.child, nextDidTimeout ? (nextDidTimeout = nextProps.fallback, nextProps = createFiberFromFragment(null, mode, 0, null), nextProps.child = nextFallbackChildren, 0 === (workInProgress.mode & 1) && (nextProps.child = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child), mode = nextProps.sibling = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null), mode.effectTag |= 2, renderExpirationTime = nextProps, nextProps.childExpirationTime = 0, renderExpirationTime.return = mode.return = workInProgress) : mode = renderExpirationTime = reconcileChildFibers(workInProgress, nextFallbackChildren, nextProps.children, renderExpirationTime)), workInProgress.stateNode = current$$1.stateNode;
    workInProgress.memoizedState = nextState;
    workInProgress.child = renderExpirationTime;
    return mode;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.contextDependencies = current$$1.contextDependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    invariant(null === current$$1 || workInProgress.child === current$$1.child, "Resuming work not yet implemented.");

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  function beginWork(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        var context = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        context = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, context, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof context && null !== context && "function" === typeof context.render && undefined === context.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== context.state && undefined !== context.state ? context.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          context.updater = classComponentUpdater;
          workInProgress.stateNode = context;
          context._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, context, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        context = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        hasContext = workInProgress.pendingProps;
        current$$1 = readLazyComponentType(context);
        workInProgress.type = current$$1;
        context = workInProgress.tag = resolveLazyComponentTag(current$$1);
        hasContext = resolveDefaultProps(current$$1, hasContext);
        getDerivedStateFromProps = undefined;

        switch (context) {
          case 0:
            getDerivedStateFromProps = updateFunctionComponent(null, workInProgress, current$$1, hasContext, renderExpirationTime);
            break;

          case 1:
            getDerivedStateFromProps = updateClassComponent(null, workInProgress, current$$1, hasContext, renderExpirationTime);
            break;

          case 11:
            getDerivedStateFromProps = updateForwardRef(null, workInProgress, current$$1, hasContext, renderExpirationTime);
            break;

          case 14:
            getDerivedStateFromProps = updateMemoComponent(null, workInProgress, current$$1, resolveDefaultProps(current$$1.type, hasContext), updateExpirationTime, renderExpirationTime);
            break;

          default:
            invariant(false, "Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s", current$$1, "");
        }

        return getDerivedStateFromProps;

      case 0:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, context, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), updateClassComponent(current$$1, workInProgress, updateExpirationTime, context, renderExpirationTime);

      case 3:
        return pushHostRootContext(workInProgress), updateExpirationTime = workInProgress.updateQueue, invariant(null !== updateExpirationTime, "If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."), context = workInProgress.memoizedState, context = null !== context ? context.element : null, processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime), updateExpirationTime = workInProgress.memoizedState.element, updateExpirationTime === context ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child), workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child, workInProgress;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), updateForwardRef(current$$1, workInProgress, updateExpirationTime, context, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          context = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = context.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === context.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.contextDependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.first; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime), dependency.tag = ForceUpdate, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    dependency = renderExpirationTime;

                    for (var node = oldValue.return; null !== node;) {
                      var alternate = node.alternate;
                      if (node.childExpirationTime < dependency) node.childExpirationTime = dependency, null !== alternate && alternate.childExpirationTime < dependency && (alternate.childExpirationTime = dependency);else if (null !== alternate && alternate.childExpirationTime < dependency) alternate.childExpirationTime = dependency;else break;
                      node = node.return;
                    }

                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, context.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return context = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), context = readContext(context, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(context), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return context = workInProgress.type, hasContext = resolveDefaultProps(context, workInProgress.pendingProps), hasContext = resolveDefaultProps(context.type, hasContext), updateMemoComponent(current$$1, workInProgress, context, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, context = workInProgress.pendingProps, context = workInProgress.elementType === updateExpirationTime ? context : resolveDefaultProps(updateExpirationTime, context), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, context, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, context, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);
    }

    invariant(false, "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.");
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    var currentDependencies = workInProgress.contextDependencies;
    null !== currentDependencies && currentDependencies.expirationTime >= renderExpirationTime && (didReceiveUpdate = true);
    workInProgress.contextDependencies = null;
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };
      null === lastContextDependency ? (invariant(null !== currentlyRenderingFiber, "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), lastContextDependency = observedBits, currentlyRenderingFiber.contextDependencies = {
        first: observedBits,
        expirationTime: 0
      }) : lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var UpdateState = 0,
      ReplaceState = 1,
      ForceUpdate = 2,
      CaptureUpdate = 3,
      hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime) {
    return {
      expirationTime: expirationTime,
      tag: UpdateState,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case ReplaceState:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case CaptureUpdate:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case UpdateState:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case ForceUpdate:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        invariant("function" === typeof _callback3, "Invalid argument passed as callback. Expected a function. Instead received: %s", _callback3);

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      a: if (5 === node.tag) {
        var instance = node.stateNode;

        if (needsVisibilityToggle) {
          var props = node.memoizedProps,
              type = node.type;
          instance = isHidden ? cloneHiddenInstance(instance, type, props, node) : cloneUnhiddenInstance(instance, type, props, node);
          node.stateNode = instance;
        }

        FabricUIManager.appendChild(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;

        if (needsVisibilityToggle) {
          instance = node.memoizedProps;
          props = requiredContext(rootInstanceStackCursor.current);
          type = requiredContext(contextStackCursor$1.current);
          if (isHidden) throw Error("Not yet implemented.");
          instance = createTextInstance(instance, props, type, workInProgress);
          node.stateNode = instance;
        }

        FabricUIManager.appendChild(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && (props = node.alternate, null !== props && (instance = null !== node.memoizedState, null !== props.memoizedState !== instance))) {
          props = instance ? node.child : node;
          null !== props && _appendAllChildren(parent, props, true, instance);
          break a;
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      a: if (5 === node.tag) {
        var instance = node.stateNode;

        if (needsVisibilityToggle) {
          var props = node.memoizedProps,
              type = node.type;
          instance = isHidden ? cloneHiddenInstance(instance, type, props, node) : cloneUnhiddenInstance(instance, type, props, node);
          node.stateNode = instance;
        }

        FabricUIManager.appendChildToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;

        if (needsVisibilityToggle) {
          instance = node.memoizedProps;
          props = requiredContext(rootInstanceStackCursor.current);
          type = requiredContext(contextStackCursor$1.current);
          if (isHidden) throw Error("Not yet implemented.");
          instance = createTextInstance(instance, props, type, workInProgress);
          node.stateNode = instance;
        }

        FabricUIManager.appendChildToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && (props = node.alternate, null !== props && (instance = null !== node.memoizedState, null !== props.memoizedState !== instance))) {
          props = instance ? node.child : node;
          null !== props && appendAllChildrenToContainer(containerChildSet, props, true, instance);
          break a;
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = FabricUIManager.createChildSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      FabricUIManager.completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? FabricUIManager.cloneNodeWithNewProps(recyclableInstance, newProps) : FabricUIManager.cloneNode(recyclableInstance) : null !== newProps ? FabricUIManager.cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : FabricUIManager.cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function logCapturedError(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;

    if (error instanceof Error) {
      capturedError = error.message;
      var name = error.name;

      try {
        error.message = (capturedError ? name + ": " + capturedError : name) + "\n\nThis error is located at:" + componentStack;
      } catch (e) {}
    } else error = "string" === typeof error ? Error(error + "\n\nThis error is located at:" + componentStack) : Error("Unspecified error at:" + componentStack);

    ExceptionsManager.handleException(error, false);
  }

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
        break;

      case 5:
        break;

      case 6:
        break;

      case 3:
      case 4:
        break;

      default:
        invariant(false, "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime);
    expirationTime.tag = CaptureUpdate;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      onUncaughtError(error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime);
    expirationTime.tag = CaptureUpdate;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error$jscomp$0 = errorInfo.value;

      expirationTime.payload = function () {
        return getDerivedStateFromError(error$jscomp$0);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
      var error = errorInfo.value,
          stack = errorInfo.stack;
      logError(fiber, errorInfo);
      this.componentDidCatch(error, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        return popHostContainer(workInProgress), popTopLevelContextObject(workInProgress), effectTag = workInProgress.effectTag, invariant(0 === (effectTag & 64), "The root failed to unmount after an error. This is likely a bug in React. Please file an issue."), workInProgress.effectTag = effectTag & -2049 | 64, workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      isWorking = false,
      nextUnitOfWork = null,
      nextRoot = null,
      nextRenderExpirationTime = 0,
      nextLatestAbsoluteTimeoutMs = -1,
      nextRenderDidError = false,
      nextEffect = null,
      isCommitting$1 = false,
      rootWithPendingPassiveEffects = null,
      passiveEffectCallbackHandle = null,
      passiveEffectCallback = null,
      legacyErrorBoundariesThatAlreadyFailed = null;

  function resetStack() {
    if (null !== nextUnitOfWork) for (var interruptedWork = nextUnitOfWork.return; null !== interruptedWork;) {
      var interruptedWork$jscomp$0 = interruptedWork;

      switch (interruptedWork$jscomp$0.tag) {
        case 1:
          var childContextTypes = interruptedWork$jscomp$0.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork$jscomp$0);
          break;

        case 3:
          popHostContainer(interruptedWork$jscomp$0);
          popTopLevelContextObject(interruptedWork$jscomp$0);
          break;

        case 5:
          popHostContext(interruptedWork$jscomp$0);
          break;

        case 4:
          popHostContainer(interruptedWork$jscomp$0);
          break;

        case 10:
          popProvider(interruptedWork$jscomp$0);
      }

      interruptedWork = interruptedWork.return;
    }
    nextRoot = null;
    nextRenderExpirationTime = 0;
    nextLatestAbsoluteTimeoutMs = -1;
    nextRenderDidError = false;
    nextUnitOfWork = null;
  }

  function commitAllHostEffects() {
    for (; null !== nextEffect;) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & 128) {
        var current$$1 = nextEffect.alternate;
        null !== current$$1 && (current$$1 = current$$1.ref, null !== current$$1 && ("function" === typeof current$$1 ? current$$1(null) : current$$1.current = null));
      }

      switch (effectTag & 14) {
        case 2:
          nextEffect.effectTag &= -3;
          break;

        case 6:
          nextEffect.effectTag &= -3;
          commitWork(nextEffect.alternate, nextEffect);
          break;

        case 4:
          commitWork(nextEffect.alternate, nextEffect);
          break;

        case 8:
          effectTag = nextEffect;

          a: for (var node = current$$1 = effectTag;;) {
            var current$$1$jscomp$0 = node;
            "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

            switch (current$$1$jscomp$0.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                var updateQueue = current$$1$jscomp$0.updateQueue;

                if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
                  var effect = updateQueue = updateQueue.next;

                  do {
                    var destroy = effect.destroy;

                    if (undefined !== destroy) {
                      var current$$1$jscomp$1 = current$$1$jscomp$0;

                      try {
                        destroy();
                      } catch (error) {
                        captureCommitPhaseError(current$$1$jscomp$1, error);
                      }
                    }

                    effect = effect.next;
                  } while (effect !== updateQueue);
                }

                break;

              case 1:
                safelyDetachRef(current$$1$jscomp$0);
                updateQueue = current$$1$jscomp$0.stateNode;
                if ("function" === typeof updateQueue.componentWillUnmount) try {
                  updateQueue.props = current$$1$jscomp$0.memoizedProps, updateQueue.state = current$$1$jscomp$0.memoizedState, updateQueue.componentWillUnmount();
                } catch (unmountError) {
                  captureCommitPhaseError(current$$1$jscomp$0, unmountError);
                }
                break;

              case 5:
                safelyDetachRef(current$$1$jscomp$0);
                break;

              case 4:
                FabricUIManager.createChildSet(current$$1$jscomp$0.stateNode.containerInfo);
            }

            if (null !== node.child) node.child.return = node, node = node.child;else {
              if (node === current$$1) break;

              for (; null === node.sibling;) {
                if (null === node.return || node.return === current$$1) break a;
                node = node.return;
              }

              node.sibling.return = node.return;
              node = node.sibling;
            }
          }

          effectTag.return = null;
          effectTag.child = null;
          effectTag.memoizedState = null;
          effectTag.updateQueue = null;
          effectTag = effectTag.alternate;
          null !== effectTag && (effectTag.return = null, effectTag.child = null, effectTag.memoizedState = null, effectTag.updateQueue = null);
      }

      nextEffect = nextEffect.nextEffect;
    }
  }

  function commitBeforeMutationLifecycles() {
    for (; null !== nextEffect;) {
      if (nextEffect.effectTag & 256) a: {
        var current$$1 = nextEffect.alternate,
            finishedWork = nextEffect;

        switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
            break a;

          case 1:
            if (finishedWork.effectTag & 256 && null !== current$$1) {
              var prevProps = current$$1.memoizedProps,
                  prevState = current$$1.memoizedState;
              current$$1 = finishedWork.stateNode;
              finishedWork = current$$1.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
              current$$1.__reactInternalSnapshotBeforeUpdate = finishedWork;
            }

            break a;

          case 3:
          case 5:
          case 6:
          case 4:
          case 17:
            break a;

          default:
            invariant(false, "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
      nextEffect = nextEffect.nextEffect;
    }
  }

  function commitAllLifeCycles(finishedRoot, committedExpirationTime$jscomp$0) {
    for (; null !== nextEffect;) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & 36) {
        var current$$1 = nextEffect.alternate,
            finishedWork = nextEffect,
            committedExpirationTime = committedExpirationTime$jscomp$0;

        switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
            break;

          case 1:
            var instance = finishedWork.stateNode;
            if (finishedWork.effectTag & 4) if (null === current$$1) instance.componentDidMount();else {
              var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
              instance.componentDidUpdate(prevProps, current$$1.memoizedState, instance.__reactInternalSnapshotBeforeUpdate);
            }
            current$$1 = finishedWork.updateQueue;
            null !== current$$1 && commitUpdateQueue(finishedWork, current$$1, instance, committedExpirationTime);
            break;

          case 3:
            instance = finishedWork.updateQueue;

            if (null !== instance) {
              current$$1 = null;
              if (null !== finishedWork.child) switch (finishedWork.child.tag) {
                case 5:
                  current$$1 = finishedWork.child.stateNode.canonical;
                  break;

                case 1:
                  current$$1 = finishedWork.child.stateNode;
              }
              commitUpdateQueue(finishedWork, instance, current$$1, committedExpirationTime);
            }

            break;

          case 5:
            null === current$$1 && finishedWork.effectTag & 4 && invariant(false, "The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue.");
            break;

          case 6:
            break;

          case 4:
            break;

          case 12:
            break;

          case 13:
            break;

          case 17:
            break;

          default:
            invariant(false, "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      if (effectTag & 128 && (finishedWork = nextEffect.ref, null !== finishedWork)) {
        committedExpirationTime = nextEffect.stateNode;

        switch (nextEffect.tag) {
          case 5:
            committedExpirationTime = committedExpirationTime.canonical;
        }

        "function" === typeof finishedWork ? finishedWork(committedExpirationTime) : finishedWork.current = committedExpirationTime;
      }

      effectTag & 512 && (rootWithPendingPassiveEffects = finishedRoot);
      nextEffect = nextEffect.nextEffect;
    }
  }

  function commitPassiveEffects(root, firstEffect) {
    passiveEffectCallback = passiveEffectCallbackHandle = rootWithPendingPassiveEffects = null;
    var previousIsRendering = isRendering;
    isRendering = true;

    do {
      if (firstEffect.effectTag & 512) {
        var didError = false,
            error = undefined;

        try {
          var finishedWork = firstEffect;
          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        } catch (e) {
          didError = true, error = e;
        }

        didError && captureCommitPhaseError(firstEffect, error);
      }

      firstEffect = firstEffect.nextEffect;
    } while (null !== firstEffect);

    isRendering = previousIsRendering;
    previousIsRendering = root.expirationTime;
    0 !== previousIsRendering && requestWork(root, previousIsRendering);
    isBatchingUpdates || isRendering || performWork(1073741823, false);
  }

  function flushPassiveEffects() {
    if (null !== passiveEffectCallbackHandle) {
      var callbackID = passiveEffectCallbackHandle;
      scheduledCallback = null;
      clearTimeout(callbackID);
    }

    null !== passiveEffectCallback && passiveEffectCallback();
  }

  function commitRoot(root, finishedWork) {
    isCommitting$1 = isWorking = true;
    invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.");
    var committedExpirationTime = root.pendingCommitExpirationTime;
    invariant(0 !== committedExpirationTime, "Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
    root.pendingCommitExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    markCommittedPriorityLevels(root, childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit);
    ReactCurrentOwner$2.current = null;
    updateExpirationTimeBeforeCommit = undefined;
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      childExpirationTimeBeforeCommit = false;
      var error = undefined;

      try {
        commitBeforeMutationLifecycles();
      } catch (e) {
        childExpirationTimeBeforeCommit = true, error = e;
      }

      childExpirationTimeBeforeCommit && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug in React. Please file an issue."), captureCommitPhaseError(nextEffect, error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
    }

    for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      childExpirationTimeBeforeCommit = false;
      error = undefined;

      try {
        commitAllHostEffects();
      } catch (e) {
        childExpirationTimeBeforeCommit = true, error = e;
      }

      childExpirationTimeBeforeCommit && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug in React. Please file an issue."), captureCommitPhaseError(nextEffect, error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
    }

    root.current = finishedWork;

    for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      childExpirationTimeBeforeCommit = false;
      error = undefined;

      try {
        commitAllLifeCycles(root, committedExpirationTime);
      } catch (e) {
        childExpirationTimeBeforeCommit = true, error = e;
      }

      childExpirationTimeBeforeCommit && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug in React. Please file an issue."), captureCommitPhaseError(nextEffect, error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
    }

    if (null !== updateExpirationTimeBeforeCommit && null !== rootWithPendingPassiveEffects) {
      var callback = commitPassiveEffects.bind(null, root, updateExpirationTimeBeforeCommit);
      passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {
        return scheduleDeferredCallback$1(callback);
      });
      passiveEffectCallback = callback;
    }

    isWorking = isCommitting$1 = false;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode);
    committedExpirationTime = finishedWork.expirationTime;
    finishedWork = finishedWork.childExpirationTime;
    finishedWork = finishedWork > committedExpirationTime ? finishedWork : committedExpirationTime;
    0 === finishedWork && (legacyErrorBoundariesThatAlreadyFailed = null);
    onCommit(root, finishedWork);
  }

  function completeUnitOfWork(workInProgress) {
    for (;;) {
      var current$$1 = workInProgress.alternate,
          returnFiber = workInProgress.return,
          siblingFiber = workInProgress.sibling;

      if (0 === (workInProgress.effectTag & 1024)) {
        nextUnitOfWork = workInProgress;

        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime = nextRenderExpirationTime;
          var instance = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              instance = current$$1.stateNode;
              instance.pendingContext && (instance.context = instance.pendingContext, instance.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, instance, renderExpirationTime), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (instance) {
                var currentHostContext = requiredContext(contextStackCursor$1.current),
                    internalInstanceHandle = current$$1;
                current = nextReactTag;
                nextReactTag += 2;
                var viewConfig = ReactNativeViewConfigRegistry.get(type);
                invariant("RCTView" !== type || !currentHostContext.isInAParentText, "Nesting of <View> within <Text> is not currently supported.");
                type = diffProperties(null, emptyObject, instance, viewConfig.validAttributes);
                renderExpirationTime = FabricUIManager.createNode(current, viewConfig.uiViewClassName, renderExpirationTime, type, internalInstanceHandle);
                instance = new ReactFabricHostComponent(current, viewConfig, instance);
                instance = {
                  node: renderExpirationTime,
                  canonical: instance
                };

                _appendAllChildren(instance, current$$1, false, false);

                current$$1.stateNode = instance;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else invariant(null !== current$$1.stateNode, "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              break;

            case 6:
              current && null != current$$1.stateNode ? updateHostText$1(current, current$$1, current.memoizedProps, instance) : ("string" !== typeof instance && invariant(null !== current$$1.stateNode, "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."), current = requiredContext(rootInstanceStackCursor.current), renderExpirationTime = requiredContext(contextStackCursor$1.current), current$$1.stateNode = createTextInstance(instance, current, renderExpirationTime, current$$1));
              break;

            case 11:
              break;

            case 13:
              instance = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime;
                nextUnitOfWork = current$$1;
                break a;
              }

              instance = null !== instance;
              renderExpirationTime = null !== current && null !== current.memoizedState;
              null !== current && !instance && renderExpirationTime && (current = current.child.sibling, null !== current && (viewConfig = current$$1.firstEffect, null !== viewConfig ? (current$$1.firstEffect = current, current.nextEffect = viewConfig) : (current$$1.firstEffect = current$$1.lastEffect = current, current.nextEffect = null), current.effectTag = 8));
              if (instance || renderExpirationTime) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            default:
              invariant(false, "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.");
          }

          nextUnitOfWork = null;
        }

        current$$1 = workInProgress;

        if (1 === nextRenderExpirationTime || 1 !== current$$1.childExpirationTime) {
          instance = 0;

          for (current = current$$1.child; null !== current;) {
            renderExpirationTime = current.expirationTime, viewConfig = current.childExpirationTime, renderExpirationTime > instance && (instance = renderExpirationTime), viewConfig > instance && (instance = viewConfig), current = current.sibling;
          }

          current$$1.childExpirationTime = instance;
        }

        if (null !== nextUnitOfWork) return nextUnitOfWork;
        null !== returnFiber && 0 === (returnFiber.effectTag & 1024) && (null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress));
      } else {
        workInProgress = unwindWork(workInProgress, nextRenderExpirationTime);
        if (null !== workInProgress) return workInProgress.effectTag &= 1023, workInProgress;
        null !== returnFiber && (returnFiber.firstEffect = returnFiber.lastEffect = null, returnFiber.effectTag |= 1024);
      }

      if (null !== siblingFiber) return siblingFiber;
      if (null !== returnFiber) workInProgress = returnFiber;else break;
    }

    return null;
  }

  function performUnitOfWork(workInProgress) {
    var next = beginWork(workInProgress.alternate, workInProgress, nextRenderExpirationTime);
    workInProgress.memoizedProps = workInProgress.pendingProps;
    null === next && (next = completeUnitOfWork(workInProgress));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function renderRoot(root$jscomp$0, isYieldy) {
    invariant(!isWorking, "renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.");
    flushPassiveEffects();
    isWorking = true;
    var previousDispatcher = ReactCurrentDispatcher.current;
    ReactCurrentDispatcher.current = ContextOnlyDispatcher;
    var expirationTime = root$jscomp$0.nextExpirationTimeToWorkOn;
    if (expirationTime !== nextRenderExpirationTime || root$jscomp$0 !== nextRoot || null === nextUnitOfWork) resetStack(), nextRoot = root$jscomp$0, nextRenderExpirationTime = expirationTime, nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime), root$jscomp$0.pendingCommitExpirationTime = 0;
    var didFatal = false;

    do {
      try {
        if (isYieldy) for (; null !== nextUnitOfWork && !(frameDeadline <= now$1());) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        } else for (; null !== nextUnitOfWork;) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      } catch (thrownValue) {
        if (lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null, resetHooks(), null === nextUnitOfWork) didFatal = true, onUncaughtError(thrownValue);else {
          invariant(null !== nextUnitOfWork, "Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.");
          var sourceFiber = nextUnitOfWork,
              returnFiber = sourceFiber.return;
          if (null === returnFiber) didFatal = true, onUncaughtError(thrownValue);else {
            a: {
              var root = root$jscomp$0,
                  returnFiber$jscomp$0 = returnFiber,
                  sourceFiber$jscomp$0 = sourceFiber,
                  value = thrownValue;
              returnFiber = nextRenderExpirationTime;
              sourceFiber$jscomp$0.effectTag |= 1024;
              sourceFiber$jscomp$0.firstEffect = sourceFiber$jscomp$0.lastEffect = null;

              if (null !== value && "object" === typeof value && "function" === typeof value.then) {
                var thenable = value;
                value = returnFiber$jscomp$0;
                var earliestTimeoutMs = -1,
                    startTimeMs = -1;

                do {
                  if (13 === value.tag) {
                    var current$$1 = value.alternate;

                    if (null !== current$$1 && (current$$1 = current$$1.memoizedState, null !== current$$1)) {
                      startTimeMs = 10 * (1073741822 - current$$1.timedOutAt);
                      break;
                    }

                    current$$1 = value.pendingProps.maxDuration;
                    if ("number" === typeof current$$1) if (0 >= current$$1) earliestTimeoutMs = 0;else if (-1 === earliestTimeoutMs || current$$1 < earliestTimeoutMs) earliestTimeoutMs = current$$1;
                  }

                  value = value.return;
                } while (null !== value);

                value = returnFiber$jscomp$0;

                do {
                  if (current$$1 = 13 === value.tag) current$$1 = undefined === value.memoizedProps.fallback ? false : null === value.memoizedState;

                  if (current$$1) {
                    returnFiber$jscomp$0 = value.updateQueue;
                    null === returnFiber$jscomp$0 ? (returnFiber$jscomp$0 = new Set(), returnFiber$jscomp$0.add(thenable), value.updateQueue = returnFiber$jscomp$0) : returnFiber$jscomp$0.add(thenable);

                    if (0 === (value.mode & 1)) {
                      value.effectTag |= 64;
                      sourceFiber$jscomp$0.effectTag &= -1957;
                      1 === sourceFiber$jscomp$0.tag && (null === sourceFiber$jscomp$0.alternate ? sourceFiber$jscomp$0.tag = 17 : (returnFiber = createUpdate(1073741823), returnFiber.tag = ForceUpdate, enqueueUpdate(sourceFiber$jscomp$0, returnFiber)));
                      sourceFiber$jscomp$0.expirationTime = 1073741823;
                      break a;
                    }

                    sourceFiber$jscomp$0 = root;
                    returnFiber$jscomp$0 = returnFiber;
                    var pingCache = sourceFiber$jscomp$0.pingCache;
                    null === pingCache ? (pingCache = sourceFiber$jscomp$0.pingCache = new PossiblyWeakMap(), current$$1 = new Set(), pingCache.set(thenable, current$$1)) : (current$$1 = pingCache.get(thenable), undefined === current$$1 && (current$$1 = new Set(), pingCache.set(thenable, current$$1)));
                    current$$1.has(returnFiber$jscomp$0) || (current$$1.add(returnFiber$jscomp$0), sourceFiber$jscomp$0 = pingSuspendedRoot.bind(null, sourceFiber$jscomp$0, thenable, returnFiber$jscomp$0), thenable.then(sourceFiber$jscomp$0, sourceFiber$jscomp$0));
                    -1 === earliestTimeoutMs ? root = 1073741823 : (-1 === startTimeMs && (startTimeMs = 10 * (1073741822 - findEarliestOutstandingPriorityLevel(root, returnFiber)) - 5e3), root = startTimeMs + earliestTimeoutMs);
                    0 <= root && nextLatestAbsoluteTimeoutMs < root && (nextLatestAbsoluteTimeoutMs = root);
                    value.effectTag |= 2048;
                    value.expirationTime = returnFiber;
                    break a;
                  }

                  value = value.return;
                } while (null !== value);

                value = Error((getComponentName(sourceFiber$jscomp$0.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber$jscomp$0));
              }

              nextRenderDidError = true;
              value = createCapturedValue(value, sourceFiber$jscomp$0);
              root = returnFiber$jscomp$0;

              do {
                switch (root.tag) {
                  case 3:
                    root.effectTag |= 2048;
                    root.expirationTime = returnFiber;
                    returnFiber = createRootErrorUpdate(root, value, returnFiber);
                    enqueueCapturedUpdate(root, returnFiber);
                    break a;

                  case 1:
                    if (earliestTimeoutMs = value, startTimeMs = root.type, sourceFiber$jscomp$0 = root.stateNode, 0 === (root.effectTag & 64) && ("function" === typeof startTimeMs.getDerivedStateFromError || null !== sourceFiber$jscomp$0 && "function" === typeof sourceFiber$jscomp$0.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(sourceFiber$jscomp$0)))) {
                      root.effectTag |= 2048;
                      root.expirationTime = returnFiber;
                      returnFiber = createClassErrorUpdate(root, earliestTimeoutMs, returnFiber);
                      enqueueCapturedUpdate(root, returnFiber);
                      break a;
                    }

                }

                root = root.return;
              } while (null !== root);
            }

            nextUnitOfWork = completeUnitOfWork(sourceFiber);
            continue;
          }
        }
      }

      break;
    } while (1);

    isWorking = false;
    ReactCurrentDispatcher.current = previousDispatcher;
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
    resetHooks();
    if (didFatal) nextRoot = null, root$jscomp$0.finishedWork = null;else if (null !== nextUnitOfWork) root$jscomp$0.finishedWork = null;else {
      previousDispatcher = root$jscomp$0.current.alternate;
      invariant(null !== previousDispatcher, "Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.");
      nextRoot = null;

      if (nextRenderDidError) {
        didFatal = root$jscomp$0.latestPendingTime;
        sourceFiber = root$jscomp$0.latestSuspendedTime;
        returnFiber = root$jscomp$0.latestPingedTime;

        if (0 !== didFatal && didFatal < expirationTime || 0 !== sourceFiber && sourceFiber < expirationTime || 0 !== returnFiber && returnFiber < expirationTime) {
          markSuspendedPriorityLevel(root$jscomp$0, expirationTime);
          onSuspend(root$jscomp$0, previousDispatcher, expirationTime, root$jscomp$0.expirationTime, -1);
          return;
        }

        if (!root$jscomp$0.didError && isYieldy) {
          root$jscomp$0.didError = true;
          expirationTime = root$jscomp$0.nextExpirationTimeToWorkOn = expirationTime;
          isYieldy = root$jscomp$0.expirationTime = 1073741823;
          onSuspend(root$jscomp$0, previousDispatcher, expirationTime, isYieldy, -1);
          return;
        }
      }

      isYieldy && -1 !== nextLatestAbsoluteTimeoutMs ? (markSuspendedPriorityLevel(root$jscomp$0, expirationTime), isYieldy = 10 * (1073741822 - findEarliestOutstandingPriorityLevel(root$jscomp$0, expirationTime)), isYieldy < nextLatestAbsoluteTimeoutMs && (nextLatestAbsoluteTimeoutMs = isYieldy), isYieldy = 10 * (1073741822 - requestCurrentTime()), isYieldy = nextLatestAbsoluteTimeoutMs - isYieldy, onSuspend(root$jscomp$0, previousDispatcher, expirationTime, root$jscomp$0.expirationTime, 0 > isYieldy ? 0 : isYieldy)) : (root$jscomp$0.pendingCommitExpirationTime = expirationTime, root$jscomp$0.finishedWork = previousDispatcher);
    }
  }

  function captureCommitPhaseError(sourceFiber, value) {
    for (var fiber = sourceFiber.return; null !== fiber;) {
      switch (fiber.tag) {
        case 1:
          var instance = fiber.stateNode;

          if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
            sourceFiber = createCapturedValue(value, sourceFiber);
            sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
            enqueueUpdate(fiber, sourceFiber);
            scheduleWork(fiber, 1073741823);
            return;
          }

          break;

        case 3:
          sourceFiber = createCapturedValue(value, sourceFiber);
          sourceFiber = createRootErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          scheduleWork(fiber, 1073741823);
          return;
      }

      fiber = fiber.return;
    }

    3 === sourceFiber.tag && (fiber = createCapturedValue(value, sourceFiber), fiber = createRootErrorUpdate(sourceFiber, fiber, 1073741823), enqueueUpdate(sourceFiber, fiber), scheduleWork(sourceFiber, 1073741823));
  }

  function computeExpirationForFiber(currentTime, fiber) {
    var priorityLevel = scheduler.unstable_getCurrentPriorityLevel(),
        expirationTime = undefined;
    if (0 === (fiber.mode & 1)) expirationTime = 1073741823;else if (isWorking && !isCommitting$1) expirationTime = nextRenderExpirationTime;else {
      switch (priorityLevel) {
        case scheduler.unstable_ImmediatePriority:
          expirationTime = 1073741823;
          break;

        case scheduler.unstable_UserBlockingPriority:
          expirationTime = 1073741822 - 10 * (((1073741822 - currentTime + 15) / 10 | 0) + 1);
          break;

        case scheduler.unstable_NormalPriority:
          expirationTime = 1073741822 - 25 * (((1073741822 - currentTime + 500) / 25 | 0) + 1);
          break;

        case scheduler.unstable_LowPriority:
        case scheduler.unstable_IdlePriority:
          expirationTime = 1;
          break;

        default:
          invariant(false, "Unknown priority level. This error is likely caused by a bug in React. Please file an issue.");
      }

      null !== nextRoot && expirationTime === nextRenderExpirationTime && --expirationTime;
    }
    priorityLevel === scheduler.unstable_UserBlockingPriority && (0 === lowestPriorityPendingInteractiveExpirationTime || expirationTime < lowestPriorityPendingInteractiveExpirationTime) && (lowestPriorityPendingInteractiveExpirationTime = expirationTime);
    return expirationTime;
  }

  function pingSuspendedRoot(root, thenable, pingTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    if (null !== nextRoot && nextRenderExpirationTime === pingTime) nextRoot = null;else if (thenable = root.earliestSuspendedTime, pingCache = root.latestSuspendedTime, 0 !== thenable && pingTime <= thenable && pingTime >= pingCache) {
      root.didError = false;
      thenable = root.latestPingedTime;
      if (0 === thenable || thenable > pingTime) root.latestPingedTime = pingTime;
      findNextExpirationTimeToWorkOn(pingTime, root);
      pingTime = root.expirationTime;
      0 !== pingTime && requestWork(root, pingTime);
    }
  }

  function scheduleWork(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    fiber = root;
    null !== fiber && (!isWorking && 0 !== nextRenderExpirationTime && expirationTime > nextRenderExpirationTime && resetStack(), markPendingPriorityLevel(fiber, expirationTime), isWorking && !isCommitting$1 && nextRoot === fiber || requestWork(fiber, fiber.expirationTime), nestedUpdateCount > NESTED_UPDATE_LIMIT && (nestedUpdateCount = 0, invariant(false, "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.")));
  }

  var firstScheduledRoot = null,
      lastScheduledRoot = null,
      callbackExpirationTime = 0,
      callbackID = undefined,
      isRendering = false,
      nextFlushedRoot = null,
      nextFlushedExpirationTime = 0,
      lowestPriorityPendingInteractiveExpirationTime = 0,
      hasUnhandledError = false,
      unhandledError = null,
      isBatchingUpdates = false,
      isUnbatchingUpdates = false,
      completedBatches = null,
      originalStartTimeMs = now$1(),
      currentRendererTime = 1073741822 - (originalStartTimeMs / 10 | 0),
      currentSchedulerTime = currentRendererTime,
      NESTED_UPDATE_LIMIT = 50,
      nestedUpdateCount = 0,
      lastCommittedRootDuringThisBatch = null;

  function recomputeCurrentRendererTime() {
    currentRendererTime = 1073741822 - ((now$1() - originalStartTimeMs) / 10 | 0);
  }

  function scheduleCallbackWithExpirationTime(root, expirationTime) {
    if (0 !== callbackExpirationTime) {
      if (expirationTime < callbackExpirationTime) return;
      null !== callbackID && (root = callbackID, scheduledCallback = null, clearTimeout(root));
    }

    callbackExpirationTime = expirationTime;
    root = now$1() - originalStartTimeMs;
    callbackID = scheduleDeferredCallback$1(performAsyncWork, {
      timeout: 10 * (1073741822 - expirationTime) - root
    });
  }

  function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {
    root.expirationTime = rootExpirationTime;
    0 !== msUntilTimeout || frameDeadline <= now$1() ? 0 < msUntilTimeout && (root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout)) : (root.pendingCommitExpirationTime = suspendedExpirationTime, root.finishedWork = finishedWork);
  }

  function onTimeout(root, finishedWork, suspendedExpirationTime) {
    root.pendingCommitExpirationTime = suspendedExpirationTime;
    root.finishedWork = finishedWork;
    recomputeCurrentRendererTime();
    currentSchedulerTime = currentRendererTime;
    invariant(!isRendering, "work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.");
    nextFlushedRoot = root;
    nextFlushedExpirationTime = suspendedExpirationTime;
    performWorkOnRoot(root, suspendedExpirationTime, false);
    performWork(1073741823, false);
  }

  function onCommit(root, expirationTime) {
    root.expirationTime = expirationTime;
    root.finishedWork = null;
  }

  function requestCurrentTime() {
    if (isRendering) return currentSchedulerTime;
    findHighestPriorityRoot();
    if (0 === nextFlushedExpirationTime || 1 === nextFlushedExpirationTime) recomputeCurrentRendererTime(), currentSchedulerTime = currentRendererTime;
    return currentSchedulerTime;
  }

  function requestWork(root, expirationTime) {
    null === root.nextScheduledRoot ? (root.expirationTime = expirationTime, null === lastScheduledRoot ? (firstScheduledRoot = lastScheduledRoot = root, root.nextScheduledRoot = root) : (lastScheduledRoot = lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot.nextScheduledRoot = firstScheduledRoot)) : expirationTime > root.expirationTime && (root.expirationTime = expirationTime);
    isRendering || (isBatchingUpdates ? isUnbatchingUpdates : 1073741823 === expirationTime ? performWork(1073741823, false) : scheduleCallbackWithExpirationTime(root, expirationTime));
  }

  function findHighestPriorityRoot() {
    var highestPriorityWork = 0,
        highestPriorityRoot = null;
    if (null !== lastScheduledRoot) for (var previousScheduledRoot = lastScheduledRoot, root = firstScheduledRoot; null !== root;) {
      var remainingExpirationTime = root.expirationTime;

      if (0 === remainingExpirationTime) {
        invariant(null !== previousScheduledRoot && null !== lastScheduledRoot, "Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.");

        if (root === root.nextScheduledRoot) {
          firstScheduledRoot = lastScheduledRoot = root.nextScheduledRoot = null;
          break;
        } else if (root === firstScheduledRoot) firstScheduledRoot = remainingExpirationTime = root.nextScheduledRoot, lastScheduledRoot.nextScheduledRoot = remainingExpirationTime, root.nextScheduledRoot = null;else if (root === lastScheduledRoot) {
          lastScheduledRoot = previousScheduledRoot;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
          root.nextScheduledRoot = null;
          break;
        } else previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot, root.nextScheduledRoot = null;

        root = previousScheduledRoot.nextScheduledRoot;
      } else {
        remainingExpirationTime > highestPriorityWork && (highestPriorityWork = remainingExpirationTime, highestPriorityRoot = root);
        if (root === lastScheduledRoot) break;
        if (1073741823 === highestPriorityWork) break;
        previousScheduledRoot = root;
        root = root.nextScheduledRoot;
      }
    }
    nextFlushedRoot = highestPriorityRoot;
    nextFlushedExpirationTime = highestPriorityWork;
  }

  function performAsyncWork(didTimeout) {
    if (didTimeout && null !== firstScheduledRoot) {
      recomputeCurrentRendererTime();
      didTimeout = firstScheduledRoot;

      do {
        var expirationTime = didTimeout.expirationTime;
        0 !== expirationTime && currentRendererTime <= expirationTime && (didTimeout.nextExpirationTimeToWorkOn = currentRendererTime);
        didTimeout = didTimeout.nextScheduledRoot;
      } while (didTimeout !== firstScheduledRoot);
    }

    performWork(0, true);
  }

  function performWork(minExpirationTime, isYieldy) {
    findHighestPriorityRoot();
    if (isYieldy) for (recomputeCurrentRendererTime(), currentSchedulerTime = currentRendererTime; null !== nextFlushedRoot && 0 !== nextFlushedExpirationTime && minExpirationTime <= nextFlushedExpirationTime && !(frameDeadline <= now$1() && currentRendererTime > nextFlushedExpirationTime);) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime), findHighestPriorityRoot(), recomputeCurrentRendererTime(), currentSchedulerTime = currentRendererTime;
    } else for (; null !== nextFlushedRoot && 0 !== nextFlushedExpirationTime && minExpirationTime <= nextFlushedExpirationTime;) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false), findHighestPriorityRoot();
    }
    isYieldy && (callbackExpirationTime = 0, callbackID = null);
    0 !== nextFlushedExpirationTime && scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);
    nestedUpdateCount = 0;
    lastCommittedRootDuringThisBatch = null;
    if (null !== completedBatches) for (minExpirationTime = completedBatches, completedBatches = null, isYieldy = 0; isYieldy < minExpirationTime.length; isYieldy++) {
      var batch = minExpirationTime[isYieldy];

      try {
        batch._onComplete();
      } catch (error) {
        hasUnhandledError || (hasUnhandledError = true, unhandledError = error);
      }
    }
    if (hasUnhandledError) throw minExpirationTime = unhandledError, unhandledError = null, hasUnhandledError = false, minExpirationTime;
  }

  function performWorkOnRoot(root, expirationTime, isYieldy) {
    invariant(!isRendering, "performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.");
    isRendering = true;

    if (isYieldy) {
      var _finishedWork = root.finishedWork;
      null !== _finishedWork ? completeRoot$1(root, _finishedWork, expirationTime) : (root.finishedWork = null, _finishedWork = root.timeoutHandle, -1 !== _finishedWork && (root.timeoutHandle = -1, cancelTimeout(_finishedWork)), renderRoot(root, isYieldy), _finishedWork = root.finishedWork, null !== _finishedWork && (frameDeadline <= now$1() ? root.finishedWork = _finishedWork : completeRoot$1(root, _finishedWork, expirationTime)));
    } else _finishedWork = root.finishedWork, null !== _finishedWork ? completeRoot$1(root, _finishedWork, expirationTime) : (root.finishedWork = null, _finishedWork = root.timeoutHandle, -1 !== _finishedWork && (root.timeoutHandle = -1, cancelTimeout(_finishedWork)), renderRoot(root, isYieldy), _finishedWork = root.finishedWork, null !== _finishedWork && completeRoot$1(root, _finishedWork, expirationTime));

    isRendering = false;
  }

  function completeRoot$1(root, finishedWork, expirationTime) {
    var firstBatch = root.firstBatch;

    if (null !== firstBatch && firstBatch._expirationTime >= expirationTime && (null === completedBatches ? completedBatches = [firstBatch] : completedBatches.push(firstBatch), firstBatch._defer)) {
      root.finishedWork = finishedWork;
      root.expirationTime = 0;
      return;
    }

    root.finishedWork = null;
    root === lastCommittedRootDuringThisBatch ? nestedUpdateCount++ : (lastCommittedRootDuringThisBatch = root, nestedUpdateCount = 0);
    scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
      commitRoot(root, finishedWork);
    });
  }

  function onUncaughtError(error) {
    invariant(null !== nextFlushedRoot, "Should be working on a root. This error is likely caused by a bug in React. Please file an issue.");
    nextFlushedRoot.expirationTime = 0;
    hasUnhandledError || (hasUnhandledError = true, unhandledError = error);
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;
    undefined === fiber && ("function" === typeof component.render ? invariant(false, "Unable to find node on an unmounted component.") : invariant(false, "Argument appears to not be a ReactComponent. Keys: %s", Object.keys(component)));
    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime();
    current$$1 = computeExpirationForFiber(currentTime, current$$1);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        invariant(2 === isFiberMountedImpl(parentComponent) && 1 === parentComponent.tag, "Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        invariant(false, "Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
        parentContext = undefined;
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    callback = createUpdate(current$$1);
    callback.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (callback.callback = container);
    flushPassiveEffects();
    enqueueUpdate(currentTime, callback);
    scheduleWork(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    invariant(false, "getInspectorDataForViewTag() is not available in production");
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  _batchedUpdatesImpl = function _batchedUpdatesImpl(fn, a) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;

    try {
      return fn(a);
    } finally {
      (isBatchingUpdates = previousIsBatchingUpdates) || isRendering || performWork(1073741823, false);
    }
  };

  _flushInteractiveUpdatesImpl = function _flushInteractiveUpdatesImpl() {
    isRendering || 0 === lowestPriorityPendingInteractiveExpirationTime || (performWork(lowestPriorityPendingInteractiveExpirationTime, false), lowestPriorityPendingInteractiveExpirationTime = 0);
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          UIManager.measureLayout(findNodeHandle(this), relativeToNativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = createFiber(3, null, null, 0);
        var root$jscomp$0 = {
          current: root,
          containerInfo: containerTag,
          pendingChildren: null,
          pingCache: null,
          earliestPendingTime: 0,
          latestPendingTime: 0,
          earliestSuspendedTime: 0,
          latestSuspendedTime: 0,
          latestPingedTime: 0,
          didError: false,
          pendingCommitExpirationTime: 0,
          finishedWork: null,
          timeoutHandle: -1,
          context: null,
          pendingContext: null,
          hydrate: false,
          nextExpirationTimeToWorkOn: 0,
          expirationTime: 0,
          firstBatch: null,
          nextScheduledRoot: null
        };
        root = root.stateNode = root$jscomp$0;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
          },
          measureInWindow: function measureInWindow(callback) {
            UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(findNodeHandle(this), relativeToNativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideProps: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      }
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.3",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},331,[11,80,149,42,49,151,74,152,332,153,91]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FabricUIManager = global.nativeFabricUIManager;
  module.exports = FabricUIManager;
},332,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var MissingNativeEventEmitterShim = _$$_REQUIRE(_dependencyMap[5]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[6]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[7]);

  var RCTAppState = NativeModules.AppState;

  var logError = _$$_REQUIRE(_dependencyMap[8]);

  var invariant = _$$_REQUIRE(_dependencyMap[9]);

  var AppState = function (_NativeEventEmitter) {
    _inherits(AppState, _NativeEventEmitter);

    function AppState() {
      var _this;

      _classCallCheck(this, AppState);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AppState).call(this, RCTAppState));
      _this.isAvailable = true;
      _this.isAvailable = true;
      _this._eventHandlers = {
        change: new Map(),
        memoryWarning: new Map()
      };
      _this.currentState = RCTAppState.initialAppState || 'active';
      var eventUpdated = false;

      _this.addListener('appStateDidChange', function (appStateData) {
        eventUpdated = true;
        _this.currentState = appStateData.app_state;
      });

      RCTAppState.getCurrentAppState(function (appStateData) {
        if (!eventUpdated && _this.currentState !== appStateData.app_state) {
          _this.currentState = appStateData.app_state;

          _this.emit('appStateDidChange', appStateData);
        }
      }, logError);
      return _this;
    }

    _createClass(AppState, [{
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to subscribe to unknown event: "%s"', type);

        if (type === 'change') {
          this._eventHandlers[type].set(handler, this.addListener('appStateDidChange', function (appStateData) {
            handler(appStateData.app_state);
          }));
        } else if (type === 'memoryWarning') {
          this._eventHandlers[type].set(handler, this.addListener('memoryWarning', handler));
        }
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type, handler) {
        invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to remove listener for unknown event: "%s"', type);

        if (!this._eventHandlers[type].has(handler)) {
          return;
        }

        this._eventHandlers[type].get(handler).remove();

        this._eventHandlers[type].delete(handler);
      }
    }]);

    return AppState;
  }(NativeEventEmitter);

  {
    AppState = new AppState();
  }
  module.exports = AppState;
},333,[22,23,30,33,36,116,117,8,138,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[1]);

  var RCTAsyncStorage = NativeModules.AsyncRocksDBStorage || NativeModules.AsyncSQLiteDBStorage || NativeModules.AsyncLocalStorage;
  var AsyncStorage = {
    _getRequests: [],
    _getKeys: [],
    _immediate: null,
    getItem: function getItem(key, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiGet([key], function (errors, result) {
          var value = result && result[0] && result[0][1] ? result[0][1] : null;
          var errs = convertErrors(errors);
          callback && callback(errs && errs[0], value);

          if (errs) {
            reject(errs[0]);
          } else {
            resolve(value);
          }
        });
      });
    },
    setItem: function setItem(key, value, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiSet([[key, value]], function (errors) {
          var errs = convertErrors(errors);
          callback && callback(errs && errs[0]);

          if (errs) {
            reject(errs[0]);
          } else {
            resolve(null);
          }
        });
      });
    },
    removeItem: function removeItem(key, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiRemove([key], function (errors) {
          var errs = convertErrors(errors);
          callback && callback(errs && errs[0]);

          if (errs) {
            reject(errs[0]);
          } else {
            resolve(null);
          }
        });
      });
    },
    mergeItem: function mergeItem(key, value, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiMerge([[key, value]], function (errors) {
          var errs = convertErrors(errors);
          callback && callback(errs && errs[0]);

          if (errs) {
            reject(errs[0]);
          } else {
            resolve(null);
          }
        });
      });
    },
    clear: function clear(callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.clear(function (error) {
          callback && callback(convertError(error));

          if (error && convertError(error)) {
            reject(convertError(error));
          } else {
            resolve(null);
          }
        });
      });
    },
    getAllKeys: function getAllKeys(callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.getAllKeys(function (error, keys) {
          callback && callback(convertError(error), keys);

          if (error) {
            reject(convertError(error));
          } else {
            resolve(keys);
          }
        });
      });
    },
    flushGetRequests: function flushGetRequests() {
      var getRequests = this._getRequests;
      var getKeys = this._getKeys;
      this._getRequests = [];
      this._getKeys = [];
      RCTAsyncStorage.multiGet(getKeys, function (errors, result) {
        var map = {};
        result && result.forEach(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              key = _ref2[0],
              value = _ref2[1];

          map[key] = value;
          return value;
        });
        var reqLength = getRequests.length;

        for (var i = 0; i < reqLength; i++) {
          var request = getRequests[i];
          var requestKeys = request.keys;
          var requestResult = requestKeys.map(function (key) {
            return [key, map[key]];
          });
          request.callback && request.callback(null, requestResult);
          request.resolve && request.resolve(requestResult);
        }
      });
    },
    multiGet: function multiGet(keys, callback) {
      var _this = this;

      if (!this._immediate) {
        this._immediate = setImmediate(function () {
          _this._immediate = null;

          _this.flushGetRequests();
        });
      }

      var getRequest = {
        keys: keys,
        callback: callback,
        keyIndex: this._getKeys.length,
        resolve: null,
        reject: null
      };
      var promiseResult = new Promise(function (resolve, reject) {
        getRequest.resolve = resolve;
        getRequest.reject = reject;
      });

      this._getRequests.push(getRequest);

      keys.forEach(function (key) {
        if (_this._getKeys.indexOf(key) === -1) {
          _this._getKeys.push(key);
        }
      });
      return promiseResult;
    },
    multiSet: function multiSet(keyValuePairs, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {
          var error = convertErrors(errors);
          callback && callback(error);

          if (error) {
            reject(error);
          } else {
            resolve(null);
          }
        });
      });
    },
    multiRemove: function multiRemove(keys, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiRemove(keys, function (errors) {
          var error = convertErrors(errors);
          callback && callback(error);

          if (error) {
            reject(error);
          } else {
            resolve(null);
          }
        });
      });
    },
    multiMerge: function multiMerge(keyValuePairs, callback) {
      return new Promise(function (resolve, reject) {
        RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {
          var error = convertErrors(errors);
          callback && callback(error);

          if (error) {
            reject(error);
          } else {
            resolve(null);
          }
        });
      });
    }
  };

  if (!RCTAsyncStorage.multiMerge) {
    delete AsyncStorage.mergeItem;
    delete AsyncStorage.multiMerge;
  }

  function convertErrors(errs) {
    if (!errs) {
      return null;
    }

    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {
      return convertError(e);
    });
  }

  function convertError(error) {
    if (!error) {
      return null;
    }

    var out = new Error(error.message);
    out.key = error.key;
    return out;
  }

  module.exports = AsyncStorage;
},334,[12,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var checkPropTypes = PropTypes.checkPropTypes;

  var RCTCameraRollManager = _$$_REQUIRE(_dependencyMap[3]).CameraRollManager;

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var GROUP_TYPES_OPTIONS = {
    Album: 'Album',
    All: 'All',
    Event: 'Event',
    Faces: 'Faces',
    Library: 'Library',
    PhotoStream: 'PhotoStream',
    SavedPhotos: 'SavedPhotos'
  };
  var ASSET_TYPE_OPTIONS = {
    All: 'All',
    Videos: 'Videos',
    Photos: 'Photos'
  };
  var getPhotosParamChecker = deprecatedCreateStrictShapeTypeChecker({
    first: PropTypes.number.isRequired,
    after: PropTypes.string,
    groupTypes: PropTypes.oneOf(Object.keys(GROUP_TYPES_OPTIONS)),
    groupName: PropTypes.string,
    assetType: PropTypes.oneOf(Object.keys(ASSET_TYPE_OPTIONS)),
    mimeTypes: PropTypes.arrayOf(PropTypes.string)
  });
  var getPhotosReturnChecker = deprecatedCreateStrictShapeTypeChecker({
    edges: PropTypes.arrayOf(deprecatedCreateStrictShapeTypeChecker({
      node: deprecatedCreateStrictShapeTypeChecker({
        type: PropTypes.string.isRequired,
        group_name: PropTypes.string.isRequired,
        image: deprecatedCreateStrictShapeTypeChecker({
          uri: PropTypes.string.isRequired,
          height: PropTypes.number.isRequired,
          width: PropTypes.number.isRequired,
          isStored: PropTypes.bool,
          playableDuration: PropTypes.number.isRequired
        }).isRequired,
        timestamp: PropTypes.number.isRequired,
        location: deprecatedCreateStrictShapeTypeChecker({
          latitude: PropTypes.number,
          longitude: PropTypes.number,
          altitude: PropTypes.number,
          heading: PropTypes.number,
          speed: PropTypes.number
        })
      }).isRequired
    })).isRequired,
    page_info: deprecatedCreateStrictShapeTypeChecker({
      has_next_page: PropTypes.bool.isRequired,
      start_cursor: PropTypes.string,
      end_cursor: PropTypes.string
    }).isRequired
  });

  var CameraRoll = function () {
    function CameraRoll() {
      _classCallCheck(this, CameraRoll);
    }

    _createClass(CameraRoll, null, [{
      key: "saveImageWithTag",
      value: function saveImageWithTag(tag) {
        console.warn('`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.');
        return this.saveToCameraRoll(tag, 'photo');
      }
    }, {
      key: "deletePhotos",
      value: function deletePhotos(photos) {
        return RCTCameraRollManager.deletePhotos(photos);
      }
    }, {
      key: "saveToCameraRoll",
      value: function saveToCameraRoll(tag, type) {
        invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');
        invariant(type === 'photo' || type === 'video' || type === undefined, "The second argument to saveToCameraRoll must be 'photo' or 'video'. You passed " + (type || 'unknown'));
        var mediaType = 'photo';

        if (type) {
          mediaType = type;
        } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {
          mediaType = 'video';
        }

        return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);
      }
    }, {
      key: "getPhotos",
      value: function getPhotos(params) {
        if (arguments.length > 1) {
          console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');
          var successCallback = arguments[1];

          var errorCallback = arguments[2] || function () {};

          RCTCameraRollManager.getPhotos(params).then(successCallback, errorCallback);
        }

        return RCTCameraRollManager.getPhotos(params);
      }
    }]);

    return CameraRoll;
  }();

  CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
  CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;
  module.exports = CameraRoll;
},335,[22,23,61,8,183,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Clipboard = _$$_REQUIRE(_dependencyMap[0]).Clipboard;

  module.exports = {
    getString: function getString() {
      return Clipboard.getString();
    },
    setString: function setString(content) {
      Clipboard.setString(content);
    }
  };
},336,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _regeneratorRuntime = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var DatePickerModule = _$$_REQUIRE(_dependencyMap[3]).DatePickerAndroid;

  function _toMillis(options, key) {
    var dateVal = options[key];

    if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {
      options[key] = dateVal.getTime();
    }
  }

  var DatePickerAndroid = function () {
    function DatePickerAndroid() {
      _classCallCheck(this, DatePickerAndroid);
    }

    _createClass(DatePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        var optionsMs;
        return _regeneratorRuntime.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                optionsMs = options;

                if (optionsMs != null) {
                  _toMillis(optionsMs, 'date');

                  _toMillis(optionsMs, 'minDate');

                  _toMillis(optionsMs, 'maxDate');
                }

                return _context.abrupt("return", DatePickerModule.open(options));

              case 3:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);

    return DatePickerAndroid;
  }();

  DatePickerAndroid.dateSetAction = 'dateSetAction';
  DatePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = DatePickerAndroid;
},337,[136,22,23,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var RCTImagePicker = _$$_REQUIRE(_dependencyMap[1]).ImagePickerIOS;

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      return RCTImagePicker.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      return RCTImagePicker.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      config = _objectSpread({
        videoMode: false
      }, config);
      return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      config = _objectSpread({
        showImages: true,
        showVideos: false
      }, config);
      return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},338,[46,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[5]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[6]);

  var Platform = _$$_REQUIRE(_dependencyMap[7]);

  var invariant = _$$_REQUIRE(_dependencyMap[8]);

  var LinkingManager = NativeModules.IntentAndroid;

  var Linking = function (_NativeEventEmitter) {
    _inherits(Linking, _NativeEventEmitter);

    function Linking() {
      _classCallCheck(this, Linking);

      return _possibleConstructorReturn(this, _getPrototypeOf(Linking).call(this, LinkingManager));
    }

    _createClass(Linking, [{
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        this.addListener(type, handler);
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type, handler) {
        this.removeListener(type, handler);
      }
    }, {
      key: "openURL",
      value: function openURL(url) {
        this._validateURL(url);

        return LinkingManager.openURL(url);
      }
    }, {
      key: "canOpenURL",
      value: function canOpenURL(url) {
        this._validateURL(url);

        return LinkingManager.canOpenURL(url);
      }
    }, {
      key: "getInitialURL",
      value: function getInitialURL() {
        return LinkingManager.getInitialURL();
      }
    }, {
      key: "sendIntent",
      value: function sendIntent(action, extras) {
        return LinkingManager.sendIntent(action, extras);
      }
    }, {
      key: "_validateURL",
      value: function _validateURL(url) {
        invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
        invariant(url, 'Invalid URL: cannot be empty');
      }
    }]);

    return Linking;
  }(NativeEventEmitter);

  module.exports = new Linking();
},339,[22,23,30,33,36,117,8,43,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[0]);

  var NativeModules = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var RCTNetInfo = NativeModules.NetInfo;
  var NetInfoEventEmitter = new NativeEventEmitter(RCTNetInfo);
  var DEVICE_CONNECTIVITY_EVENT = 'networkStatusDidChange';

  var _subscriptions = new Map();

  var _isConnectedDeprecated;

  {
    _isConnectedDeprecated = function _isConnectedDeprecated(connectionType) {
      return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';
    };
  }

  function _isConnected(connection) {
    return connection.type !== 'none' && connection.type !== 'unknown';
  }

  var _isConnectedSubscriptions = new Map();

  var NetInfo = {
    addEventListener: function addEventListener(eventName, handler) {
      var listener;

      if (eventName === 'connectionChange') {
        listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
          handler({
            type: appStateData.connectionType,
            effectiveType: appStateData.effectiveConnectionType
          });
        });
      } else if (eventName === 'change') {
        console.warn('NetInfo\'s "change" event is deprecated. Listen to the "connectionChange" event instead.');
        listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
          handler(appStateData.network_info);
        });
      } else {
        console.warn('Trying to subscribe to unknown event: "' + eventName + '"');
        return {
          remove: function remove() {}
        };
      }

      _subscriptions.set(handler, listener);

      return {
        remove: function remove() {
          return NetInfo.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _subscriptions.get(handler);

      if (!listener) {
        return;
      }

      listener.remove();

      _subscriptions.delete(handler);
    },
    fetch: function fetch() {
      console.warn('NetInfo.fetch() is deprecated. Use NetInfo.getConnectionInfo() instead.');
      return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
        return resp.network_info;
      });
    },
    getConnectionInfo: function getConnectionInfo() {
      return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
        return {
          type: resp.connectionType,
          effectiveType: resp.effectiveConnectionType
        };
      });
    },
    isConnected: {
      addEventListener: function addEventListener(eventName, handler) {
        var listener = function listener(connection) {
          if (eventName === 'change') {
            handler(_isConnectedDeprecated(connection));
          } else if (eventName === 'connectionChange') {
            handler(_isConnected(connection));
          }
        };

        _isConnectedSubscriptions.set(handler, listener);

        NetInfo.addEventListener(eventName, listener);
        return {
          remove: function remove() {
            return NetInfo.isConnected.removeEventListener(eventName, handler);
          }
        };
      },
      removeEventListener: function removeEventListener(eventName, handler) {
        var listener = _isConnectedSubscriptions.get(handler);

        NetInfo.removeEventListener(eventName, listener);

        _isConnectedSubscriptions.delete(handler);
      },
      fetch: function fetch() {
        return NetInfo.getConnectionInfo().then(_isConnected);
      }
    },
    isConnectionExpensive: function isConnectionExpensive() {
      return RCTNetInfo.isConnectionMetered();
    }
  };
  module.exports = NetInfo;
},340,[117,8,43]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[2]);

  var RCTPushNotificationManager = _$$_REQUIRE(_dependencyMap[3]).PushNotificationManager;

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var PushNotificationEmitter = new NativeEventEmitter(RCTPushNotificationManager);

  var _notifHandlers = new Map();

  var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
  var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
  var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
  var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';

  var PushNotificationIOS = function () {
    _createClass(PushNotificationIOS, null, [{
      key: "presentLocalNotification",
      value: function presentLocalNotification(details) {
        RCTPushNotificationManager.presentLocalNotification(details);
      }
    }, {
      key: "scheduleLocalNotification",
      value: function scheduleLocalNotification(details) {
        RCTPushNotificationManager.scheduleLocalNotification(details);
      }
    }, {
      key: "cancelAllLocalNotifications",
      value: function cancelAllLocalNotifications() {
        RCTPushNotificationManager.cancelAllLocalNotifications();
      }
    }, {
      key: "removeAllDeliveredNotifications",
      value: function removeAllDeliveredNotifications() {
        RCTPushNotificationManager.removeAllDeliveredNotifications();
      }
    }, {
      key: "getDeliveredNotifications",
      value: function getDeliveredNotifications(callback) {
        RCTPushNotificationManager.getDeliveredNotifications(callback);
      }
    }, {
      key: "removeDeliveredNotifications",
      value: function removeDeliveredNotifications(identifiers) {
        RCTPushNotificationManager.removeDeliveredNotifications(identifiers);
      }
    }, {
      key: "setApplicationIconBadgeNumber",
      value: function setApplicationIconBadgeNumber(number) {
        RCTPushNotificationManager.setApplicationIconBadgeNumber(number);
      }
    }, {
      key: "getApplicationIconBadgeNumber",
      value: function getApplicationIconBadgeNumber(callback) {
        RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);
      }
    }, {
      key: "cancelLocalNotifications",
      value: function cancelLocalNotifications(userInfo) {
        RCTPushNotificationManager.cancelLocalNotifications(userInfo);
      }
    }, {
      key: "getScheduledLocalNotifications",
      value: function getScheduledLocalNotifications(callback) {
        RCTPushNotificationManager.getScheduledLocalNotifications(callback);
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
        var listener;

        if (type === 'notification') {
          listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
            handler(new PushNotificationIOS(notifData));
          });
        } else if (type === 'localNotification') {
          listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
            handler(new PushNotificationIOS(notifData));
          });
        } else if (type === 'register') {
          listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
            handler(registrationInfo.deviceToken);
          });
        } else if (type === 'registrationError') {
          listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
            handler(errorInfo);
          });
        }

        _notifHandlers.set(type, listener);
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type, handler) {
        invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');

        var listener = _notifHandlers.get(type);

        if (!listener) {
          return;
        }

        listener.remove();

        _notifHandlers.delete(type);
      }
    }, {
      key: "requestPermissions",
      value: function requestPermissions(permissions) {
        var requestedPermissions = {};

        if (permissions) {
          requestedPermissions = {
            alert: !!permissions.alert,
            badge: !!permissions.badge,
            sound: !!permissions.sound
          };
        } else {
          requestedPermissions = {
            alert: true,
            badge: true,
            sound: true
          };
        }

        return RCTPushNotificationManager.requestPermissions(requestedPermissions);
      }
    }, {
      key: "abandonPermissions",
      value: function abandonPermissions() {
        RCTPushNotificationManager.abandonPermissions();
      }
    }, {
      key: "checkPermissions",
      value: function checkPermissions(callback) {
        invariant(typeof callback === 'function', 'Must provide a valid callback');
        RCTPushNotificationManager.checkPermissions(callback);
      }
    }, {
      key: "getInitialNotification",
      value: function getInitialNotification() {
        return RCTPushNotificationManager.getInitialNotification().then(function (notification) {
          return notification && new PushNotificationIOS(notification);
        });
      }
    }]);

    function PushNotificationIOS(nativeNotif) {
      var _this = this;

      _classCallCheck(this, PushNotificationIOS);

      this._data = {};
      this._remoteNotificationCompleteCallbackCalled = false;
      this._isRemote = nativeNotif.remote;

      if (this._isRemote) {
        this._notificationId = nativeNotif.notificationId;
      }

      if (nativeNotif.remote) {
        Object.keys(nativeNotif).forEach(function (notifKey) {
          var notifVal = nativeNotif[notifKey];

          if (notifKey === 'aps') {
            _this._alert = notifVal.alert;
            _this._sound = notifVal.sound;
            _this._badgeCount = notifVal.badge;
            _this._category = notifVal.category;
            _this._contentAvailable = notifVal['content-available'];
            _this._threadID = notifVal['thread-id'];
          } else {
            _this._data[notifKey] = notifVal;
          }
        });
      } else {
        this._badgeCount = nativeNotif.applicationIconBadgeNumber;
        this._sound = nativeNotif.soundName;
        this._alert = nativeNotif.alertBody;
        this._data = nativeNotif.userInfo;
        this._category = nativeNotif.category;
      }
    }

    _createClass(PushNotificationIOS, [{
      key: "finish",
      value: function finish(fetchResult) {
        if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCallbackCalled) {
          return;
        }

        this._remoteNotificationCompleteCallbackCalled = true;
        RCTPushNotificationManager.onFinishRemoteNotification(this._notificationId, fetchResult);
      }
    }, {
      key: "getMessage",
      value: function getMessage() {
        return this._alert;
      }
    }, {
      key: "getSound",
      value: function getSound() {
        return this._sound;
      }
    }, {
      key: "getCategory",
      value: function getCategory() {
        return this._category;
      }
    }, {
      key: "getAlert",
      value: function getAlert() {
        return this._alert;
      }
    }, {
      key: "getContentAvailable",
      value: function getContentAvailable() {
        return this._contentAvailable;
      }
    }, {
      key: "getBadgeCount",
      value: function getBadgeCount() {
        return this._badgeCount;
      }
    }, {
      key: "getData",
      value: function getData() {
        return this._data;
      }
    }, {
      key: "getThreadID",
      value: function getThreadID() {
        return this._threadID;
      }
    }]);

    return PushNotificationIOS;
  }();

  PushNotificationIOS.FetchResult = {
    NewData: 'UIBackgroundFetchResultNewData',
    NoData: 'UIBackgroundFetchResultNoData',
    ResultFailed: 'UIBackgroundFetchResultFailed'
  };
  module.exports = PushNotificationIOS;
},341,[22,23,117,8,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Settings = {
    get: function get(key) {
      console.warn('Settings is not yet supported on Android');
      return null;
    },
    set: function set(settings) {
      console.warn('Settings is not yet supported on Android');
    },
    watchKeys: function watchKeys(keys, callback) {
      console.warn('Settings is not yet supported on Android');
      return -1;
    },
    clearWatch: function clearWatch(watchId) {
      console.warn('Settings is not yet supported on Android');
    }
  };
  module.exports = Settings;
},342,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var Platform = _$$_REQUIRE(_dependencyMap[3]);

  var invariant = _$$_REQUIRE(_dependencyMap[4]);

  var processColor = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      ActionSheetManager = _require.ActionSheetManager,
      ShareModule = _require.ShareModule;

  var Share = function () {
    function Share() {
      _classCallCheck(this, Share);
    }

    _createClass(Share, null, [{
      key: "share",
      value: function share(content) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
        invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');
        invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
        {
          invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');
          return ShareModule.share(content, options.dialogTitle);
        }
      }
    }, {
      key: "sharedAction",
      get: function get() {
        return 'sharedAction';
      }
    }, {
      key: "dismissedAction",
      get: function get() {
        return 'dismissedAction';
      }
    }]);

    return Share;
  }();

  module.exports = Share;
},343,[46,22,23,43,3,69,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = new NativeEventEmitter('StatusBarManager');
},344,[117]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _regeneratorRuntime = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var TimePickerModule = _$$_REQUIRE(_dependencyMap[3]).TimePickerAndroid;

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      _classCallCheck(this, TimePickerAndroid);
    }

    _createClass(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regeneratorRuntime.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", TimePickerModule.open(options));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);

    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},345,[136,22,23,8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var RCTToastAndroid = _$$_REQUIRE(_dependencyMap[0]).ToastAndroid;

  var ToastAndroid = {
    SHORT: RCTToastAndroid.SHORT,
    LONG: RCTToastAndroid.LONG,
    TOP: RCTToastAndroid.TOP,
    BOTTOM: RCTToastAndroid.BOTTOM,
    CENTER: RCTToastAndroid.CENTER,
    show: function show(message, duration) {
      RCTToastAndroid.show(message, duration);
    },
    showWithGravity: function showWithGravity(message, duration, gravity) {
      RCTToastAndroid.showWithGravity(message, duration, gravity);
    },
    showWithGravityAndOffset: function showWithGravityAndOffset(message, duration, gravity, xOffset, yOffset) {
      RCTToastAndroid.showWithGravityAndOffset(message, duration, gravity, xOffset, yOffset);
    }
  };
  module.exports = ToastAndroid;
},346,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},347,[26]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var RCTVibration = _$$_REQUIRE(_dependencyMap[0]).Vibration;

  var Platform = _$$_REQUIRE(_dependencyMap[1]);

  var _vibrating = false;
  var _id = 0;

  function vibrateScheduler(id, pattern, repeat, nextIndex) {
    if (!_vibrating || id !== _id) {
      return;
    }

    RCTVibration.vibrate();

    if (nextIndex >= pattern.length) {
      if (repeat) {
        nextIndex = 0;
      } else {
        _vibrating = false;
        return;
      }
    }

    setTimeout(function () {
      return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
    }, pattern[nextIndex]);
  }

  var Vibration = {
    vibrate: function vibrate() {
      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 400;
      var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      {
        if (typeof pattern === 'number') {
          RCTVibration.vibrate(pattern);
        } else if (Array.isArray(pattern)) {
          RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);
        } else {
          throw new Error('Vibration pattern should be a number or array');
        }
      }
    },
    cancel: function cancel() {
      {
        RCTVibration.cancel();
      }
    }
  };
  module.exports = Vibration;
},348,[8,43]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var VibrationIOS = {
    vibrate: function vibrate() {
      warning(false, 'VibrationIOS is deprecated, and will be removed. Use Vibration instead.');
    }
  };
  module.exports = VibrationIOS;
},349,[5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},350,[22,23,30,33,36,48]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  var UIManager = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function takeSnapshot(view, options) {
    if (typeof view !== 'number' && view !== 'window') {
      view = ReactNative.findNodeHandle(view) || 'window';
    }

    return UIManager.__takeSnapshot(view, options);
  };
},351,[78,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},352,[61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[7]);

  var _ModalExample = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _MultiListPicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _HomeScreen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _CoffeeWallet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _InvalidLuckinTickets = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LKDiscountResult = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CoffeeWillExpiredWallet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Man = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _TestScrollTabPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _SvgShow = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _TestComponentPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var App = function (_React$Component) {
    (0, _inherits2.default)(App, _React$Component);

    function App() {
      (0, _classCallCheck2.default)(this, App);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).apply(this, arguments));
    }

    (0, _createClass2.default)(App, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(AppContainer, null);
      }
    }]);
    return App;
  }(_react.default.Component);

  exports.default = App;
  var RootStack = (0, _reactNavigation.createStackNavigator)({
    Home: _HomeScreen.default,
    Modal: _ModalExample.default,
    MultiListPicker: _MultiListPicker.default,
    CoffeeWallet: _CoffeeWallet.default,
    InvalidLuckinTickets: _InvalidLuckinTickets.default,
    LKDiscountResult: _LKDiscountResult.default,
    CoffeeWillExpiredWallet: _CoffeeWillExpiredWallet.default,
    Man: _Man.default,
    TestScrollTabPage: _TestScrollTabPage.default,
    SvgShow: _SvgShow.default,
    TestComponentPage: _TestComponentPage.default
  }, {
    initialRouteName: 'Home'
  });
  var AppContainer = (0, _reactNavigation.createAppContainer)(RootStack);
},353,[1,22,23,30,33,36,49,354,486,487,490,764,773,774,777,778,780,788,990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get createAppContainer() {
      return _$$_REQUIRE(_dependencyMap[0]).createAppContainer;
    },

    get createNavigationContainer() {
      console.warn('`createNavigationContainer()` has been deprecated, please use `createAppContainer()` instead. You can also import createAppContainer directly from @react-navigation/native');
      return _$$_REQUIRE(_dependencyMap[0]).createAppContainer;
    },

    get createKeyboardAwareNavigator() {
      return _$$_REQUIRE(_dependencyMap[0]).createKeyboardAwareNavigator;
    },

    get createNavigationAwareScrollable() {
      return _$$_REQUIRE(_dependencyMap[0]).createNavigationAwareScrollable;
    },

    get ScrollView() {
      return _$$_REQUIRE(_dependencyMap[0]).ScrollView;
    },

    get FlatList() {
      return _$$_REQUIRE(_dependencyMap[0]).FlatList;
    },

    get SectionList() {
      return _$$_REQUIRE(_dependencyMap[0]).SectionList;
    },

    get ResourceSavingSceneView() {
      return _$$_REQUIRE(_dependencyMap[0]).ResourceSavingSceneView;
    },

    get SafeAreaView() {
      return _$$_REQUIRE(_dependencyMap[0]).SafeAreaView;
    },

    get withOrientation() {
      return _$$_REQUIRE(_dependencyMap[0]).withOrientation;
    },

    get createNavigator() {
      return _$$_REQUIRE(_dependencyMap[1]).createNavigator;
    },

    get StateUtils() {
      return _$$_REQUIRE(_dependencyMap[1]).StateUtils;
    },

    get getNavigation() {
      return _$$_REQUIRE(_dependencyMap[1]).getNavigation;
    },

    get NavigationContext() {
      return _$$_REQUIRE(_dependencyMap[1]).NavigationContext;
    },

    get NavigationProvider() {
      return _$$_REQUIRE(_dependencyMap[1]).NavigationProvider;
    },

    get NavigationConsumer() {
      return _$$_REQUIRE(_dependencyMap[1]).NavigationConsumer;
    },

    get NavigationActions() {
      return _$$_REQUIRE(_dependencyMap[1]).NavigationActions;
    },

    get StackActions() {
      return _$$_REQUIRE(_dependencyMap[1]).StackActions;
    },

    get StackRouter() {
      return _$$_REQUIRE(_dependencyMap[1]).StackRouter;
    },

    get TabRouter() {
      return _$$_REQUIRE(_dependencyMap[1]).TabRouter;
    },

    get SwitchRouter() {
      return _$$_REQUIRE(_dependencyMap[1]).SwitchRouter;
    },

    get SwitchActions() {
      return _$$_REQUIRE(_dependencyMap[1]).SwitchActions;
    },

    get createConfigGetter() {
      return _$$_REQUIRE(_dependencyMap[1]).StackAcreateConfigGetterctions;
    },

    get getScreenForRouteName() {
      return _$$_REQUIRE(_dependencyMap[1]).getScreenForRouteName;
    },

    get validateRouteConfigMap() {
      return _$$_REQUIRE(_dependencyMap[1]).validateRouteConfigMap;
    },

    get getActiveChildNavigationOptions() {
      return _$$_REQUIRE(_dependencyMap[1]).getActiveChildNavigationOptions;
    },

    get pathUtils() {
      return _$$_REQUIRE(_dependencyMap[1]).pathUtils;
    },

    get SceneView() {
      return _$$_REQUIRE(_dependencyMap[1]).SceneView;
    },

    get SwitchView() {
      return _$$_REQUIRE(_dependencyMap[1]).SwitchView;
    },

    get NavigationEvents() {
      return _$$_REQUIRE(_dependencyMap[1]).NavigationEvents;
    },

    get withNavigation() {
      return _$$_REQUIRE(_dependencyMap[1]).withNavigation;
    },

    get withNavigationFocus() {
      return _$$_REQUIRE(_dependencyMap[1]).withNavigationFocus;
    },

    get createStackNavigator() {
      return _$$_REQUIRE(_dependencyMap[2]).createStackNavigator;
    },

    get createSwitchNavigator() {
      return _$$_REQUIRE(_dependencyMap[1]).createSwitchNavigator;
    },

    get createBottomTabNavigator() {
      return _$$_REQUIRE(_dependencyMap[3]).createBottomTabNavigator;
    },

    get createMaterialTopTabNavigator() {
      return _$$_REQUIRE(_dependencyMap[3]).createMaterialTopTabNavigator;
    },

    get createDrawerNavigator() {
      return _$$_REQUIRE(_dependencyMap[4]).createDrawerNavigator;
    },

    get StackGestureContext() {
      return _$$_REQUIRE(_dependencyMap[2]).StackGestureContext;
    },

    get DrawerGestureContext() {
      return _$$_REQUIRE(_dependencyMap[4]).DrawerGestureContext;
    },

    get DrawerRouter() {
      return _$$_REQUIRE(_dependencyMap[4]).DrawerRouter;
    },

    get DrawerActions() {
      return _$$_REQUIRE(_dependencyMap[4]).DrawerActions;
    },

    get Transitioner() {
      console.warn('Importing the stack Transitioner directly from react-navigation is now deprecated. Instead, import { Transitioner } from "react-navigation-stack";');
      return _$$_REQUIRE(_dependencyMap[2]).Transitioner;
    },

    get StackView() {
      return _$$_REQUIRE(_dependencyMap[2]).StackView;
    },

    get StackViewCard() {
      return _$$_REQUIRE(_dependencyMap[2]).StackViewCard;
    },

    get StackViewTransitionConfigs() {
      return _$$_REQUIRE(_dependencyMap[2]).StackViewTransitionConfigs;
    },

    get Header() {
      return _$$_REQUIRE(_dependencyMap[2]).Header;
    },

    get HeaderTitle() {
      return _$$_REQUIRE(_dependencyMap[2]).HeaderTitle;
    },

    get HeaderBackButton() {
      return _$$_REQUIRE(_dependencyMap[2]).HeaderBackButton;
    },

    get HeaderStyleInterpolator() {
      return _$$_REQUIRE(_dependencyMap[2]).HeaderStyleInterpolator;
    },

    get DrawerView() {
      return _$$_REQUIRE(_dependencyMap[4]).DrawerView;
    },

    get DrawerItems() {
      return _$$_REQUIRE(_dependencyMap[4]).DrawerNavigatorItems;
    },

    get DrawerSidebar() {
      return _$$_REQUIRE(_dependencyMap[4]).DrawerSidebar;
    },

    get BottomTabBar() {
      return _$$_REQUIRE(_dependencyMap[3]).BottomTabBar;
    },

    get MaterialTopTabBar() {
      return _$$_REQUIRE(_dependencyMap[3]).MaterialTopTabBar;
    }

  };
},354,[355,357,428,454,475]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get createAppContainer() {
      return _$$_REQUIRE(_dependencyMap[0]).default;
    },

    get createKeyboardAwareNavigator() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },

    get createNavigationAwareScrollable() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },

    get withOrientation() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },

    get ResourceSavingSceneView() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },

    get SafeAreaView() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    },

    get ScrollView() {
      return _$$_REQUIRE(_dependencyMap[6]).ScrollView;
    },

    get FlatList() {
      return _$$_REQUIRE(_dependencyMap[6]).FlatList;
    },

    get SectionList() {
      return _$$_REQUIRE(_dependencyMap[6]).SectionList;
    }

  };
},355,[356,400,401,403,404,405,408]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._TESTING_ONLY_reset_container_count = _TESTING_ONLY_reset_container_count;
  exports.default = createNavigationContainer;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _core = _$$_REQUIRE(_dependencyMap[12]);

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _docsUrl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var urlToPathAndParams = _core.pathUtils.urlToPathAndParams;

  function isStateful(props) {
    return !props.navigation;
  }

  function validateProps(props) {
    if (props.persistenceKey) {
      console.warn("You passed persistenceKey prop to a navigator. The persistenceKey prop was replaced by a more flexible persistence mechanism, please see the navigation state persistence docs for more information. Passing the persistenceKey prop is a no-op.");
    }

    if (isStateful(props)) {
      return;
    }

    var navigation = props.navigation,
        screenProps = props.screenProps,
        persistNavigationState = props.persistNavigationState,
        loadNavigationState = props.loadNavigationState,
        containerProps = (0, _objectWithoutProperties2.default)(props, ["navigation", "screenProps", "persistNavigationState", "loadNavigationState"]);
    var keys = Object.keys(containerProps);

    if (keys.length !== 0) {
      throw new Error('This navigator has both navigation and container props, so it is ' + ("unclear if it should own its own state. Remove props: \"" + keys.join(', ') + "\" ") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');
    }

    (0, _invariant.default)(persistNavigationState === undefined && loadNavigationState === undefined || typeof persistNavigationState === 'function' && typeof loadNavigationState === 'function', 'both persistNavigationState and loadNavigationState must either be undefined, or be functions');
  }

  var _statefulContainerCount = 0;

  function _TESTING_ONLY_reset_container_count() {
    _statefulContainerCount = 0;
  }

  var _reactNavigationIsHydratingState = false;

  function createNavigationContainer(Component) {
    var NavigationContainer = function (_React$Component) {
      (0, _inherits2.default)(NavigationContainer, _React$Component);
      (0, _createClass2.default)(NavigationContainer, null, [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps) {
          validateProps(nextProps);
          return null;
        }
      }]);

      function NavigationContainer(props) {
        var _this;

        (0, _classCallCheck2.default)(this, NavigationContainer);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationContainer).call(this, props));
        _this.subs = null;
        _this._actionEventSubscribers = new Set();

        _this._handleOpenURL = function (_ref) {
          var url = _ref.url;
          var _this$props = _this.props,
              enableURLHandling = _this$props.enableURLHandling,
              uriPrefix = _this$props.uriPrefix;

          if (enableURLHandling === false) {
            return;
          }

          var parsedUrl = urlToPathAndParams(url, uriPrefix);

          if (parsedUrl) {
            var path = parsedUrl.path,
                params = parsedUrl.params;
            var action = Component.router.getActionForPathAndParams(path, params);

            if (action) {
              _this.dispatch(action);
            }
          }
        };

        _this._persistNavigationState = function _callee(nav) {
          var persistNavigationState;
          return _regenerator.default.async(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  persistNavigationState = _this.props.persistNavigationState;

                  if (!persistNavigationState) {
                    _context.next = 10;
                    break;
                  }

                  _context.prev = 2;
                  _context.next = 5;
                  return _regenerator.default.awrap(persistNavigationState(nav));

                case 5:
                  _context.next = 10;
                  break;

                case 7:
                  _context.prev = 7;
                  _context.t0 = _context["catch"](2);
                  console.warn('Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.');

                case 10:
                case "end":
                  return _context.stop();
              }
            }
          }, null, null, [[2, 7]]);
        };

        _this.dispatch = function (action) {
          if (_this.props.navigation) {
            return _this.props.navigation.dispatch(action);
          }

          _this._navState = _this._navState || _this.state.nav;
          var lastNavState = _this._navState;
          (0, _invariant.default)(lastNavState, 'should be set in constructor if stateful');
          var reducedState = Component.router.getStateForAction(action, lastNavState);
          var navState = reducedState === null ? lastNavState : reducedState;

          var dispatchActionEvents = function dispatchActionEvents() {
            _this._actionEventSubscribers.forEach(function (subscriber) {
              return subscriber({
                type: 'action',
                action: action,
                state: navState,
                lastState: lastNavState
              });
            });
          };

          if (reducedState === null) {
            dispatchActionEvents();
            return true;
          }

          if (navState !== lastNavState) {
            _this._navState = navState;

            _this.setState({
              nav: navState
            }, function () {
              _this._onNavigationStateChange(lastNavState, navState, action);

              dispatchActionEvents();

              _this._persistNavigationState(navState);
            });

            return true;
          }

          dispatchActionEvents();
          return false;
        };

        _this._getScreenProps = function () {
          return _this.props.screenProps;
        };

        validateProps(props);
        _this._initialAction = _core.NavigationActions.init();

        if (_this._isStateful() && _reactNative.BackHandler && typeof _reactNative.BackHandler.addEventListener === 'function') {
          _this.subs = _reactNative.BackHandler.addEventListener('hardwareBackPress', function () {
            if (!_this._isMounted) {
              _this.subs && _this.subs.remove();
            } else {
              return _this.dispatch(_core.NavigationActions.back());
            }
          });
        }

        _this.state = {
          nav: _this._isStateful() && !props.loadNavigationState ? Component.router.getStateForAction(_this._initialAction) : null
        };
        return _this;
      }

      (0, _createClass2.default)(NavigationContainer, [{
        key: "_renderLoading",
        value: function _renderLoading() {
          return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;
        }
      }, {
        key: "_isStateful",
        value: function _isStateful() {
          return isStateful(this.props);
        }
      }, {
        key: "_validateProps",
        value: function _validateProps(props) {
          if (this._isStateful()) {
            return;
          }

          var navigation = props.navigation,
              screenProps = props.screenProps,
              containerProps = (0, _objectWithoutProperties2.default)(props, ["navigation", "screenProps"]);
          var keys = Object.keys(containerProps);

          if (keys.length !== 0) {
            throw new Error('This navigator has both navigation and container props, so it is ' + ("unclear if it should own its own state. Remove props: \"" + keys.join(', ') + "\" ") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');
          }
        }
      }, {
        key: "_onNavigationStateChange",
        value: function _onNavigationStateChange(prevNav, nav, action) {
          if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {
            if (console.group) {
              console.group('Navigation Dispatch: ');
              console.log('Action: ', action);
              console.log('New State: ', nav);
              console.log('Last State: ', prevNav);
              console.groupEnd();
            } else {
              console.log('Navigation Dispatch: ', {
                action: action,
                newState: nav,
                lastState: prevNav
              });
            }

            return;
          }

          if (typeof this.props.onNavigationStateChange === 'function') {
            this.props.onNavigationStateChange(prevNav, nav, action);
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          if (this._navState === this.state.nav) {
            this._navState = null;
          }
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;

          var parsedUrl, userProvidedStartupState, _ref2, action, startupState, _parsedUrl, path, params, urlAction, dispatchActions;

          return _regenerator.default.async(function componentDidMount$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  this._isMounted = true;

                  if (this._isStateful()) {
                    _context2.next = 3;
                    break;
                  }

                  return _context2.abrupt("return");

                case 3:
                  _statefulContainerCount++;

                  _reactNative.Linking.addEventListener('url', this._handleOpenURL);

                  parsedUrl = null;
                  userProvidedStartupState = null;

                  if (!(this.props.enableURLHandling !== false)) {
                    _context2.next = 14;
                    break;
                  }

                  _context2.next = 11;
                  return _regenerator.default.awrap(this.getStartupParams());

                case 11:
                  _ref2 = _context2.sent;
                  parsedUrl = _ref2.parsedUrl;
                  userProvidedStartupState = _ref2.userProvidedStartupState;

                case 14:
                  action = this._initialAction;
                  startupState = this.state.nav;

                  if (!startupState && !userProvidedStartupState) {
                    !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');
                    startupState = Component.router.getStateForAction(action);
                  }

                  if (userProvidedStartupState) {
                    startupState = userProvidedStartupState;
                    _reactNavigationIsHydratingState = true;
                  }

                  if (parsedUrl) {
                    _parsedUrl = parsedUrl, path = _parsedUrl.path, params = _parsedUrl.params;
                    urlAction = Component.router.getActionForPathAndParams(path, params);

                    if (urlAction) {
                      !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', parsedUrl);
                      action = urlAction;
                      startupState = Component.router.getStateForAction(urlAction, startupState);
                    }
                  }

                  dispatchActions = function dispatchActions() {
                    return _this2._actionEventSubscribers.forEach(function (subscriber) {
                      return subscriber({
                        type: 'action',
                        action: action,
                        state: _this2.state.nav,
                        lastState: null
                      });
                    });
                  };

                  if (!(startupState === this.state.nav)) {
                    _context2.next = 23;
                    break;
                  }

                  dispatchActions();
                  return _context2.abrupt("return");

                case 23:
                  this.setState({
                    nav: startupState
                  }, function () {
                    _reactNavigationIsHydratingState = false;
                    dispatchActions();
                  });

                case 24:
                case "end":
                  return _context2.stop();
              }
            }
          }, null, this);
        }
      }, {
        key: "getStartupParams",
        value: function getStartupParams() {
          var _this$props2, uriPrefix, loadNavigationState, url, loadedNavState, _ref3, _ref4;

          return _regenerator.default.async(function getStartupParams$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _this$props2 = this.props, uriPrefix = _this$props2.uriPrefix, loadNavigationState = _this$props2.loadNavigationState;
                  _context3.prev = 1;
                  _context3.next = 4;
                  return _regenerator.default.awrap(Promise.all([_reactNative.Linking.getInitialURL(), loadNavigationState && loadNavigationState()]));

                case 4:
                  _ref3 = _context3.sent;
                  _ref4 = (0, _slicedToArray2.default)(_ref3, 2);
                  url = _ref4[0];
                  loadedNavState = _ref4[1];
                  _context3.next = 12;
                  break;

                case 10:
                  _context3.prev = 10;
                  _context3.t0 = _context3["catch"](1);

                case 12:
                  return _context3.abrupt("return", {
                    parsedUrl: url && urlToPathAndParams(url, uriPrefix),
                    userProvidedStartupState: loadedNavState
                  });

                case 13:
                case "end":
                  return _context3.stop();
              }
            }
          }, null, this, [[1, 10]]);
        }
      }, {
        key: "componentDidCatch",
        value: function componentDidCatch(e) {
          if (_reactNavigationIsHydratingState) {
            _reactNavigationIsHydratingState = false;
            console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...');
            this.dispatch(_core.NavigationActions.init());
          } else {
            throw e;
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._isMounted = false;

          _reactNative.Linking.removeEventListener('url', this._handleOpenURL);

          this.subs && this.subs.remove();

          if (this._isStateful()) {
            _statefulContainerCount--;
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;

          var navigation = this.props.navigation;

          if (this._isStateful()) {
            var navState = this.state.nav;

            if (!navState) {
              return this._renderLoading();
            }

            if (!this._navigation || this._navigation.state !== navState) {
              this._navigation = (0, _core.getNavigation)(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, function () {
                return _this3._navigation;
              });
            }

            navigation = this._navigation;
          }

          (0, _invariant.default)(navigation, 'failed to get navigation');
          return _react.default.createElement(_core.NavigationProvider, {
            value: navigation
          }, _react.default.createElement(Component, (0, _extends2.default)({}, this.props, {
            navigation: navigation
          })));
        }
      }]);
      return NavigationContainer;
    }(_react.default.Component);

    NavigationContainer.router = Component.router;
    NavigationContainer.navigationOptions = null;
    return NavigationContainer;
  }
},356,[1,11,12,136,22,30,33,23,36,9,49,2,357,398,399]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get StateUtils() {
      return _$$_REQUIRE(_dependencyMap[0]).default;
    },

    get getNavigation() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },

    get createNavigator() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },

    get NavigationContext() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },

    get NavigationProvider() {
      return _$$_REQUIRE(_dependencyMap[3]).default.Provider;
    },

    get NavigationConsumer() {
      return _$$_REQUIRE(_dependencyMap[3]).default.Consumer;
    },

    get createSwitchNavigator() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },

    get NavigationActions() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get StackActions() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get SwitchActions() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get StackRouter() {
      return _$$_REQUIRE(_dependencyMap[8]).default;
    },

    get TabRouter() {
      return _$$_REQUIRE(_dependencyMap[9]).default;
    },

    get SwitchRouter() {
      return _$$_REQUIRE(_dependencyMap[10]).default;
    },

    get createConfigGetter() {
      return _$$_REQUIRE(_dependencyMap[11]).default;
    },

    get getScreenForRouteName() {
      return _$$_REQUIRE(_dependencyMap[12]).default;
    },

    get validateRouteConfigMap() {
      return _$$_REQUIRE(_dependencyMap[13]).default;
    },

    get getActiveChildNavigationOptions() {
      return _$$_REQUIRE(_dependencyMap[14]).default;
    },

    get pathUtils() {
      return _$$_REQUIRE(_dependencyMap[15]);
    },

    get SceneView() {
      return _$$_REQUIRE(_dependencyMap[16]).default;
    },

    get SwitchView() {
      return _$$_REQUIRE(_dependencyMap[17]).default;
    },

    get NavigationEvents() {
      return _$$_REQUIRE(_dependencyMap[18]).default;
    },

    get withNavigation() {
      return _$$_REQUIRE(_dependencyMap[19]).default;
    },

    get withNavigationFocus() {
      return _$$_REQUIRE(_dependencyMap[20]).default;
    }

  };
},357,[358,360,368,369,370,363,388,377,389,391,371,375,372,378,393,379,387,386,394,395,397]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var StateUtils = {
    get: function get(state, key) {
      return state.routes.find(function (route) {
        return route.key === key;
      }) || null;
    },
    indexOf: function indexOf(state, key) {
      return state.routes.findIndex(function (route) {
        return route.key === key;
      });
    },
    has: function has(state, key) {
      return !!state.routes.some(function (route) {
        return route.key === key;
      });
    },
    push: function push(state, route) {
      (0, _invariant.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);
      var routes = state.routes.slice();
      routes.push(route);
      return (0, _objectSpread2.default)({}, state, {
        index: routes.length - 1,
        routes: routes
      });
    },
    pop: function pop(state) {
      if (state.index <= 0) {
        return state;
      }

      var routes = state.routes.slice(0, -1);
      return (0, _objectSpread2.default)({}, state, {
        index: routes.length - 1,
        routes: routes
      });
    },
    jumpToIndex: function jumpToIndex(state, index) {
      if (index === state.index) {
        return state;
      }

      (0, _invariant.default)(!!state.routes[index], 'invalid index %s to jump to', index);
      return (0, _objectSpread2.default)({}, state, {
        index: index
      });
    },
    jumpTo: function jumpTo(state, key) {
      var index = StateUtils.indexOf(state, key);
      return StateUtils.jumpToIndex(state, index);
    },
    back: function back(state) {
      var index = state.index - 1;
      var route = state.routes[index];
      return route ? StateUtils.jumpToIndex(state, index) : state;
    },
    forward: function forward(state) {
      var index = state.index + 1;
      var route = state.routes[index];
      return route ? StateUtils.jumpToIndex(state, index) : state;
    },
    replaceAndPrune: function replaceAndPrune(state, key, route) {
      var index = StateUtils.indexOf(state, key);
      var replaced = StateUtils.replaceAtIndex(state, index, route);
      return (0, _objectSpread2.default)({}, replaced, {
        routes: replaced.routes.slice(0, index + 1)
      });
    },
    replaceAt: function replaceAt(state, key, route) {
      var preserveIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      var index = StateUtils.indexOf(state, key);
      var nextIndex = preserveIndex ? state.index : index;
      var nextState = StateUtils.replaceAtIndex(state, index, route);
      nextState.index = nextIndex;
      return nextState;
    },
    replaceAtIndex: function replaceAtIndex(state, index, route) {
      (0, _invariant.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);

      if (state.routes[index] === route && index === state.index) {
        return state;
      }

      var routes = state.routes.slice();
      routes[index] = route;
      return (0, _objectSpread2.default)({}, state, {
        index: index,
        routes: routes
      });
    },
    reset: function reset(state, routes, index) {
      (0, _invariant.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');
      var nextIndex = index === undefined ? routes.length - 1 : index;

      if (state.routes.length === routes.length && state.index === nextIndex) {
        var compare = function compare(route, ii) {
          return routes[ii] === route;
        };

        if (state.routes.every(compare)) {
          return state;
        }
      }

      (0, _invariant.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);
      return (0, _objectSpread2.default)({}, state, {
        index: nextIndex,
        routes: routes
      });
    }
  };
  var _default = StateUtils;
  exports.default = _default;
},358,[1,46,359]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var validateFormat = function validateFormat() {};

  if (process.env !== 'production') {
    validateFormat = function validateFormat(format) {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    };
  }

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},359,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getNavigation;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _getNavigationActionCreators = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getChildNavigation2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getChildrenNavigationCache = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  function getNavigation(router, state, dispatch, actionSubscribers, getScreenProps, getCurrentNavigation) {
    var actions = router.getActionCreators(state, null);
    var navigation = {
      actions: actions,
      router: router,
      state: state,
      dispatch: dispatch,
      getScreenProps: getScreenProps,
      getChildNavigation: function getChildNavigation(childKey) {
        return (0, _getChildNavigation2.default)(navigation, childKey, getCurrentNavigation);
      },
      isFocused: function isFocused(childKey) {
        var _getCurrentNavigation = getCurrentNavigation().state,
            routes = _getCurrentNavigation.routes,
            index = _getCurrentNavigation.index;

        if (childKey == null || routes[index].key === childKey) {
          return true;
        }

        return false;
      },
      addListener: function addListener(eventName, handler) {
        if (eventName !== 'action') {
          return {
            remove: function remove() {}
          };
        }

        actionSubscribers.add(handler);
        return {
          remove: function remove() {
            actionSubscribers.delete(handler);
          }
        };
      },
      dangerouslyGetParent: function dangerouslyGetParent() {
        return null;
      },
      isFirstRouteInParent: function isFirstRouteInParent() {
        return true;
      },
      _childrenNavigation: (0, _getChildrenNavigationCache.default)(getCurrentNavigation())
    };
    var actionCreators = (0, _objectSpread2.default)({}, (0, _getNavigationActionCreators.default)(navigation.state), actions);
    Object.keys(actionCreators).forEach(function (actionName) {
      navigation[actionName] = function () {
        return navigation.dispatch(actionCreators[actionName].apply(actionCreators, arguments));
      };
    });
    return navigation;
  }
},360,[1,46,361,364,367]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var getNavigationActionCreators = function getNavigationActionCreators(route) {
    return {
      goBack: function goBack(key) {
        var actualizedKey = key;

        if (key === undefined && route.key) {
          (0, _invariant.default)(typeof route.key === 'string', 'key should be a string');
          actualizedKey = route.key;
        }

        return NavigationActions.back({
          key: actualizedKey
        });
      },
      navigate: function navigate(navigateTo, params, action) {
        if (typeof navigateTo === 'string') {
          return NavigationActions.navigate({
            routeName: navigateTo,
            params: params,
            action: action
          });
        }

        (0, _invariant.default)(typeof navigateTo === 'object', 'Must navigateTo an object or a string');
        (0, _invariant.default)(params == null, 'Params must not be provided to .navigate() when specifying an object');
        (0, _invariant.default)(action == null, 'Child action must not be provided to .navigate() when specifying an object');
        return NavigationActions.navigate(navigateTo);
      },
      setParams: function setParams(params) {
        (0, _invariant.default)(route.key && typeof route.key === 'string', 'setParams cannot be called by root navigator');
        return NavigationActions.setParams({
          params: params,
          key: route.key
        });
      }
    };
  };

  var _default = getNavigationActionCreators;
  exports.default = _default;
},361,[1,362,363,359]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
      }

      newObj["default"] = obj;
      return newObj;
    }
  }

  module.exports = _interopRequireWildcard;
},362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.setParams = exports.navigate = exports.init = exports.back = exports.SET_PARAMS = exports.NAVIGATE = exports.INIT = exports.BACK = undefined;
  var BACK = 'Navigation/BACK';
  exports.BACK = BACK;
  var INIT = 'Navigation/INIT';
  exports.INIT = INIT;
  var NAVIGATE = 'Navigation/NAVIGATE';
  exports.NAVIGATE = NAVIGATE;
  var SET_PARAMS = 'Navigation/SET_PARAMS';
  exports.SET_PARAMS = SET_PARAMS;

  var back = function back() {
    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return {
      type: BACK,
      key: payload.key,
      immediate: payload.immediate
    };
  };

  exports.back = back;

  var init = function init() {
    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = {
      type: INIT
    };

    if (payload.params) {
      action.params = payload.params;
    }

    return action;
  };

  exports.init = init;

  var navigate = function navigate(payload) {
    var action = {
      type: NAVIGATE,
      routeName: payload.routeName
    };

    if (payload.params) {
      action.params = payload.params;
    }

    if (payload.action) {
      action.action = payload.action;
    }

    if (payload.key) {
      action.key = payload.key;
    }

    return action;
  };

  exports.navigate = navigate;

  var setParams = function setParams(payload) {
    return {
      type: SET_PARAMS,
      key: payload.key,
      params: payload.params,
      preserveFocus: true
    };
  };

  exports.setParams = setParams;
},363,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _getChildEventSubscriber = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getChildRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getNavigationActionCreators = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getChildrenNavigationCache = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var createParamGetter = function createParamGetter(route) {
    return function (paramName, defaultValue) {
      var params = route.params;

      if (params && paramName in params) {
        return params[paramName];
      }

      return defaultValue;
    };
  };

  function _getChildNavigation(navigation, childKey, getCurrentParentNavigation) {
    var children = (0, _getChildrenNavigationCache.default)(navigation);
    var childRoute = navigation.state.routes.find(function (r) {
      return r.key === childKey;
    });

    if (!childRoute) {
      return null;
    }

    if (children[childKey] && children[childKey].state === childRoute) {
      return children[childKey];
    }

    var childRouter = (0, _getChildRouter.default)(navigation.router, childRoute.routeName);
    var focusedGrandChildRoute = childRoute.routes && typeof childRoute.index === 'number' ? childRoute.routes[childRoute.index] : null;
    var actionCreators = (0, _objectSpread2.default)({}, navigation.actions, navigation.router.getActionCreators(childRoute, navigation.state.key), childRouter ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key) : {}, (0, _getNavigationActionCreators.default)(childRoute));
    var actionHelpers = {};
    Object.keys(actionCreators).forEach(function (actionName) {
      actionHelpers[actionName] = function () {
        var actionCreator = actionCreators[actionName];
        var action = actionCreator.apply(undefined, arguments);
        return navigation.dispatch(action);
      };
    });
    var _isFirstRouteInParent = true;
    var parentNavigation = getCurrentParentNavigation();

    if (parentNavigation) {
      _isFirstRouteInParent = parentNavigation.state.routes.indexOf(childRoute) === 0;
    }

    if (children[childKey] && children[childKey].isFirstRouteInParent() === _isFirstRouteInParent) {
      children[childKey] = (0, _objectSpread2.default)({}, children[childKey], actionHelpers, {
        state: childRoute,
        router: childRouter,
        actions: actionCreators,
        getParam: createParamGetter(childRoute)
      });
      return children[childKey];
    } else {
      var childSubscriber = (0, _getChildEventSubscriber.default)(navigation.addListener, childKey);
      children[childKey] = (0, _objectSpread2.default)({}, actionHelpers, {
        state: childRoute,
        router: childRouter,
        actions: actionCreators,
        getParam: createParamGetter(childRoute),
        getChildNavigation: function getChildNavigation(grandChildKey) {
          return _getChildNavigation(children[childKey], grandChildKey, function () {
            var nav = getCurrentParentNavigation();
            return nav && nav.getChildNavigation(childKey);
          });
        },
        isFocused: function isFocused() {
          var currentNavigation = getCurrentParentNavigation();

          if (!currentNavigation) {
            return false;
          }

          var _currentNavigation$st = currentNavigation.state,
              routes = _currentNavigation$st.routes,
              index = _currentNavigation$st.index;

          if (!currentNavigation.isFocused()) {
            return false;
          }

          if (routes[index].key === childKey) {
            return true;
          }

          return false;
        },
        isFirstRouteInParent: function isFirstRouteInParent() {
          return _isFirstRouteInParent;
        },
        dispatch: navigation.dispatch,
        getScreenProps: navigation.getScreenProps,
        dangerouslyGetParent: getCurrentParentNavigation,
        addListener: childSubscriber.addListener,
        emit: childSubscriber.emit
      });
      return children[childKey];
    }
  }

  var _default = _getChildNavigation;
  exports.default = _default;
},364,[1,46,365,366,361,367]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getChildEventSubscriber;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function getChildEventSubscriber(addListener, key) {
    var initialLastFocusEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'didBlur';
    var actionSubscribers = new Set();
    var willFocusSubscribers = new Set();
    var didFocusSubscribers = new Set();
    var willBlurSubscribers = new Set();
    var didBlurSubscribers = new Set();
    var refocusSubscribers = new Set();

    var removeAll = function removeAll() {
      [actionSubscribers, willFocusSubscribers, didFocusSubscribers, willBlurSubscribers, didBlurSubscribers, refocusSubscribers].forEach(function (set) {
        return set.clear();
      });
      upstreamSubscribers.forEach(function (subs) {
        return subs && subs.remove();
      });
    };

    var getChildSubscribers = function getChildSubscribers(evtName) {
      switch (evtName) {
        case 'action':
          return actionSubscribers;

        case 'willFocus':
          return willFocusSubscribers;

        case 'didFocus':
          return didFocusSubscribers;

        case 'willBlur':
          return willBlurSubscribers;

        case 'didBlur':
          return didBlurSubscribers;

        case 'refocus':
          return refocusSubscribers;

        default:
          return null;
      }
    };

    var _emit = function emit(type, payload) {
      var payloadWithType = (0, _objectSpread2.default)({}, payload, {
        type: type
      });
      var subscribers = getChildSubscribers(type);
      subscribers && subscribers.forEach(function (subs) {
        subs(payloadWithType);
      });
    };

    var lastFocusEvent = initialLastFocusEvent;
    var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'refocus', 'action'];
    var upstreamSubscribers = upstreamEvents.map(function (eventName) {
      return addListener(eventName, function (payload) {
        if (eventName === 'refocus') {
          _emit(eventName, payload);

          return;
        }

        var state = payload.state,
            lastState = payload.lastState,
            action = payload.action;
        var lastRoutes = lastState && lastState.routes;
        var routes = state && state.routes;
        var focusKey = routes && routes[state.index].key;
        var isChildFocused = focusKey === key;
        var lastRoute = lastRoutes && lastRoutes.find(function (route) {
          return route.key === key;
        });
        var newRoute = routes && routes.find(function (route) {
          return route.key === key;
        });
        var childPayload = {
          context: key + ":" + action.type + "_" + (payload.context || 'Root'),
          state: newRoute,
          lastState: lastRoute,
          action: action,
          type: eventName
        };
        var isTransitioning = !!state && state.isTransitioning;
        var previouslylastFocusEvent = lastFocusEvent;

        if (lastFocusEvent === 'didBlur') {
          if (eventName === 'willFocus' && isChildFocused) {
            _emit(lastFocusEvent = 'willFocus', childPayload);
          } else if (eventName === 'action' && isChildFocused) {
            _emit(lastFocusEvent = 'willFocus', childPayload);
          }
        }

        if (lastFocusEvent === 'willFocus') {
          if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {
            _emit(lastFocusEvent = 'didFocus', childPayload);
          } else if (eventName === 'action' && isChildFocused && !isTransitioning) {
            _emit(lastFocusEvent = 'didFocus', childPayload);
          }
        }

        if (lastFocusEvent === 'didFocus') {
          if (!isChildFocused) {
            _emit(lastFocusEvent = 'willBlur', childPayload);
          } else if (eventName === 'willBlur') {
            _emit(lastFocusEvent = 'willBlur', childPayload);
          } else if (eventName === 'action' && previouslylastFocusEvent === 'didFocus') {
            _emit('action', childPayload);
          }
        }

        if (lastFocusEvent === 'willBlur') {
          if (eventName === 'action' && !isChildFocused && !isTransitioning) {
            _emit(lastFocusEvent = 'didBlur', childPayload);
          } else if (eventName === 'didBlur') {
            _emit(lastFocusEvent = 'didBlur', childPayload);
          } else if (eventName === 'action' && isChildFocused && !isTransitioning) {
            _emit(lastFocusEvent = 'didFocus', childPayload);
          } else if (eventName === 'action' && isChildFocused && isTransitioning) {
            _emit(lastFocusEvent = 'willFocus', childPayload);
          }
        }

        if (lastFocusEvent === 'didBlur' && !newRoute) {
          removeAll();
        }
      });
    });
    return {
      addListener: function addListener(eventName, eventHandler) {
        var subscribers = getChildSubscribers(eventName);

        if (!subscribers) {
          throw new Error("Invalid event name \"" + eventName + "\"");
        }

        subscribers.add(eventHandler);

        var remove = function remove() {
          subscribers.delete(eventHandler);
        };

        return {
          remove: remove
        };
      },
      emit: function emit(eventName, payload) {
        if (eventName !== 'refocus') {
          console.error("navigation.emit only supports the 'refocus' event currently.");
          return;
        }

        _emit(eventName, payload);
      }
    };
  }
},365,[1,46]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getChildRouter;

  function getChildRouter(router, routeName) {
    if (router.childRouters && router.childRouters[routeName]) {
      return router.childRouters[routeName];
    }

    var Component = router.getComponentForRouteName(routeName);
    return Component.router;
  }
},366,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getChildrenNavigationCache;

  function getChildrenNavigationCache(navigation) {
    if (!navigation) {
      return {};
    }

    var childrenNavigationCache = navigation._childrenNavigation || (navigation._childrenNavigation = {});
    var childKeys = navigation.state.routes.map(function (route) {
      return route.key;
    });
    Object.keys(childrenNavigationCache).forEach(function (cacheKey) {
      if (!childKeys.includes(cacheKey) && !navigation.state.isTransitioning) {
        delete childrenNavigationCache[cacheKey];
      }
    });
    return navigation._childrenNavigation;
  }
},367,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _jsxFileName = "/Users/satya/Workspace/Callstack/react-navigation-core/src/navigators/createNavigator.js";

  function createNavigator(NavigatorView, router, navigationConfig) {
    var Navigator = function (_React$Component) {
      (0, _inherits2.default)(Navigator, _React$Component);

      function Navigator() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, Navigator);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Navigator)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _this.state = {
          descriptors: {},
          screenProps: _this.props.screenProps
        };
        return _this;
      }

      (0, _createClass2.default)(Navigator, [{
        key: "render",
        value: function render() {
          return _react.default.createElement(NavigatorView, (0, _extends2.default)({}, this.props, {
            screenProps: this.state.screenProps,
            navigation: this.props.navigation,
            navigationConfig: navigationConfig,
            descriptors: this.state.descriptors,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          }));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var prevDescriptors = prevState.descriptors;
          var navigation = nextProps.navigation,
              screenProps = nextProps.screenProps;
          (0, _invariant.default)(navigation != null, 'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html');
          var state = navigation.state;
          var routes = state.routes;

          if (typeof routes === 'undefined') {
            throw new TypeError('No "routes" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop');
          }

          var descriptors = {};
          routes.forEach(function (route) {
            if (prevDescriptors && prevDescriptors[route.key] && route === prevDescriptors[route.key].state && screenProps === prevState.screenProps) {
              descriptors[route.key] = prevDescriptors[route.key];
              return;
            }

            var getComponent = router.getComponentForRouteName.bind(null, route.routeName);
            var childNavigation = navigation.getChildNavigation(route.key);
            var options = router.getScreenOptions(childNavigation, screenProps);
            descriptors[route.key] = {
              key: route.key,
              getComponent: getComponent,
              options: options,
              state: route,
              navigation: childNavigation
            };
          });
          return {
            descriptors: descriptors,
            screenProps: screenProps
          };
        }
      }]);
      return Navigator;
    }(_react.default.Component);

    Navigator.router = router;
    Navigator.navigationOptions = navigationConfig.navigationOptions;
    return Navigator;
  }

  var _default = createNavigator;
  exports.default = _default;
},368,[1,11,22,23,30,33,36,49,359]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NavigationContext = _react.default.createContext(undefined);

  var _default = NavigationContext;
  exports.default = _default;
},369,[1,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _createNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _SwitchRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SwitchView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function createSwitchNavigator(routeConfigMap) {
    var switchConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var router = (0, _SwitchRouter.default)(routeConfigMap, switchConfig);
    var Navigator = (0, _createNavigator.default)(_SwitchView.default, router, switchConfig);
    return Navigator;
  }

  var _default = createSwitchNavigator;
  exports.default = _default;
},370,[1,368,371,386]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var SwitchActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _pathUtils = _$$_REQUIRE(_dependencyMap[10]);

  var defaultActionCreators = function defaultActionCreators() {
    return {};
  };

  var _default = function _default(routeConfigs) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _validateRouteConfigMap.default)(routeConfigs);
    var order = config.order || Object.keys(routeConfigs);
    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;
    var initialRouteParams = config.initialRouteParams;
    var initialRouteName = config.initialRouteName || order[0];
    var backBehavior = config.backBehavior || 'none';
    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;
    var initialRouteIndex = order.indexOf(initialRouteName);

    if (initialRouteIndex === -1) {
      throw new Error("Invalid initialRouteName '" + initialRouteName + "'." + ("Should be one of " + order.map(function (n) {
        return "\"" + n + "\"";
      }).join(', ')));
    }

    var childRouters = {};
    order.forEach(function (routeName) {
      childRouters[routeName] = null;
      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);

      if (screen.router) {
        childRouters[routeName] = screen.router;
      }
    });

    function getParamsForRoute(routeName, params) {
      var routeConfig = routeConfigs[routeName];

      if (routeConfig && routeConfig.params) {
        return (0, _objectSpread2.default)({}, routeConfig.params, params);
      } else {
        return params;
      }
    }

    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config),
        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,
        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;

    function resetChildRoute(routeName) {
      var initialParams = routeName === initialRouteName ? initialRouteParams : undefined;
      var params = getParamsForRoute(routeName, initialParams);
      var childRouter = childRouters[routeName];

      if (childRouter) {
        var childAction = NavigationActions.init();
        return (0, _objectSpread2.default)({}, childRouter.getStateForAction(childAction), {
          key: routeName,
          routeName: routeName,
          params: params
        });
      }

      return {
        key: routeName,
        routeName: routeName,
        params: params
      };
    }

    function getNextState(action, prevState, possibleNextState) {
      function updateNextStateHistory(nextState) {
        if (backBehavior !== 'history') {
          return nextState;
        }

        var nextRouteKeyHistory = prevState ? prevState.routeKeyHistory : [];

        if (action.type === NavigationActions.NAVIGATE) {
          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);
          var keyToAdd = nextState.routes[nextState.index].key;
          nextRouteKeyHistory = nextRouteKeyHistory.filter(function (k) {
            return k !== keyToAdd;
          });
          nextRouteKeyHistory.push(keyToAdd);
        } else if (action.type === NavigationActions.BACK) {
          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);
          nextRouteKeyHistory.pop();
        }

        return (0, _objectSpread2.default)({}, nextState, {
          routeKeyHistory: nextRouteKeyHistory
        });
      }

      var nextState = possibleNextState;

      if (prevState && prevState.index !== possibleNextState.index && resetOnBlur) {
        var prevRouteName = prevState.routes[prevState.index].routeName;
        var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);
        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);
        nextState = (0, _objectSpread2.default)({}, possibleNextState, {
          routes: nextRoutes
        });
      }

      return updateNextStateHistory(nextState);
    }

    function getInitialState() {
      var routes = order.map(resetChildRoute);
      var initialState = {
        routes: routes,
        index: initialRouteIndex,
        isTransitioning: false
      };

      if (backBehavior === 'history') {
        var initialKey = routes[initialRouteIndex].key;
        initialState['routeKeyHistory'] = [initialKey];
      }

      return initialState;
    }

    return {
      childRouters: childRouters,
      getActionCreators: function getActionCreators(route, stateKey) {
        return getCustomActionCreators(route, stateKey);
      },
      getStateForAction: function getStateForAction(action, inputState) {
        var prevState = inputState ? (0, _objectSpread2.default)({}, inputState) : inputState;
        var state = inputState || getInitialState();
        var activeChildIndex = state.index;

        if (action.type === NavigationActions.INIT) {
          var params = action.params;

          if (params) {
            state.routes = state.routes.map(function (route) {
              return (0, _objectSpread2.default)({}, route, {
                params: (0, _objectSpread2.default)({}, route.params, params, route.routeName === initialRouteName ? initialRouteParams : null)
              });
            });
          }
        }

        if (action.type === SwitchActions.JUMP_TO && (action.key == null || action.key === state.key)) {
          var _params = action.params;

          var _index = state.routes.findIndex(function (route) {
            return route.routeName === action.routeName;
          });

          if (_index === -1) {
            throw new Error("There is no route named '" + action.routeName + "' in the navigator with the key '" + action.key + "'.\n" + ("Must be one of: " + state.routes.map(function (route) {
              return "'" + route.routeName + "'";
            }).join(',')));
          }

          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {
            routes: state.routes.map(function (route, i) {
              return i === _index ? (0, _objectSpread2.default)({}, route, {
                params: (0, _objectSpread2.default)({}, route.params, _params)
              }) : route;
            }),
            index: _index
          }));
        }

        var activeChildLastState = state.routes[state.index];
        var activeChildRouter = childRouters[order[state.index]];

        if (activeChildRouter) {
          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);

          if (!activeChildState && inputState) {
            return null;
          }

          if (activeChildState && activeChildState !== activeChildLastState) {
            var _routes = (0, _toConsumableArray2.default)(state.routes);

            _routes[state.index] = activeChildState;
            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {
              routes: _routes
            }));
          }
        }

        var isBackEligible = action.key == null || action.key === activeChildLastState.key;

        if (action.type === NavigationActions.BACK) {
          if (isBackEligible && backBehavior === 'initialRoute') {
            activeChildIndex = initialRouteIndex;
          } else if (isBackEligible && backBehavior === 'order') {
            activeChildIndex = Math.max(0, activeChildIndex - 1);
          } else if (isBackEligible && backBehavior === 'history' && state.routeKeyHistory.length > 1) {
            var routeKey = state.routeKeyHistory[state.routeKeyHistory.length - 2];
            activeChildIndex = order.indexOf(routeKey);
          } else {
            return state;
          }
        }

        var didNavigate = false;

        if (action.type === NavigationActions.NAVIGATE) {
          didNavigate = !!order.find(function (childId, i) {
            if (childId === action.routeName) {
              activeChildIndex = i;
              return true;
            }

            return false;
          });

          if (didNavigate) {
            var childState = state.routes[activeChildIndex];
            var childRouter = childRouters[action.routeName];
            var newChildState = childState;

            if (action.action && childRouter) {
              var childStateUpdate = childRouter.getStateForAction(action.action, childState);

              if (childStateUpdate) {
                newChildState = childStateUpdate;
              }
            }

            if (action.params) {
              newChildState = (0, _objectSpread2.default)({}, newChildState, {
                params: (0, _objectSpread2.default)({}, newChildState.params || {}, action.params)
              });
            }

            if (newChildState !== childState) {
              var _routes2 = (0, _toConsumableArray2.default)(state.routes);

              _routes2[activeChildIndex] = newChildState;
              var nextState = (0, _objectSpread2.default)({}, state, {
                routes: _routes2,
                index: activeChildIndex
              });
              return getNextState(action, prevState, nextState);
            } else if (newChildState === childState && state.index === activeChildIndex && prevState) {
              return null;
            }
          }
        }

        if (action.type === NavigationActions.SET_PARAMS) {
          var key = action.key;
          var lastRoute = state.routes.find(function (route) {
            return route.key === key;
          });

          if (lastRoute) {
            var _params2 = (0, _objectSpread2.default)({}, lastRoute.params, action.params);

            var _routes3 = (0, _toConsumableArray2.default)(state.routes);

            _routes3[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {
              params: _params2
            });
            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {
              routes: _routes3
            }));
          }
        }

        if (activeChildIndex !== state.index) {
          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {
            index: activeChildIndex
          }));
        } else if (didNavigate && !inputState) {
          return state;
        } else if (didNavigate) {
          return (0, _objectSpread2.default)({}, state);
        }

        var index = state.index;
        var routes = state.routes;
        order.find(function (childId, i) {
          var childRouter = childRouters[childId];

          if (i === index) {
            return false;
          }

          var childState = routes[i];

          if (childRouter) {
            childState = childRouter.getStateForAction(action, childState);
          }

          if (!childState) {
            index = i;
            return true;
          }

          if (childState !== routes[i]) {
            routes = (0, _toConsumableArray2.default)(routes);
            routes[i] = childState;
            index = i;
            return true;
          }

          return false;
        });

        if (action.preserveFocus) {
          index = state.index;
        }

        if (index !== state.index || routes !== state.routes) {
          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {
            index: index,
            routes: routes
          }));
        }

        return state;
      },
      getComponentForState: function getComponentForState(state) {
        var routeName = state.routes[state.index].routeName;
        (0, _invariant.default)(routeName, "There is no route defined for index " + state.index + ". Check that\n        that you passed in a navigation state with a valid tab/screen index.");
        var childRouter = childRouters[routeName];

        if (childRouter) {
          return childRouter.getComponentForState(state.routes[state.index]);
        }

        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);
      },
      getComponentForRouteName: function getComponentForRouteName(routeName) {
        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);
      },
      getPathAndParamsForState: function getPathAndParamsForState(state) {
        var route = state.routes[state.index];
        return getPathAndParamsForRoute(route);
      },
      getActionForPathAndParams: function getActionForPathAndParams(path, params) {
        return _getActionForPathAndParams(path, params);
      },
      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.defaultNavigationOptions)
    };
  };

  exports.default = _default;
},371,[362,1,18,46,359,372,375,363,377,378,379]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getScreenForRouteName;

  var _reactIs = _$$_REQUIRE(_dependencyMap[1]);

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function getScreenForRouteName(routeConfigs, routeName) {
    var routeConfig = routeConfigs[routeName];

    if (!routeConfig) {
      throw new Error("There is no route defined for key " + routeName + ".\n" + ("Must be one of: " + Object.keys(routeConfigs).map(function (a) {
        return "'" + a + "'";
      }).join(',')));
    }

    if (routeConfig.screen) {
      return routeConfig.screen;
    }

    if (typeof routeConfig.getScreen === 'function') {
      var screen = routeConfig.getScreen();
      (0, _invariant.default)((0, _reactIs.isValidElementType)(screen), "The getScreen defined for route '" + routeName + " didn't return a valid " + 'screen or navigator.\n\n' + 'Please pass it like this:\n' + (routeName + ": {\n  getScreen: () => require('./MyScreen').default\n}"));
      return screen;
    }

    return routeConfig;
  }
},372,[1,373,359]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},373,[374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v16.8.6
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var b = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      c = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      d = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      e = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      f = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      g = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      h = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      k = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      l = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.async_mode") : 60111,
      m = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      n = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      p = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      q = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      r = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;

  function t(a) {
    if ("object" === typeof a && null !== a) {
      var u = a.$$typeof;

      switch (u) {
        case c:
          switch (a = a.type, a) {
            case l:
            case m:
            case e:
            case g:
            case f:
            case p:
              return a;

            default:
              switch (a = a && a.$$typeof, a) {
                case k:
                case n:
                case h:
                  return a;

                default:
                  return u;
              }

          }

        case r:
        case q:
        case d:
          return u;
      }
    }
  }

  function v(a) {
    return t(a) === m;
  }

  exports.typeOf = t;
  exports.AsyncMode = l;
  exports.ConcurrentMode = m;
  exports.ContextConsumer = k;
  exports.ContextProvider = h;
  exports.Element = c;
  exports.ForwardRef = n;
  exports.Fragment = e;
  exports.Lazy = r;
  exports.Memo = q;
  exports.Portal = d;
  exports.Profiler = g;
  exports.StrictMode = f;
  exports.Suspense = p;

  exports.isValidElementType = function (a) {
    return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || "object" === typeof a && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);
  };

  exports.isAsyncMode = function (a) {
    return v(a) || t(a) === l;
  };

  exports.isConcurrentMode = v;

  exports.isContextConsumer = function (a) {
    return t(a) === k;
  };

  exports.isContextProvider = function (a) {
    return t(a) === h;
  };

  exports.isElement = function (a) {
    return "object" === typeof a && null !== a && a.$$typeof === c;
  };

  exports.isForwardRef = function (a) {
    return t(a) === n;
  };

  exports.isFragment = function (a) {
    return t(a) === e;
  };

  exports.isLazy = function (a) {
    return t(a) === r;
  };

  exports.isMemo = function (a) {
    return t(a) === q;
  };

  exports.isPortal = function (a) {
    return t(a) === d;
  };

  exports.isProfiler = function (a) {
    return t(a) === g;
  };

  exports.isStrictMode = function (a) {
    return t(a) === f;
  };

  exports.isSuspense = function (a) {
    return t(a) === p;
  };
},374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _validateScreenOptions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  function applyConfig(configurer, navigationOptions, configProps) {
    if (typeof configurer === 'function') {
      return (0, _objectSpread2.default)({}, navigationOptions, configurer((0, _objectSpread2.default)({}, configProps, {
        navigationOptions: navigationOptions
      })));
    }

    if (typeof configurer === 'object') {
      return (0, _objectSpread2.default)({}, navigationOptions, configurer);
    }

    return navigationOptions;
  }

  var _default = function _default(routeConfigs, navigatorScreenConfig) {
    return function (navigation, screenProps) {
      var state = navigation.state;
      var route = state;
      (0, _invariant.default)(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');
      var Component = (0, _getScreenForRouteName.default)(routeConfigs, route.routeName);
      var routeConfig = routeConfigs[route.routeName];
      var routeScreenConfig = routeConfig === Component ? null : routeConfig.navigationOptions;
      var componentScreenConfig = Component.navigationOptions;
      var configOptions = {
        navigation: navigation,
        screenProps: screenProps || {}
      };
      var outputConfig = applyConfig(navigatorScreenConfig, {}, configOptions);
      outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);
      outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);
      (0, _validateScreenOptions.default)(outputConfig, route);
      return outputConfig;
    };
  };

  exports.default = _default;
},375,[1,46,359,372,376]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var deprecatedKeys = ['tabBar'];

  var _default = function _default(screenOptions, route) {
    var keys = Object.keys(screenOptions);
    var deprecatedKey = keys.find(function (key) {
      return deprecatedKeys.includes(key);
    });

    if (typeof screenOptions.title === 'function') {
      throw new Error(["`title` cannot be defined as a function in navigation options for `" + route.routeName + "` screen. \n", 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\n'));
    }

    if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {
      throw new Error(["`" + deprecatedKey + "` cannot be defined as a function in navigation options for `" + route.routeName + "` screen. \n", 'Try replacing the following:', '{', "    " + deprecatedKey + ": ({ state }) => ({", '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', "    " + deprecatedKey + "Key: navigation.state...", '})'].join('\n'));
    }

    if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {
      throw new Error(["Invalid key `" + deprecatedKey + "` defined in navigation options for `" + route.routeName + "` screen.", '\n', 'Try replacing the following navigation options:', '{', "    " + deprecatedKey + ": {"].concat((0, _toConsumableArray2.default)(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
        return "        " + key + ": ...,";
      })), ['    },', '}', '\n', 'with:', '{'], (0, _toConsumableArray2.default)(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
        return "    " + (deprecatedKey + key[0].toUpperCase() + key.slice(1)) + ": ...,";
      })), ['}']).join('\n'));
    }
  };

  exports.default = _default;
},376,[1,18]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.jumpTo = exports.JUMP_TO = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var JUMP_TO = 'Navigation/JUMP_TO';
  exports.JUMP_TO = JUMP_TO;

  var jumpTo = function jumpTo(payload) {
    return (0, _objectSpread2.default)({
      type: JUMP_TO,
      preserveFocus: true
    }, payload);
  };

  exports.jumpTo = jumpTo;
},377,[1,46]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactIs = _$$_REQUIRE(_dependencyMap[1]);

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function validateRouteConfigMap(routeConfigs) {
    var routeNames = Object.keys(routeConfigs);
    (0, _invariant.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');
    routeNames.forEach(function (routeName) {
      var routeConfig = routeConfigs[routeName];
      var screenComponent = getScreenComponent(routeConfig);

      if (!screenComponent || !(0, _reactIs.isValidElementType)(screenComponent) && !routeConfig.getScreen) {
        throw new Error("The component for route '" + routeName + "' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n" + routeName + ": MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n" + routeName + ": MyNavigator,\n}");
      }

      if (routeConfig.screen && routeConfig.getScreen) {
        throw new Error("Route '" + routeName + "' should declare a screen or a getScreen, not both.");
      }
    });
  }

  function getScreenComponent(routeConfig) {
    if (!routeConfig) {
      return null;
    }

    return routeConfig.screen ? routeConfig.screen : routeConfig;
  }

  var _default = validateRouteConfigMap;
  exports.default = _default;
},378,[1,373,359]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createPathParser = exports.urlToPathAndParams = exports.getParamsFromPath = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _pathToRegexp = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var queryString = _$$_REQUIRE(_dependencyMap[7]);

  var getParamsFromPath = function getParamsFromPath(inputParams, pathMatch, pathMatchKeys) {
    var params = pathMatch.slice(1).reduce(function (paramsOut, matchResult, i) {
      var key = pathMatchKeys[i];

      if (!key || key.asterisk) {
        return paramsOut;
      }

      var paramName = key.name;
      var decodedMatchResult;

      if (matchResult) {
        try {
          decodedMatchResult = decodeURIComponent(matchResult);
        } catch (e) {}
      }

      paramsOut[paramName] = decodedMatchResult || matchResult;
      return paramsOut;
    }, (0, _objectSpread2.default)({}, inputParams));
    return params;
  };

  exports.getParamsFromPath = getParamsFromPath;

  var getRestOfPath = function getRestOfPath(pathMatch, pathMatchKeys) {
    var rest = pathMatch[pathMatchKeys.findIndex(function (k) {
      return k.asterisk;
    }) + 1];
    return rest;
  };

  var urlToPathAndParams = function urlToPathAndParams(url, uriPrefix) {
    var searchMatch = url.match(/^(.*)\?(.*)$/);
    var params = searchMatch ? queryString.parse(searchMatch[2]) : {};
    var urlWithoutSearch = searchMatch ? searchMatch[1] : url;
    var delimiter = uriPrefix || '://';
    var path = urlWithoutSearch.split(delimiter)[1];

    if (path === undefined) {
      path = urlWithoutSearch;
    }

    if (path === '/') {
      path = '';
    }

    if (path[path.length - 1] === '/') {
      path = path.slice(0, -1);
    }

    return {
      path: path,
      params: params
    };
  };

  exports.urlToPathAndParams = urlToPathAndParams;

  var createPathParser = function createPathParser(childRouters, routeConfigs, _ref) {
    var _ref$paths = _ref.paths,
        pathConfigs = _ref$paths === undefined ? {} : _ref$paths,
        disableRouteNamePaths = _ref.disableRouteNamePaths;
    var pathsByRouteNames = {};
    var paths = [];
    Object.keys(childRouters).forEach(function (routeName) {
      var pathPattern;

      if (pathConfigs[routeName] !== undefined) {
        pathPattern = pathConfigs[routeName];
      } else {
        pathPattern = routeConfigs[routeName].path;
      }

      if (pathPattern === undefined) {
        pathPattern = disableRouteNamePaths ? null : routeName;
      }

      (0, _invariant.default)(pathPattern === null || typeof pathPattern === 'string', "Route path for " + routeName + " must be specified as a string, or null.");
      var isPathMatchable = pathPattern !== null;
      var exactReKeys = [];
      var exactRe = isPathMatchable ? (0, _pathToRegexp.default)(pathPattern, exactReKeys) : null;
      var extendedPathReKeys = [];
      var isWildcard = pathPattern === '' || !isPathMatchable;
      var extendedPathRe = (0, _pathToRegexp.default)(isWildcard ? '*' : pathPattern + "/*", extendedPathReKeys);
      pathsByRouteNames[routeName] = {
        exactRe: exactRe,
        exactReKeys: exactReKeys,
        extendedPathRe: extendedPathRe,
        extendedPathReKeys: extendedPathReKeys,
        isWildcard: isWildcard,
        toPath: pathPattern === null ? function () {
          return '';
        } : (0, _pathToRegexp.compile)(pathPattern)
      };
    });
    paths = Object.entries(pathsByRouteNames);

    var getActionForPathAndParams = function getActionForPathAndParams() {
      var pathToResolve = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var inputParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();;) {
        var _ref4;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref4 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref4 = _i.value;
        }

        var _ref8 = _ref4;

        var _ref3 = (0, _slicedToArray2.default)(_ref8, 2);

        var _routeName2 = _ref3[0];
        var _path2 = _ref3[1];
        var exactRe = _path2.exactRe,
            exactReKeys = _path2.exactReKeys,
            extendedPathRe = _path2.extendedPathRe,
            extendedPathReKeys = _path2.extendedPathReKeys;
        var childRouter = childRouters[_routeName2];
        var exactMatch = exactRe && exactRe.exec(pathToResolve);

        if (exactMatch && exactMatch.length) {
          var extendedMatch = extendedPathRe && extendedPathRe.exec(pathToResolve);
          var childAction = null;

          if (extendedMatch && childRouter) {
            var restOfPath = getRestOfPath(extendedMatch, extendedPathReKeys);
            childAction = childRouter.getActionForPathAndParams(restOfPath, inputParams);
          }

          return NavigationActions.navigate({
            routeName: _routeName2,
            params: getParamsFromPath(inputParams, exactMatch, exactReKeys),
            action: childAction
          });
        }
      }

      for (var _iterator2 = paths, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();;) {
        var _ref7;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref7 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref7 = _i2.value;
        }

        var _ref9 = _ref7;

        var _ref6 = (0, _slicedToArray2.default)(_ref9, 2);

        var _routeName3 = _ref6[0];
        var _path3 = _ref6[1];
        var _extendedPathRe = _path3.extendedPathRe,
            _extendedPathReKeys = _path3.extendedPathReKeys;
        var _childRouter = childRouters[_routeName3];

        var _extendedMatch = _extendedPathRe && _extendedPathRe.exec(pathToResolve);

        if (_extendedMatch && _extendedMatch.length) {
          var _restOfPath = getRestOfPath(_extendedMatch, _extendedPathReKeys);

          var _childAction = null;

          if (_childRouter) {
            _childAction = _childRouter.getActionForPathAndParams(_restOfPath, inputParams);
          }

          if (!_childAction) {
            continue;
          }

          return NavigationActions.navigate({
            routeName: _routeName3,
            params: getParamsFromPath(inputParams, _extendedMatch, _extendedPathReKeys),
            action: _childAction
          });
        }
      }

      return null;
    };

    var getPathAndParamsForRoute = function getPathAndParamsForRoute(route) {
      var routeName = route.routeName,
          params = route.params;
      var childRouter = childRouters[routeName];
      var _pathsByRouteNames$ro = pathsByRouteNames[routeName],
          toPath = _pathsByRouteNames$ro.toPath,
          exactReKeys = _pathsByRouteNames$ro.exactReKeys;
      var subPath = toPath(params);
      var nonPathParams = {};

      if (params) {
        Object.keys(params).filter(function (paramName) {
          return !exactReKeys.find(function (k) {
            return k.name === paramName;
          });
        }).forEach(function (paramName) {
          nonPathParams[paramName] = params[paramName];
        });
      }

      if (childRouter) {
        var child = childRouter.getPathAndParamsForState(route);
        return {
          path: subPath ? subPath + "/" + child.path : child.path,
          params: child.params ? (0, _objectSpread2.default)({}, nonPathParams, child.params) : nonPathParams
        };
      }

      return {
        path: subPath,
        params: nonPathParams
      };
    };

    return {
      getActionForPathAndParams: getActionForPathAndParams,
      getPathAndParamsForRoute: getPathAndParamsForRoute
    };
  };

  exports.createPathParser = createPathParser;
},379,[362,1,12,46,380,363,359,382]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isarray = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = pathToRegexp;
  module.exports.parse = parse;
  module.exports.compile = compile;
  module.exports.tokensToFunction = tokensToFunction;
  module.exports.tokensToRegExp = tokensToRegExp;
  var PATH_REGEXP = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

  function parse(str, options) {
    var tokens = [];
    var key = 0;
    var index = 0;
    var path = '';
    var defaultDelimiter = options && options.delimiter || '/';
    var res;

    while ((res = PATH_REGEXP.exec(str)) != null) {
      var m = res[0];
      var escaped = res[1];
      var offset = res.index;
      path += str.slice(index, offset);
      index = offset + m.length;

      if (escaped) {
        path += escaped[1];
        continue;
      }

      var next = str[index];
      var prefix = res[2];
      var name = res[3];
      var capture = res[4];
      var group = res[5];
      var modifier = res[6];
      var asterisk = res[7];

      if (path) {
        tokens.push(path);
        path = '';
      }

      var partial = prefix != null && next != null && next !== prefix;
      var repeat = modifier === '+' || modifier === '*';
      var optional = modifier === '?' || modifier === '*';
      var delimiter = res[2] || defaultDelimiter;
      var pattern = capture || group;
      tokens.push({
        name: name || key++,
        prefix: prefix || '',
        delimiter: delimiter,
        optional: optional,
        repeat: repeat,
        partial: partial,
        asterisk: !!asterisk,
        pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
      });
    }

    if (index < str.length) {
      path += str.substr(index);
    }

    if (path) {
      tokens.push(path);
    }

    return tokens;
  }

  function compile(str, options) {
    return tokensToFunction(parse(str, options));
  }

  function encodeURIComponentPretty(str) {
    return encodeURI(str).replace(/[\/?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  function encodeAsterisk(str) {
    return encodeURI(str).replace(/[?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  function tokensToFunction(tokens) {
    var matches = new Array(tokens.length);

    for (var i = 0; i < tokens.length; i++) {
      if (typeof tokens[i] === 'object') {
        matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
      }
    }

    return function (obj, opts) {
      var path = '';
      var data = obj || {};
      var options = opts || {};
      var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

      for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i];

        if (typeof token === 'string') {
          path += token;
          continue;
        }

        var value = data[token.name];
        var segment;

        if (value == null) {
          if (token.optional) {
            if (token.partial) {
              path += token.prefix;
            }

            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to be defined');
          }
        }

        if (isarray(value)) {
          if (!token.repeat) {
            throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
          }

          if (value.length === 0) {
            if (token.optional) {
              continue;
            } else {
              throw new TypeError('Expected "' + token.name + '" to not be empty');
            }
          }

          for (var j = 0; j < value.length; j++) {
            segment = encode(value[j]);

            if (!matches[i].test(segment)) {
              throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
            }

            path += (j === 0 ? token.prefix : token.delimiter) + segment;
          }

          continue;
        }

        segment = token.asterisk ? encodeAsterisk(value) : encode(value);

        if (!matches[i].test(segment)) {
          throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
        }

        path += token.prefix + segment;
      }

      return path;
    };
  }

  function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
  }

  function escapeGroup(group) {
    return group.replace(/([=!:$\/()])/g, '\\$1');
  }

  function attachKeys(re, keys) {
    re.keys = keys;
    return re;
  }

  function flags(options) {
    return options.sensitive ? '' : 'i';
  }

  function regexpToRegexp(path, keys) {
    var groups = path.source.match(/\((?!\?)/g);

    if (groups) {
      for (var i = 0; i < groups.length; i++) {
        keys.push({
          name: i,
          prefix: null,
          delimiter: null,
          optional: false,
          repeat: false,
          partial: false,
          asterisk: false,
          pattern: null
        });
      }
    }

    return attachKeys(path, keys);
  }

  function arrayToRegexp(path, keys, options) {
    var parts = [];

    for (var i = 0; i < path.length; i++) {
      parts.push(pathToRegexp(path[i], keys, options).source);
    }

    var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));
    return attachKeys(regexp, keys);
  }

  function stringToRegexp(path, keys, options) {
    return tokensToRegExp(parse(path, options), keys, options);
  }

  function tokensToRegExp(tokens, keys, options) {
    if (!isarray(keys)) {
      options = keys || options;
      keys = [];
    }

    options = options || {};
    var strict = options.strict;
    var end = options.end !== false;
    var route = '';

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        route += escapeString(token);
      } else {
        var prefix = escapeString(token.prefix);
        var capture = '(?:' + token.pattern + ')';
        keys.push(token);

        if (token.repeat) {
          capture += '(?:' + prefix + capture + ')*';
        }

        if (token.optional) {
          if (!token.partial) {
            capture = '(?:' + prefix + '(' + capture + '))?';
          } else {
            capture = prefix + '(' + capture + ')?';
          }
        } else {
          capture = prefix + '(' + capture + ')';
        }

        route += capture;
      }
    }

    var delimiter = escapeString(options.delimiter || '/');
    var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

    if (!strict) {
      route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
    }

    if (end) {
      route += '$';
    } else {
      route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
    }

    return attachKeys(new RegExp('^' + route, flags(options)), keys);
  }

  function pathToRegexp(path, keys, options) {
    if (!isarray(keys)) {
      options = keys || options;
      keys = [];
    }

    options = options || {};

    if (path instanceof RegExp) {
      return regexpToRegexp(path, keys);
    }

    if (isarray(path)) {
      return arrayToRegexp(path, keys, options);
    }

    return stringToRegexp(path, keys, options);
  }
},380,[381]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = Array.isArray || function (arr) {
    return Object.prototype.toString.call(arr) == '[object Array]';
  };
},381,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[2]);

  var strictUriEncode = _$$_REQUIRE(_dependencyMap[3]);

  var decodeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var splitOnFirst = _$$_REQUIRE(_dependencyMap[5]);

  function encoderForArrayFormat(options) {
    switch (options.arrayFormat) {
      case 'index':
        return function (key) {
          return function (result, value) {
            var index = result.length;

            if (value === undefined) {
              return result;
            }

            if (value === null) {
              return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);
            }

            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);
          };
        };

      case 'bracket':
        return function (key) {
          return function (result, value) {
            if (value === undefined) {
              return result;
            }

            if (value === null) {
              return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);
            }

            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);
          };
        };

      case 'comma':
        return function (key) {
          return function (result, value, index) {
            if (value === null || value === undefined || value.length === 0) {
              return result;
            }

            if (index === 0) {
              return [[encode(key, options), '=', encode(value, options)].join('')];
            }

            return [[result, encode(value, options)].join(',')];
          };
        };

      default:
        return function (key) {
          return function (result, value) {
            if (value === undefined) {
              return result;
            }

            if (value === null) {
              return [].concat(_toConsumableArray(result), [encode(key, options)]);
            }

            return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);
          };
        };
    }
  }

  function parserForArrayFormat(options) {
    var result;

    switch (options.arrayFormat) {
      case 'index':
        return function (key, value, accumulator) {
          result = /\[(\d*)\]$/.exec(key);
          key = key.replace(/\[\d*\]$/, '');

          if (!result) {
            accumulator[key] = value;
            return;
          }

          if (accumulator[key] === undefined) {
            accumulator[key] = {};
          }

          accumulator[key][result[1]] = value;
        };

      case 'bracket':
        return function (key, value, accumulator) {
          result = /(\[\])$/.exec(key);
          key = key.replace(/\[\]$/, '');

          if (!result) {
            accumulator[key] = value;
            return;
          }

          if (accumulator[key] === undefined) {
            accumulator[key] = [value];
            return;
          }

          accumulator[key] = [].concat(accumulator[key], value);
        };

      case 'comma':
        return function (key, value, accumulator) {
          var isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;
          var newValue = isArray ? value.split(',') : value;
          accumulator[key] = newValue;
        };

      default:
        return function (key, value, accumulator) {
          if (accumulator[key] === undefined) {
            accumulator[key] = value;
            return;
          }

          accumulator[key] = [].concat(accumulator[key], value);
        };
    }
  }

  function encode(value, options) {
    if (options.encode) {
      return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
    }

    return value;
  }

  function decode(value, options) {
    if (options.decode) {
      return decodeComponent(value);
    }

    return value;
  }

  function keysSorter(input) {
    if (Array.isArray(input)) {
      return input.sort();
    }

    if (typeof input === 'object') {
      return keysSorter(Object.keys(input)).sort(function (a, b) {
        return Number(a) - Number(b);
      }).map(function (key) {
        return input[key];
      });
    }

    return input;
  }

  function removeHash(input) {
    var hashStart = input.indexOf('#');

    if (hashStart !== -1) {
      input = input.slice(0, hashStart);
    }

    return input;
  }

  function extract(input) {
    input = removeHash(input);
    var queryStart = input.indexOf('?');

    if (queryStart === -1) {
      return '';
    }

    return input.slice(queryStart + 1);
  }

  function parse(input, options) {
    options = _extends({
      decode: true,
      arrayFormat: 'none'
    }, options);
    var formatter = parserForArrayFormat(options);
    var ret = Object.create(null);

    if (typeof input !== 'string') {
      return ret;
    }

    input = input.trim().replace(/^[?#&]/, '');

    if (!input) {
      return ret;
    }

    for (var _iterator = input.split('&'), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _param = _ref;

      var _splitOnFirst = splitOnFirst(_param.replace(/\+/g, ' '), '='),
          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),
          key = _splitOnFirst2[0],
          value = _splitOnFirst2[1];

      value = value === undefined ? null : decode(value, options);
      formatter(decode(key, options), value, ret);
    }

    return Object.keys(ret).sort().reduce(function (result, key) {
      var value = ret[key];

      if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {
        result[key] = keysSorter(value);
      } else {
        result[key] = value;
      }

      return result;
    }, Object.create(null));
  }

  exports.extract = extract;
  exports.parse = parse;

  exports.stringify = function (object, options) {
    if (!object) {
      return '';
    }

    options = _extends({
      encode: true,
      strict: true,
      arrayFormat: 'none'
    }, options);
    var formatter = encoderForArrayFormat(options);
    var keys = Object.keys(object);

    if (options.sort !== false) {
      keys.sort(options.sort);
    }

    return keys.map(function (key) {
      var value = object[key];

      if (value === undefined) {
        return '';
      }

      if (value === null) {
        return encode(key, options);
      }

      if (Array.isArray(value)) {
        return value.reduce(formatter(key), []).join('&');
      }

      return encode(key, options) + '=' + encode(value, options);
    }).filter(function (x) {
      return x.length > 0;
    }).join('&');
  };

  exports.parseUrl = function (input, options) {
    return {
      url: removeHash(input).split('?')[0] || '',
      query: parse(extract(input), options)
    };
  };
},382,[12,11,18,383,384,385]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = function (str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {
      return "%" + x.charCodeAt(0).toString(16).toUpperCase();
    });
  };
},383,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var token = '%[a-f0-9]{2}';
  var singleMatcher = new RegExp(token, 'gi');
  var multiMatcher = new RegExp("(%[a-f0-9]{2})+", 'gi');

  function decodeComponents(components, split) {
    try {
      return decodeURIComponent(components.join(''));
    } catch (err) {}

    if (components.length === 1) {
      return components;
    }

    split = split || 1;
    var left = components.slice(0, split);
    var right = components.slice(split);
    return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
  }

  function decode(input) {
    try {
      return decodeURIComponent(input);
    } catch (err) {
      var tokens = input.match(singleMatcher);

      for (var i = 1; i < tokens.length; i++) {
        input = decodeComponents(tokens, i).join('');
        tokens = input.match(singleMatcher);
      }

      return input;
    }
  }

  function customDecodeURIComponent(input) {
    var replaceMap = {
      '%FE%FF': "\uFFFD\uFFFD",
      '%FF%FE': "\uFFFD\uFFFD"
    };
    var match = multiMatcher.exec(input);

    while (match) {
      try {
        replaceMap[match[0]] = decodeURIComponent(match[0]);
      } catch (err) {
        var result = decode(match[0]);

        if (result !== match[0]) {
          replaceMap[match[0]] = result;
        }
      }

      match = multiMatcher.exec(input);
    }

    replaceMap['%C2'] = "\uFFFD";
    var entries = Object.keys(replaceMap);

    for (var i = 0; i < entries.length; i++) {
      var key = entries[i];
      input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
    }

    return input;
  }

  module.exports = function (encodedURI) {
    if (typeof encodedURI !== 'string') {
      throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');
    }

    try {
      encodedURI = encodedURI.replace(/\+/g, ' ');
      return decodeURIComponent(encodedURI);
    } catch (err) {
      return customDecodeURIComponent(encodedURI);
    }
  };
},384,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = function (string, separator) {
    if (!(typeof string === 'string' && typeof separator === 'string')) {
      throw new TypeError('Expected the arguments to be of type `string`');
    }

    if (separator === '') {
      return [string];
    }

    var separatorIndex = string.indexOf(separator);

    if (separatorIndex === -1) {
      return [string];
    }

    return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];
  };
},385,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _SceneView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _jsxFileName = "/Users/satya/Workspace/Callstack/react-navigation-core/src/views/SwitchView/SwitchView.js";

  var SwitchView = function (_React$Component) {
    (0, _inherits2.default)(SwitchView, _React$Component);

    function SwitchView() {
      (0, _classCallCheck2.default)(this, SwitchView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SwitchView).apply(this, arguments));
    }

    (0, _createClass2.default)(SwitchView, [{
      key: "render",
      value: function render() {
        var state = this.props.navigation.state;
        var activeKey = state.routes[state.index].key;
        var descriptor = this.props.descriptors[activeKey];
        var ChildComponent = descriptor.getComponent();
        return _react.default.createElement(_SceneView.default, {
          component: ChildComponent,
          navigation: descriptor.navigation,
          screenProps: this.props.screenProps,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 12
          }
        });
      }
    }]);
    return SwitchView;
  }(_react.default.Component);

  exports.default = SwitchView;
},386,[1,22,23,30,33,36,49,387]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _NavigationContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _jsxFileName = "/Users/satya/Workspace/Callstack/react-navigation-core/src/views/SceneView.js";

  var SceneView = function (_React$PureComponent) {
    (0, _inherits2.default)(SceneView, _React$PureComponent);

    function SceneView() {
      (0, _classCallCheck2.default)(this, SceneView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SceneView).apply(this, arguments));
    }

    (0, _createClass2.default)(SceneView, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            screenProps = _this$props.screenProps,
            Component = _this$props.component,
            navigation = _this$props.navigation;
        return _react.default.createElement(_NavigationContext.default.Provider, {
          value: navigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 8
          }
        }, _react.default.createElement(Component, {
          screenProps: screenProps,
          navigation: navigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 9
          }
        }));
      }
    }]);
    return SceneView;
  }(_react.default.PureComponent);

  exports.default = SceneView;
},387,[1,22,23,30,33,36,49,369]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.completeTransition = exports.replace = exports.reset = exports.push = exports.popToTop = exports.pop = exports.COMPLETE_TRANSITION = exports.REPLACE = exports.RESET = exports.PUSH = exports.POP_TO_TOP = exports.POP = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var POP = 'Navigation/POP';
  exports.POP = POP;
  var POP_TO_TOP = 'Navigation/POP_TO_TOP';
  exports.POP_TO_TOP = POP_TO_TOP;
  var PUSH = 'Navigation/PUSH';
  exports.PUSH = PUSH;
  var RESET = 'Navigation/RESET';
  exports.RESET = RESET;
  var REPLACE = 'Navigation/REPLACE';
  exports.REPLACE = REPLACE;
  var COMPLETE_TRANSITION = 'Navigation/COMPLETE_TRANSITION';
  exports.COMPLETE_TRANSITION = COMPLETE_TRANSITION;

  var pop = function pop(payload) {
    return (0, _objectSpread2.default)({
      type: POP
    }, payload);
  };

  exports.pop = pop;

  var popToTop = function popToTop(payload) {
    return (0, _objectSpread2.default)({
      type: POP_TO_TOP
    }, payload);
  };

  exports.popToTop = popToTop;

  var push = function push(payload) {
    return (0, _objectSpread2.default)({
      type: PUSH
    }, payload);
  };

  exports.push = push;

  var reset = function reset(payload) {
    return (0, _objectSpread2.default)({
      type: RESET,
      key: null
    }, payload);
  };

  exports.reset = reset;

  var replace = function replace(payload) {
    return (0, _objectSpread2.default)({
      type: REPLACE
    }, payload);
  };

  exports.replace = replace;

  var completeTransition = function completeTransition(payload) {
    return (0, _objectSpread2.default)({
      type: COMPLETE_TRANSITION,
      preserveFocus: true
    }, payload);
  };

  exports.completeTransition = completeTransition;
},388,[1,46]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var StackActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _StateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _KeyGenerator = _$$_REQUIRE(_dependencyMap[11]);

  var _pathUtils = _$$_REQUIRE(_dependencyMap[12]);

  function behavesLikePushAction(action) {
    return action.type === NavigationActions.NAVIGATE || action.type === StackActions.PUSH;
  }

  var defaultActionCreators = function defaultActionCreators() {
    return {};
  };

  function isResetToRootStack(action) {
    return action.type === StackActions.RESET && action.key === null;
  }

  var _default = function _default(routeConfigs) {
    var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _validateRouteConfigMap.default)(routeConfigs);
    var childRouters = {};
    var routeNames = Object.keys(routeConfigs);
    routeNames.forEach(function (routeName) {
      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);

      if (screen && screen.router) {
        childRouters[routeName] = screen.router;
      } else {
        childRouters[routeName] = null;
      }
    });
    var initialRouteParams = stackConfig.initialRouteParams;
    var getCustomActionCreators = stackConfig.getCustomActionCreators || defaultActionCreators;
    var initialRouteName = stackConfig.initialRouteName || routeNames[0];
    var initialChildRouter = childRouters[initialRouteName];

    function getInitialState(action) {
      var route = {};
      var childRouter = childRouters[action.routeName];

      if (behavesLikePushAction(action) && childRouter !== undefined) {
        var childState = {};

        if (childRouter !== null) {
          var childAction = action.action || NavigationActions.init({
            params: action.params
          });
          childState = childRouter.getStateForAction(childAction);
        }

        return {
          key: 'StackRouterRoot',
          isTransitioning: false,
          index: 0,
          routes: [(0, _objectSpread2.default)({
            params: action.params
          }, childState, {
            key: action.key || (0, _KeyGenerator.generateKey)(),
            routeName: action.routeName
          })]
        };
      }

      if (initialChildRouter) {
        route = initialChildRouter.getStateForAction(NavigationActions.navigate({
          routeName: initialRouteName,
          params: initialRouteParams
        }));
      }

      var params = (routeConfigs[initialRouteName].params || route.params || action.params || initialRouteParams) && (0, _objectSpread2.default)({}, routeConfigs[initialRouteName].params || {}, route.params || {}, action.params || {}, initialRouteParams || {});
      var initialRouteKey = stackConfig.initialRouteKey;
      route = (0, _objectSpread2.default)({}, route, params ? {
        params: params
      } : {}, {
        routeName: initialRouteName,
        key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()
      });
      return {
        key: 'StackRouterRoot',
        isTransitioning: false,
        index: 0,
        routes: [route]
      };
    }

    function getParamsForRouteAndAction(routeName, action) {
      var routeConfig = routeConfigs[routeName];

      if (routeConfig && routeConfig.params) {
        return (0, _objectSpread2.default)({}, routeConfig.params, action.params);
      } else {
        return action.params;
      }
    }

    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, stackConfig),
        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,
        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;

    return {
      childRouters: childRouters,
      getComponentForState: function getComponentForState(state) {
        var activeChildRoute = state.routes[state.index];
        var routeName = activeChildRoute.routeName;

        if (childRouters[routeName]) {
          return childRouters[routeName].getComponentForState(activeChildRoute);
        }

        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);
      },
      getComponentForRouteName: function getComponentForRouteName(routeName) {
        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);
      },
      getActionCreators: function getActionCreators(route, navStateKey) {
        return (0, _objectSpread2.default)({}, getCustomActionCreators(route, navStateKey), {
          pop: function pop(n, params) {
            return StackActions.pop((0, _objectSpread2.default)({
              n: n
            }, params));
          },
          popToTop: function popToTop(params) {
            return StackActions.popToTop(params);
          },
          push: function push(routeName, params, action) {
            return StackActions.push({
              routeName: routeName,
              params: params,
              action: action
            });
          },
          replace: function replace(replaceWith, params, action, newKey) {
            if (typeof replaceWith === 'string') {
              return StackActions.replace({
                routeName: replaceWith,
                params: params,
                action: action,
                key: route.key,
                newKey: newKey
              });
            }

            (0, _invariant.default)(typeof replaceWith === 'object', 'Must replaceWith an object or a string');
            (0, _invariant.default)(params == null, 'Params must not be provided to .replace() when specifying an object');
            (0, _invariant.default)(action == null, 'Child action must not be provided to .replace() when specifying an object');
            (0, _invariant.default)(newKey == null, 'Child action must not be provided to .replace() when specifying an object');
            return StackActions.replace(replaceWith);
          },
          reset: function reset(actions, index) {
            return StackActions.reset({
              actions: actions,
              index: index == null ? actions.length - 1 : index,
              key: navStateKey
            });
          },
          dismiss: function dismiss() {
            return NavigationActions.back({
              key: navStateKey
            });
          }
        });
      },
      getStateForAction: function getStateForAction(action, state) {
        if (!state) {
          return getInitialState(action);
        }

        var activeChildRoute = state.routes[state.index];

        if (!isResetToRootStack(action) && action.type !== NavigationActions.NAVIGATE) {
          var activeChildRouter = childRouters[activeChildRoute.routeName];

          if (activeChildRouter) {
            var route = activeChildRouter.getStateForAction(action, activeChildRoute);

            if (route !== null && route !== activeChildRoute) {
              return _StateUtils.default.replaceAt(state, activeChildRoute.key, route, action.type === NavigationActions.SET_PARAMS);
            }
          }
        } else if (action.type === NavigationActions.NAVIGATE) {
          for (var _iterator = state.routes.slice().reverse(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();;) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var _childRoute = _ref;
            var childRouter = childRouters[_childRoute.routeName];
            var childAction = action.routeName === _childRoute.routeName && action.action ? action.action : action;

            if (childRouter) {
              var nextRouteState = childRouter.getStateForAction(childAction, _childRoute);

              if (nextRouteState === null || nextRouteState !== _childRoute) {
                var newState = _StateUtils.default.replaceAndPrune(state, nextRouteState ? nextRouteState.key : _childRoute.key, nextRouteState ? nextRouteState : _childRoute);

                return (0, _objectSpread2.default)({}, newState, {
                  isTransitioning: state.index !== newState.index ? action.immediate !== true : state.isTransitioning
                });
              }
            }
          }
        }

        if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined) {
          var _childRouter = childRouters[action.routeName];

          var _route;

          (0, _invariant.default)(action.type !== StackActions.PUSH || action.key == null, 'StackRouter does not support key on the push action');
          var lastRouteIndex = state.routes.findIndex(function (r) {
            if (action.key) {
              return r.key === action.key;
            } else {
              return r.routeName === action.routeName;
            }
          });

          if (action.type !== StackActions.PUSH && lastRouteIndex !== -1) {
            if (state.index === lastRouteIndex && !action.params) {
              return null;
            }

            var routes = state.routes.slice(0, lastRouteIndex + 1);

            if (action.params) {
              var _route2 = state.routes[lastRouteIndex];
              routes[lastRouteIndex] = (0, _objectSpread2.default)({}, _route2, {
                params: (0, _objectSpread2.default)({}, _route2.params, action.params)
              });
            }

            return (0, _objectSpread2.default)({}, state, {
              isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : state.isTransitioning,
              index: lastRouteIndex,
              routes: routes
            });
          }

          if (_childRouter) {
            var _childAction = action.action || NavigationActions.init({
              params: getParamsForRouteAndAction(action.routeName, action)
            });

            _route = (0, _objectSpread2.default)({
              params: getParamsForRouteAndAction(action.routeName, action)
            }, _childRouter.getStateForAction(_childAction), {
              routeName: action.routeName,
              key: action.key || (0, _KeyGenerator.generateKey)()
            });
          } else {
            _route = {
              params: getParamsForRouteAndAction(action.routeName, action),
              routeName: action.routeName,
              key: action.key || (0, _KeyGenerator.generateKey)()
            };
          }

          return (0, _objectSpread2.default)({}, _StateUtils.default.push(state, _route), {
            isTransitioning: action.immediate !== true
          });
        } else if (action.type === StackActions.PUSH && childRouters[action.routeName] === undefined) {
          return state;
        }

        if (behavesLikePushAction(action)) {
          var childRouterNames = Object.keys(childRouters);

          for (var i = 0; i < childRouterNames.length; i++) {
            var childRouterName = childRouterNames[i];
            var _childRouter2 = childRouters[childRouterName];

            if (_childRouter2) {
              var initChildRoute = _childRouter2.getStateForAction(NavigationActions.init());

              var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);

              var routeToPush = null;

              if (navigatedChildRoute === null) {
                routeToPush = initChildRoute;
              } else if (navigatedChildRoute !== initChildRoute) {
                routeToPush = navigatedChildRoute;
              }

              if (routeToPush) {
                var _route3 = (0, _objectSpread2.default)({}, routeToPush, {
                  routeName: childRouterName,
                  key: action.key || (0, _KeyGenerator.generateKey)()
                });

                return (0, _objectSpread2.default)({}, _StateUtils.default.push(state, _route3), {
                  isTransitioning: action.immediate !== true
                });
              }
            }
          }
        }

        if (action.type === StackActions.POP_TO_TOP) {
          if (action.key && state.key !== action.key) {
            return state;
          }

          if (state.index > 0) {
            return (0, _objectSpread2.default)({}, state, {
              isTransitioning: action.immediate !== true,
              index: 0,
              routes: [state.routes[0]]
            });
          }

          return state;
        }

        if (action.type === StackActions.REPLACE) {
          var routeIndex;

          if (action.key === undefined && state.routes.length) {
            routeIndex = state.routes.length - 1;
          } else {
            routeIndex = state.routes.findIndex(function (r) {
              return r.key === action.key;
            });
          }

          if (routeIndex !== -1) {
            var _childRouter3 = childRouters[action.routeName];
            var childState = {};

            if (_childRouter3) {
              var _childAction2 = action.action || NavigationActions.init({
                params: getParamsForRouteAndAction(action.routeName, action)
              });

              childState = _childRouter3.getStateForAction(_childAction2);
            }

            var _routes = (0, _toConsumableArray2.default)(state.routes);

            _routes[routeIndex] = (0, _objectSpread2.default)({
              params: getParamsForRouteAndAction(action.routeName, action)
            }, childState, {
              routeName: action.routeName,
              key: action.newKey || (0, _KeyGenerator.generateKey)()
            });
            return (0, _objectSpread2.default)({}, state, {
              routes: _routes
            });
          }
        }

        if (action.type === StackActions.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && action.toChildKey === state.routes[state.index].key && state.isTransitioning) {
          return (0, _objectSpread2.default)({}, state, {
            isTransitioning: false
          });
        }

        if (action.type === NavigationActions.SET_PARAMS) {
          var key = action.key;
          var lastRoute = state.routes.find(function (route) {
            return route.key === key;
          });

          if (lastRoute) {
            var params = (0, _objectSpread2.default)({}, lastRoute.params, action.params);

            var _routes2 = (0, _toConsumableArray2.default)(state.routes);

            _routes2[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {
              params: params
            });
            return (0, _objectSpread2.default)({}, state, {
              routes: _routes2
            });
          }
        }

        if (action.type === StackActions.RESET) {
          if (action.key != null && action.key != state.key) {
            return state;
          }

          var newStackActions = action.actions;
          return (0, _objectSpread2.default)({}, state, {
            routes: newStackActions.map(function (newStackAction) {
              var router = childRouters[newStackAction.routeName];
              var childState = {};

              if (router) {
                var _childAction3 = newStackAction.action || NavigationActions.init({
                  params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)
                });

                childState = router.getStateForAction(_childAction3);
              }

              return (0, _objectSpread2.default)({
                params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)
              }, childState, {
                routeName: newStackAction.routeName,
                key: newStackAction.key || (0, _KeyGenerator.generateKey)()
              });
            }),
            index: action.index
          });
        }

        if (action.type === NavigationActions.BACK || action.type === StackActions.POP) {
          var _key = action.key,
              n = action.n,
              immediate = action.immediate;
          var backRouteIndex = state.index;

          if (action.type === StackActions.POP && n != null) {
            backRouteIndex = Math.max(1, state.index - n + 1);
          } else if (_key) {
            var backRoute = state.routes.find(function (route) {
              return route.key === _key;
            });
            backRouteIndex = state.routes.indexOf(backRoute);
          }

          if (backRouteIndex > 0) {
            return (0, _objectSpread2.default)({}, state, {
              routes: state.routes.slice(0, backRouteIndex),
              index: backRouteIndex - 1,
              isTransitioning: immediate !== true
            });
          }
        }

        var keyIndex = action.key ? _StateUtils.default.indexOf(state, action.key) : -1;

        for (var _iterator2 = state.routes.slice().reverse(), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var _childRoute3 = _ref2;

          if (_childRoute3.key === activeChildRoute.key) {
            continue;
          }

          if (keyIndex >= 0 && _childRoute3.key !== action.key) {
            continue;
          }

          var _childRouter5 = childRouters[_childRoute3.routeName];

          if (_childRouter5) {
            var _route4 = _childRouter5.getStateForAction(action, _childRoute3);

            if (_route4 === null) {
              return state;
            } else if (_route4 && _route4 !== _childRoute3) {
              return _StateUtils.default.replaceAt(state, _childRoute3.key, _route4, action.preserveFocus || action.type.includes('DRAWER'));
            }
          }
        }

        return state;
      },
      getPathAndParamsForState: function getPathAndParamsForState(state) {
        var route = state.routes[state.index];
        return getPathAndParamsForRoute(route);
      },
      getActionForPathAndParams: function getActionForPathAndParams(path, params) {
        return _getActionForPathAndParams(path, params);
      },
      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, stackConfig.defaultNavigationOptions)
    };
  };

  exports.default = _default;
},389,[362,1,18,46,363,388,375,372,358,378,359,390,379]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._TESTING_ONLY_normalize_keys = _TESTING_ONLY_normalize_keys;
  exports.generateKey = generateKey;
  var uniqueBaseId = "id-" + Date.now();
  var uuidCount = 0;

  function _TESTING_ONLY_normalize_keys() {
    uniqueBaseId = "id";
    uuidCount = 0;
  }

  function generateKey() {
    return uniqueBaseId + "-" + uuidCount++;
  }
},390,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _SwitchRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _withDefaultValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = function _default(routeConfigs) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    config = (0, _objectSpread2.default)({}, config);
    config = (0, _withDefaultValue.default)(config, 'resetOnBlur', false);
    config = (0, _withDefaultValue.default)(config, 'backBehavior', 'initialRoute');
    var switchRouter = (0, _SwitchRouter.default)(routeConfigs, config);
    return switchRouter;
  };

  exports.default = _default;
},391,[1,46,371,392]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _default = function _default(obj, key, defaultValue) {
    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {
      return obj;
    }

    obj[key] = defaultValue;
    return obj;
  };

  exports.default = _default;
},392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var getActiveChildNavigationOptions = function getActiveChildNavigationOptions(navigation, screenProps) {
    var state = navigation.state,
        router = navigation.router,
        getChildNavigation = navigation.getChildNavigation;
    var activeRoute = state.routes[state.index];
    var activeNavigation = getChildNavigation(activeRoute.key);
    var options = router.getScreenOptions(activeNavigation, screenProps);
    return options;
  };

  var _default = getActiveChildNavigationOptions;
  exports.default = _default;
},393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _withNavigation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var EventNameToPropName = {
    willFocus: 'onWillFocus',
    didFocus: 'onDidFocus',
    willBlur: 'onWillBlur',
    didBlur: 'onDidBlur'
  };
  var EventNames = Object.keys(EventNameToPropName);

  var NavigationEvents = function (_React$Component) {
    (0, _inherits2.default)(NavigationEvents, _React$Component);

    function NavigationEvents() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, NavigationEvents);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NavigationEvents)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.getPropListener = function (eventName) {
        return _this.props[EventNameToPropName[eventName]];
      };

      return _this;
    }

    (0, _createClass2.default)(NavigationEvents, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.subscriptions = {};
        EventNames.forEach(function (eventName) {
          _this2.subscriptions[eventName] = _this2.props.navigation.addListener(eventName, function () {
            var propListener = _this2.getPropListener(eventName);

            return propListener && propListener.apply(undefined, arguments);
          });
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        var _this3 = this;

        EventNames.forEach(function (eventName) {
          _this3.subscriptions[eventName].remove();
        });
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return NavigationEvents;
  }(_react.default.Component);

  var _default = (0, _withNavigation.default)(NavigationEvents);

  exports.default = _default;
},394,[1,22,23,30,33,36,49,395]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = withNavigation;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _NavigationContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _jsxFileName = "/Users/satya/Workspace/Callstack/react-navigation-core/src/views/withNavigation.js";

  function withNavigation(Component) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      forwardRef: true
    };

    var ComponentWithNavigation = function (_React$Component) {
      (0, _inherits2.default)(ComponentWithNavigation, _React$Component);

      function ComponentWithNavigation() {
        (0, _classCallCheck2.default)(this, ComponentWithNavigation);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ComponentWithNavigation).apply(this, arguments));
      }

      (0, _createClass2.default)(ComponentWithNavigation, [{
        key: "render",
        value: function render() {
          var _this = this;

          var navigationProp = this.props.navigation;
          return _react.default.createElement(_NavigationContext.default.Consumer, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 17
            }
          }, function (navigationContext) {
            var navigation = navigationProp || navigationContext;
            (0, _invariant.default)(!!navigation, 'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');
            return _react.default.createElement(Component, (0, _extends2.default)({}, _this.props, {
              navigation: navigation,
              ref: config.forwardRef ? _this.props.onRef : undefined,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 25
              }
            }));
          });
        }
      }]);
      return ComponentWithNavigation;
    }(_react.default.Component);

    ComponentWithNavigation.displayName = "withNavigation(" + (Component.displayName || Component.name) + ")";
    return (0, _hoistNonReactStatics.default)(ComponentWithNavigation, Component);
  }
},395,[1,11,22,23,30,33,36,49,396,359,369]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactIs = _$$_REQUIRE(_dependencyMap[0]);

  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
  };
  var TYPE_STATICS = {};
  TYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;

  function getStatics(component) {
    if (ReactIs.isMemo(component)) {
      return MEMO_STATICS;
    }

    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
  }

  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      var targetStatics = getStatics(targetComponent);
      var sourceStatics = getStatics(sourceComponent);

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  }

  module.exports = hoistNonReactStatics;
},396,[373]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = withNavigationFocus;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _withNavigation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _jsxFileName = "/Users/satya/Workspace/Callstack/react-navigation-core/src/views/withNavigationFocus.js";

  function withNavigationFocus(Component) {
    var ComponentWithNavigationFocus = function (_React$Component) {
      (0, _inherits2.default)(ComponentWithNavigationFocus, _React$Component);

      function ComponentWithNavigationFocus(props) {
        var _this;

        (0, _classCallCheck2.default)(this, ComponentWithNavigationFocus);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ComponentWithNavigationFocus).call(this, props));
        _this.subscriptions = [props.navigation.addListener('didFocus', function () {
          return _this.setState({
            isFocused: true
          });
        }), props.navigation.addListener('willBlur', function () {
          return _this.setState({
            isFocused: false
          });
        })];
        _this.state = {
          isFocused: props.navigation ? props.navigation.isFocused() : false
        };
        return _this;
      }

      (0, _createClass2.default)(ComponentWithNavigationFocus, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.subscriptions.forEach(function (sub) {
            return sub.remove();
          });
        }
      }, {
        key: "render",
        value: function render() {
          return _react.default.createElement(Component, (0, _extends2.default)({}, this.props, {
            isFocused: this.state.isFocused,
            ref: this.props.onRef,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          }));
        }
      }]);
      return ComponentWithNavigationFocus;
    }(_react.default.Component);

    ComponentWithNavigationFocus.displayName = "withNavigationFocus(" + (Component.displayName || Component.name) + ")";
    return (0, _hoistNonReactStatics.default)((0, _withNavigation.default)(ComponentWithNavigationFocus, {
      forwardRef: false
    }), Component);
  }
},397,[1,11,22,23,30,33,36,49,396,395]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var validateFormat = function validateFormat() {};

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},398,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = docsUrl;

  function docsUrl(path) {
    return "https://reactnavigation.org/docs/" + path;
  }
},399,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _default = function _default(Navigator, navigatorConfig) {
    var _class, _temp;

    return _temp = _class = function (_React$Component) {
      (0, _inherits2.default)(KeyboardAwareNavigator, _React$Component);

      function KeyboardAwareNavigator() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, KeyboardAwareNavigator);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(KeyboardAwareNavigator)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _this._previouslyFocusedTextInput = null;

        _this._handleGestureBegin = function () {
          _this._previouslyFocusedTextInput = _reactNative.TextInput.State.currentlyFocusedField();

          if (_this._previouslyFocusedTextInput) {
            _reactNative.TextInput.State.blurTextInput(_this._previouslyFocusedTextInput);
          }

          _this.props.onGestureBegin && _this.props.onGestureBegin();
        };

        _this._handleGestureCanceled = function () {
          if (_this._previouslyFocusedTextInput) {
            _reactNative.TextInput.State.focusTextInput(_this._previouslyFocusedTextInput);
          }

          _this.props.onGestureCanceled && _this.props.onGestureCanceled();
        };

        _this._handleGestureEnd = function () {
          _this._previouslyFocusedTextInput = null;
          _this.props.onGestureFinish && _this.props.onGestureFinish();
        };

        _this._handleTransitionStart = function (transitionProps, prevTransitionProps) {
          if (transitionProps.index !== prevTransitionProps.index) {
            var currentField = _reactNative.TextInput.State.currentlyFocusedField();

            if (currentField) {
              _reactNative.TextInput.State.blurTextInput(currentField);
            }
          }

          var onTransitionStart = _this.props.onTransitionStart || navigatorConfig.onTransitionStart;
          onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);
        };

        return _this;
      }

      (0, _createClass2.default)(KeyboardAwareNavigator, [{
        key: "render",
        value: function render() {
          return _react.default.createElement(Navigator, (0, _extends2.default)({}, this.props, {
            onGestureBegin: this._handleGestureBegin,
            onGestureCanceled: this._handleGestureCanceled,
            onGestureEnd: this._handleGestureEnd,
            onTransitionStart: this._handleTransitionStart
          }));
        }
      }]);
      return KeyboardAwareNavigator;
    }(_react.default.Component), _class.router = Navigator.router, _class.navigationOptions = Navigator.navigationOptions, _temp;
  };

  exports.default = _default;
},400,[1,11,22,23,30,33,36,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createNavigationAwareScrollable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _core = _$$_REQUIRE(_dependencyMap[9]);

  function createNavigationAwareScrollable(Component) {
    var _class, _temp;

    var ComponentWithNavigationScrolling = (0, _core.withNavigation)((_temp = _class = function (_React$PureComponent) {
      (0, _inherits2.default)(_class, _React$PureComponent);

      function _class() {
        (0, _classCallCheck2.default)(this, _class);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(_class).apply(this, arguments));
      }

      (0, _createClass2.default)(_class, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this = this;

          this._subscription = this.props.navigation.addListener('refocus', function () {
            var scrollableNode = _this.getNode();

            if (_this.props.navigation.isFocused() && scrollableNode !== null) {
              if (scrollableNode.scrollToTop != null) {
                scrollableNode.scrollToTop();
              } else if (scrollableNode.scrollTo != null) {
                scrollableNode.scrollTo({
                  y: 0
                });
              } else if (scrollableNode.scrollResponderScrollTo != null) {
                scrollableNode.scrollResponderScrollTo({
                  y: 0
                });
              }
            }
          });
        }
      }, {
        key: "getNode",
        value: function getNode() {
          if (this._scrollRef === null) {
            return null;
          }

          if (this._scrollRef.getScrollResponder) {
            return this._scrollRef.getScrollResponder();
          } else if (this._scrollRef.getNode) {
            return this._scrollRef.getNode();
          } else {
            return this._scrollRef;
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this._subscription != null) {
            this._subscription.remove();
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;

          return _react.default.createElement(Component, (0, _extends2.default)({
            ref: function ref(view) {
              _this2._scrollRef = view;
            }
          }, this.props));
        }
      }]);
      return _class;
    }(_react.default.PureComponent), _class.displayName = "withNavigationScrolling(" + (Component.displayName || Component.name) + ")", _temp));

    var NavigationAwareScrollable = function (_React$PureComponent2) {
      (0, _inherits2.default)(NavigationAwareScrollable, _React$PureComponent2);

      function NavigationAwareScrollable() {
        var _getPrototypeOf2;

        var _this3;

        (0, _classCallCheck2.default)(this, NavigationAwareScrollable);

        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }

        _this3 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NavigationAwareScrollable)).call.apply(_getPrototypeOf2, [this].concat(_args)));

        _this3._captureRef = function (view) {
          _this3._innerRef = view;
          _this3.props.onRef && _this3.props.onRef(view);
        };

        _this3.setNativeProps = function () {
          var _this3$_innerRef$getN;

          return (_this3$_innerRef$getN = _this3._innerRef.getNode()).setNativeProps.apply(_this3$_innerRef$getN, arguments);
        };

        _this3.getScrollResponder = function () {
          var _this3$_innerRef$getN2;

          return (_this3$_innerRef$getN2 = _this3._innerRef.getNode()).getScrollResponder.apply(_this3$_innerRef$getN2, arguments);
        };

        _this3.getScrollableNode = function () {
          var _this3$_innerRef$getN3;

          return (_this3$_innerRef$getN3 = _this3._innerRef.getNode()).getScrollableNode.apply(_this3$_innerRef$getN3, arguments);
        };

        _this3.getInnerViewNode = function () {
          var _this3$_innerRef$getN4;

          return (_this3$_innerRef$getN4 = _this3._innerRef.getNode()).getInnerViewNode.apply(_this3$_innerRef$getN4, arguments);
        };

        _this3.scrollTo = function () {
          var _this3$_innerRef$getN5;

          return (_this3$_innerRef$getN5 = _this3._innerRef.getNode()).scrollTo.apply(_this3$_innerRef$getN5, arguments);
        };

        _this3.scrollToEnd = function () {
          var _this3$_innerRef$getN6;

          return (_this3$_innerRef$getN6 = _this3._innerRef.getNode()).scrollToEnd.apply(_this3$_innerRef$getN6, arguments);
        };

        _this3.scrollWithoutAnimationTo = function () {
          var _this3$_innerRef$getN7;

          return (_this3$_innerRef$getN7 = _this3._innerRef.getNode()).scrollWithoutAnimationTo.apply(_this3$_innerRef$getN7, arguments);
        };

        _this3.flashScrollIndicators = function () {
          var _this3$_innerRef$getN8;

          return (_this3$_innerRef$getN8 = _this3._innerRef.getNode()).flashScrollIndicators.apply(_this3$_innerRef$getN8, arguments);
        };

        return _this3;
      }

      (0, _createClass2.default)(NavigationAwareScrollable, [{
        key: "render",
        value: function render() {
          return _react.default.createElement(ComponentWithNavigationScrolling, (0, _extends2.default)({}, this.props, {
            onRef: this._captureRef
          }));
        }
      }]);
      return NavigationAwareScrollable;
    }(_react.default.PureComponent);

    NavigationAwareScrollable.displayName = "NavigationAwareScrollable(" + (Component.displayName || Component.name) + ")";
    return (0, _hoistNonReactStatics.default)(NavigationAwareScrollable, Component);
  }
},401,[1,11,22,23,30,33,36,49,402,357]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactIs = _$$_REQUIRE(_dependencyMap[0]);

  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
  };
  var TYPE_STATICS = {};
  TYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;

  function getStatics(component) {
    if (ReactIs.isMemo(component)) {
      return MEMO_STATICS;
    }

    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
  }

  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      var targetStatics = getStatics(targetComponent);
      var sourceStatics = getStatics(sourceComponent);

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  }

  module.exports = hoistNonReactStatics;
},402,[373]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _default;
  exports.isOrientationLandscape = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var isOrientationLandscape = function isOrientationLandscape(_ref) {
    var width = _ref.width,
        height = _ref.height;
    return width > height;
  };

  exports.isOrientationLandscape = isOrientationLandscape;

  function _default(WrappedComponent) {
    var withOrientation = function (_React$Component) {
      (0, _inherits2.default)(withOrientation, _React$Component);

      function withOrientation() {
        var _this;

        (0, _classCallCheck2.default)(this, withOrientation);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(withOrientation).call(this));

        _this.handleOrientationChange = function (_ref2) {
          var window = _ref2.window;
          var isLandscape = isOrientationLandscape(window);

          _this.setState({
            isLandscape: isLandscape
          });
        };

        var _isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));

        _this.state = {
          isLandscape: _isLandscape
        };
        return _this;
      }

      (0, _createClass2.default)(withOrientation, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          _reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          _reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);
        }
      }, {
        key: "render",
        value: function render() {
          return _react.default.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.state));
        }
      }]);
      return withOrientation;
    }(_react.default.Component);

    return (0, _hoistNonReactStatics.default)(withOrientation, WrappedComponent);
  }
},403,[1,11,22,23,30,33,36,49,2,402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _core = _$$_REQUIRE(_dependencyMap[10]);

  var FAR_FAR_AWAY = 3000;

  var ResourceSavingSceneView = function (_React$PureComponent) {
    (0, _inherits2.default)(ResourceSavingSceneView, _React$PureComponent);
    (0, _createClass2.default)(ResourceSavingSceneView, null, [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        if (nextProps.isFocused && !prevState.awake) {
          return {
            awake: true
          };
        } else {
          return null;
        }
      }
    }]);

    function ResourceSavingSceneView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ResourceSavingSceneView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ResourceSavingSceneView).call(this));

      _this._mustAlwaysBeVisible = function () {
        return _this.props.animationEnabled || _this.props.swipeEnabled;
      };

      _this.state = {
        awake: props.lazy ? props.isFocused : true
      };
      return _this;
    }

    (0, _createClass2.default)(ResourceSavingSceneView, [{
      key: "render",
      value: function render() {
        var awake = this.state.awake;
        var _this$props = this.props,
            isFocused = _this$props.isFocused,
            childNavigation = _this$props.childNavigation,
            removeClippedSubviews = _this$props.removeClippedSubviews,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["isFocused", "childNavigation", "removeClippedSubviews"]);
        return _react.default.createElement(_reactNative.View, {
          style: styles.container,
          collapsable: false,
          removeClippedSubviews: _reactNative.Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews
        }, _react.default.createElement(_reactNative.View, {
          style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached
        }, awake ? _react.default.createElement(_core.SceneView, (0, _extends2.default)({}, rest, {
          navigation: childNavigation
        })) : null));
      }
    }]);
    return ResourceSavingSceneView;
  }(_react.default.PureComponent);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    innerAttached: {
      flex: 1
    },
    innerDetached: {
      flex: 1,
      top: FAR_FAR_AWAY
    }
  });

  var _default = ResourceSavingSceneView;
  exports.default = _default;
},404,[1,11,9,22,30,33,23,36,49,2,357]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getInset = getInset;
  exports.getStatusBarHeight = getStatusBarHeight;
  exports.withSafeArea = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _withOrientation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XSMAX_WIDTH = 414;
  var XSMAX_HEIGHT = 896;
  var PAD_WIDTH = 768;
  var PAD_HEIGHT = 1024;
  var IPADPRO11_WIDTH = 834;
  var IPADPRO11_HEIGHT = 1194;
  var IPADPRO129_HEIGHT = 1024;
  var IPADPRO129_WIDTH = 1366;

  var getResolvedDimensions = function getResolvedDimensions() {
    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    if (width === 0 && height === 0) return _reactNative.Dimensions.get('screen');
    return {
      width: width,
      height: height
    };
  };

  var _getResolvedDimension = getResolvedDimensions(),
      D_HEIGHT = _getResolvedDimension.height,
      D_WIDTH = _getResolvedDimension.width;

  var _NativeModules$Platfo = _reactNative.NativeModules.PlatformConstants,
      PlatformConstants = _NativeModules$Platfo === undefined ? {} : _NativeModules$Platfo;

  var _ref = PlatformConstants.reactNativeVersion || {},
      _ref$minor = _ref.minor,
      minor = _ref$minor === undefined ? 0 : _ref$minor;

  var isIPhoneX = function () {
    if (_reactNative.Platform.OS === 'web') return false;
    return _reactNative.Platform.OS === 'ios' && (D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH || D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT) || D_HEIGHT === XSMAX_HEIGHT && D_WIDTH === XSMAX_WIDTH || D_HEIGHT === XSMAX_WIDTH && D_WIDTH === XSMAX_HEIGHT;
  }();

  var isNewIPadPro = function () {
    if (_reactNative.Platform.OS !== 'ios') return false;
    return D_HEIGHT === IPADPRO11_HEIGHT && D_WIDTH === IPADPRO11_WIDTH || D_HEIGHT === IPADPRO11_WIDTH && D_WIDTH === IPADPRO11_HEIGHT || D_HEIGHT === IPADPRO129_HEIGHT && D_WIDTH === IPADPRO129_WIDTH || D_HEIGHT === IPADPRO129_WIDTH && D_WIDTH === IPADPRO129_HEIGHT;
  }();

  var isIPad = function () {
    if (_reactNative.Platform.OS !== 'ios' || isIPhoneX) return false;

    if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
      return false;
    }

    if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
      return false;
    }

    return true;
  }();

  var _customStatusBarHeight = null;

  var statusBarHeight = function statusBarHeight(isLandscape) {
    if (_customStatusBarHeight !== null) {
      return _customStatusBarHeight;
    }

    if (_reactNative.Platform.OS === 'android') {
      if (global.Expo) {
        return global.Expo.Constants.statusBarHeight;
      } else {
        return 0;
      }
    }

    if (isIPhoneX) {
      return isLandscape ? 0 : 44;
    }

    if (isNewIPadPro) {
      return 24;
    }

    if (isIPad) {
      return 20;
    }

    return isLandscape ? 0 : 20;
  };

  var doubleFromPercentString = function doubleFromPercentString(percent) {
    if (!percent.includes('%')) {
      return 0;
    }

    var dbl = parseFloat(percent) / 100;
    if (isNaN(dbl)) return 0;
    return dbl;
  };

  var SafeView = function (_Component) {
    (0, _inherits2.default)(SafeView, _Component);

    function SafeView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SafeView);

      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SafeView)).call.apply(_getPrototypeOf2, [this].concat(_args)));
      _this.state = {
        touchesTop: true,
        touchesBottom: true,
        touchesLeft: true,
        touchesRight: true,
        orientation: null,
        viewWidth: 0,
        viewHeight: 0
      };

      _this._onLayout = function () {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        if (!_this._isMounted) return;
        if (!_this.view) return;
        var isLandscape = _this.props.isLandscape;
        var orientation = _this.state.orientation;
        var newOrientation = isLandscape ? 'landscape' : 'portrait';

        if (orientation && orientation === newOrientation) {
          return;
        }

        var _getResolvedDimension2 = getResolvedDimensions(),
            WIDTH = _getResolvedDimension2.width,
            HEIGHT = _getResolvedDimension2.height;

        _this.view._component.measureInWindow(function (winX, winY, winWidth, winHeight) {
          var _this$props;

          if (!_this.view) {
            return;
          }

          var realY = winY;
          var realX = winX;

          if (realY >= HEIGHT) {
            realY = realY % HEIGHT;
          } else if (realY < 0) {
            realY = realY % HEIGHT + HEIGHT;
          }

          if (realX >= WIDTH) {
            realX = realX % WIDTH;
          } else if (realX < 0) {
            realX = realX % WIDTH + WIDTH;
          }

          var touchesTop = realY === 0;
          var touchesBottom = realY + winHeight >= HEIGHT;
          var touchesLeft = realX === 0;
          var touchesRight = realX + winWidth >= WIDTH;

          _this.setState({
            touchesTop: touchesTop,
            touchesBottom: touchesBottom,
            touchesLeft: touchesLeft,
            touchesRight: touchesRight,
            orientation: newOrientation,
            viewWidth: winWidth,
            viewHeight: winHeight
          });

          if (_this.props.onLayout) (_this$props = _this.props).onLayout.apply(_this$props, args);
        });
      };

      _this._getSafeAreaStyle = function () {
        var _this$state = _this.state,
            touchesTop = _this$state.touchesTop,
            touchesBottom = _this$state.touchesBottom,
            touchesLeft = _this$state.touchesLeft,
            touchesRight = _this$state.touchesRight;
        var _this$props2 = _this.props,
            forceInset = _this$props2.forceInset,
            isLandscape = _this$props2.isLandscape;

        var _this$_getViewStyles = _this._getViewStyles(),
            paddingTop = _this$_getViewStyles.paddingTop,
            paddingBottom = _this$_getViewStyles.paddingBottom,
            paddingLeft = _this$_getViewStyles.paddingLeft,
            paddingRight = _this$_getViewStyles.paddingRight,
            viewStyle = _this$_getViewStyles.viewStyle;

        var style = (0, _objectSpread2.default)({}, viewStyle, {
          paddingTop: touchesTop ? _this._getInset('top') : 0,
          paddingBottom: touchesBottom ? _this._getInset('bottom') : 0,
          paddingLeft: touchesLeft ? _this._getInset('left') : 0,
          paddingRight: touchesRight ? _this._getInset('right') : 0
        });

        if (forceInset) {
          Object.keys(forceInset).forEach(function (key) {
            var inset = forceInset[key];

            if (inset === 'always') {
              inset = _this._getInset(key);
            }

            if (inset === 'never') {
              inset = 0;
            }

            switch (key) {
              case 'horizontal':
                {
                  style.paddingLeft = inset;
                  style.paddingRight = inset;
                  break;
                }

              case 'vertical':
                {
                  style.paddingTop = inset;
                  style.paddingBottom = inset;
                  break;
                }

              case 'left':
              case 'right':
              case 'top':
              case 'bottom':
                {
                  var padding = "padding" + key[0].toUpperCase() + key.slice(1);
                  style[padding] = inset;
                  break;
                }
            }
          });
        }

        if (style.height && typeof style.height === 'number') {
          style.height += style.paddingTop + style.paddingBottom;
        }

        if (style.width && typeof style.width === 'number') {
          style.width += style.paddingLeft + style.paddingRight;
        }

        style.paddingTop = Math.max(style.paddingTop, paddingTop);
        style.paddingBottom = Math.max(style.paddingBottom, paddingBottom);
        style.paddingLeft = Math.max(style.paddingLeft, paddingLeft);
        style.paddingRight = Math.max(style.paddingRight, paddingRight);
        return style;
      };

      _this._getViewStyles = function () {
        var viewWidth = _this.state.viewWidth;

        var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(_this.props.style || {}),
            _StyleSheet$flatten$p = _StyleSheet$flatten.padding,
            padding = _StyleSheet$flatten$p === undefined ? 0 : _StyleSheet$flatten$p,
            _StyleSheet$flatten$p2 = _StyleSheet$flatten.paddingVertical,
            paddingVertical = _StyleSheet$flatten$p2 === undefined ? padding : _StyleSheet$flatten$p2,
            _StyleSheet$flatten$p3 = _StyleSheet$flatten.paddingHorizontal,
            paddingHorizontal = _StyleSheet$flatten$p3 === undefined ? padding : _StyleSheet$flatten$p3,
            _StyleSheet$flatten$p4 = _StyleSheet$flatten.paddingTop,
            paddingTop = _StyleSheet$flatten$p4 === undefined ? paddingVertical : _StyleSheet$flatten$p4,
            _StyleSheet$flatten$p5 = _StyleSheet$flatten.paddingBottom,
            paddingBottom = _StyleSheet$flatten$p5 === undefined ? paddingVertical : _StyleSheet$flatten$p5,
            _StyleSheet$flatten$p6 = _StyleSheet$flatten.paddingLeft,
            paddingLeft = _StyleSheet$flatten$p6 === undefined ? paddingHorizontal : _StyleSheet$flatten$p6,
            _StyleSheet$flatten$p7 = _StyleSheet$flatten.paddingRight,
            paddingRight = _StyleSheet$flatten$p7 === undefined ? paddingHorizontal : _StyleSheet$flatten$p7,
            viewStyle = (0, _objectWithoutProperties2.default)(_StyleSheet$flatten, ["padding", "paddingVertical", "paddingHorizontal", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight"]);

        if (typeof paddingTop !== 'number') {
          paddingTop = doubleFromPercentString(paddingTop) * viewWidth;
        }

        if (typeof paddingBottom !== 'number') {
          paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;
        }

        if (typeof paddingLeft !== 'number') {
          paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;
        }

        if (typeof paddingRight !== 'number') {
          paddingRight = doubleFromPercentString(paddingRight) * viewWidth;
        }

        return {
          paddingTop: paddingTop,
          paddingBottom: paddingBottom,
          paddingLeft: paddingLeft,
          paddingRight: paddingRight,
          viewStyle: viewStyle
        };
      };

      _this._getInset = function (key) {
        var isLandscape = _this.props.isLandscape;
        return getInset(key, isLandscape);
      };

      return _this;
    }

    (0, _createClass2.default)(SafeView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this._isMounted = true;

        _reactNative.InteractionManager.runAfterInteractions(function () {
          _this2._onLayout();
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._isMounted = false;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this._onLayout();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props3 = this.props,
            _this$props3$forceIns = _this$props3.forceInset,
            forceInset = _this$props3$forceIns === undefined ? false : _this$props3$forceIns,
            isLandscape = _this$props3.isLandscape,
            style = _this$props3.style,
            props = (0, _objectWithoutProperties2.default)(_this$props3, ["forceInset", "isLandscape", "style"]);

        var safeAreaStyle = this._getSafeAreaStyle();

        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          ref: function ref(c) {
            return _this3.view = c;
          },
          pointerEvents: "box-none"
        }, props, {
          onLayout: this._onLayout,
          style: safeAreaStyle
        }));
      }
    }]);
    return SafeView;
  }(_react.Component);

  SafeView.setStatusBarHeight = function (height) {
    _customStatusBarHeight = height;
  };

  function getInset(key, isLandscape) {
    switch (key) {
      case 'horizontal':
      case 'right':
      case 'left':
        {
          return isLandscape ? isIPhoneX ? 44 : 0 : 0;
        }

      case 'vertical':
      case 'top':
        {
          return statusBarHeight(isLandscape);
        }

      case 'bottom':
        {
          if (isIPhoneX) {
            return isLandscape ? 24 : 34;
          }

          if (isNewIPadPro) {
            return 20;
          }

          return 0;
        }
    }
  }

  function getStatusBarHeight(isLandscape) {
    return statusBarHeight(isLandscape);
  }

  var SafeAreaView = (0, _withOrientation.default)(SafeView);
  var _default = SafeAreaView;
  exports.default = _default;

  var withSafeArea = function withSafeArea() {
    var forceInset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return function (WrappedComponent) {
      var withSafeArea = function (_Component2) {
        (0, _inherits2.default)(withSafeArea, _Component2);

        function withSafeArea() {
          (0, _classCallCheck2.default)(this, withSafeArea);
          return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(withSafeArea).apply(this, arguments));
        }

        (0, _createClass2.default)(withSafeArea, [{
          key: "render",
          value: function render() {
            return _react.default.createElement(SafeAreaView, {
              style: {
                flex: 1
              },
              forceInset: forceInset
            }, _react.default.createElement(WrappedComponent, this.props));
          }
        }]);
        return withSafeArea;
      }(_react.Component);

      return (0, _hoistNonReactStatics.default)(withSafeArea, WrappedComponent);
    };
  };

  exports.withSafeArea = withSafeArea;
},405,[362,1,11,9,46,22,23,30,33,36,49,2,406,407]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  }

  module.exports = hoistNonReactStatics;
},406,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _default;
  exports.isOrientationLandscape = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var isOrientationLandscape = function isOrientationLandscape(_ref) {
    var width = _ref.width,
        height = _ref.height;
    return width > height;
  };

  exports.isOrientationLandscape = isOrientationLandscape;

  function _default(WrappedComponent) {
    var withOrientation = function (_React$Component) {
      (0, _inherits2.default)(withOrientation, _React$Component);

      function withOrientation() {
        var _this;

        (0, _classCallCheck2.default)(this, withOrientation);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(withOrientation).call(this));

        _this.handleOrientationChange = function (_ref2) {
          var window = _ref2.window;
          var isLandscape = isOrientationLandscape(window);

          _this.setState({
            isLandscape: isLandscape
          });
        };

        var _isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));

        _this.state = {
          isLandscape: _isLandscape
        };
        return _this;
      }

      (0, _createClass2.default)(withOrientation, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (typeof _reactNative.Dimensions.addEventListener === 'function') {
            _reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (typeof _reactNative.Dimensions.removeEventListener === 'function') {
            _reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);
          }
        }
      }, {
        key: "render",
        value: function render() {
          return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.state));
        }
      }]);
      return withOrientation;
    }(React.Component);

    return (0, _hoistNonReactStatics.default)(withOrientation, WrappedComponent);
  }
},407,[362,1,11,22,23,30,33,36,49,2,406]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[5]);

  var _createNavigationAwareScrollable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var WrappedScrollView;

  if (_reactNative.Platform.OS === 'android') {
    WrappedScrollView = (0, _createNavigationAwareScrollable.default)(_reactNative.ScrollView);
  } else {
    WrappedScrollView = (0, _createNavigationAwareScrollable.default)(_reactNativeGestureHandler.ScrollView);
  }

  function propsMaybeWithRefreshControl(props) {
    var onRefresh = props.onRefresh;

    if (onRefresh) {
      (0, _invariant.default)(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');
      return (0, _objectSpread2.default)({}, props, {
        refreshControl: props.refreshControl == null ? _react.default.createElement(_reactNative.RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: onRefresh,
          progressViewOffset: props.progressViewOffset
        }) : props.refreshControl
      });
    } else {
      return props;
    }
  }

  var WrappedFlatList = _react.default.forwardRef(function (props, ref) {
    return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({
      ref: ref
    }, props, {
      renderScrollComponent: function renderScrollComponent(props) {
        return _react.default.createElement(WrappedScrollView, propsMaybeWithRefreshControl(props));
      }
    }));
  });

  var WrappedSectionList = _react.default.forwardRef(function (props, ref) {
    return _react.default.createElement(_reactNative.SectionList, (0, _extends2.default)({
      ref: ref
    }, props, {
      renderScrollComponent: function renderScrollComponent(props) {
        return _react.default.createElement(WrappedScrollView, propsMaybeWithRefreshControl(props));
      }
    }));
  });

  module.exports = {
    ScrollView: WrappedScrollView,
    FlatList: WrappedFlatList,
    SectionList: WrappedSectionList
  };
},408,[1,11,46,49,2,409,401,398]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    Swipeable: true,
    DrawerLayout: true
  };
  Object.defineProperty(exports, "Swipeable", {
    enumerable: true,
    get: function get() {
      return _Swipeable.default;
    }
  });
  Object.defineProperty(exports, "DrawerLayout", {
    enumerable: true,
    get: function get() {
      return _DrawerLayout.default;
    }
  });

  var _Swipeable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _DrawerLayout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _GestureHandler = _$$_REQUIRE(_dependencyMap[3]);

  Object.keys(_GestureHandler).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _GestureHandler[key];
      }
    });
  });

  var _touchables = _$$_REQUIRE(_dependencyMap[4]);

  Object.keys(_touchables).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _touchables[key];
      }
    });
  });
},409,[1,410,421,411,422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _GestureHandler = _$$_REQUIRE(_dependencyMap[11]);

  var DRAG_TOSS = 0.05;

  if (!Math.sign) {
    Math.sign = function (x) {
      return Number(x > 0) - Number(x < 0) || +x;
    };
  }

  var Swipeable = function (_Component) {
    (0, _inherits2.default)(Swipeable, _Component);

    function Swipeable(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, Swipeable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Swipeable).call(this, _props));

      _this._updateAnimatedEvent = function (props, state) {
        var friction = props.friction,
            overshootFriction = props.overshootFriction,
            useNativeAnimations = props.useNativeAnimations;
        var dragX = state.dragX,
            rowTranslation = state.rowTranslation,
            _state$leftWidth = state.leftWidth,
            leftWidth = _state$leftWidth === undefined ? 0 : _state$leftWidth,
            _state$rowWidth = state.rowWidth,
            rowWidth = _state$rowWidth === undefined ? 0 : _state$rowWidth;
        var _state$rightOffset = state.rightOffset,
            rightOffset = _state$rightOffset === undefined ? rowWidth : _state$rightOffset;
        var rightWidth = Math.max(0, rowWidth - rightOffset);
        var _props$overshootLeft = props.overshootLeft,
            overshootLeft = _props$overshootLeft === undefined ? leftWidth > 0 : _props$overshootLeft,
            _props$overshootRight = props.overshootRight,
            overshootRight = _props$overshootRight === undefined ? rightWidth > 0 : _props$overshootRight;

        var transX = _reactNative.Animated.add(rowTranslation, dragX.interpolate({
          inputRange: [0, friction],
          outputRange: [0, 1]
        })).interpolate({
          inputRange: [-rightWidth - (overshootRight ? 1 : overshootFriction), -rightWidth, leftWidth, leftWidth + (overshootLeft ? 1 : overshootFriction)],
          outputRange: [-rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0), -rightWidth, leftWidth, leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0)]
        });

        _this._transX = transX;
        _this._showLeftAction = leftWidth > 0 ? transX.interpolate({
          inputRange: [-1, 0, leftWidth],
          outputRange: [0, 0, 1]
        }) : new _reactNative.Animated.Value(0);
        _this._leftActionTranslate = _this._showLeftAction.interpolate({
          inputRange: [0, Number.MIN_VALUE],
          outputRange: [-10000, 0],
          extrapolate: 'clamp'
        });
        _this._showRightAction = rightWidth > 0 ? transX.interpolate({
          inputRange: [-rightWidth, 0, 1],
          outputRange: [1, 0, 0]
        }) : new _reactNative.Animated.Value(0);
        _this._rightActionTranslate = _this._showRightAction.interpolate({
          inputRange: [0, Number.MIN_VALUE],
          outputRange: [-10000, 0],
          extrapolate: 'clamp'
        });
      };

      _this._onTapHandlerStateChange = function (_ref) {
        var nativeEvent = _ref.nativeEvent;

        if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {
          _this.close();
        }
      };

      _this._onHandlerStateChange = function (_ref2) {
        var nativeEvent = _ref2.nativeEvent;

        if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {
          _this._handleRelease(nativeEvent);
        }
      };

      _this._handleRelease = function (nativeEvent) {
        var velocityX = nativeEvent.velocityX,
            dragX = nativeEvent.translationX;
        var _this$state = _this.state,
            _this$state$leftWidth = _this$state.leftWidth,
            leftWidth = _this$state$leftWidth === undefined ? 0 : _this$state$leftWidth,
            _this$state$rowWidth = _this$state.rowWidth,
            rowWidth = _this$state$rowWidth === undefined ? 0 : _this$state$rowWidth,
            rowState = _this$state.rowState;
        var _this$state$rightOffs = _this.state.rightOffset,
            rightOffset = _this$state$rightOffs === undefined ? rowWidth : _this$state$rightOffs;
        var rightWidth = rowWidth - rightOffset;
        var _this$props = _this.props,
            friction = _this$props.friction,
            _this$props$leftThres = _this$props.leftThreshold,
            leftThreshold = _this$props$leftThres === undefined ? leftWidth / 2 : _this$props$leftThres,
            _this$props$rightThre = _this$props.rightThreshold,
            rightThreshold = _this$props$rightThre === undefined ? rightWidth / 2 : _this$props$rightThre;
        var startOffsetX = _this._currentOffset() + dragX / friction;
        var translationX = (dragX + DRAG_TOSS * velocityX) / friction;
        var toValue = 0;

        if (rowState === 0) {
          if (translationX > leftThreshold) {
            toValue = leftWidth;
          } else if (translationX < -rightThreshold) {
            toValue = -rightWidth;
          }
        } else if (rowState === 1) {
          if (translationX > -leftThreshold) {
            toValue = leftWidth;
          }
        } else {
          if (translationX < rightThreshold) {
            toValue = -rightWidth;
          }
        }

        _this._animateRow(startOffsetX, toValue, velocityX / friction);
      };

      _this._animateRow = function (fromValue, toValue, velocityX) {
        var _this$state2 = _this.state,
            dragX = _this$state2.dragX,
            rowTranslation = _this$state2.rowTranslation;
        dragX.setValue(0);
        rowTranslation.setValue(fromValue);

        _this.setState({
          rowState: Math.sign(toValue)
        });

        _reactNative.Animated.spring(rowTranslation, (0, _objectSpread2.default)({
          restSpeedThreshold: 1.7,
          restDisplacementThreshold: 0.4,
          velocity: velocityX,
          bounciness: 0,
          toValue: toValue,
          useNativeDriver: _this.props.useNativeAnimations
        }, _this.props.animationOptions)).start(function (_ref3) {
          var finished = _ref3.finished;

          if (finished) {
            if (toValue > 0 && _this.props.onSwipeableLeftOpen) {
              _this.props.onSwipeableLeftOpen();
            } else if (toValue < 0 && _this.props.onSwipeableRightOpen) {
              _this.props.onSwipeableRightOpen();
            }

            if (toValue === 0) {
              _this.props.onSwipeableClose && _this.props.onSwipeableClose();
            } else {
              _this.props.onSwipeableOpen && _this.props.onSwipeableOpen();
            }
          }
        });

        if (toValue > 0 && _this.props.onSwipeableLeftWillOpen) {
          _this.props.onSwipeableLeftWillOpen();
        } else if (toValue < 0 && _this.props.onSwipeableRightWillOpen) {
          _this.props.onSwipeableRightWillOpen();
        }

        if (toValue === 0) {
          _this.props.onSwipeableWillClose && _this.props.onSwipeableWillClose();
        } else {
          _this.props.onSwipeableWillOpen && _this.props.onSwipeableWillOpen();
        }
      };

      _this._onRowLayout = function (_ref4) {
        var nativeEvent = _ref4.nativeEvent;

        _this.setState({
          rowWidth: nativeEvent.layout.width
        });
      };

      _this._currentOffset = function () {
        var _this$state3 = _this.state,
            _this$state3$leftWidt = _this$state3.leftWidth,
            leftWidth = _this$state3$leftWidt === undefined ? 0 : _this$state3$leftWidt,
            _this$state3$rowWidth = _this$state3.rowWidth,
            rowWidth = _this$state3$rowWidth === undefined ? 0 : _this$state3$rowWidth,
            rowState = _this$state3.rowState;
        var _this$state$rightOffs2 = _this.state.rightOffset,
            rightOffset = _this$state$rightOffs2 === undefined ? rowWidth : _this$state$rightOffs2;
        var rightWidth = rowWidth - rightOffset;

        if (rowState === 1) {
          return leftWidth;
        } else if (rowState === -1) {
          return -rightWidth;
        }

        return 0;
      };

      _this.close = function () {
        _this._animateRow(_this._currentOffset(), 0);
      };

      _this.openLeft = function () {
        var _this$state$leftWidth2 = _this.state.leftWidth,
            leftWidth = _this$state$leftWidth2 === undefined ? 0 : _this$state$leftWidth2;

        _this._animateRow(_this._currentOffset(), leftWidth);
      };

      _this.openRight = function () {
        var _this$state$rowWidth2 = _this.state.rowWidth,
            rowWidth = _this$state$rowWidth2 === undefined ? 0 : _this$state$rowWidth2;
        var _this$state$rightOffs3 = _this.state.rightOffset,
            rightOffset = _this$state$rightOffs3 === undefined ? rowWidth : _this$state$rightOffs3;
        var rightWidth = rowWidth - rightOffset;

        _this._animateRow(_this._currentOffset(), -rightWidth);
      };

      var _dragX = new _reactNative.Animated.Value(0);

      _this.state = {
        dragX: _dragX,
        rowTranslation: new _reactNative.Animated.Value(0),
        rowState: 0,
        leftWidth: undefined,
        rightOffset: undefined,
        rowWidth: undefined
      };

      _this._updateAnimatedEvent(_props, _this.state);

      _this._onGestureEvent = _reactNative.Animated.event([{
        nativeEvent: {
          translationX: _dragX
        }
      }], {
        useNativeDriver: _props.useNativeAnimations
      });
      return _this;
    }

    (0, _createClass2.default)(Swipeable, [{
      key: "componentWillUpdate",
      value: function componentWillUpdate(props, state) {
        if (this.props.friction !== props.friction || this.props.overshootLeft !== props.overshootLeft || this.props.overshootRight !== props.overshootRight || this.props.overshootFriction !== props.overshootFriction || this.state.leftWidth !== state.leftWidth || this.state.rightOffset !== state.rightOffset || this.state.rowWidth !== state.rowWidth) {
          this._updateAnimatedEvent(props, state);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var rowState = this.state.rowState;
        var _this$props2 = this.props,
            children = _this$props2.children,
            renderLeftActions = _this$props2.renderLeftActions,
            renderRightActions = _this$props2.renderRightActions;

        var left = renderLeftActions && _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.leftActions, {
            transform: [{
              translateX: this._leftActionTranslate
            }]
          }]
        }, renderLeftActions(this._showLeftAction, this._transX), _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout(_ref5) {
            var nativeEvent = _ref5.nativeEvent;
            return _this2.setState({
              leftWidth: nativeEvent.layout.x
            });
          }
        }));

        var right = renderRightActions && _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.rightActions, {
            transform: [{
              translateX: this._rightActionTranslate
            }]
          }]
        }, renderRightActions(this._showRightAction, this._transX), _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout(_ref6) {
            var nativeEvent = _ref6.nativeEvent;
            return _this2.setState({
              rightOffset: nativeEvent.layout.x
            });
          }
        }));

        return _react.default.createElement(_GestureHandler.PanGestureHandler, (0, _extends2.default)({}, this.props, {
          minDeltaX: 10,
          onGestureEvent: this._onGestureEvent,
          onHandlerStateChange: this._onHandlerStateChange
        }), _react.default.createElement(_reactNative.Animated.View, {
          onLayout: this._onRowLayout,
          style: [styles.container, this.props.containerStyle]
        }, left, right, _react.default.createElement(_GestureHandler.TapGestureHandler, {
          enabled: rowState !== 0,
          onHandlerStateChange: this._onTapHandlerStateChange
        }, _react.default.createElement(_reactNative.Animated.View, {
          pointerEvents: rowState === 0 ? 'auto' : 'box-only',
          style: [{
            transform: [{
              translateX: this._transX
            }]
          }, this.props.childrenContainerStyle]
        }, children))));
      }
    }]);
    return Swipeable;
  }(_react.Component);

  exports.default = Swipeable;
  Swipeable.defaultProps = {
    friction: 1,
    overshootFriction: 1,
    useNativeAnimations: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      overflow: 'hidden'
    },
    leftActions: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      flexDirection: 'row'
    }),
    rightActions: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      flexDirection: 'row-reverse'
    })
  });
},410,[362,1,11,46,22,23,30,33,36,49,2,411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createNativeWrapper = createNativeWrapper;
  Object.defineProperty(exports, "PureNativeButton", {
    enumerable: true,
    get: function get() {
      return _GestureHandlerButton.default;
    }
  });
  Object.defineProperty(exports, "gestureHandlerRootHOC", {
    enumerable: true,
    get: function get() {
      return _gestureHandlerRootHOC.default;
    }
  });
  Object.defineProperty(exports, "Directions", {
    enumerable: true,
    get: function get() {
      return _Directions.default;
    }
  });
  Object.defineProperty(exports, "State", {
    enumerable: true,
    get: function get() {
      return _State.default;
    }
  });
  exports.FlatList = exports.BorderlessButton = exports.RectButton = exports.BaseButton = exports.RawButton = exports.RotationGestureHandler = exports.PinchGestureHandler = exports.PanGestureHandler = exports.LongPressGestureHandler = exports.ForceTouchGestureHandler = exports.FlingGestureHandler = exports.TapGestureHandler = exports.NativeViewGestureHandler = exports.DrawerLayoutAndroid = exports.ToolbarAndroid = exports.TextInput = exports.Switch = exports.ScrollView = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _createHandler = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _GestureHandlerButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _gestureHandlerRootHOC = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Directions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _PlatformConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var GestureHandlerPropTypes = {
    id: _propTypes.default.string,
    minPointers: _propTypes.default.number,
    enabled: _propTypes.default.bool,
    waitFor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]))]),
    simultaneousHandlers: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]))]),
    shouldCancelWhenOutside: _propTypes.default.bool,
    hitSlop: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
      left: _propTypes.default.number,
      top: _propTypes.default.number,
      right: _propTypes.default.number,
      bottom: _propTypes.default.number,
      vertical: _propTypes.default.number,
      horizontal: _propTypes.default.number,
      width: _propTypes.default.number,
      height: _propTypes.default.number
    })]),
    onGestureEvent: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
    onHandlerStateChange: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
    onBegan: _propTypes.default.func,
    onFailed: _propTypes.default.func,
    onCancelled: _propTypes.default.func,
    onActivated: _propTypes.default.func,
    onEnded: _propTypes.default.func
  };
  var NativeViewGestureHandler = (0, _createHandler.default)('NativeViewGestureHandler', (0, _objectSpread2.default)({}, GestureHandlerPropTypes, {
    shouldActivateOnStart: _propTypes.default.bool,
    disallowInterruption: _propTypes.default.bool
  }));
  exports.NativeViewGestureHandler = NativeViewGestureHandler;
  var TapGestureHandler = (0, _createHandler.default)('TapGestureHandler', (0, _objectSpread2.default)({}, GestureHandlerPropTypes, {
    maxDurationMs: _propTypes.default.number,
    maxDelayMs: _propTypes.default.number,
    numberOfTaps: _propTypes.default.number,
    maxDeltaX: _propTypes.default.number,
    maxDeltaY: _propTypes.default.number,
    maxDist: _propTypes.default.number,
    minPointers: _propTypes.default.number
  }), {});
  exports.TapGestureHandler = TapGestureHandler;
  var FlingGestureHandler = (0, _createHandler.default)('FlingGestureHandler', (0, _objectSpread2.default)({}, GestureHandlerPropTypes, {
    numberOfPointers: _propTypes.default.number,
    direction: _propTypes.default.number
  }), {});
  exports.FlingGestureHandler = FlingGestureHandler;

  var ForceTouchFallback = function (_React$Component) {
    (0, _inherits2.default)(ForceTouchFallback, _React$Component);

    function ForceTouchFallback() {
      (0, _classCallCheck2.default)(this, ForceTouchFallback);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ForceTouchFallback).apply(this, arguments));
    }

    (0, _createClass2.default)(ForceTouchFallback, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.children;
      }
    }]);
    return ForceTouchFallback;
  }(_react.default.Component);

  var ForceTouchGestureHandler = _PlatformConstants.default && _PlatformConstants.default.forceTouchAvailable ? (0, _createHandler.default)('ForceTouchGestureHandler', (0, _objectSpread2.default)({}, GestureHandlerPropTypes, {
    minForce: _propTypes.default.number,
    maxForce: _propTypes.default.number,
    feedbackOnActivation: _propTypes.default.bool
  }), {}) : ForceTouchFallback;
  exports.ForceTouchGestureHandler = ForceTouchGestureHandler;
  ForceTouchGestureHandler.forceTouchAvailable = _PlatformConstants.default && _PlatformConstants.default.forceTouchAvailable || false;
  var LongPressGestureHandler = (0, _createHandler.default)('LongPressGestureHandler', (0, _objectSpread2.default)({}, GestureHandlerPropTypes, {
    minDurationMs: _propTypes.default.number,
    maxDist: _propTypes.default.number
  }), {});
  exports.LongPressGestureHandler = LongPressGestureHandler;

  function transformPanGestureHandlerProps(props) {
    var res = (0, _objectSpread2.default)({}, props);

    if (props.minDeltaX !== undefined) {
      delete res['minDeltaX'];
      res.activeOffsetXStart = -props.minDeltaX;
      res.activeOffsetXEnd = props.minDeltaX;
    }

    if (props.maxDeltaX !== undefined) {
      delete res['maxDeltaX'];
      res.failOffsetXStart = -props.maxDeltaX;
      res.failOffsetXEnd = props.maxDeltaX;
    }

    if (props.minOffsetX !== undefined) {
      delete res['minOffsetX'];

      if (props.minOffsetX < 0) {
        res.activeOffsetXStart = props.minOffsetX;
      } else {
        res.activeOffsetXEnd = props.minOffsetX;
      }
    }

    if (props.minDeltaY !== undefined) {
      delete res['minDeltaY'];
      res.activeOffsetYStart = -props.minDeltaY;
      res.activeOffsetYEnd = props.minDeltaY;
    }

    if (props.maxDeltaY !== undefined) {
      delete res['maxDeltaY'];
      res.failOffsetYStart = -props.maxDeltaY;
      res.failOffsetYEnd = props.maxDeltaY;
    }

    if (props.minOffsetY !== undefined) {
      delete res['minOffsetY'];

      if (props.minOffsetY < 0) {
        res.activeOffsetYStart = props.minOffsetY;
      } else {
        res.activeOffsetYEnd = props.minOffsetY;
      }
    }

    if (props.activeOffsetX !== undefined) {
      delete res['activeOffsetX'];

      if (Array.isArray(props.activeOffsetX)) {
        res.activeOffsetXStart = props.activeOffsetX[0];
        res.activeOffsetXEnd = props.activeOffsetX[1];
      } else if (props.activeOffsetX < 0) {
        res.activeOffsetXStart = props.activeOffsetX;
      } else {
        res.activeOffsetXEnd = props.activeOffsetX;
      }
    }

    if (props.activeOffsetY !== undefined) {
      delete res['activeOffsetY'];

      if (Array.isArray(props.activeOffsetY)) {
        res.activeOffsetYStart = props.activeOffsetY[0];
        res.activeOffsetYEnd = props.activeOffsetY[1];
      } else if (props.activeOffsetY < 0) {
        res.activeOffsetYStart = props.activeOffsetY;
      } else {
        res.activeOffsetYEnd = props.activeOffsetY;
      }
    }

    if (props.failOffsetX !== undefined) {
      delete res['failOffsetX'];

      if (Array.isArray(props.failOffsetX)) {
        res.failOffsetXStart = props.failOffsetX[0];
        res.failOffsetXEnd = props.failOffsetX[1];
      } else if (props.failOffsetX < 0) {
        res.failOffsetXStart = props.failOffsetX;
      } else {
        res.failOffsetXEnd = props.failOffsetX;
      }
    }

    if (props.failOffsetY !== undefined) {
      delete res['failOffsetY'];

      if (Array.isArray(props.failOffsetY)) {
        res.failOffsetYStart = props.failOffsetY[0];
        res.failOffsetYEnd = props.failOffsetY[1];
      } else if (props.failOffsetY < 0) {
        res.failOffsetYStart = props.failOffsetY;
      } else {
        res.failOffsetYEnd = props.failOffsetY;
      }
    }

    return res;
  }

  function managePanProps(props) {
    return transformPanGestureHandlerProps(props);
  }

  var PanGestureHandler = (0, _createHandler.default)('PanGestureHandler', (0, _objectSpread2.default)({}, GestureHandlerPropTypes, {
    activeOffsetY: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),
    activeOffsetX: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),
    failOffsetY: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),
    failOffsetX: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),
    minDist: _propTypes.default.number,
    minVelocity: _propTypes.default.number,
    minVelocityX: _propTypes.default.number,
    minVelocityY: _propTypes.default.number,
    minPointers: _propTypes.default.number,
    maxPointers: _propTypes.default.number,
    avgTouches: _propTypes.default.bool
  }), {}, managePanProps, {
    activeOffsetYStart: true,
    activeOffsetYEnd: true,
    activeOffsetXStart: true,
    activeOffsetXEnd: true,
    failOffsetYStart: true,
    failOffsetYEnd: true,
    failOffsetXStart: true,
    failOffsetXEnd: true
  });
  exports.PanGestureHandler = PanGestureHandler;
  var PinchGestureHandler = (0, _createHandler.default)('PinchGestureHandler', GestureHandlerPropTypes, {});
  exports.PinchGestureHandler = PinchGestureHandler;
  var RotationGestureHandler = (0, _createHandler.default)('RotationGestureHandler', GestureHandlerPropTypes, {});
  exports.RotationGestureHandler = RotationGestureHandler;
  var NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);
  var NATIVE_WRAPPER_PROPS_FILTER = (0, _objectSpread2.default)({}, NativeViewGestureHandler.propTypes, {
    onGestureHandlerEvent: _propTypes.default.func,
    onGestureHandlerStateChange: _propTypes.default.func
  });

  function createNativeWrapper(Component) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var ComponentWrapper = function (_React$Component2) {
      (0, _inherits2.default)(ComponentWrapper, _React$Component2);

      function ComponentWrapper() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, ComponentWrapper);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ComponentWrapper)).call.apply(_getPrototypeOf2, [this].concat(args)));

        _this._refHandler = function (node) {
          var source = node;

          while (source != null) {
            for (var _iterator = Object.getOwnPropertyNames(source), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator" : "@@iterator"]();;) {
              var _ref;

              if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
              } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
              }

              var _methodName = _ref;

              if (!_methodName.startsWith('_') && !_methodName.startsWith('component') && !NATIVE_WRAPPER_BIND_BLACKLIST.has(_methodName) && typeof source[_methodName] === 'function' && _this[_methodName] === undefined) {
                if (source[_methodName].prototype) {
                  _this[_methodName] = source[_methodName].bind(node);
                } else {
                  _this[_methodName] = source[_methodName];
                }
              }
            }

            source = Object.getPrototypeOf(source);
          }
        };

        return _this;
      }

      (0, _createClass2.default)(ComponentWrapper, [{
        key: "render",
        value: function render() {
          var _this2 = this;

          var gestureHandlerProps = Object.keys(this.props).reduce(function (props, key) {
            if (key in NATIVE_WRAPPER_PROPS_FILTER) {
              props[key] = _this2.props[key];
            }

            return props;
          }, (0, _objectSpread2.default)({}, config));
          return _react.default.createElement(NativeViewGestureHandler, gestureHandlerProps, _react.default.createElement(Component, (0, _extends2.default)({}, this.props, {
            ref: this._refHandler
          })));
        }
      }]);
      return ComponentWrapper;
    }(_react.default.Component);

    ComponentWrapper.propTypes = (0, _objectSpread2.default)({}, Component.propTypes);
    ComponentWrapper.displayName = Component.displayName || "ComponentWrapper";
    return ComponentWrapper;
  }

  var WrappedScrollView = createNativeWrapper(_reactNative.ScrollView, {
    disallowInterruption: true
  });
  exports.ScrollView = WrappedScrollView;
  var WrappedSwitch = createNativeWrapper(_reactNative.Switch, {
    shouldCancelWhenOutside: false,
    shouldActivateOnStart: true,
    disallowInterruption: true
  });
  exports.Switch = WrappedSwitch;
  var WrappedTextInput = createNativeWrapper(_reactNative.TextInput);
  exports.TextInput = WrappedTextInput;
  var WrappedToolbarAndroid = createNativeWrapper(_reactNative.ToolbarAndroid);
  exports.ToolbarAndroid = WrappedToolbarAndroid;
  var WrappedDrawerLayoutAndroid = createNativeWrapper(_reactNative.DrawerLayoutAndroid, {
    disallowInterruption: true
  });
  exports.DrawerLayoutAndroid = WrappedDrawerLayoutAndroid;
  WrappedDrawerLayoutAndroid.positions = _reactNative.DrawerLayoutAndroid.positions;

  _State.default.print = function (state) {
    var keys = Object.keys(_State.default);

    for (var i = 0; i < keys.length; i++) {
      if (state === _State.default[keys[i]]) {
        return keys[i];
      }
    }
  };

  var RawButton = createNativeWrapper(_GestureHandlerButton.default, {
    shouldCancelWhenOutside: false,
    shouldActivateOnStart: false
  });
  exports.RawButton = RawButton;

  var BaseButton = function (_React$Component3) {
    (0, _inherits2.default)(BaseButton, _React$Component3);

    function BaseButton(props) {
      var _this3;

      (0, _classCallCheck2.default)(this, BaseButton);
      _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(BaseButton).call(this, props));

      _this3._handleEvent = function (_ref2) {
        var nativeEvent = _ref2.nativeEvent;
        var state = nativeEvent.state,
            oldState = nativeEvent.oldState,
            pointerInside = nativeEvent.pointerInside;
        var active = pointerInside && state === _State.default.ACTIVE;

        if (active !== _this3._lastActive && _this3.props.onActiveStateChange) {
          _this3.props.onActiveStateChange(active);
        }

        if (oldState === _State.default.ACTIVE && state !== _State.default.CANCELLED && _this3._lastActive && _this3.props.onPress) {
          _this3.props.onPress(active);
        }

        _this3._lastActive = active;
      };

      _this3._onHandlerStateChange = function (e) {
        _this3.props.onHandlerStateChange && _this3.props.onHandlerStateChange(e);

        _this3._handleEvent(e);
      };

      _this3._onGestureEvent = function (e) {
        _this3.props.onGestureEvent && _this3.props.onGestureEvent(e);

        _this3._handleEvent(e);
      };

      _this3._lastActive = false;
      return _this3;
    }

    (0, _createClass2.default)(BaseButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            rippleColor = _this$props.rippleColor,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["style", "rippleColor"]);
        return _react.default.createElement(RawButton, (0, _extends2.default)({
          style: [{
            overflow: 'hidden'
          }, style],
          rippleColor: (0, _reactNative.processColor)(rippleColor)
        }, rest, {
          onGestureEvent: this._onGestureEvent,
          onHandlerStateChange: this._onHandlerStateChange
        }));
      }
    }]);
    return BaseButton;
  }(_react.default.Component);

  exports.BaseButton = BaseButton;
  BaseButton.propTypes = (0, _objectSpread2.default)({}, RawButton.propTypes, {
    onPress: _propTypes.default.func,
    onActiveStateChange: _propTypes.default.func
  });

  var AnimatedBaseButton = _reactNative.Animated.createAnimatedComponent(BaseButton);

  var btnStyles = _reactNative.StyleSheet.create({
    underlay: {
      position: 'absolute',
      left: 0,
      right: 0,
      bottom: 0,
      top: 0
    }
  });

  var RectButton = function (_React$Component4) {
    (0, _inherits2.default)(RectButton, _React$Component4);

    function RectButton(props) {
      var _this4;

      (0, _classCallCheck2.default)(this, RectButton);
      _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(RectButton).call(this, props));

      _this4._onActiveStateChange = function (active) {
        if (_reactNative.Platform.OS !== 'android') {
          _this4._opacity.setValue(active ? _this4.props.activeOpacity : 0);
        }

        _this4.props.onActiveStateChange && _this4.props.onActiveStateChange(active);
      };

      _this4._opacity = new _reactNative.Animated.Value(0);
      return _this4;
    }

    (0, _createClass2.default)(RectButton, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            rest = (0, _objectWithoutProperties2.default)(_this$props2, ["children"]);
        return _react.default.createElement(BaseButton, (0, _extends2.default)({}, rest, {
          onActiveStateChange: this._onActiveStateChange
        }), _react.default.createElement(_reactNative.Animated.View, {
          style: [btnStyles.underlay, {
            opacity: this._opacity
          }, {
            backgroundColor: this.props.underlayColor
          }]
        }), children);
      }
    }]);
    return RectButton;
  }(_react.default.Component);

  exports.RectButton = RectButton;
  RectButton.propTypes = BaseButton.propTypes;
  RectButton.defaultProps = {
    activeOpacity: 0.105,
    underlayColor: 'black'
  };

  var BorderlessButton = function (_React$Component5) {
    (0, _inherits2.default)(BorderlessButton, _React$Component5);

    function BorderlessButton(props) {
      var _this5;

      (0, _classCallCheck2.default)(this, BorderlessButton);
      _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(BorderlessButton).call(this, props));

      _this5._onActiveStateChange = function (active) {
        if (_reactNative.Platform.OS !== 'android') {
          _this5._opacity.setValue(active ? _this5.props.activeOpacity : 1);
        }

        _this5.props.onActiveStateChange && _this5.props.onActiveStateChange(active);
      };

      _this5._opacity = new _reactNative.Animated.Value(1);
      return _this5;
    }

    (0, _createClass2.default)(BorderlessButton, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            children = _this$props3.children,
            style = _this$props3.style,
            rest = (0, _objectWithoutProperties2.default)(_this$props3, ["children", "style"]);
        return _react.default.createElement(AnimatedBaseButton, (0, _extends2.default)({}, rest, {
          onActiveStateChange: this._onActiveStateChange,
          style: [style, _reactNative.Platform.OS === 'ios' && {
            opacity: this._opacity
          }]
        }), children);
      }
    }]);
    return BorderlessButton;
  }(_react.default.Component);

  exports.BorderlessButton = BorderlessButton;
  BorderlessButton.propTypes = (0, _objectSpread2.default)({}, BaseButton.propTypes, {
    borderless: _propTypes.default.bool
  });
  BorderlessButton.defaultProps = {
    activeOpacity: 0.3,
    borderless: true
  };

  var FlatListWithGHScroll = _react.default.forwardRef(function (props, ref) {
    return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({
      ref: ref
    }, props, {
      renderScrollComponent: function renderScrollComponent(scrollProps) {
        return _react.default.createElement(WrappedScrollView, scrollProps);
      }
    }));
  });

  exports.FlatList = FlatListWithGHScroll;
},411,[1,9,11,22,23,30,33,36,46,49,2,61,412,416,417,419,415,420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createHandler;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _stateToPropMappings;

  var UIManager = _reactNative.NativeModules.UIManager;
  var oldSetJSResponder = UIManager.setJSResponder,
      oldClearJSResponder = UIManager.clearJSResponder;

  UIManager.setJSResponder = function (tag, blockNativeResponder) {
    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);

    oldSetJSResponder(tag, blockNativeResponder);
  };

  UIManager.clearJSResponder = function () {
    _RNGestureHandlerModule.default.handleClearJSResponder();

    oldClearJSResponder();
  };

  UIManager.genericDirectEventTypes = (0, _objectSpread2.default)({}, UIManager.genericDirectEventTypes, {
    onGestureHandlerEvent: {
      registrationName: 'onGestureHandlerEvent'
    },
    onGestureHandlerStateChange: {
      registrationName: 'onGestureHandlerStateChange'
    }
  });
  var handlerTag = 1;
  var handlerIDToTag = {};

  function isConfigParam(param, name) {
    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';
  }

  function filterConfig(props, validProps) {
    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var res = (0, _objectSpread2.default)({}, defaults);
    Object.keys(validProps).forEach(function (key) {
      var value = props[key];

      if (isConfigParam(value, key)) {
        var _value = props[key];

        if (key === 'simultaneousHandlers' || key === 'waitFor') {
          _value = transformIntoHandlerTags(props[key]);
        } else if (key === 'hitSlop') {
          if (typeof _value !== 'object') {
            _value = {
              top: _value,
              left: _value,
              bottom: _value,
              right: _value
            };
          }
        }

        res[key] = _value;
      }
    });
    return res;
  }

  function transformIntoHandlerTags(handlerIDs) {
    if (!Array.isArray(handlerIDs)) {
      handlerIDs = [handlerIDs];
    }

    return handlerIDs.map(function (handlerID) {
      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;
    }).filter(function (handlerTag) {
      return handlerTag > 0;
    });
  }

  function hasUnresolvedRefs(props) {
    var extract = function extract(refs) {
      if (!Array.isArray(refs)) {
        return refs && refs.current === null;
      }

      return refs.some(function (r) {
        return r && r.current === null;
      });
    };

    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);
  }

  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);

  function createHandler(handlerName) {
    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var transformProps = arguments.length > 3 ? arguments[3] : undefined;
    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

    var Handler = function (_React$Component) {
      (0, _inherits2.default)(Handler, _React$Component);

      function Handler(props) {
        var _this;

        (0, _classCallCheck2.default)(this, Handler);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));

        _this._onGestureHandlerEvent = function (event) {
          if (event.nativeEvent.handlerTag === _this._handlerTag) {
            _this.props.onGestureEvent && _this.props.onGestureEvent(event);
          } else {
            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);
          }
        };

        _this._onGestureHandlerStateChange = function (event) {
          if (event.nativeEvent.handlerTag === _this._handlerTag) {
            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);
            var stateEventName = stateToPropMappings[event.nativeEvent.state];

            if (typeof _this.props[stateEventName] === 'function') {
              _this.props[stateEventName](event);
            }
          } else {
            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);
          }
        };

        _this._refHandler = function (node) {
          _this._viewNode = node;

          var child = _react.default.Children.only(_this.props.children);

          var ref = child.ref;

          if (ref !== null) {
            if (typeof ref === 'function') {
              ref(node);
            } else {
              ref.current = node;
            }
          }
        };

        _this._createGestureHandler = function (newConfig) {
          _this._config = newConfig;

          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);
        };

        _this._attachGestureHandler = function (newViewTag) {
          _this._viewTag = newViewTag;

          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);
        };

        _this._updateGestureHandler = function (newConfig) {
          _this._config = newConfig;

          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);
        };

        _this._dropGestureHandler = function () {
          _RNGestureHandlerModule.default.dropGestureHandler(_this._handlerTag);
        };

        _this._handlerTag = handlerTag++;
        _this._config = {};

        if (props.id) {
          if (handlerIDToTag[props.id] !== undefined) {
            throw new Error("Handler with ID \"" + props.id + "\" already registered");
          }

          handlerIDToTag[props.id] = _this._handlerTag;
        }

        return _this;
      }

      (0, _createClass2.default)(Handler, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this._updateEnqueued) {
            clearImmediate(this._updateEnqueued);
          }

          if (this.props.id) {
            delete handlerIDToTag[this.props.id];
          }
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;

          if (hasUnresolvedRefs(this.props)) {
            this._updateEnqueued = setImmediate(function () {
              _this2._updateEnqueued = null;

              _this2._update();
            });
          }

          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config));

          this._attachGestureHandler((0, _reactNative.findNodeHandle)(this._viewNode));
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          var viewTag = (0, _reactNative.findNodeHandle)(this._viewNode);

          if (this._viewTag !== viewTag) {
            this._attachGestureHandler(viewTag);
          }

          this._update();
        }
      }, {
        key: "_update",
        value: function _update() {
          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config);

          if (!(0, _areEqual.default)(this._config, newConfig)) {
            this._updateGestureHandler(newConfig);
          }
        }
      }, {
        key: "setNativeProps",
        value: function setNativeProps(updates) {
          var mergedProps = (0, _objectSpread2.default)({}, this.props, updates);
          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config);

          this._updateGestureHandler(newConfig);
        }
      }, {
        key: "render",
        value: function render() {
          var gestureEventHandler = this._onGestureHandlerEvent;
          var _this$props = this.props,
              onGestureEvent = _this$props.onGestureEvent,
              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;

          if (onGestureEvent && typeof onGestureEvent !== 'function') {
            if (onGestureHandlerEvent) {
              throw new Error('Nesting touch handlers with native animated driver is not supported yet');
            }

            gestureEventHandler = this.props.onGestureEvent;
          } else {
            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {
              throw new Error('Nesting touch handlers with native animated driver is not supported yet');
            }
          }

          var gestureStateEventHandler = this._onGestureHandlerStateChange;
          var _this$props2 = this.props,
              onHandlerStateChange = _this$props2.onHandlerStateChange,
              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;

          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {
            if (onGestureHandlerStateChange) {
              throw new Error('Nesting touch handlers with native animated driver is not supported yet');
            }

            gestureStateEventHandler = this.props.onHandlerStateChange;
          } else {
            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {
              throw new Error('Nesting touch handlers with native animated driver is not supported yet');
            }
          }

          var child = _react.default.Children.only(this.props.children);

          var grandChildren = child.props.children;

          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {
            grandChildren = _react.default.Children.toArray(grandChildren);
            grandChildren.push(_reactNative.Touchable.renderDebugView({
              color: 'mediumspringgreen',
              hitSlop: child.props.hitSlop
            }));
          }

          return _react.default.cloneElement(child, {
            ref: this._refHandler,
            collapsable: false,
            onGestureHandlerEvent: gestureEventHandler,
            onGestureHandlerStateChange: gestureStateEventHandler
          }, grandChildren);
        }
      }]);
      return Handler;
    }(_react.default.Component);

    Handler.displayName = handlerName;
    Handler.propTypes = propTypes;
    return Handler;
  }
},412,[1,22,23,30,33,36,47,46,49,2,413,414,415]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var aStackPool = [];
  var bStackPool = [];
  /**
   * Checks if two values are equal. Values may be primitives, arrays, or objects.
   * Returns true if both arguments have the same keys and values.
   *
   * @see http://underscorejs.org
   * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
   * @license MIT
   */

  function areEqual(a, b) {
    var aStack = aStackPool.length ? aStackPool.pop() : [];
    var bStack = bStackPool.length ? bStackPool.pop() : [];
    var result = eq(a, b, aStack, bStack);
    aStack.length = 0;
    bStack.length = 0;
    aStackPool.push(aStack);
    bStackPool.push(bStack);
    return result;
  }

  function eq(a, b, aStack, bStack) {
    if (a === b) {
      return a !== 0 || 1 / a == 1 / b;
    }

    if (a == null || b == null) {
      return false;
    }

    if (typeof a != 'object' || typeof b != 'object') {
      return false;
    }

    var objToStr = Object.prototype.toString;
    var className = objToStr.call(a);

    if (className != objToStr.call(b)) {
      return false;
    }

    switch (className) {
      case '[object String]':
        return a == String(b);

      case '[object Number]':
        return isNaN(a) || isNaN(b) ? false : a == Number(b);

      case '[object Date]':
      case '[object Boolean]':
        return +a == +b;

      case '[object RegExp]':
        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
    }

    var length = aStack.length;

    while (length--) {
      if (aStack[length] == a) {
        return bStack[length] == b;
      }
    }

    aStack.push(a);
    bStack.push(b);
    var size = 0;

    if (className === '[object Array]') {
      size = a.length;

      if (size !== b.length) {
        return false;
      }

      while (size--) {
        if (!eq(a[size], b[size], aStack, bStack)) {
          return false;
        }
      }
    } else {
      if (a.constructor !== b.constructor) {
        return false;
      }

      if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {
        return a.valueOf() == b.valueOf();
      }

      var keys = Object.keys(a);

      if (keys.length != Object.keys(b).length) {
        return false;
      }

      for (var i = 0; i < keys.length; i++) {
        if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {
          return false;
        }
      }
    }

    aStack.pop();
    bStack.pop();
    return true;
  }

  module.exports = areEqual;
},413,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var RNGestureHandlerModule = _reactNative.NativeModules.RNGestureHandlerModule;
  var _default = RNGestureHandlerModule;
  exports.default = _default;
},414,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    UNDETERMINED: 0,
    FAILED: 1,
    BEGAN: 2,
    CANCELLED: 3,
    ACTIVE: 4,
    END: 5
  };
  exports.default = _default;
},415,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var RNGestureHandlerButton = (0, _reactNative.requireNativeComponent)('RNGestureHandlerButton', null);
  var _default = RNGestureHandlerButton;
  exports.default = _default;
},416,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = gestureHandlerRootHOC;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var iface = {
    name: 'GestureHandlerRootView',
    propTypes: (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes)
  };
  var GestureHandlerRootView = (0, _reactNative.requireNativeComponent)('GestureHandlerRootView', iface);

  function gestureHandlerRootHOC(Component) {
    var containerStyles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    var Wrapper = function (_React$Component) {
      (0, _inherits2.default)(Wrapper, _React$Component);

      function Wrapper() {
        (0, _classCallCheck2.default)(this, Wrapper);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Wrapper).apply(this, arguments));
      }

      (0, _createClass2.default)(Wrapper, [{
        key: "render",
        value: function render() {
          return _react.default.createElement(GestureHandlerRootView, {
            style: [styles.container, containerStyles]
          }, _react.default.createElement(Component, this.props));
        }
      }]);
      return Wrapper;
    }(_react.default.Component);

    (0, _hoistNonReactStatics.default)(Wrapper, Component);
    return Wrapper;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    }
  });
},417,[1,22,23,30,33,36,46,49,2,418]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  }

  module.exports = hoistNonReactStatics;
},418,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _RNGestureHandlerModule.default.Direction;
  exports.default = _default;
},419,[1,414]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = _reactNative.NativeModules.PlatformConstants;
  exports.default = _default;
},420,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _GestureHandler = _$$_REQUIRE(_dependencyMap[11]);

  var DRAG_TOSS = 0.05;
  var IDLE = 'Idle';
  var DRAGGING = 'Dragging';
  var SETTLING = 'Settling';

  var DrawerLayout = function (_Component) {
    (0, _inherits2.default)(DrawerLayout, _Component);

    function DrawerLayout(_props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DrawerLayout);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));
      _this._accessibilityIsModalView = _react.default.createRef();
      _this._pointerEventsView = _react.default.createRef();
      _this._panGestureHandler = _react.default.createRef();
      _this._drawerShown = false;

      _this._updateAnimatedEvent = function (props, state) {
        var drawerPosition = props.drawerPosition,
            drawerWidth = props.drawerWidth,
            drawerType = props.drawerType;
        var dragXValue = state.dragX,
            touchXValue = state.touchX,
            drawerTranslation = state.drawerTranslation,
            containerWidth = state.containerWidth;
        var dragX = dragXValue;
        var touchX = touchXValue;

        if (drawerPosition !== 'left') {
          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);
          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));
          touchXValue.setValue(containerWidth);
        } else {
          touchXValue.setValue(0);
        }

        var translationX = dragX;

        if (drawerType === 'front') {
          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));

          var dragOffsetFromOnStartPosition = startPositionX.interpolate({
            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],
            outputRange: [0, 0, 1]
          });
          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);
        }

        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({
          inputRange: [0, drawerWidth],
          outputRange: [0, 1],
          extrapolate: 'clamp'
        });
        _this._onGestureEvent = _reactNative.Animated.event([{
          nativeEvent: {
            translationX: dragXValue,
            x: touchXValue
          }
        }], {
          useNativeDriver: props.useNativeAnimations
        });
      };

      _this._handleContainerLayout = function (_ref) {
        var nativeEvent = _ref.nativeEvent;

        _this.setState({
          containerWidth: nativeEvent.layout.width
        });
      };

      _this._emitStateChanged = function (newState, drawerWillShow) {
        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);
      };

      _this._openingHandlerStateChange = function (_ref2) {
        var nativeEvent = _ref2.nativeEvent;

        if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {
          _this._handleRelease(nativeEvent);
        } else if (nativeEvent.state === _GestureHandler.State.ACTIVE) {
          _this._emitStateChanged(DRAGGING, false);

          if (_this.props.keyboardDismissMode === 'on-drag') {
            _reactNative.Keyboard.dismiss();
          }

          if (_this.props.hideStatusBar) {
            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');
          }
        }
      };

      _this._onTapHandlerStateChange = function (_ref3) {
        var nativeEvent = _ref3.nativeEvent;

        if (_this._drawerShown && nativeEvent.oldState === _GestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {
          _this.closeDrawer();
        }
      };

      _this._handleRelease = function (nativeEvent) {
        var _this$props = _this.props,
            drawerWidth = _this$props.drawerWidth,
            drawerPosition = _this$props.drawerPosition,
            drawerType = _this$props.drawerType;
        var containerWidth = _this.state.containerWidth;
        var dragX = nativeEvent.translationX,
            velocityX = nativeEvent.velocityX,
            touchX = nativeEvent.x;

        if (drawerPosition !== 'left') {
          dragX = -dragX;
          touchX = containerWidth - touchX;
          velocityX = -velocityX;
        }

        var gestureStartX = touchX - dragX;
        var dragOffsetBasedOnStart = 0;

        if (drawerType === 'front') {
          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;
        }

        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this._drawerShown ? drawerWidth : 0);
        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;
        var shouldOpen = projOffsetX > drawerWidth / 2;

        if (shouldOpen) {
          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);
        } else {
          _this._animateDrawer(startOffsetX, 0, velocityX);
        }
      };

      _this._updateShowing = function (showing) {
        _this._drawerShown = showing;
        _this._accessibilityIsModalView.current && _this._accessibilityIsModalView.current.setNativeProps({
          accessibilityViewIsModal: showing
        });
        _this._pointerEventsView.current && _this._pointerEventsView.current.setNativeProps({
          pointerEvents: showing ? 'auto' : 'none'
        });
        var _this$props2 = _this.props,
            drawerPosition = _this$props2.drawerPosition,
            minSwipeDistance = _this$props2.minSwipeDistance,
            edgeWidth = _this$props2.edgeWidth;
        var fromLeft = drawerPosition === 'left';
        var gestureOrientation = (fromLeft ? 1 : -1) * (_this._drawerShown ? -1 : 1);
        var hitSlop = fromLeft ? {
          left: 0,
          width: showing ? undefined : edgeWidth
        } : {
          right: 0,
          width: showing ? undefined : edgeWidth
        };
        _this._panGestureHandler.current && _this._panGestureHandler.current.setNativeProps({
          hitSlop: hitSlop,
          activeOffsetX: gestureOrientation * minSwipeDistance
        });
      };

      _this._animateDrawer = function (fromValue, toValue, velocity) {
        _this.state.dragX.setValue(0);

        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);

        if (fromValue !== undefined) {
          var nextFramePosition = fromValue;

          if (_this.props.useNativeAnimations) {
            if (fromValue < toValue && velocity > 0) {
              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);
            } else if (fromValue > toValue && velocity < 0) {
              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);
            }
          }

          _this.state.drawerTranslation.setValue(nextFramePosition);
        }

        var willShow = toValue !== 0;

        _this._updateShowing(willShow);

        _this._emitStateChanged(SETTLING, willShow);

        if (_this.props.hideStatusBar) {
          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');
        }

        _reactNative.Animated.spring(_this.state.drawerTranslation, {
          velocity: velocity,
          bounciness: 0,
          toValue: toValue,
          useNativeDriver: _this.props.useNativeAnimations
        }).start(function (_ref4) {
          var finished = _ref4.finished;

          if (finished) {
            _this._emitStateChanged(IDLE, willShow);

            if (willShow) {
              _this.props.onDrawerOpen && _this.props.onDrawerOpen();
            } else {
              _this.props.onDrawerClose && _this.props.onDrawerClose();
            }
          }
        });
      };

      _this.openDrawer = function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _this._animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);

        _this.forceUpdate();
      };

      _this.closeDrawer = function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);

        _this.forceUpdate();
      };

      _this._renderOverlay = function () {
        (0, _invariant.default)(_this._openValue, 'should be set');

        var overlayOpacity = _this._openValue.interpolate({
          inputRange: [0, 1],
          outputRange: [0, 0.7],
          extrapolate: 'clamp'
        });

        var dynamicOverlayStyles = {
          opacity: overlayOpacity,
          backgroundColor: _this.props.overlayColor
        };
        return _react.default.createElement(_GestureHandler.TapGestureHandler, {
          onHandlerStateChange: _this._onTapHandlerStateChange
        }, _react.default.createElement(_reactNative.Animated.View, {
          pointerEvents: _this._drawerShown ? 'auto' : 'none',
          ref: _this._pointerEventsView,
          style: [styles.overlay, dynamicOverlayStyles]
        }));
      };

      _this._renderDrawer = function () {
        var _this$props3 = _this.props,
            drawerBackgroundColor = _this$props3.drawerBackgroundColor,
            drawerWidth = _this$props3.drawerWidth,
            drawerPosition = _this$props3.drawerPosition,
            drawerType = _this$props3.drawerType,
            drawerContainerStyle = _this$props3.drawerContainerStyle,
            contentContainerStyle = _this$props3.contentContainerStyle;
        var fromLeft = drawerPosition === 'left';
        var drawerSlide = drawerType !== 'back';
        var containerSlide = drawerType !== 'front';
        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;
        var dynamicDrawerStyles = {
          backgroundColor: drawerBackgroundColor,
          width: drawerWidth
        };
        var openValue = _this._openValue;
        (0, _invariant.default)(openValue, 'should be set');
        var containerStyles;

        if (containerSlide) {
          var containerTranslateX = openValue.interpolate({
            inputRange: [0, 1],
            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],
            extrapolate: 'clamp'
          });
          containerStyles = {
            transform: [{
              translateX: containerTranslateX
            }]
          };
        }

        var drawerTranslateX = 0;

        if (drawerSlide) {
          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;
          drawerTranslateX = openValue.interpolate({
            inputRange: [0, 1],
            outputRange: [closedDrawerOffset, 0],
            extrapolate: 'clamp'
          });
        }

        var drawerStyles = {
          transform: [{
            translateX: drawerTranslateX
          }],
          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'
        };
        return _react.default.createElement(_reactNative.Animated.View, {
          style: styles.main,
          onLayout: _this._handleContainerLayout
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle]
        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {
          pointerEvents: "box-none",
          ref: _this._accessibilityIsModalView,
          accessibilityViewIsModal: _this._drawerShown,
          style: [styles.drawerContainer, drawerStyles, drawerContainerStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: dynamicDrawerStyles
        }, _this.props.renderNavigationView(_this._openValue))));
      };

      _this._setPanGestureRef = function (ref) {
        _this._panGestureHandler.current = ref;
        _this.props.onGestureRef && _this.props.onGestureRef(ref);
      };

      var _dragX = new _reactNative.Animated.Value(0);

      var _touchX = new _reactNative.Animated.Value(0);

      var _drawerTranslation = new _reactNative.Animated.Value(0);

      _this.state = {
        dragX: _dragX,
        touchX: _touchX,
        drawerTranslation: _drawerTranslation,
        containerWidth: 0
      };

      _this._updateAnimatedEvent(_props, _this.state);

      return _this;
    }

    (0, _createClass2.default)(DrawerLayout, [{
      key: "componentWillUpdate",
      value: function componentWillUpdate(props, state) {
        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {
          this._updateAnimatedEvent(props, state);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            drawerPosition = _this$props4.drawerPosition,
            drawerLockMode = _this$props4.drawerLockMode,
            edgeWidth = _this$props4.edgeWidth,
            minSwipeDistance = _this$props4.minSwipeDistance;
        var fromLeft = drawerPosition === 'left';
        var gestureOrientation = (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);
        var hitSlop = fromLeft ? {
          left: 0,
          width: this._drawerShown ? undefined : edgeWidth
        } : {
          right: 0,
          width: this._drawerShown ? undefined : edgeWidth
        };
        return _react.default.createElement(_GestureHandler.PanGestureHandler, {
          ref: this._setPanGestureRef,
          hitSlop: hitSlop,
          activeOffsetX: gestureOrientation * minSwipeDistance,
          failOffsetY: [-15, 15],
          onGestureEvent: this._onGestureEvent,
          onHandlerStateChange: this._openingHandlerStateChange,
          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open'
        }, this._renderDrawer());
      }
    }]);
    return DrawerLayout;
  }(_react.Component);

  exports.default = DrawerLayout;
  DrawerLayout.defaultProps = {
    drawerWidth: 200,
    drawerPosition: 'left',
    useNativeAnimations: true,
    drawerType: 'front',
    edgeWidth: 20,
    minSwipeDistance: 3,
    overlayColor: 'black',
    drawerLockMode: 'unlocked'
  };
  DrawerLayout.positions = {
    Left: 'left',
    Right: 'right'
  };

  var styles = _reactNative.StyleSheet.create({
    drawerContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      zIndex: 1001,
      flexDirection: 'row'
    }),
    containerInFront: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      zIndex: 1002
    }),
    containerOnBack: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),
    main: {
      flex: 1,
      zIndex: 0,
      overflow: 'hidden'
    },
    overlay: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      zIndex: 1000
    })
  });
},421,[362,1,46,22,23,30,33,36,49,3,2,411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableNativeFeedback", {
    enumerable: true,
    get: function get() {
      return _TouchableNativeFeedback.default;
    }
  });
  Object.defineProperty(exports, "TouchableWithoutFeedback", {
    enumerable: true,
    get: function get() {
      return _TouchableWithoutFeedback.default;
    }
  });
  Object.defineProperty(exports, "TouchableOpacity", {
    enumerable: true,
    get: function get() {
      return _TouchableOpacity.default;
    }
  });
  Object.defineProperty(exports, "TouchableHighlight", {
    enumerable: true,
    get: function get() {
      return _TouchableHighlight.default;
    }
  });

  var _TouchableNativeFeedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _TouchableWithoutFeedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _TouchableOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _TouchableHighlight = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},422,[1,423,425,426,427]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _GenericTouchable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var TouchableNativeFeedback = function (_Component) {
    (0, _inherits2.default)(TouchableNativeFeedback, _Component);

    function TouchableNativeFeedback() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TouchableNativeFeedback);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TouchableNativeFeedback)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.getExtraButtonProps = function () {
        var extraProps = {};
        var background = _this.props.background;

        if (background) {
          if (background.type === 'Ripple') {
            extraProps['borderless'] = background.borderless;
            extraProps['rippleColor'] = background.color;
          } else if (background.type === 'SelectableBackgroundBorderless') {
            extraProps['borderless'] = true;
          }
        }

        extraProps['foreground'] = _this.props.useForeground;
        return extraProps;
      };

      return _this;
    }

    (0, _createClass2.default)(TouchableNativeFeedback, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$style = _this$props.style,
            style = _this$props$style === undefined ? {} : _this$props$style,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["style"]);
        return _react.default.createElement(_GenericTouchable.default, (0, _extends2.default)({}, rest, {
          style: style,
          extraButtonProps: this.getExtraButtonProps()
        }));
      }
    }]);
    return TouchableNativeFeedback;
  }(_react.Component);

  exports.default = TouchableNativeFeedback;

  TouchableNativeFeedback.SelectableBackground = function () {
    return {
      type: 'SelectableBackground'
    };
  };

  TouchableNativeFeedback.SelectableBackgroundBorderless = function () {
    return {
      type: 'SelectableBackgroundBorderless'
    };
  };

  TouchableNativeFeedback.Ripple = function (color, borderless) {
    return {
      type: 'Ripple',
      color: color,
      borderless: borderless
    };
  };

  TouchableNativeFeedback.canUseNativeForeground = function () {
    return Platform.Version >= 23;
  };

  TouchableNativeFeedback.defaultProps = (0, _objectSpread2.default)({}, _GenericTouchable.default.defaultProps, {
    useForeground: true,
    extraButtonProps: {
      rippleColor: null
    }
  });
  TouchableNativeFeedback.propTypes = (0, _objectSpread2.default)({}, _GenericTouchable.default.publicPropTypes, {
    useForeground: _propTypes.default.bool,
    background: _propTypes.default.object,
    style: _propTypes.default.any
  });
},423,[362,1,46,11,9,22,23,30,33,36,424,49,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TOUCHABLE_STATE = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _GestureHandler = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var TOUCHABLE_STATE = {
    UNDETERMINED: 0,
    BEGAN: 1,
    MOVED_OUTSIDE: 2
  };
  exports.TOUCHABLE_STATE = TOUCHABLE_STATE;
  var PublicPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityLabel: _propTypes.default.node,
    accessibilityHint: _propTypes.default.string,
    hitSlop: _propTypes.default.shape({
      top: _propTypes.default.number,
      left: _propTypes.default.number,
      bottom: _propTypes.default.number,
      right: _propTypes.default.number
    }),
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onPressIn: _propTypes.default.func,
    onPressOut: _propTypes.default.func,
    onLayout: _propTypes.default.func,
    onLongPress: _propTypes.default.func,
    nativeID: _propTypes.default.string,
    testID: _propTypes.default.string,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    delayLongPress: _propTypes.default.number
  };
  var InternalPropTypes = {
    extraButtonProps: _propTypes.default.object,
    onStateChange: _propTypes.default.func
  };

  var GenericTouchable = function (_Component) {
    (0, _inherits2.default)(GenericTouchable, _Component);

    function GenericTouchable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GenericTouchable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GenericTouchable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.longPressDetected = false;
      _this.pointerInside = true;
      _this.STATE = TOUCHABLE_STATE.UNDETERMINED;

      _this.handlePressIn = function () {
        if (_this.props.delayPressIn) {
          _this.pressInTimeout = setTimeout(function () {
            _this.moveToState(TOUCHABLE_STATE.BEGAN);

            _this.pressInTimeout = null;
          }, _this.props.delayPressIn);
        } else {
          _this.moveToState(TOUCHABLE_STATE.BEGAN);
        }

        if (_this.props.onLongPress) {
          var time = (_this.props.delayPressIn || 0) + (_this.props.delayLongPress || 0);
          _this.longPressTimeout = setTimeout(_this.onLongPressDetected, time);
        }
      };

      _this.handleMoveOutside = function () {
        if (_this.props.delayPressOut) {
          _this.pressOutTimeout = _this.pressOutTimeout || setTimeout(function () {
            _this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);

            _this.pressOutTimeout = null;
          }, _this.props.delayPressOut);
        } else {
          _this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);
        }
      };

      _this.handleGoToUndetermined = function () {
        clearTimeout(_this.pressOutTimeout);

        if (_this.props.delayPressOut) {
          _this.pressOutTimeout = setTimeout(function () {
            if (_this.STATE === TOUCHABLE_STATE.UNDETERMINED) {
              _this.moveToState(TOUCHABLE_STATE.BEGAN);
            }

            _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);

            _this.pressOutTimeout = null;
          }, _this.props.delayPressOut);
        } else {
          if (_this.STATE === TOUCHABLE_STATE.UNDETERMINED) {
            _this.moveToState(TOUCHABLE_STATE.BEGAN);
          }

          _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);
        }
      };

      _this.moveToState = function (newState) {
        if (newState === _this.STATE) {
          return;
        }

        if (newState === TOUCHABLE_STATE.BEGAN) {
          _this.props.onPressIn && _this.props.onPressIn();
        } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {
          _this.props.onPressOut && _this.props.onPressOut();
        } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {
          _this.reset();

          if (_this.STATE === TOUCHABLE_STATE.BEGAN) {
            _this.props.onPressOut && _this.props.onPressOut();
          }
        }

        _this.props.onStateChange && _this.props.onStateChange(_this.STATE, newState);
        _this.STATE = newState;
      };

      _this.onGestureEvent = function (_ref) {
        var pointerInside = _ref.nativeEvent.pointerInside;

        if (_this.pointerInside !== pointerInside) {
          if (pointerInside) {
            _this.onMoveIn();
          } else {
            _this.onMoveOut();
          }
        }

        _this.pointerInside = pointerInside;
      };

      _this.onHandlerStateChange = function (_ref2) {
        var nativeEvent = _ref2.nativeEvent;
        var state = nativeEvent.state;

        if (state === _GestureHandler.State.CANCELLED || state === _GestureHandler.State.FAILED) {
          _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);
        } else if (state === (_reactNative.Platform.OS === 'ios' ? _GestureHandler.State.ACTIVE : _GestureHandler.State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {
          _this.handlePressIn();
        } else if (state === _GestureHandler.State.END) {
          var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;

          _this.handleGoToUndetermined();

          if (shouldCallOnPress) {
            _this.props.onPress && _this.props.onPress();
          }
        }
      };

      _this.onLongPressDetected = function () {
        _this.longPressDetected = true;

        _this.props.onLongPress();
      };

      _this.onMoveIn = function () {
        if (_this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {
          _this.moveToState(TOUCHABLE_STATE.BEGAN);
        }
      };

      _this.onMoveOut = function () {
        clearTimeout(_this.longPressTimeout);
        _this.longPressTimeout = null;

        if (_this.STATE === TOUCHABLE_STATE.BEGAN) {
          _this.handleMoveOutside();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(GenericTouchable, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.reset();
      }
    }, {
      key: "reset",
      value: function reset() {
        this.longPressDetected = false;
        this.pointerInside = true;
        clearTimeout(this.pressInTimeout);
        clearTimeout(this.pressOutTimeout);
        clearTimeout(this.longPressTimeout);
        this.pressOutTimeout = null;
        this.longPressTimeout = null;
        this.pressInTimeout = null;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.reset();
      }
    }, {
      key: "render",
      value: function render() {
        var coreProps = {
          accessible: this.props.accessible !== false,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityComponentType: this.props.accessibilityComponentType,
          accessibilityRole: this.props.accessibilityRole,
          accessibilityStates: this.props.accessibilityStates,
          accessibilityTraits: this.props.accessibilityTraits,
          nativeID: this.props.nativeID,
          testID: this.props.testID,
          onLayout: this.props.onLayout,
          hitSlop: this.props.hitSlop
        };
        return _react.default.createElement(_GestureHandler.BaseButton, (0, _extends2.default)({
          onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,
          onGestureEvent: this.onGestureEvent,
          hitSlop: this.props.hitSlop
        }, this.props.extraButtonProps), _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({}, coreProps, {
          style: this.props.style
        }), this.props.children));
      }
    }]);
    return GenericTouchable;
  }(_react.Component);

  exports.default = GenericTouchable;
  GenericTouchable.publicPropTypes = PublicPropTypes;
  GenericTouchable.internalPropTypes = InternalPropTypes;
  GenericTouchable.propTypes = (0, _objectSpread2.default)({}, InternalPropTypes, PublicPropTypes);
  GenericTouchable.defaultProps = {
    delayLongPress: 600,
    extraButtonProps: {
      rippleColor: 'transparent'
    }
  };
},424,[362,1,46,11,22,23,30,33,36,49,2,411,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _GenericTouchable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var TouchableWithoutFeedback = function TouchableWithoutFeedback(props) {
    return _react.default.createElement(_GenericTouchable.default, props);
  };

  TouchableWithoutFeedback.defaultProps = _GenericTouchable.default.defaultProps;
  TouchableWithoutFeedback.propTypes = _GenericTouchable.default.publicPropTypes;
  var _default = TouchableWithoutFeedback;
  exports.default = _default;
},425,[1,424,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _GenericTouchable = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var TouchableOpacity = function (_Component) {
    (0, _inherits2.default)(TouchableOpacity, _Component);

    function TouchableOpacity() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TouchableOpacity);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TouchableOpacity)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.getChildStyleOpacityWithDefault = function () {
        var childStyle = _reactNative.StyleSheet.flatten(_this.props.style) || {};
        return childStyle.opacity == null ? 1 : childStyle.opacity;
      };

      _this.opacity = new _reactNative.Animated.Value(_this.getChildStyleOpacityWithDefault());

      _this.setOpacityTo = function (value, duration) {
        _reactNative.Animated.timing(_this.opacity, {
          toValue: value,
          duration: duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.quad),
          useNativeDriver: true
        }).start();
      };

      _this.onStateChange = function (from, to) {
        if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {
          _this.setOpacityTo(_this.props.activeOpacity, 0);
        } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {
          _this.setOpacityTo(_this.getChildStyleOpacityWithDefault(), 150);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(TouchableOpacity, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$style = _this$props.style,
            style = _this$props$style === undefined ? {} : _this$props$style,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["style"]);
        return _react.default.createElement(_GenericTouchable.default, (0, _extends2.default)({}, rest, {
          style: [style, {
            opacity: this.opacity
          }],
          onStateChange: this.onStateChange
        }), this.props.children ? this.props.children : _react.default.createElement(_reactNative.View, null));
      }
    }]);
    return TouchableOpacity;
  }(_react.Component);

  exports.default = TouchableOpacity;
  TouchableOpacity.defaultProps = (0, _objectSpread2.default)({}, _GenericTouchable.default.defaultProps, {
    activeOpacity: 0.2
  });
  TouchableOpacity.propTypes = (0, _objectSpread2.default)({}, _GenericTouchable.default.publicPropTypes, {
    style: _propTypes.default.any,
    activeOpacity: _propTypes.default.number
  });
},426,[362,1,46,11,9,22,23,30,33,36,2,424,49,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _GenericTouchable = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var TouchableHighlight = function (_Component) {
    (0, _inherits2.default)(TouchableHighlight, _Component);

    function TouchableHighlight(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableHighlight);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableHighlight).call(this, props));

      _this.showUnderlay = function () {
        if (!_this.hasPressHandler()) {
          return;
        }

        _this.setState({
          extraChildStyle: {
            opacity: _this.props.activeOpacity
          },
          extraUnderlayStyle: {
            backgroundColor: _this.props.underlayColor
          }
        });

        _this.props.onShowUnderlay && _this.props.onShowUnderlay();
      };

      _this.hasPressHandler = function () {
        return _this.props.onPress || _this.props.onPressIn || _this.props.onPressOut || _this.props.onLongPress;
      };

      _this.hideUnderlay = function () {
        _this.setState({
          extraChildStyle: null,
          extraUnderlayStyle: null
        });

        _this.props.onHideUnderlay && _this.props.onHideUnderlay();
      };

      _this.onStateChange = function (from, to) {
        if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {
          _this.showUnderlay();
        } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {
          _this.hideUnderlay();
        }
      };

      _this.state = {
        extraChildStyle: null,
        extraUnderlayStyle: {
          backgroundColor: props.underlayColor
        }
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableHighlight, [{
      key: "renderChildren",
      value: function renderChildren() {
        if (!this.props.children) {
          return _react.default.createElement(_reactNative.View, null);
        }

        var child = _react.default.Children.only(this.props.children);

        return _react.default.cloneElement(child, {
          style: _reactNative.StyleSheet.compose(child.props.style, this.state.extraChildStyle)
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$style = _this$props.style,
            style = _this$props$style === undefined ? {} : _this$props$style,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["style"]);
        var extraUnderlayStyle = this.state.extraUnderlayStyle;
        return _react.default.createElement(_GenericTouchable.default, (0, _extends2.default)({}, rest, {
          style: [style, extraUnderlayStyle],
          onStateChange: this.onStateChange
        }), this.renderChildren());
      }
    }]);
    return TouchableHighlight;
  }(_react.Component);

  exports.default = TouchableHighlight;
  TouchableHighlight.defaultProps = (0, _objectSpread2.default)({}, _GenericTouchable.default.defaultProps, {
    activeOpacity: 0.85,
    delayPressOut: 100,
    underlayColor: 'black'
  });
  TouchableHighlight.propTypes = (0, _objectSpread2.default)({}, _GenericTouchable.default.publicPropTypes, {
    activeOpacity: _propTypes.default.number,
    underlayColor: _propTypes.default.string,
    style: _propTypes.default.any,
    onShowUnderlay: _propTypes.default.func,
    onHideUnderlay: _propTypes.default.func
  });
},427,[362,1,46,11,9,22,23,30,33,36,49,424,2,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "createStackNavigator", {
    enumerable: true,
    get: function get() {
      return _createStackNavigator.default;
    }
  });
  Object.defineProperty(exports, "Header", {
    enumerable: true,
    get: function get() {
      return _Header.default;
    }
  });
  Object.defineProperty(exports, "HeaderBackButton", {
    enumerable: true,
    get: function get() {
      return _HeaderBackButton.default;
    }
  });
  Object.defineProperty(exports, "HeaderTitle", {
    enumerable: true,
    get: function get() {
      return _HeaderTitle.default;
    }
  });
  Object.defineProperty(exports, "HeaderStyleInterpolator", {
    enumerable: true,
    get: function get() {
      return _HeaderStyleInterpolator.default;
    }
  });
  Object.defineProperty(exports, "StackView", {
    enumerable: true,
    get: function get() {
      return _StackView.default;
    }
  });
  Object.defineProperty(exports, "StackViewCard", {
    enumerable: true,
    get: function get() {
      return _StackViewCard.default;
    }
  });
  Object.defineProperty(exports, "StackViewLayout", {
    enumerable: true,
    get: function get() {
      return _StackViewLayout.default;
    }
  });
  Object.defineProperty(exports, "StackViewStyleInterpolator", {
    enumerable: true,
    get: function get() {
      return _StackViewStyleInterpolator.default;
    }
  });
  Object.defineProperty(exports, "StackViewTransitionConfigs", {
    enumerable: true,
    get: function get() {
      return _StackViewTransitionConfigs.default;
    }
  });
  Object.defineProperty(exports, "createPointerEventsContainer", {
    enumerable: true,
    get: function get() {
      return _createPointerEventsContainer.default;
    }
  });
  Object.defineProperty(exports, "Transitioner", {
    enumerable: true,
    get: function get() {
      return _Transitioner.default;
    }
  });
  Object.defineProperty(exports, "ScenesReducer", {
    enumerable: true,
    get: function get() {
      return _ScenesReducer.default;
    }
  });
  Object.defineProperty(exports, "StackGestureContext", {
    enumerable: true,
    get: function get() {
      return _StackGestureContext.default;
    }
  });
  exports.Assets = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _createStackNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _HeaderBackButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _HeaderTitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _HeaderStyleInterpolator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _StackView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _StackViewCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _StackViewLayout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _StackViewStyleInterpolator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _StackViewTransitionConfigs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _createPointerEventsContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Transitioner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ScenesReducer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _StackGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Assets = _reactNative.Platform.select({
    ios: [_$$_REQUIRE(_dependencyMap[16]), _$$_REQUIRE(_dependencyMap[17])],
    default: [_$$_REQUIRE(_dependencyMap[16])]
  });

  exports.Assets = Assets;
},428,[1,2,429,435,437,436,443,430,433,431,447,446,434,451,452,449,440,445]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _core = _$$_REQUIRE(_dependencyMap[1]);

  var _native = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _StackView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  function createStackNavigator(routeConfigMap) {
    var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var router = (0, _core.StackRouter)(routeConfigMap, stackConfig);
    var Navigator = (0, _core.createNavigator)(_StackView.default, router, stackConfig);

    if (!stackConfig.disableKeyboardHandling && _reactNative.Platform.OS !== 'web') {
      Navigator = (0, _native.createKeyboardAwareNavigator)(Navigator, stackConfig);
    }

    return Navigator;
  }

  var _default = createStackNavigator;
  exports.default = _default;
},429,[1,357,355,2,430]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _core = _$$_REQUIRE(_dependencyMap[10]);

  var _StackViewLayout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Transitioner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _StackViewTransitionConfigs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/StackView.tsx";
  var USE_NATIVE_DRIVER = true;
  var DefaultNavigationConfig = {
    mode: 'card',
    cardShadowEnabled: true,
    cardOverlayEnabled: false
  };

  var StackView = function (_React$Component) {
    (0, _inherits2.default)(StackView, _React$Component);

    function StackView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, StackView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(StackView)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.configureTransition = function (transitionProps, prevTransitionProps) {
        return (0, _objectSpread2.default)({
          useNativeDriver: USE_NATIVE_DRIVER
        }, _StackViewTransitionConfigs.default.getTransitionConfig(_this.props.navigationConfig.transitionConfig, transitionProps, prevTransitionProps, _this.props.navigationConfig.mode === 'modal').transitionSpec);
      };

      _this.getShadowEnabled = function () {
        var navigationConfig = _this.props.navigationConfig;
        return navigationConfig && navigationConfig.hasOwnProperty('cardShadowEnabled') ? navigationConfig.cardShadowEnabled : DefaultNavigationConfig.cardShadowEnabled;
      };

      _this.getCardOverlayEnabled = function () {
        var navigationConfig = _this.props.navigationConfig;
        return navigationConfig && navigationConfig.hasOwnProperty('cardOverlayEnabled') ? navigationConfig.cardOverlayEnabled : DefaultNavigationConfig.cardOverlayEnabled;
      };

      _this.renderStackviewLayout = function (transitionProps, lastTransitionProps) {
        var _this$props = _this.props,
            screenProps = _this$props.screenProps,
            navigationConfig = _this$props.navigationConfig;
        return React.createElement(_StackViewLayout.default, (0, _extends2.default)({}, navigationConfig, {
          shadowEnabled: _this.getShadowEnabled(),
          cardOverlayEnabled: _this.getCardOverlayEnabled(),
          onGestureBegin: _this.props.onGestureBegin,
          onGestureCanceled: _this.props.onGestureCanceled,
          onGestureEnd: _this.props.onGestureEnd,
          screenProps: screenProps,
          transitionProps: transitionProps,
          lastTransitionProps: lastTransitionProps,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 103
          }
        }));
      };

      _this.handleTransitionEnd = function (transition, lastTransition) {
        var _this$props2 = _this.props,
            navigationConfig = _this$props2.navigationConfig,
            navigation = _this$props2.navigation,
            _this$props2$onTransi = _this$props2.onTransitionEnd,
            onTransitionEnd = _this$props2$onTransi === undefined ? navigationConfig.onTransitionEnd : _this$props2$onTransi;
        var transitionDestKey = transition.scene.route.key;
        var isCurrentKey = navigation.state.routes[navigation.state.index].key === transitionDestKey;

        if (transition.navigation.state.isTransitioning && isCurrentKey) {
          navigation.dispatch(_core.StackActions.completeTransition({
            key: navigation.state.key,
            toChildKey: transitionDestKey
          }));
        }

        onTransitionEnd && onTransitionEnd(transition, lastTransition);
      };

      return _this;
    }

    (0, _createClass2.default)(StackView, [{
      key: "render",
      value: function render() {
        return React.createElement(_Transitioner.default, {
          render: this.renderStackviewLayout,
          configureTransition: this.configureTransition,
          screenProps: this.props.screenProps,
          navigation: this.props.navigation,
          descriptors: this.props.descriptors,
          onTransitionStart: this.props.onTransitionStart || this.props.navigationConfig.onTransitionStart,
          onTransitionEnd: this.handleTransitionEnd,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var navigation = this.props.navigation;

        if (navigation.state.isTransitioning) {
          navigation.dispatch(_core.StackActions.completeTransition({
            key: navigation.state.key
          }));
        }
      }
    }]);
    return StackView;
  }(React.Component);

  var _default = StackView;
  exports.default = _default;
},430,[362,1,11,46,22,23,30,33,36,49,357,431,451,446]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _core = _$$_REQUIRE(_dependencyMap[12]);

  var _native = _$$_REQUIRE(_dependencyMap[13]);

  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[14]);

  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[15]);

  var _StackViewCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _StackViewTransitionConfigs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _HeaderStyleInterpolator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _StackGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _clamp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _ReactNativeFeatures = _$$_REQUIRE(_dependencyMap[22]);

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/StackViewLayout.tsx";
  var IPHONE_XS_HEIGHT = 812;
  var IPHONE_XR_HEIGHT = 896;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      WINDOW_WIDTH = _Dimensions$get.width,
      WINDOW_HEIGHT = _Dimensions$get.height;

  var IS_IPHONE_X = _reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && !_reactNative.Platform.isTVOS && (WINDOW_HEIGHT === IPHONE_XS_HEIGHT || WINDOW_WIDTH === IPHONE_XS_HEIGHT || WINDOW_HEIGHT === IPHONE_XR_HEIGHT || WINDOW_WIDTH === IPHONE_XR_HEIGHT);

  var EaseInOut = _reactNative.Easing.inOut(_reactNative.Easing.ease);

  var HEADER_LAYOUT_PRESET = ['center', 'left'];
  var HEADER_TRANSITION_PRESET = ['fade-in-place', 'uikit'];
  var HEADER_BACKGROUND_TRANSITION_PRESET = ['toggle', 'fade', 'translate'];
  var ANIMATION_DURATION = 500;
  var POSITION_THRESHOLD = 0.5;
  var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;
  var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;
  var USE_NATIVE_DRIVER = true;

  var getDefaultHeaderHeight = function getDefaultHeaderHeight(isLandscape) {
    if (_reactNative.Platform.OS === 'ios') {
      if (isLandscape && !_reactNative.Platform.isPad) {
        return 32;
      } else if (IS_IPHONE_X) {
        return 88;
      } else {
        return 64;
      }
    } else if (_reactNative.Platform.OS === 'android') {
      return 56;
    } else {
      return 64;
    }
  };

  var StackViewLayout = function (_React$Component) {
    (0, _inherits2.default)(StackViewLayout, _React$Component);

    function StackViewLayout(props) {
      var _this;

      (0, _classCallCheck2.default)(this, StackViewLayout);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StackViewLayout).call(this, props));
      _this.immediateIndex = null;

      _this.handleFloatingHeaderLayout = function (e) {
        var height = e.nativeEvent.layout.height;

        if (height !== _this.state.floatingHeaderHeight) {
          _this.setState({
            floatingHeaderHeight: height
          });
        }
      };

      _this.handlePanGestureStateChange = function (_ref) {
        var nativeEvent = _ref.nativeEvent;

        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {
          if (_this.positionSwitch.__getValue() === 1) {
            return;
          }

          if (_this.isMotionVertical()) {
            _this.handleReleaseVertical(nativeEvent);
          } else {
            _this.handleReleaseHorizontal(nativeEvent);
          }
        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {
          _this.props.onGestureBegin && _this.props.onGestureBegin();

          _this.positionSwitch.setValue(0);
        }
      };

      _this.renderCard = function (scene) {
        var _this$props = _this.props,
            transitionProps = _this$props.transitionProps,
            shadowEnabled = _this$props.shadowEnabled,
            cardOverlayEnabled = _this$props.cardOverlayEnabled,
            transparentCard = _this$props.transparentCard,
            cardStyle = _this$props.cardStyle;
        var _ref2 = _this.transitionConfig,
            screenInterpolator = _ref2.screenInterpolator;
        var style = screenInterpolator && screenInterpolator((0, _objectSpread2.default)({}, transitionProps, {
          shadowEnabled: shadowEnabled,
          cardOverlayEnabled: cardOverlayEnabled,
          position: _this.position,
          scene: scene
        }));
        var options = scene.descriptor.options;
        var hasHeader = options.header !== null;

        var headerMode = _this.getHeaderMode();

        var floatingContainerStyle = _reactNative.StyleSheet.absoluteFill;

        if (hasHeader && headerMode === 'float' && !options.headerTransparent) {
          floatingContainerStyle = (0, _objectSpread2.default)({}, _reactNative.Platform.select({
            web: {},
            default: _reactNative.StyleSheet.absoluteFillObject
          }), {
            paddingTop: _this.state.floatingHeaderHeight
          });
        }

        return React.createElement(_StackViewCard.default, (0, _extends2.default)({}, transitionProps, {
          key: "card_" + scene.key,
          position: _this.position,
          realPosition: transitionProps.position,
          animatedStyle: style,
          transparent: transparentCard,
          style: [floatingContainerStyle, cardStyle],
          scene: scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 971
          }
        }), _this.renderInnerScene(scene));
      };

      _this.panGestureRef = React.createRef();
      _this.gestureX = new _reactNative.Animated.Value(0);
      _this.gestureY = new _reactNative.Animated.Value(0);
      _this.positionSwitch = new _reactNative.Animated.Value(1);

      if (_reactNative.Animated.subtract) {
        _this.gestureSwitch = _reactNative.Animated.subtract(1, _this.positionSwitch);
      } else {
        _this.gestureSwitch = _reactNative.Animated.add(1, _reactNative.Animated.multiply(-1, _this.positionSwitch));
      }

      _this.gestureEvent = _reactNative.Animated.event([{
        nativeEvent: {
          translationX: _this.gestureX,
          translationY: _this.gestureY
        }
      }], {
        useNativeDriver: USE_NATIVE_DRIVER
      });
      _this.state = {
        floatingHeaderHeight: getDefaultHeaderHeight(props.isLandscape)
      };
      return _this;
    }

    (0, _createClass2.default)(StackViewLayout, [{
      key: "renderHeader",
      value: function renderHeader(scene, headerMode) {
        var options = scene.descriptor.options;
        var header = options.header;

        if (header === null && headerMode === 'screen') {
          return null;
        }

        if (React.isValidElement(header)) {
          return header;
        }

        var renderHeader = header || function (props) {
          return React.createElement(_Header.default, (0, _extends2.default)({}, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 222
            }
          }));
        };

        var _ref3 = this.transitionConfig,
            headerLeftInterpolator = _ref3.headerLeftInterpolator,
            headerTitleInterpolator = _ref3.headerTitleInterpolator,
            headerRightInterpolator = _ref3.headerRightInterpolator,
            headerBackgroundInterpolator = _ref3.headerBackgroundInterpolator;
        var backgroundTransitionPresetInterpolator = this.getHeaderBackgroundTransitionPreset();

        if (backgroundTransitionPresetInterpolator) {
          headerBackgroundInterpolator = backgroundTransitionPresetInterpolator;
        }

        var _this$props2 = this.props,
            transitionProps = _this$props2.transitionProps,
            passProps = (0, _objectWithoutProperties2.default)(_this$props2, ["transitionProps"]);
        return React.createElement(_core.NavigationProvider, {
          value: scene.descriptor.navigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 239
          }
        }, renderHeader((0, _objectSpread2.default)({}, passProps, transitionProps, {
          position: this.position,
          scene: scene,
          mode: headerMode,
          transitionPreset: this.getHeaderTransitionPreset(),
          layoutPreset: this.getHeaderLayoutPreset(),
          backTitleVisible: this.getHeaderBackTitleVisible(),
          leftInterpolator: headerLeftInterpolator,
          titleInterpolator: headerTitleInterpolator,
          rightInterpolator: headerRightInterpolator,
          backgroundInterpolator: headerBackgroundInterpolator
        })));
      }
    }, {
      key: "reset",
      value: function reset(resetToIndex, duration) {
        if (_reactNative.Platform.OS === 'ios' && (0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {
          _reactNative.Animated.spring(this.props.transitionProps.position, {
            toValue: resetToIndex,
            stiffness: 6000,
            damping: 100,
            mass: 3,
            overshootClamping: true,
            restDisplacementThreshold: 0.01,
            restSpeedThreshold: 0.01,
            useNativeDriver: USE_NATIVE_DRIVER
          }).start();
        } else {
          _reactNative.Animated.timing(this.props.transitionProps.position, {
            toValue: resetToIndex,
            duration: duration,
            easing: EaseInOut,
            useNativeDriver: USE_NATIVE_DRIVER
          }).start();
        }
      }
    }, {
      key: "goBack",
      value: function goBack(backFromIndex, duration) {
        var _this2 = this;

        var _this$props$transitio = this.props.transitionProps,
            navigation = _this$props$transitio.navigation,
            position = _this$props$transitio.position,
            scenes = _this$props$transitio.scenes;
        var toValue = Math.max(backFromIndex - 1, 0);
        this.immediateIndex = toValue;

        var onCompleteAnimation = function onCompleteAnimation() {
          _this2.immediateIndex = null;
          var backFromScene = scenes.find(function (s) {
            return s.index === toValue + 1;
          });

          if (backFromScene) {
            navigation.dispatch(_core.NavigationActions.back({
              key: backFromScene.route.key,
              immediate: true
            }));
            navigation.dispatch(_core.StackActions.completeTransition());
          }
        };

        if (_reactNative.Platform.OS === 'ios' && (0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {
          _reactNative.Animated.spring(position, {
            toValue: toValue,
            stiffness: 7000,
            damping: 300,
            mass: 3,
            overshootClamping: true,
            restDisplacementThreshold: 0.01,
            restSpeedThreshold: 0.01,
            useNativeDriver: USE_NATIVE_DRIVER
          }).start(onCompleteAnimation);
        } else {
          _reactNative.Animated.timing(position, {
            toValue: toValue,
            duration: duration,
            easing: EaseInOut,
            useNativeDriver: USE_NATIVE_DRIVER
          }).start(onCompleteAnimation);
        }
      }
    }, {
      key: "prepareAnimated",
      value: function prepareAnimated() {
        if (this.props === this.prevProps) {
          return;
        }

        this.prevProps = this.props;
        this.prepareGesture();
        this.preparePosition();
        this.prepareTransitionConfig();
      }
    }, {
      key: "render",
      value: function render() {
        this.prepareAnimated();
        var transitionProps = this.props.transitionProps;
        var index = transitionProps.navigation.state.index,
            scenes = transitionProps.scenes;
        var headerMode = this.getHeaderMode();
        var floatingHeader = null;

        if (headerMode === 'float') {
          var scene = transitionProps.scene;
          floatingHeader = React.createElement(_reactNative.View, {
            style: styles.floatingHeader,
            pointerEvents: "box-none",
            onLayout: this.handleFloatingHeaderLayout,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 361
            }
          }, this.renderHeader(scene, headerMode));
        }

        return React.createElement(_reactNativeGestureHandler.PanGestureHandler, (0, _extends2.default)({}, this.gestureActivationCriteria(), {
          ref: this.panGestureRef,
          onGestureEvent: this.gestureEvent,
          onHandlerStateChange: this.handlePanGestureStateChange,
          enabled: index > 0 && this.isGestureEnabled(),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 372
          }
        }), React.createElement(_reactNative.Animated.View, {
          style: [styles.container, this.transitionConfig.containerStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 379
          }
        }, React.createElement(_StackGestureContext.default.Provider, {
          value: this.panGestureRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 382
          }
        }, React.createElement(_reactNativeScreens.ScreenContainer, {
          style: styles.scenes,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 383
          }
        }, scenes.map(this.renderCard)), floatingHeader)));
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var prevState = prevProps.transitionProps.navigation.state;
        var state = this.props.transitionProps.navigation.state;

        if (prevState.index !== state.index) {
          this.maybeCancelGesture();
        }
      }
    }, {
      key: "getGestureResponseDistance",
      value: function getGestureResponseDistance() {
        var scene = this.props.transitionProps.scene;
        var options = scene.descriptor.options;
        var _options$gestureRespo = options.gestureResponseDistance,
            userGestureResponseDistance = _options$gestureRespo === undefined ? {} : _options$gestureRespo;
        return this.isModal() ? userGestureResponseDistance.vertical || GESTURE_RESPONSE_DISTANCE_VERTICAL : userGestureResponseDistance.horizontal || GESTURE_RESPONSE_DISTANCE_HORIZONTAL;
      }
    }, {
      key: "gestureActivationCriteria",
      value: function gestureActivationCriteria() {
        var layout = this.props.transitionProps.layout;
        var gestureResponseDistance = this.getGestureResponseDistance();
        var isMotionInverted = this.isMotionInverted();

        if (this.isMotionVertical()) {
          var height = layout.height.__getValue();

          return {
            maxDeltaX: 15,
            minOffsetY: isMotionInverted ? -5 : 5,
            hitSlop: isMotionInverted ? {
              top: -height + gestureResponseDistance
            } : {
              bottom: -height + gestureResponseDistance
            }
          };
        } else {
          var width = layout.width.__getValue();

          var hitSlop = -width + gestureResponseDistance;
          return {
            minOffsetX: isMotionInverted ? -5 : 5,
            maxDeltaY: 20,
            hitSlop: isMotionInverted ? {
              left: hitSlop
            } : {
              right: hitSlop
            }
          };
        }
      }
    }, {
      key: "isGestureEnabled",
      value: function isGestureEnabled() {
        var gesturesEnabled = this.props.transitionProps.scene.descriptor.options.gesturesEnabled;
        return typeof gesturesEnabled === 'boolean' ? gesturesEnabled : _reactNative.Platform.OS === 'ios';
      }
    }, {
      key: "isMotionVertical",
      value: function isMotionVertical() {
        return this.isModal();
      }
    }, {
      key: "isModal",
      value: function isModal() {
        return this.props.mode === 'modal';
      }
    }, {
      key: "isMotionInverted",
      value: function isMotionInverted() {
        var scene = this.props.transitionProps.scene;
        var options = scene.descriptor.options;
        var gestureDirection = options.gestureDirection;

        if (this.isModal()) {
          return gestureDirection === 'inverted';
        } else {
          return typeof gestureDirection === 'string' ? gestureDirection === 'inverted' : _reactNative.I18nManager.isRTL;
        }
      }
    }, {
      key: "computeHorizontalGestureValue",
      value: function computeHorizontalGestureValue(_ref4) {
        var translationX = _ref4.translationX;
        var _this$props$transitio2 = this.props.transitionProps,
            navigation = _this$props$transitio2.navigation,
            layout = _this$props$transitio2.layout;
        var index = navigation.state.index;

        var distance = layout.width.__getValue();

        var x = this.isMotionInverted() ? -1 * translationX : translationX;
        var value = index - x / distance;
        return (0, _clamp.default)(index - 1, value, index);
      }
    }, {
      key: "computeVerticalGestureValue",
      value: function computeVerticalGestureValue(_ref5) {
        var translationY = _ref5.translationY;
        var _this$props$transitio3 = this.props.transitionProps,
            navigation = _this$props$transitio3.navigation,
            layout = _this$props$transitio3.layout;
        var index = navigation.state.index;

        var distance = layout.height.__getValue();

        var y = this.isMotionInverted() ? -1 * translationY : translationY;
        var value = index - y / distance;
        return (0, _clamp.default)(index - 1, value, index);
      }
    }, {
      key: "maybeCancelGesture",
      value: function maybeCancelGesture() {
        this.positionSwitch.setValue(1);
      }
    }, {
      key: "prepareGesture",
      value: function prepareGesture() {
        if (!this.isGestureEnabled()) {
          if (this.positionSwitch.__getValue() !== 1) {
            this.positionSwitch.setValue(1);
          }

          this.gesturePosition = undefined;
          return;
        }

        if (this.props.transitionProps.layout.width.__getValue() === 0 || this.props.transitionProps.layout.height.__getValue() === 0) {
          return;
        }

        if (this.isMotionVertical()) {
          this.prepareGestureVertical();
        } else {
          this.prepareGestureHorizontal();
        }
      }
    }, {
      key: "prepareGestureHorizontal",
      value: function prepareGestureHorizontal() {
        var index = this.props.transitionProps.navigation.state.index;

        if (this.isMotionInverted()) {
          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.divide(this.gestureX, this.props.transitionProps.layout.width)).interpolate({
            inputRange: [index - 1, index],
            outputRange: [index - 1, index],
            extrapolate: 'clamp'
          });
        } else {
          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.multiply(-1, _reactNative.Animated.divide(this.gestureX, this.props.transitionProps.layout.width))).interpolate({
            inputRange: [index - 1, index],
            outputRange: [index - 1, index],
            extrapolate: 'clamp'
          });
        }
      }
    }, {
      key: "prepareGestureVertical",
      value: function prepareGestureVertical() {
        var index = this.props.transitionProps.navigation.state.index;

        if (this.isMotionInverted()) {
          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.divide(this.gestureY, this.props.transitionProps.layout.height)).interpolate({
            inputRange: [index - 1, index],
            outputRange: [index - 1, index],
            extrapolate: 'clamp'
          });
        } else {
          this.gesturePosition = _reactNative.Animated.add(index, _reactNative.Animated.multiply(-1, _reactNative.Animated.divide(this.gestureY, this.props.transitionProps.layout.height))).interpolate({
            inputRange: [index - 1, index],
            outputRange: [index - 1, index],
            extrapolate: 'clamp'
          });
        }
      }
    }, {
      key: "handleReleaseHorizontal",
      value: function handleReleaseHorizontal(nativeEvent) {
        var _this$props$transitio4 = this.props.transitionProps,
            navigation = _this$props$transitio4.navigation,
            position = _this$props$transitio4.position,
            layout = _this$props$transitio4.layout;
        var index = navigation.state.index;
        var immediateIndex = this.immediateIndex == null ? index : this.immediateIndex;

        var distance = layout.width.__getValue();

        var movementDirection = this.isMotionInverted() ? -1 : 1;
        var movedDistance = movementDirection * nativeEvent.translationX;
        var gestureVelocity = movementDirection * nativeEvent.velocityX;
        var defaultVelocity = distance / ANIMATION_DURATION;
        var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);
        var resetDuration = this.isMotionInverted() ? (distance - movedDistance) / velocity : movedDistance / velocity;
        var goBackDuration = this.isMotionInverted() ? movedDistance / velocity : (distance - movedDistance) / velocity;
        var value = this.computeHorizontalGestureValue(nativeEvent);
        position.setValue(value);
        this.positionSwitch.setValue(1);

        if (gestureVelocity < -50) {
          this.props.onGestureCanceled && this.props.onGestureCanceled();
          this.reset(immediateIndex, resetDuration);
          return;
        }

        if (gestureVelocity > 50) {
          this.props.onGestureEnd && this.props.onGestureEnd();
          this.goBack(immediateIndex, goBackDuration);
          return;
        }

        if (value <= index - POSITION_THRESHOLD) {
          this.props.onGestureEnd && this.props.onGestureEnd();
          this.goBack(immediateIndex, goBackDuration);
        } else {
          this.props.onGestureCanceled && this.props.onGestureCanceled();
          this.reset(immediateIndex, resetDuration);
        }
      }
    }, {
      key: "handleReleaseVertical",
      value: function handleReleaseVertical(nativeEvent) {
        var _this$props$transitio5 = this.props.transitionProps,
            navigation = _this$props$transitio5.navigation,
            position = _this$props$transitio5.position,
            layout = _this$props$transitio5.layout;
        var index = navigation.state.index;
        var immediateIndex = this.immediateIndex == null ? index : this.immediateIndex;

        var distance = layout.height.__getValue();

        var isMotionInverted = this.isMotionInverted();
        var movementDirection = isMotionInverted ? -1 : 1;
        var movedDistance = movementDirection * nativeEvent.translationY;
        var gestureVelocity = movementDirection * nativeEvent.velocityY;
        var defaultVelocity = distance / ANIMATION_DURATION;
        var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);
        var resetDuration = isMotionInverted ? (distance - movedDistance) / velocity : movedDistance / velocity;
        var goBackDuration = isMotionInverted ? movedDistance / velocity : (distance - movedDistance) / velocity;
        var value = this.computeVerticalGestureValue(nativeEvent);
        position.setValue(value);
        this.positionSwitch.setValue(1);

        if (gestureVelocity < -50) {
          this.props.onGestureCanceled && this.props.onGestureCanceled();
          this.reset(immediateIndex, resetDuration);
          return;
        }

        if (gestureVelocity > 50) {
          this.props.onGestureEnd && this.props.onGestureEnd();
          this.goBack(immediateIndex, goBackDuration);
          return;
        }

        if (value <= index - POSITION_THRESHOLD) {
          this.props.onGestureEnd && this.props.onGestureEnd();
          this.goBack(immediateIndex, goBackDuration);
        } else {
          this.props.onGestureCanceled && this.props.onGestureCanceled();
          this.reset(immediateIndex, resetDuration);
        }
      }
    }, {
      key: "getHeaderMode",
      value: function getHeaderMode() {
        if (this.props.headerMode) {
          return this.props.headerMode;
        }

        if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {
          return 'screen';
        }

        return 'float';
      }
    }, {
      key: "getHeaderBackgroundTransitionPreset",
      value: function getHeaderBackgroundTransitionPreset() {
        var headerBackgroundTransitionPreset = this.props.headerBackgroundTransitionPreset;

        if (headerBackgroundTransitionPreset) {
          if (HEADER_BACKGROUND_TRANSITION_PRESET.includes(headerBackgroundTransitionPreset)) {
            if (headerBackgroundTransitionPreset === 'fade') {
              return _HeaderStyleInterpolator.default.forBackgroundWithFade;
            } else if (headerBackgroundTransitionPreset === 'translate') {
              return _HeaderStyleInterpolator.default.forBackgroundWithTranslation;
            } else if (headerBackgroundTransitionPreset === 'toggle') {
              return _HeaderStyleInterpolator.default.forBackgroundWithInactiveHidden;
            }
          } else {}
        }

        return null;
      }
    }, {
      key: "getHeaderLayoutPreset",
      value: function getHeaderLayoutPreset() {
        var headerLayoutPreset = this.props.headerLayoutPreset;

        if (headerLayoutPreset) {
          if (HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)) {
            return headerLayoutPreset;
          }
        }

        if (_reactNative.Platform.OS !== 'ios') {
          return 'left';
        } else {
          return 'center';
        }
      }
    }, {
      key: "getHeaderTransitionPreset",
      value: function getHeaderTransitionPreset() {
        if (_reactNative.Platform.OS !== 'ios' || this.getHeaderMode() === 'screen') {
          return 'fade-in-place';
        }

        var headerTransitionPreset = this.props.headerTransitionPreset;

        if (headerTransitionPreset) {
          if (HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)) {
            return headerTransitionPreset;
          }
        }

        return 'fade-in-place';
      }
    }, {
      key: "getHeaderBackTitleVisible",
      value: function getHeaderBackTitleVisible() {
        var headerBackTitleVisible = this.props.headerBackTitleVisible;
        var layoutPreset = this.getHeaderLayoutPreset();
        var enabledByDefault = !(layoutPreset === 'left' || _reactNative.Platform.OS !== 'ios');
        return typeof headerBackTitleVisible === 'boolean' ? headerBackTitleVisible : enabledByDefault;
      }
    }, {
      key: "renderInnerScene",
      value: function renderInnerScene(scene) {
        var _scene$descriptor = scene.descriptor,
            navigation = _scene$descriptor.navigation,
            getComponent = _scene$descriptor.getComponent;
        var SceneComponent = getComponent();
        var screenProps = this.props.screenProps;
        var headerMode = this.getHeaderMode();

        if (headerMode === 'screen') {
          return React.createElement(_reactNative.View, {
            style: styles.container,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 886
            }
          }, React.createElement(_reactNative.View, {
            style: styles.scenes,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 887
            }
          }, React.createElement(_core.SceneView, {
            screenProps: screenProps,
            navigation: navigation,
            component: SceneComponent,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 888
            }
          })), this.renderHeader(scene, headerMode));
        }

        return React.createElement(_core.SceneView, {
          screenProps: screenProps,
          navigation: navigation,
          component: SceneComponent,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 899
          }
        });
      }
    }, {
      key: "prepareTransitionConfig",
      value: function prepareTransitionConfig() {
        this.transitionConfig = _StackViewTransitionConfigs.default.getTransitionConfig(this.props.transitionConfig, (0, _objectSpread2.default)({}, this.props.transitionProps, {
          position: this.position
        }), this.props.lastTransitionProps, this.isModal());
      }
    }, {
      key: "preparePosition",
      value: function preparePosition() {
        if (this.gesturePosition) {
          this.position = _reactNative.Animated.add(_reactNative.Animated.multiply(this.props.transitionProps.position, this.positionSwitch), _reactNative.Animated.multiply(this.gesturePosition, this.gestureSwitch));
        } else {
          this.position = this.props.transitionProps.position;
        }
      }
    }]);
    return StackViewLayout;
  }(React.Component);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column-reverse',
      overflow: 'hidden'
    },
    scenes: {
      flex: 1
    },
    floatingHeader: {
      position: _reactNative.Platform.select({
        default: 'absolute',
        web: 'fixed'
      }),
      left: 0,
      top: 0,
      right: 0
    }
  });

  var _default = (0, _native.withOrientation)(StackViewLayout);

  exports.default = _default;
},431,[362,1,9,11,46,22,23,30,33,36,49,2,357,355,432,409,433,435,446,443,449,450,448]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.useScreens = useScreens;
  exports.screensEnabled = screensEnabled;
  exports.ScreenContainer = exports.Screen = exports.NativeScreenContainer = exports.NativeScreen = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ReactNativeVersion = _$$_REQUIRE(_dependencyMap[10]);

  var USE_SCREENS = false;

  var getViewManagerConfigCompat = function getViewManagerConfigCompat(name) {
    return typeof _reactNative.UIManager.getViewManagerConfig !== 'undefined' ? _reactNative.UIManager.getViewManagerConfig(name) : _reactNative.UIManager[name];
  };

  function useScreens() {
    var shouldUseScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    USE_SCREENS = shouldUseScreens;

    if (USE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {
      console.error("Screen native module hasn't been linked. Please check the react-native-screens README for more details");
    }
  }

  function screensEnabled() {
    return USE_SCREENS;
  }

  var NativeScreen = (0, _reactNative.requireNativeComponent)('RNSScreen', null);
  exports.NativeScreen = NativeScreen;

  var AnimatedNativeScreen = _reactNative.Animated.createAnimatedComponent(NativeScreen);

  var NativeScreenContainer = (0, _reactNative.requireNativeComponent)('RNSScreenContainer', null);
  exports.NativeScreenContainer = NativeScreenContainer;

  var Screen = function (_React$Component) {
    (0, _inherits2.default)(Screen, _React$Component);

    function Screen() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Screen);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Screen)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setRef = function (ref) {
        _this._ref = ref;
        _this.props.onComponentRef && _this.props.onComponentRef(ref);
      };

      return _this;
    }

    (0, _createClass2.default)(Screen, [{
      key: "setNativeProps",
      value: function setNativeProps(props) {
        this._ref.setNativeProps(props);
      }
    }, {
      key: "render",
      value: function render() {
        if (!USE_SCREENS) {
          var _this$props = this.props,
              active = _this$props.active,
              onComponentRef = _this$props.onComponentRef,
              props = (0, _objectWithoutProperties2.default)(_this$props, ["active", "onComponentRef"]);
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({}, props, {
            ref: this.setRef
          }));
        } else if (_ReactNativeVersion.version.minor >= 57) {
          return _react.default.createElement(AnimatedNativeScreen, this.props);
        } else {
          var _this$props2 = this.props,
              style = _this$props2.style,
              children = _this$props2.children,
              rest = (0, _objectWithoutProperties2.default)(_this$props2, ["style", "children"]);
          return _react.default.createElement(AnimatedNativeScreen, (0, _extends2.default)({}, rest, {
            ref: this.setRef,
            style: _reactNative.StyleSheet.absoluteFill
          }), _react.default.createElement(_reactNative.Animated.View, {
            style: style
          }, children));
        }
      }
    }]);
    return Screen;
  }(_react.default.Component);

  exports.Screen = Screen;

  var ScreenContainer = function (_React$Component2) {
    (0, _inherits2.default)(ScreenContainer, _React$Component2);

    function ScreenContainer() {
      (0, _classCallCheck2.default)(this, ScreenContainer);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ScreenContainer).apply(this, arguments));
    }

    (0, _createClass2.default)(ScreenContainer, [{
      key: "render",
      value: function render() {
        if (!USE_SCREENS) {
          return _react.default.createElement(_reactNative.View, this.props);
        } else {
          return _react.default.createElement(NativeScreenContainer, this.props);
        }
      }
    }]);
    return ScreenContainer;
  }(_react.default.Component);

  exports.ScreenContainer = ScreenContainer;
},432,[1,11,9,22,23,30,33,36,49,2,96]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[12]);

  var _createPointerEventsContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/StackViewCard.tsx";
  var EPS = 1e-5;

  function getAccessibilityProps(isActive) {
    if (_reactNative.Platform.OS === 'ios') {
      return {
        accessibilityElementsHidden: !isActive
      };
    } else if (_reactNative.Platform.OS === 'android') {
      return {
        importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'
      };
    } else {
      return {};
    }
  }

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card() {
      (0, _classCallCheck2.default)(this, Card);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).apply(this, arguments));
    }

    (0, _createClass2.default)(Card, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            pointerEvents = _this$props.pointerEvents,
            style = _this$props.style,
            position = _this$props.position,
            transparent = _this$props.transparent,
            _this$props$scene = _this$props.scene,
            index = _this$props$scene.index,
            isActive = _this$props$scene.isActive;

        var active = _reactNative.Platform.select({
          web: isActive,
          default: transparent || isActive ? 1 : position.interpolate({
            inputRange: [index, index + 1 - EPS, index + 1],
            outputRange: [1, 1, 0],
            extrapolate: 'clamp'
          })
        });

        var animatedStyle = this.props.animatedStyle || {};
        var shadowOpacity = animatedStyle.shadowOpacity,
            overlayOpacity = animatedStyle.overlayOpacity,
            containerAnimatedStyle = (0, _objectWithoutProperties2.default)(animatedStyle, ["shadowOpacity", "overlayOpacity"]);
        var flattenedStyle = _reactNative.StyleSheet.flatten(style) || {};
        var backgroundColor = flattenedStyle.backgroundColor,
            screenStyle = (0, _objectWithoutProperties2.default)(flattenedStyle, ["backgroundColor"]);
        return React.createElement(_reactNativeScreens.Screen, {
          pointerEvents: pointerEvents,
          onComponentRef: this.props.onComponentRef,
          style: [containerAnimatedStyle, screenStyle],
          active: active,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 80
          }
        }, !transparent && shadowOpacity ? React.createElement(_reactNative.Animated.View, {
          style: [styles.shadow, {
            shadowOpacity: shadowOpacity
          }],
          pointerEvents: "none",
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        }) : null, React.createElement(_reactNative.Animated.View, (0, _extends2.default)({}, getAccessibilityProps(isActive), {
          style: [transparent ? styles.transparent : styles.card, backgroundColor && backgroundColor !== 'transparent' ? {
            backgroundColor: backgroundColor
          } : null],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93
          }
        }), children), overlayOpacity ? React.createElement(_reactNative.Animated.View, {
          pointerEvents: "none",
          style: [styles.overlay, {
            opacity: overlayOpacity
          }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        }) : null);
      }
    }]);
    return Card;
  }(React.Component);

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      backgroundColor: '#fff'
    },
    overlay: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      backgroundColor: '#000'
    }),
    shadow: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 3,
      position: 'absolute',
      backgroundColor: '#fff',
      shadowOffset: {
        width: -1,
        height: 1
      },
      shadowRadius: 5,
      shadowColor: '#000'
    },
    transparent: {
      flex: 1,
      backgroundColor: 'transparent'
    }
  });

  var _default = (0, _createPointerEventsContainer.default)(Card);

  exports.default = _default;
},433,[362,1,46,11,9,22,23,30,33,36,49,2,432,434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createPointerEventsContainer;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/createPointerEventsContainer.tsx";
  var MIN_POSITION_OFFSET = 0.01;

  function createPointerEventsContainer(Component) {
    var Container = function (_React$Component) {
      (0, _inherits2.default)(Container, _React$Component);

      function Container() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, Container);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _this.pointerEvents = _this.computePointerEvents();
        _this.component = null;

        _this.handleComponentRef = function (component) {
          _this.component = component;

          if (component && typeof component.setNativeProps !== 'function') {
            throw new Error('Component must implement method `setNativeProps`');
          }
        };

        _this.handlePositionChange = function () {
          if (_this.component) {
            var pointerEvents = _this.computePointerEvents();

            if (_this.pointerEvents !== pointerEvents) {
              _this.pointerEvents = pointerEvents;

              _this.component.setNativeProps({
                pointerEvents: pointerEvents
              });
            }
          }
        };

        return _this;
      }

      (0, _createClass2.default)(Container, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.positionListener && this.positionListener.remove();
        }
      }, {
        key: "bindPosition",
        value: function bindPosition() {
          this.positionListener && this.positionListener.remove();
          this.positionListener = new AnimatedValueSubscription(this.props.realPosition, this.handlePositionChange);
        }
      }, {
        key: "computePointerEvents",
        value: function computePointerEvents() {
          var _this$props = this.props,
              navigation = _this$props.navigation,
              realPosition = _this$props.realPosition,
              scene = _this$props.scene;

          if (scene.isStale || navigation.state.index !== scene.index) {
            return scene.index > navigation.state.index ? 'box-only' : 'none';
          }

          var offset = realPosition.__getAnimatedValue() - navigation.state.index;

          if (Math.abs(offset) > MIN_POSITION_OFFSET) {
            return 'box-only';
          }

          return 'auto';
        }
      }, {
        key: "render",
        value: function render() {
          this.bindPosition();
          this.pointerEvents = this.computePointerEvents();
          return React.createElement(Component, (0, _extends2.default)({}, this.props, {
            pointerEvents: this.pointerEvents,
            onComponentRef: this.handleComponentRef,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 95
            }
          }));
        }
      }]);
      return Container;
    }(React.Component);

    return Container;
  }

  var AnimatedValueSubscription = function () {
    function AnimatedValueSubscription(value, callback) {
      (0, _classCallCheck2.default)(this, AnimatedValueSubscription);
      this.value = value;
      this.token = value.addListener(callback);
    }

    (0, _createClass2.default)(AnimatedValueSubscription, [{
      key: "remove",
      value: function remove() {
        this.value.removeListener(this.token);
      }
    }]);
    return AnimatedValueSubscription;
  }();
},434,[362,1,11,22,23,30,33,36,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _native = _$$_REQUIRE(_dependencyMap[13]);

  var _HeaderTitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _HeaderBackButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ModularHeaderBackButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _HeaderStyleInterpolator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/Header/Header.tsx";

  var APPBAR_HEIGHT = _reactNative.Platform.select({
    ios: 44,
    android: 56,
    default: 64
  });

  var STATUSBAR_HEIGHT = _reactNative.Platform.select({
    ios: 20,
    default: 0
  });

  var TITLE_OFFSET_CENTER_ALIGN = _reactNative.Platform.select({
    ios: 70,
    default: 56
  });

  var TITLE_OFFSET_LEFT_ALIGN = _reactNative.Platform.select({
    ios: 20,
    android: 56,
    default: 64
  });

  var getTitleOffsets = function getTitleOffsets(layoutPreset, hasLeftComponent, hasRightComponent) {
    if (layoutPreset === 'left') {
      var style = {
        left: TITLE_OFFSET_LEFT_ALIGN,
        right: TITLE_OFFSET_LEFT_ALIGN
      };

      if (!hasLeftComponent) {
        style.left = _reactNative.Platform.OS === 'web' ? 16 : 0;
      }

      if (!hasRightComponent) {
        style.right = 0;
      }

      return style;
    } else if (layoutPreset === 'center') {
      var _style = {
        left: TITLE_OFFSET_CENTER_ALIGN,
        right: TITLE_OFFSET_CENTER_ALIGN
      };

      if (!hasLeftComponent && !hasRightComponent) {
        _style.left = 0;
        _style.right = 0;
      }

      return _style;
    }

    return undefined;
  };

  var getAppBarHeight = function getAppBarHeight(isLandscape) {
    if (_reactNative.Platform.OS === 'ios') {
      if (isLandscape && !_reactNative.Platform.isPad) {
        return 32;
      } else {
        return 44;
      }
    } else if (_reactNative.Platform.OS === 'android') {
      return 56;
    } else {
      return 64;
    }
  };

  var Header = function (_React$PureComponent) {
    (0, _inherits2.default)(Header, _React$PureComponent);

    function Header() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Header);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        widths: {}
      };

      _this.renderTitleComponent = function (props) {
        var layoutPreset = _this.props.layoutPreset;
        var options = props.scene.descriptor.options;
        var headerTitle = options.headerTitle;

        if (React.isValidElement(headerTitle)) {
          return headerTitle;
        }

        var titleString = _this.getHeaderTitleString(props.scene);

        var titleStyle = options.headerTitleStyle;
        var color = options.headerTintColor;
        var allowFontScaling = options.headerTitleAllowFontScaling;
        var onLayout = layoutPreset === 'center' ? function (e) {
          var width = e.nativeEvent.layout.width;

          _this.setState(function (state) {
            return {
              widths: (0, _objectSpread2.default)({}, state.widths, (0, _defineProperty2.default)({}, props.scene.key, width))
            };
          });
        } : undefined;
        var HeaderTitleComponent = headerTitle && typeof headerTitle !== 'string' ? headerTitle : _HeaderTitle.default;
        return React.createElement(HeaderTitleComponent, {
          onLayout: onLayout,
          allowFontScaling: !!allowFontScaling,
          style: [color ? {
            color: color
          } : null, layoutPreset === 'center' ? {
            textAlign: 'center'
          } : {
            textAlign: 'left'
          }, titleStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 218
          }
        }, titleString);
      };

      _this.renderLeftComponent = function (props) {
        var options = props.scene.descriptor.options;

        if (React.isValidElement(options.headerLeft) || options.headerLeft === null) {
          return options.headerLeft;
        }

        if (!options.headerLeft && props.scene.index === 0) {
          return;
        }

        var backButtonTitle = _this.getBackButtonTitleString(props.scene);

        var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);

        var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;
        var RenderedLeftComponent = options.headerLeft || _HeaderBackButton.default;

        var goBack = function goBack() {
          requestAnimationFrame(function () {
            props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);
          });
        };

        return React.createElement(RenderedLeftComponent, {
          onPress: goBack,
          pressColorAndroid: options.headerPressColorAndroid,
          tintColor: options.headerTintColor,
          backImage: options.headerBackImage,
          title: backButtonTitle,
          truncatedTitle: truncatedBackButtonTitle,
          backTitleVisible: _this.props.backTitleVisible,
          allowFontScaling: options.headerBackAllowFontScaling,
          titleStyle: options.headerBackTitleStyle,
          layoutPreset: _this.props.layoutPreset,
          width: width,
          scene: props.scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 264
          }
        });
      };

      _this.renderModularLeftComponent = function (props, ButtonContainerComponent, LabelContainerComponent) {
        var _props$scene$descript = props.scene.descriptor,
            options = _props$scene$descript.options,
            navigation = _props$scene$descript.navigation;

        var backButtonTitle = _this.getBackButtonTitleString(props.scene);

        var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);

        var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;

        var goBack = function goBack() {
          requestAnimationFrame(function () {
            navigation.goBack(props.scene.descriptor.key);
          });
        };

        return React.createElement(_ModularHeaderBackButton.default, {
          onPress: goBack,
          ButtonContainerComponent: ButtonContainerComponent,
          LabelContainerComponent: LabelContainerComponent,
          backTitleVisible: _this.props.backTitleVisible,
          pressColorAndroid: options.headerPressColorAndroid,
          tintColor: options.headerTintColor,
          backImage: options.headerBackImage,
          title: backButtonTitle,
          truncatedTitle: truncatedBackButtonTitle,
          titleStyle: options.headerBackTitleStyle,
          layoutPreset: _this.props.layoutPreset,
          width: width,
          scene: props.scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 307
          }
        });
      };

      _this.renderRightComponent = function (props) {
        var headerRight = props.scene.descriptor.options.headerRight;
        return headerRight || null;
      };

      _this.renderLeft = function (props) {
        var options = props.scene.descriptor.options;
        var transitionPreset = _this.props.transitionPreset;
        var style = props.style;

        if (options.headerLeftContainerStyle) {
          style = [style, options.headerLeftContainerStyle];
        }

        if (transitionPreset !== 'uikit' || options.headerBackImage || options.headerLeft || options.headerLeft === null) {
          return _this.renderSubView((0, _objectSpread2.default)({}, props, {
            style: style
          }), 'left', _this.renderLeftComponent, _this.props.leftInterpolator);
        } else {
          return _this.renderModularSubView((0, _objectSpread2.default)({}, props, {
            style: style
          }), 'left', _this.renderModularLeftComponent, _this.props.leftLabelInterpolator, _this.props.leftButtonInterpolator);
        }
      };

      _this.renderTitle = function (props, options) {
        var _this$props = _this.props,
            layoutPreset = _this$props.layoutPreset,
            transitionPreset = _this$props.transitionPreset;
        var style = [{
          justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start'
        }, getTitleOffsets(layoutPreset, options.hasLeftComponent, options.hasRightComponent), options.headerTitleContainerStyle];
        return _this.renderSubView((0, _objectSpread2.default)({}, props, {
          style: style
        }), 'title', _this.renderTitleComponent, transitionPreset === 'uikit' ? _this.props.titleFromLeftInterpolator : _this.props.titleInterpolator);
      };

      _this.renderRight = function (props) {
        var options = props.scene.descriptor.options;
        var style = props.style;

        if (options.headerRightContainerStyle) {
          style = [style, options.headerRightContainerStyle];
        }

        return _this.renderSubView((0, _objectSpread2.default)({}, props, {
          style: style
        }), 'right', _this.renderRightComponent, _this.props.rightInterpolator);
      };

      _this.renderBackground = function (props) {
        var _props$scene = props.scene,
            index = _props$scene.index,
            options = _props$scene.descriptor.options;
        var offset = _this.props.navigation.state.index - index;

        if (Math.abs(offset) > 2) {
          return null;
        }

        return _this.renderSubView((0, _objectSpread2.default)({}, props, {
          style: _reactNative.StyleSheet.absoluteFill
        }), 'background', function () {
          return options.headerBackground;
        }, _this.props.backgroundInterpolator);
      };

      _this.renderModularSubView = function (props, name, renderer, labelStyleInterpolator, buttonStyleInterpolator) {
        var scene = props.scene;
        var index = scene.index,
            isStale = scene.isStale,
            key = scene.key;

        if (index === 0) {
          return;
        }

        var offset = _this.props.navigation.state.index - index;

        if (Math.abs(offset) > 2) {
          return null;
        }

        var ButtonContainer = function ButtonContainer(_ref) {
          var children = _ref.children;
          return React.createElement(_reactNative.Animated.View, {
            style: [buttonStyleInterpolator((0, _objectSpread2.default)({}, _this.props, props))],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 464
            }
          }, children);
        };

        var LabelContainer = function LabelContainer(_ref2) {
          var children = _ref2.children;
          return React.createElement(_reactNative.Animated.View, {
            style: [labelStyleInterpolator((0, _objectSpread2.default)({}, _this.props, props))],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 472
            }
          }, children);
        };

        var subView = renderer(props, ButtonContainer, LabelContainer);

        if (subView === null) {
          return subView;
        }

        var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';
        return React.createElement(_reactNative.View, {
          key: name + "_" + key,
          pointerEvents: pointerEvents,
          style: [styles.item, styles[name], props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 492
          }
        }, subView);
      };

      _this.renderSubView = function (props, name, renderer, styleInterpolator) {
        var scene = props.scene;
        var index = scene.index,
            isStale = scene.isStale,
            key = scene.key;
        var offset = _this.props.navigation.state.index - index;

        if (Math.abs(offset) > 2) {
          return null;
        }

        var subView = renderer(props);

        if (subView == null) {
          return null;
        }

        var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';
        return React.createElement(_reactNative.Animated.View, {
          pointerEvents: pointerEvents,
          key: name + "_" + key,
          style: [styles.item, styles[name], props.style, styleInterpolator((0, _objectSpread2.default)({}, _this.props, props))],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 528
          }
        }, subView);
      };

      _this.renderHeader = function (props) {
        var options = props.scene.descriptor.options;

        if (options.header === null) {
          return null;
        }

        var left = _this.renderLeft(props);

        var right = _this.renderRight(props);

        var title = _this.renderTitle(props, {
          hasLeftComponent: !!left,
          hasRightComponent: !!right,
          headerTitleContainerStyle: options.headerTitleContainerStyle
        });

        var transitionPreset = _this.props.transitionPreset;
        var wrapperProps = {
          style: styles.header,
          key: "scene_" + props.scene.key
        };

        if (options.headerLeft || options.headerBackImage || _reactNative.Platform.OS !== 'ios' || transitionPreset !== 'uikit') {
          return React.createElement(_reactNative.View, (0, _extends2.default)({}, wrapperProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 573
            }
          }), title, left, right);
        } else {
          return React.createElement(_reactNative.MaskedViewIOS, (0, _extends2.default)({}, wrapperProps, {
            maskElement: React.createElement(_reactNative.View, {
              style: styles.iconMaskContainer,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 584
              }
            }, React.createElement(_reactNative.Image, {
              source: _$$_REQUIRE(_dependencyMap[18]),
              style: styles.iconMask,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 585
              }
            }), React.createElement(_reactNative.View, {
              style: styles.iconMaskFillerRect,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 589
              }
            })),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 581
            }
          }), title, left, right);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(Header, [{
      key: "getHeaderTitleString",
      value: function getHeaderTitleString(scene) {
        var options = scene.descriptor.options;

        if (typeof options.headerTitle === 'string') {
          return options.headerTitle;
        }

        if (options.title && typeof options.title !== 'string' && false) {
          throw new Error("Invalid title for route \"" + scene.route.routeName + "\" - title must be string or null, instead it was of type " + typeof options.title);
        }

        return options.title;
      }
    }, {
      key: "getLastScene",
      value: function getLastScene(scene) {
        return this.props.scenes.find(function (s) {
          return s.index === scene.index - 1;
        });
      }
    }, {
      key: "getBackButtonTitleString",
      value: function getBackButtonTitleString(scene) {
        var lastScene = this.getLastScene(scene);

        if (!lastScene) {
          return null;
        }

        var headerBackTitle = lastScene.descriptor.options.headerBackTitle;

        if (headerBackTitle || headerBackTitle === null) {
          return headerBackTitle;
        }

        return this.getHeaderTitleString(lastScene);
      }
    }, {
      key: "getTruncatedBackButtonTitle",
      value: function getTruncatedBackButtonTitle(scene) {
        var lastScene = this.getLastScene(scene);

        if (!lastScene) {
          return null;
        }

        return lastScene.descriptor.options.headerTruncatedBackTitle;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var appBar;
        var background;
        var _this$props2 = this.props,
            mode = _this$props2.mode,
            scene = _this$props2.scene,
            isLandscape = _this$props2.isLandscape;

        if (mode === 'float') {
          var scenesByIndex = {};
          this.props.scenes.forEach(function (scene) {
            scenesByIndex[scene.index] = scene;
          });
          var scenesProps = Object.values(scenesByIndex).map(function (scene) {
            return {
              position: _this2.props.position,
              scene: scene
            };
          });
          appBar = scenesProps.map(function (props) {
            return _this2.renderHeader(props);
          });
          background = scenesProps.map(function (props) {
            return _this2.renderBackground(props);
          });
        } else {
          var headerProps = {
            position: new _reactNative.Animated.Value(this.props.scene.index),
            scene: this.props.scene
          };
          appBar = this.renderHeader(headerProps);
          background = this.renderBackground(headerProps);
        }

        var options = scene.descriptor.options;
        var _options$headerStyle = options.headerStyle,
            headerStyle = _options$headerStyle === undefined ? {} : _options$headerStyle;

        var headerStyleObj = _reactNative.StyleSheet.flatten(headerStyle);

        var appBarHeight = getAppBarHeight(isLandscape);
        var alignItems = headerStyleObj.alignItems,
            justifyContent = headerStyleObj.justifyContent,
            flex = headerStyleObj.flex,
            flexDirection = headerStyleObj.flexDirection,
            flexGrow = headerStyleObj.flexGrow,
            flexShrink = headerStyleObj.flexShrink,
            flexBasis = headerStyleObj.flexBasis,
            flexWrap = headerStyleObj.flexWrap,
            position = headerStyleObj.position,
            padding = headerStyleObj.padding,
            paddingHorizontal = headerStyleObj.paddingHorizontal,
            paddingRight = headerStyleObj.paddingRight,
            paddingLeft = headerStyleObj.paddingLeft,
            top = headerStyleObj.top,
            right = headerStyleObj.right,
            bottom = headerStyleObj.bottom,
            left = headerStyleObj.left,
            safeHeaderStyle = (0, _objectWithoutProperties2.default)(headerStyleObj, ["alignItems", "justifyContent", "flex", "flexDirection", "flexGrow", "flexShrink", "flexBasis", "flexWrap", "position", "padding", "paddingHorizontal", "paddingRight", "paddingLeft", "top", "right", "bottom", "left"]);
        var containerStyles = [options.headerTransparent ? styles.transparentContainer : styles.container, {
          height: appBarHeight
        }, safeHeaderStyle];
        var headerForceInset = options.headerForceInset;
        var forceInset = headerForceInset || {
          top: 'always',
          bottom: 'never',
          horizontal: 'always'
        };
        return React.createElement(_reactNative.Animated.View, {
          style: [this.props.layoutInterpolator(this.props), _reactNative.Platform.OS === 'ios' && !options.headerTransparent ? {
            backgroundColor: safeHeaderStyle.backgroundColor || DEFAULT_BACKGROUND_COLOR
          } : null],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 696
          }
        }, React.createElement(_native.SafeAreaView, {
          forceInset: forceInset,
          style: containerStyles,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 707
          }
        }, background, React.createElement(_reactNative.View, {
          style: styles.flexOne,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 709
          }
        }, appBar)));
      }
    }], [{
      key: "HEIGHT",
      get: function get() {
        return APPBAR_HEIGHT + STATUSBAR_HEIGHT;
      }
    }]);
    return Header;
  }(React.PureComponent);

  Header.defaultProps = {
    layoutInterpolator: _HeaderStyleInterpolator.default.forLayout,
    leftInterpolator: _HeaderStyleInterpolator.default.forLeft,
    leftButtonInterpolator: _HeaderStyleInterpolator.default.forLeftButton,
    leftLabelInterpolator: _HeaderStyleInterpolator.default.forLeftLabel,
    titleFromLeftInterpolator: _HeaderStyleInterpolator.default.forCenterFromLeft,
    titleInterpolator: _HeaderStyleInterpolator.default.forCenter,
    rightInterpolator: _HeaderStyleInterpolator.default.forRight,
    backgroundInterpolator: _HeaderStyleInterpolator.default.forBackground
  };

  var platformContainerStyles = _reactNative.Platform.select({
    android: {
      elevation: 4
    },
    ios: {
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomColor: '#A7A7AA'
    },
    default: {
      boxShadow: "0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)"
    }
  });

  var DEFAULT_BACKGROUND_COLOR = '#FFF';

  var styles = _reactNative.StyleSheet.create({
    container: (0, _objectSpread2.default)({
      backgroundColor: DEFAULT_BACKGROUND_COLOR
    }, platformContainerStyles),
    transparentContainer: (0, _objectSpread2.default)({
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0
    }, platformContainerStyles, {
      borderBottomWidth: 0,
      borderBottomColor: 'transparent',
      elevation: 0
    }),
    header: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      flexDirection: 'row'
    }),
    item: {
      backgroundColor: 'transparent'
    },
    iconMaskContainer: {
      flex: 1,
      flexDirection: 'row',
      justifyContent: 'center'
    },
    iconMaskFillerRect: {
      flex: 1,
      backgroundColor: '#d8d8d8',
      marginLeft: -5
    },
    iconMask: {
      height: 23,
      width: 14.5,
      marginLeft: 8.5,
      marginTop: -2.5,
      alignSelf: 'center',
      resizeMode: 'contain',
      transform: [{
        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1
      }]
    },
    background: {},
    title: {
      bottom: 0,
      top: 0,
      position: 'absolute',
      alignItems: 'center',
      flexDirection: 'row'
    },
    left: {
      left: 0,
      bottom: 0,
      top: 0,
      position: 'absolute',
      alignItems: 'center',
      flexDirection: 'row'
    },
    right: {
      right: 0,
      bottom: 0,
      top: 0,
      position: 'absolute',
      flexDirection: 'row',
      alignItems: 'center'
    },
    flexOne: {
      flex: 1
    }
  });

  var _default = (0, _native.withOrientation)(Header);

  exports.default = _default;
},435,[362,1,9,11,47,46,22,23,30,33,36,49,2,355,436,437,442,443,445]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/Header/HeaderTitle.tsx";

  var HeaderTitle = function HeaderTitle(_ref) {
    var style = _ref.style,
        rest = (0, _objectWithoutProperties2.default)(_ref, ["style"]);
    return React.createElement(_reactNative.Animated.Text, (0, _extends2.default)({
      numberOfLines: 1
    }, rest, {
      style: [styles.title, style],
      accessibilityTraits: "header",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 8
      }
    }));
  };

  var styles = _reactNative.StyleSheet.create({
    title: (0, _objectSpread2.default)({}, _reactNative.Platform.select({
      ios: {
        fontSize: 17,
        fontWeight: '600',
        color: 'rgba(0, 0, 0, .9)',
        marginHorizontal: 16
      },
      android: {
        fontSize: 20,
        fontWeight: '500',
        color: 'rgba(0, 0, 0, .9)',
        marginHorizontal: 16
      },
      default: {
        fontSize: 18,
        fontWeight: '400',
        color: '#3c4043'
      }
    }))
  });

  var _default = HeaderTitle;
  exports.default = _default;
},436,[362,1,46,11,9,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _backIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _BackButtonWeb = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/Header/HeaderBackButton.tsx";

  var HeaderBackButton = function (_React$PureComponent) {
    (0, _inherits2.default)(HeaderBackButton, _React$PureComponent);

    function HeaderBackButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, HeaderBackButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(HeaderBackButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {};

      _this.handleTextLayout = function (e) {
        if (_this.state.initialTextWidth) {
          return;
        }

        _this.setState({
          initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
        });
      };

      _this.getTitleText = function () {
        var _this$props = _this.props,
            width = _this$props.width,
            title = _this$props.title,
            truncatedTitle = _this$props.truncatedTitle;
        var initialTextWidth = _this.state.initialTextWidth;

        if (title === null) {
          return null;
        } else if (!title) {
          return truncatedTitle;
        } else if (initialTextWidth && width && initialTextWidth > width) {
          return truncatedTitle;
        } else {
          return title;
        }
      };

      return _this;
    }

    (0, _createClass2.default)(HeaderBackButton, [{
      key: "renderBackImage",
      value: function renderBackImage() {
        var _this$props2 = this.props,
            backImage = _this$props2.backImage,
            backTitleVisible = _this$props2.backTitleVisible,
            tintColor = _this$props2.tintColor;
        var title = this.getTitleText();

        if (React.isValidElement(backImage)) {
          return backImage;
        } else if (backImage) {
          var BackImage = backImage;
          return React.createElement(BackImage, {
            tintColor: tintColor,
            title: title,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          });
        } else {
          return React.createElement(_reactNative.Image, {
            style: [styles.icon, !!backTitleVisible && styles.iconWithTitle, !!tintColor && {
              tintColor: tintColor
            }],
            source: _backIcon.default,
            fadeDuration: 0,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          });
        }
      }
    }, {
      key: "maybeRenderTitle",
      value: function maybeRenderTitle() {
        var _this$props3 = this.props,
            allowFontScaling = _this$props3.allowFontScaling,
            backTitleVisible = _this$props3.backTitleVisible,
            titleStyle = _this$props3.titleStyle,
            tintColor = _this$props3.tintColor;
        var backTitleText = this.getTitleText();

        if (!backTitleVisible || backTitleText === null) {
          return null;
        }

        return React.createElement(_reactNative.Text, {
          accessible: false,
          onLayout: this.handleTextLayout,
          style: [styles.title, !!tintColor && {
            color: tintColor
          }, titleStyle],
          numberOfLines: 1,
          allowFontScaling: !!allowFontScaling,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        }, this.getTitleText());
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            onPress = _this$props4.onPress,
            pressColorAndroid = _this$props4.pressColorAndroid,
            title = _this$props4.title,
            disabled = _this$props4.disabled;
        var button = React.createElement(_TouchableItem.default, {
          disabled: disabled,
          accessible: true,
          accessibilityRole: "button",
          accessibilityComponentType: "button",
          accessibilityLabel: title ? title + ", back" : 'Go back',
          accessibilityTraits: "button",
          testID: "header-back",
          delayPressIn: 0,
          onPress: disabled ? undefined : onPress,
          pressColor: pressColorAndroid,
          style: [styles.container, disabled && styles.disabled],
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 121
          }
        }, React.createElement(_reactNative.View, {
          style: styles.container,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 135
          }
        }, this.renderBackImage(), this.maybeRenderTitle()));

        if (_reactNative.Platform.OS === 'ios') {
          return button;
        } else {
          return React.createElement(_reactNative.View, {
            style: styles.androidButtonWrapper,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 145
            }
          }, button);
        }
      }
    }]);
    return HeaderBackButton;
  }(React.PureComponent);

  HeaderBackButton.defaultProps = {
    pressColorAndroid: 'rgba(0, 0, 0, .32)',
    tintColor: _reactNative.Platform.select({
      ios: '#037aff',
      web: '#5f6368'
    }),
    truncatedTitle: 'Back',
    backImage: _reactNative.Platform.select({
      web: _BackButtonWeb.default
    })
  };

  var styles = _reactNative.StyleSheet.create({
    disabled: {
      opacity: 0.5
    },
    androidButtonWrapper: (0, _objectSpread2.default)({
      margin: 13,
      backgroundColor: 'transparent'
    }, _reactNative.Platform.select({
      web: {
        marginLeft: 21
      },
      default: {}
    })),
    container: {
      alignItems: 'center',
      flexDirection: 'row',
      backgroundColor: 'transparent'
    },
    title: {
      fontSize: 17,
      paddingRight: 10
    },
    icon: _reactNative.Platform.select({
      ios: {
        backgroundColor: 'transparent',
        height: 21,
        width: 13,
        marginLeft: 9,
        marginRight: 22,
        marginVertical: 12,
        resizeMode: 'contain',
        transform: [{
          scaleX: _reactNative.I18nManager.isRTL ? -1 : 1
        }]
      },
      default: {
        height: 24,
        width: 24,
        margin: 3,
        resizeMode: 'contain',
        backgroundColor: 'transparent',
        transform: [{
          scaleX: _reactNative.I18nManager.isRTL ? -1 : 1
        }]
      }
    }),
    iconWithTitle: _reactNative.Platform.OS === 'ios' ? {
      marginRight: 6
    } : {}
  });

  var _default = HeaderBackButton;
  exports.default = _default;
},437,[362,1,46,22,23,30,33,36,49,2,438,440,441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _BorderlessButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/TouchableItem.tsx";
  var ANDROID_VERSION_LOLLIPOP = 21;

  var TouchableItem = function (_React$Component) {
    (0, _inherits2.default)(TouchableItem, _React$Component);

    function TouchableItem() {
      (0, _classCallCheck2.default)(this, TouchableItem);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableItem).apply(this, arguments));
    }

    (0, _createClass2.default)(TouchableItem, [{
      key: "render",
      value: function render() {
        if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
          var _this$props = this.props,
              style = _this$props.style,
              rest = (0, _objectWithoutProperties2.default)(_this$props, ["style"]);
          return React.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, rest, {
            style: null,
            background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 52
            }
          }), React.createElement(_reactNative.View, {
            style: style,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 60
            }
          }, React.Children.only(this.props.children)));
        } else if (_reactNative.Platform.OS === 'ios') {
          return React.createElement(_BorderlessButton.default, (0, _extends2.default)({
            hitSlop: {
              top: 10,
              bottom: 10,
              right: 10,
              left: 10
            },
            disallowInterruption: true,
            enabled: !this.props.disabled
          }, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 65
            }
          }), this.props.children);
        } else {
          return React.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          }), this.props.children);
        }
      }
    }]);
    return TouchableItem;
  }(React.Component);

  exports.default = TouchableItem;
  TouchableItem.defaultProps = {
    borderless: false,
    pressColor: 'rgba(0, 0, 0, .32)'
  };
},438,[362,1,11,9,22,23,30,33,36,49,2,439]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[11]);

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/BorderlessButton.tsx";

  var AnimatedBaseButton = _reactNative.Animated.createAnimatedComponent(_reactNativeGestureHandler.BaseButton);

  var BorderlessButton = function (_React$Component) {
    (0, _inherits2.default)(BorderlessButton, _React$Component);

    function BorderlessButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, BorderlessButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BorderlessButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.opacity = new _reactNative.Animated.Value(1);

      _this.handleActiveStateChange = function (active) {
        if (_reactNative.Platform.OS !== 'android') {
          _reactNative.Animated.spring(_this.opacity, {
            stiffness: 1000,
            damping: 500,
            mass: 3,
            overshootClamping: true,
            restDisplacementThreshold: 0.01,
            restSpeedThreshold: 0.01,
            toValue: active ? _this.props.activeOpacity : 1,
            useNativeDriver: true
          }).start();
        }

        _this.props.onActiveStateChange && _this.props.onActiveStateChange(active);
      };

      return _this;
    }

    (0, _createClass2.default)(BorderlessButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            style = _this$props.style,
            enabled = _this$props.enabled,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["children", "style", "enabled"]);
        return React.createElement(AnimatedBaseButton, (0, _extends2.default)({}, rest, {
          onActiveStateChange: this.handleActiveStateChange,
          style: [style, _reactNative.Platform.OS === 'ios' && enabled && {
            opacity: this.opacity
          }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        }), children);
      }
    }]);
    return BorderlessButton;
  }(React.Component);

  exports.default = BorderlessButton;
  BorderlessButton.defaultProps = {
    activeOpacity: 0.3,
    borderless: true
  };
},439,[362,1,11,9,22,23,30,33,36,49,2,409]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/react-navigation-stack/lib/module/views/assets",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "a364dc7a784101f7c8f6791c7b4514ce",
    "name": "back-icon",
    "type": "png"
  });
},440,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = BackButton;

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/Header/BackButtonWeb.tsx";

  function BackButton(_ref) {
    var tintColor = _ref.tintColor;
    return React.createElement("svg", {
      width: "24px",
      height: "24px",
      viewBox: "0 0 24 24",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 9
      }
    }, React.createElement("path", {
      fill: tintColor,
      d: "M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10
      }
    }));
  }
},441,[362,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _backIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/Header/ModularHeaderBackButton.tsx";

  var ModularHeaderBackButton = function (_React$PureComponent) {
    (0, _inherits2.default)(ModularHeaderBackButton, _React$PureComponent);

    function ModularHeaderBackButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ModularHeaderBackButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ModularHeaderBackButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {};

      _this.onTextLayout = function (e) {
        if (_this.state.initialTextWidth) {
          return;
        }

        _this.setState({
          initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
        });
      };

      _this.getTitleText = function () {
        var _this$props = _this.props,
            width = _this$props.width,
            title = _this$props.title,
            truncatedTitle = _this$props.truncatedTitle;
        var initialTextWidth = _this.state.initialTextWidth;

        if (title === null) {
          return null;
        } else if (!title) {
          return truncatedTitle;
        } else if (initialTextWidth && width && initialTextWidth > width) {
          return truncatedTitle;
        } else {
          return title.length > 8 ? truncatedTitle : title;
        }
      };

      return _this;
    }

    (0, _createClass2.default)(ModularHeaderBackButton, [{
      key: "renderBackImage",
      value: function renderBackImage() {
        var _this$props2 = this.props,
            backImage = _this$props2.backImage,
            backTitleVisible = _this$props2.backTitleVisible,
            tintColor = _this$props2.tintColor;

        if (React.isValidElement(backImage)) {
          return backImage;
        } else if (backImage) {
          var BackImage = backImage;
          return React.createElement(BackImage, {
            tintColor: tintColor,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 50
            }
          });
        } else {
          return React.createElement(_reactNative.Image, {
            style: [styles.icon, !!backTitleVisible && styles.iconWithTitle, !!tintColor && {
              tintColor: tintColor
            }],
            source: _backIcon.default,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 53
            }
          });
        }
      }
    }, {
      key: "maybeRenderTitle",
      value: function maybeRenderTitle() {
        var _this$props3 = this.props,
            backTitleVisible = _this$props3.backTitleVisible,
            titleStyle = _this$props3.titleStyle,
            tintColor = _this$props3.tintColor;
        var backTitleText = this.getTitleText();

        if (!backTitleVisible || backTitleText === null) {
          return null;
        }

        var LabelContainerComponent = this.props.LabelContainerComponent;
        return React.createElement(LabelContainerComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        }, React.createElement(_reactNative.Text, {
          accessible: false,
          onLayout: this.onTextLayout,
          style: [styles.title, !!tintColor && {
            color: tintColor
          }, titleStyle],
          numberOfLines: 1,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93
          }
        }, this.getTitleText()));
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            onPress = _this$props4.onPress,
            title = _this$props4.title;
        var ButtonContainerComponent = this.props.ButtonContainerComponent;
        return React.createElement(_TouchableItem.default, {
          accessibilityComponentType: "button",
          accessibilityLabel: title ? title + ", back" : 'Go back',
          accessibilityTraits: "button",
          testID: "header-back",
          delayPressIn: 0,
          onPress: onPress,
          style: styles.container,
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 114
          }
        }, React.createElement(_reactNative.View, {
          style: styles.container,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 124
          }
        }, React.createElement(ButtonContainerComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 125
          }
        }, this.renderBackImage()), this.maybeRenderTitle()));
      }
    }]);
    return ModularHeaderBackButton;
  }(React.PureComponent);

  ModularHeaderBackButton.defaultProps = {
    tintColor: '#037aff',
    truncatedTitle: 'Back'
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      flexDirection: 'row',
      backgroundColor: 'transparent',
      marginBottom: 1,
      overflow: 'visible'
    },
    title: {
      fontSize: 17,
      paddingRight: 10
    },
    icon: {
      height: 21,
      width: 12,
      marginLeft: 9,
      marginRight: 22,
      marginVertical: 12,
      resizeMode: 'contain',
      transform: [{
        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1
      }]
    },
    iconWithTitle: {
      marginRight: 3
    }
  });

  var _default = ModularHeaderBackButton;
  exports.default = _default;
},442,[362,1,22,23,30,33,36,49,2,438,440]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _getSceneIndicesForInterpolationInputRange = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function hasHeader(scene) {
    if (!scene) {
      return true;
    }

    var descriptor = scene.descriptor;
    return descriptor.options.header !== null;
  }

  var crossFadeInterpolation = function crossFadeInterpolation(scenes, first, index, last) {
    return {
      inputRange: [first, first + 0.001, index - 0.9, index - 0.2, index, last - 0.001, last],
      outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0.3 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0 : 1, 0],
      extrapolate: 'clamp'
    };
  };

  function isGoingBack(scenes) {
    var lastSceneIndexInScenes = scenes.length - 1;
    return !scenes[lastSceneIndexInScenes].isActive;
  }

  function forLayout(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene,
        scenes = props.scenes,
        mode = props.mode;

    if (mode !== 'float') {
      return {};
    }

    var isBack = isGoingBack(scenes);
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {};
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;

    var width = layout.initWidth || _reactNative.Dimensions.get('window').width;

    if (isBack && !hasHeader(scenes[index]) && !hasHeader(scenes[last]) || !isBack && !hasHeader(scenes[first]) && !hasHeader(scenes[index])) {
      return {
        transform: [{
          translateX: width
        }]
      };
    }

    var rtlMult = _reactNative.I18nManager.isRTL ? -1 : 1;
    var translateX = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [rtlMult * (hasHeader(scenes[first]) ? 0 : width), rtlMult * (hasHeader(scenes[index]) ? 0 : isBack ? width : -width), rtlMult * (hasHeader(scenes[last]) ? 0 : -width)],
      extrapolate: 'clamp'
    });
    return {
      transform: [{
        translateX: translateX
      }]
    };
  }

  function forLeft(props) {
    var position = props.position,
        scene = props.scene,
        scenes = props.scenes;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    return {
      opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))
    };
  }

  function forCenter(props) {
    var position = props.position,
        scene = props.scene,
        scenes = props.scenes;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    return {
      opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))
    };
  }

  function forRight(props) {
    var position = props.position,
        scene = props.scene,
        scenes = props.scenes;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    return {
      opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))
    };
  }

  function forLeftButton(props) {
    var position = props.position,
        scene = props.scene,
        scenes = props.scenes;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var inputRange = [first, first + 0.001, first + Math.abs(index - first) / 2, index, last - Math.abs(last - index) / 2, last - 0.001, last];
    var outputRange = [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0.3 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0.3 : 1, hasHeader(scenes[last]) ? 0 : 1, 0];
    return {
      opacity: position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange,
        extrapolate: 'clamp'
      })
    };
  }

  var LEFT_LABEL_OFFSET = _reactNative.Dimensions.get('window').width / 2 - 70 - 25;

  function forLeftLabel(props) {
    var position = props.position,
        scene = props.scene,
        scenes = props.scenes;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var offset = LEFT_LABEL_OFFSET;
    return {
      opacity: position.interpolate({
        inputRange: [first, first + 0.001, index - 0.35, index, index + 0.5, last - 0.001, last],
        outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0.5 : 1, hasHeader(scenes[last]) ? 0 : 1, 0],
        extrapolate: 'clamp'
      }),
      transform: [{
        translateX: position.interpolate({
          inputRange: [first, first + 0.001, index, last - 0.001, last],
          outputRange: _reactNative.I18nManager.isRTL ? [-offset * 1.5, hasHeader(scenes[first]) ? -offset * 1.5 : 0, 0, hasHeader(scenes[last]) ? offset : 0, offset] : [offset, hasHeader(scenes[first]) ? offset : 0, 0, hasHeader(scenes[last]) ? -offset * 1.5 : 0, -offset * 1.5],
          extrapolate: 'clamp'
        })
      }]
    };
  }

  var TITLE_OFFSET_IOS = _reactNative.Dimensions.get('window').width / 2 - 70 + 25;

  function forCenterFromLeft(props) {
    var position = props.position,
        scene = props.scene,
        scenes = props.scenes;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var offset = TITLE_OFFSET_IOS;
    return {
      opacity: position.interpolate({
        inputRange: [first, first + 0.001, index - 0.5, index, index + 0.7, last - 0.001, last],
        outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0 : 1, hasHeader(scenes[last]) ? 0 : 1, 0],
        extrapolate: 'clamp'
      }),
      transform: [{
        translateX: position.interpolate({
          inputRange: [first, first + 0.001, index, last - 0.001, last],
          outputRange: _reactNative.I18nManager.isRTL ? [-offset, hasHeader(scenes[first]) ? -offset : 0, 0, hasHeader(scenes[last]) ? offset : 0, offset] : [offset, hasHeader(scenes[first]) ? offset : 0, 0, hasHeader(scenes[last]) ? -offset : 0, -offset],
          extrapolate: 'clamp'
        })
      }]
    };
  }

  function forBackgroundWithFade(props) {
    var position = props.position,
        scene = props.scene;
    var sceneRange = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!sceneRange) return {
      opacity: 0
    };
    return {
      opacity: position.interpolate({
        inputRange: [sceneRange.first, scene.index, sceneRange.last],
        outputRange: [0, 1, 0],
        extrapolate: 'clamp'
      })
    };
  }

  var VISIBLE = {
    opacity: 1
  };
  var HIDDEN = {
    opacity: 0
  };

  function forBackgroundWithInactiveHidden(_ref) {
    var navigation = _ref.navigation,
        scene = _ref.scene;
    return navigation.state.index === scene.index ? VISIBLE : HIDDEN;
  }

  var BACKGROUND_OFFSET = _reactNative.Dimensions.get('window').width;

  function forBackgroundWithTranslation(props) {
    var position = props.position,
        scene = props.scene;
    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var offset = BACKGROUND_OFFSET;
    var outputRange = [offset, 0, -offset];
    return {
      transform: [{
        translateX: position.interpolate({
          inputRange: [first, index, last],
          outputRange: _reactNative.I18nManager.isRTL ? outputRange.reverse() : outputRange,
          extrapolate: 'clamp'
        })
      }]
    };
  }

  var forBackground = forBackgroundWithInactiveHidden;
  var _default = {
    forLayout: forLayout,
    forLeft: forLeft,
    forLeftButton: forLeftButton,
    forLeftLabel: forLeftLabel,
    forCenterFromLeft: forCenterFromLeft,
    forCenter: forCenter,
    forRight: forRight,
    forBackground: forBackground,
    forBackgroundWithInactiveHidden: forBackgroundWithInactiveHidden,
    forBackgroundWithFade: forBackgroundWithFade,
    forBackgroundWithTranslation: forBackgroundWithTranslation
  };
  exports.default = _default;
},443,[1,2,444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  function getSceneIndicesForInterpolationInputRange(props) {
    var scene = props.scene,
        scenes = props.scenes;
    var index = scene.index;
    var lastSceneIndexInScenes = scenes.length - 1;
    var isBack = !scenes[lastSceneIndexInScenes].isActive;

    if (isBack) {
      var currentSceneIndexInScenes = scenes.findIndex(function (item) {
        return item === scene;
      });
      var targetSceneIndexInScenes = scenes.findIndex(function (item) {
        return item.isActive;
      });
      var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
      var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

      if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
        return {
          first: Math.min(targetSceneIndex, index - 1),
          last: index + 1
        };
      } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
        return {
          first: index - 1,
          last: Math.max(lastSceneIndex, index + 1)
        };
      } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
        return null;
      } else {
        return {
          first: index - 1,
          last: index + 1
        };
      }
    } else {
      return {
        first: index - 1,
        last: index + 1
      };
    }
  }

  var _default = getSceneIndicesForInterpolationInputRange;
  exports.default = _default;
},444,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/react-navigation-stack/lib/module/views/assets",
    "width": 50,
    "height": 85,
    "scales": [1],
    "hash": "6165c9d7a2e729ba57b23dd93add5366",
    "name": "back-icon-mask",
    "type": "png"
  });
},445,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _StackViewStyleInterpolator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ReactNativeFeatures = _$$_REQUIRE(_dependencyMap[4]);

  var IOSTransitionSpec;

  if ((0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {
    IOSTransitionSpec = {
      timing: _reactNative.Animated.spring,
      stiffness: 1000,
      damping: 500,
      mass: 3,
      overshootClamping: true,
      restDisplacementThreshold: 0.01,
      restSpeedThreshold: 0.01
    };
  } else {
    IOSTransitionSpec = {
      duration: 500,
      easing: _reactNative.Easing.bezier(0.2833, 0.99, 0.31833, 0.99),
      timing: _reactNative.Animated.timing
    };
  }

  var SlideFromRightIOS = {
    transitionSpec: IOSTransitionSpec,
    screenInterpolator: _StackViewStyleInterpolator.default.forHorizontal,
    containerStyle: {
      backgroundColor: '#eee'
    }
  };
  var ModalSlideFromBottomIOS = {
    transitionSpec: IOSTransitionSpec,
    screenInterpolator: _StackViewStyleInterpolator.default.forVertical,
    containerStyle: {
      backgroundColor: '#eee'
    }
  };
  var FadeInFromBottomAndroid = {
    transitionSpec: {
      duration: 350,
      easing: _reactNative.Easing.out(_reactNative.Easing.poly(5)),
      timing: _reactNative.Animated.timing
    },
    screenInterpolator: _StackViewStyleInterpolator.default.forFadeFromBottomAndroid
  };
  var FadeOutToBottomAndroid = {
    transitionSpec: {
      duration: 150,
      easing: _reactNative.Easing.in(_reactNative.Easing.linear),
      timing: _reactNative.Animated.timing
    },
    screenInterpolator: _StackViewStyleInterpolator.default.forFadeToBottomAndroid
  };
  var NoAnimation = {
    transitionSpec: {
      duration: 0,
      timing: _reactNative.Animated.timing
    },
    screenInterpolator: _StackViewStyleInterpolator.default.forNoAnimation,
    containerStyle: {
      backgroundColor: '#eee'
    }
  };

  function defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {
    if (_reactNative.Platform.OS !== 'ios') {
      if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {
        return FadeOutToBottomAndroid;
      }

      return FadeInFromBottomAndroid;
    }

    if (isModal) {
      return ModalSlideFromBottomIOS;
    }

    return SlideFromRightIOS;
  }

  function getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {
    var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);

    if (transitionConfigurer) {
      return (0, _objectSpread2.default)({}, defaultConfig, transitionConfigurer(transitionProps, prevTransitionProps, isModal));
    }

    return defaultConfig;
  }

  var _default = {
    defaultTransitionConfig: defaultTransitionConfig,
    getTransitionConfig: getTransitionConfig,
    SlideFromRightIOS: SlideFromRightIOS,
    ModalSlideFromBottomIOS: ModalSlideFromBottomIOS,
    FadeInFromBottomAndroid: FadeInFromBottomAndroid,
    FadeOutToBottomAndroid: FadeOutToBottomAndroid,
    NoAnimation: NoAnimation
  };
  exports.default = _default;
},446,[1,46,2,447,448]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _getSceneIndicesForInterpolationInputRange = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var EPS = 1e-5;

  function forInitial(props) {
    var navigation = props.navigation,
        scene = props.scene;
    var focused = navigation.state.index === scene.index;
    var opacity = focused ? 1 : 0;
    var translate = focused ? 0 : 1000000;
    return {
      opacity: opacity,
      transform: [{
        translateX: translate
      }, {
        translateY: translate
      }]
    };
  }

  function forHorizontal(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return forInitial(props);
    }

    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var width = layout.initWidth;
    var translateX = position.interpolate({
      inputRange: [first, index, last],
      outputRange: _reactNative.I18nManager.isRTL ? [-width, 0, width * 0.3] : [width, 0, width * -0.3],
      extrapolate: 'clamp'
    });
    var shadowOpacity = props.shadowEnabled ? position.interpolate({
      inputRange: [first, index, last],
      outputRange: [0, 0.7, 0],
      extrapolate: 'clamp'
    }) : null;
    var overlayOpacity = props.cardOverlayEnabled ? position.interpolate({
      inputRange: [index, last - 0.5, last, last + EPS],
      outputRange: [0, 0.07, 0.07, 0],
      extrapolate: 'clamp'
    }) : null;
    return {
      transform: [{
        translateX: translateX
      }],
      overlayOpacity: overlayOpacity,
      shadowOpacity: shadowOpacity
    };
  }

  function forVertical(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return forInitial(props);
    }

    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var height = layout.initHeight;
    var translateY = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [height, 0, 0],
      extrapolate: 'clamp'
    });
    return {
      transform: [{
        translateY: translateY
      }]
    };
  }

  function forFadeFromBottomAndroid(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return forInitial(props);
    }

    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var opacity = position.interpolate({
      inputRange: [first, first + 0.5, first + 0.9, index, last - 1e-5, last],
      outputRange: [0, 0.25, 0.7, 1, 1, 0],
      extrapolate: 'clamp'
    });
    var height = layout.initHeight;
    var maxTranslation = height * 0.08;
    var translateY = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [maxTranslation, 0, 0],
      extrapolate: 'clamp'
    });
    return {
      opacity: opacity,
      transform: [{
        translateY: translateY
      }]
    };
  }

  function forFadeToBottomAndroid(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return forInitial(props);
    }

    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var inputRange = [first, index, last];
    var opacity = position.interpolate({
      inputRange: inputRange,
      outputRange: [0, 1, 1],
      extrapolate: 'clamp'
    });
    var height = layout.initHeight;
    var maxTranslation = height * 0.08;
    var translateY = position.interpolate({
      inputRange: inputRange,
      outputRange: [maxTranslation, 0, 0],
      extrapolate: 'clamp'
    });
    return {
      opacity: opacity,
      transform: [{
        translateY: translateY
      }]
    };
  }

  function forFade(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return forInitial(props);
    }

    var interpolate = (0, _getSceneIndicesForInterpolationInputRange.default)(props);
    if (!interpolate) return {
      opacity: 0
    };
    var first = interpolate.first,
        last = interpolate.last;
    var index = scene.index;
    var opacity = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [0, 1, 1],
      extrapolate: 'clamp'
    });
    return {
      opacity: opacity
    };
  }

  function forNoAnimation() {
    return {};
  }

  var _default = {
    forHorizontal: forHorizontal,
    forVertical: forVertical,
    forFadeFromBottomAndroid: forFadeFromBottomAndroid,
    forFadeToBottomAndroid: forFadeToBottomAndroid,
    forFade: forFade,
    forNoAnimation: forNoAnimation
  };
  exports.default = _default;
},447,[1,2,444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.supportsImprovedSpringAnimation = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var PlatformConstants = _reactNative.NativeModules.PlatformConstants;

  var supportsImprovedSpringAnimation = function supportsImprovedSpringAnimation() {
    if (PlatformConstants && PlatformConstants.reactNativeVersion) {
      var _PlatformConstants$re = PlatformConstants.reactNativeVersion,
          major = _PlatformConstants$re.major,
          minor = _PlatformConstants$re.minor;
      return minor >= 50 || major === 0 && minor === 0;
    }

    return false;
  };

  exports.supportsImprovedSpringAnimation = supportsImprovedSpringAnimation;
},448,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = React.createContext(null);

  exports.default = _default;
},449,[362,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = clamp;

  function clamp(min, value, max) {
    if (value < min) {
      return min;
    }

    if (value > max) {
      return max;
    }

    return value;
  }
},450,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ScenesReducer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/Transitioner.tsx";
  var DefaultTransitionSpec = {
    duration: 250,
    easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
    timing: _reactNative.Animated.timing
  };

  var Transitioner = function (_React$Component) {
    (0, _inherits2.default)(Transitioner, _React$Component);

    function Transitioner(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, Transitioner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Transitioner).call(this, _props));

      _this.computeScenes = function (props, nextProps) {
        var nextScenes = (0, _ScenesReducer.default)(_this.state.scenes, nextProps.navigation.state, props.navigation.state, nextProps.descriptors);

        if (!nextProps.navigation.state.isTransitioning) {
          nextScenes = filterStale(nextScenes);
        }

        if (nextProps.screenProps !== _this.props.screenProps) {
          _this.setState({
            nextScenes: nextScenes
          });
        }

        if (nextScenes === _this.state.scenes) {
          return;
        }

        return nextScenes;
      };

      _this.handleLayout = function (event) {
        var _event$nativeEvent$la = event.nativeEvent.layout,
            height = _event$nativeEvent$la.height,
            width = _event$nativeEvent$la.width;

        if (_this.state.layout.initWidth === width && _this.state.layout.initHeight === height) {
          return;
        }

        var layout = (0, _objectSpread2.default)({}, _this.state.layout, {
          initHeight: height,
          initWidth: width,
          isMeasured: true
        });
        layout.height.setValue(height);
        layout.width.setValue(width);
        var nextState = (0, _objectSpread2.default)({}, _this.state, {
          layout: layout
        });
        _this.transitionProps = buildTransitionProps(_this.props, nextState);

        _this.setState(nextState);
      };

      _this.handleTransitionEnd = function () {
        if (!_this.isComponentMounted) {
          return;
        }

        var prevTransitionProps = _this.prevTransitionProps;
        _this.prevTransitionProps = undefined;
        var scenes = filterStale(_this.state.scenes);
        var nextState = (0, _objectSpread2.default)({}, _this.state, {
          scenes: scenes
        });
        _this.transitionProps = buildTransitionProps(_this.props, nextState);

        _this.setState(nextState, function _callee() {
          var result, prevProps;
          return _regenerator.default.async(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!_this.props.onTransitionEnd) {
                    _context.next = 5;
                    break;
                  }

                  result = _this.props.onTransitionEnd(_this.transitionProps, prevTransitionProps);

                  if (!(result instanceof Promise)) {
                    _context.next = 5;
                    break;
                  }

                  _context.next = 5;
                  return _regenerator.default.awrap(result);

                case 5:
                  if (_this.queuedTransition) {
                    prevProps = _this.queuedTransition.prevProps;
                    _this.queuedTransition = null;

                    _this.startTransition(prevProps, _this.props);
                  } else {
                    _this.isTransitionRunning = false;
                  }

                case 6:
                case "end":
                  return _context.stop();
              }
            }
          });
        });
      };

      var _layout = {
        height: new _reactNative.Animated.Value(0),
        initHeight: 0,
        initWidth: 0,
        isMeasured: false,
        width: new _reactNative.Animated.Value(0)
      };
      var position = new _reactNative.Animated.Value(_this.props.navigation.state.index);
      _this.positionListener = position.addListener(function () {});
      _this.state = {
        layout: _layout,
        position: position,
        scenes: (0, _ScenesReducer.default)([], _this.props.navigation.state, null, _this.props.descriptors)
      };
      _this.prevTransitionProps = undefined;
      _this.transitionProps = buildTransitionProps(_props, _this.state);
      _this.isComponentMounted = false;
      _this.isTransitionRunning = false;
      _this.queuedTransition = null;
      return _this;
    }

    (0, _createClass2.default)(Transitioner, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.isComponentMounted = true;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.isComponentMounted = false;
        this.positionListener && this.state.position.removeListener(this.positionListener);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (this.isTransitionRunning) {
          if (!this.queuedTransition) {
            this.queuedTransition = {
              prevProps: this.props
            };
          }

          return;
        }

        this.startTransition(this.props, nextProps);
      }
    }, {
      key: "startTransition",
      value: function startTransition(props, nextProps) {
        var _this2 = this;

        var indexHasChanged = props.navigation.state.index !== nextProps.navigation.state.index;
        var nextScenes = this.computeScenes(props, nextProps);

        if (!nextScenes) {
          this.prevTransitionProps = this.transitionProps;
          this.state.position.setValue(props.navigation.state.index);
          this.handleTransitionEnd();
          return;
        }

        var nextState = (0, _objectSpread2.default)({}, this.state, {
          scenes: nextScenes
        });
        var position = nextState.position;
        var toValue = nextProps.navigation.state.index;
        this.prevTransitionProps = this.transitionProps;
        this.transitionProps = buildTransitionProps(nextProps, nextState);
        var isTransitioning = this.transitionProps.navigation.state.isTransitioning;

        if (!isTransitioning || !indexHasChanged) {
          this.setState(nextState, function _callee2() {
            var result;
            return _regenerator.default.async(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    if (!nextProps.onTransitionStart) {
                      _context2.next = 5;
                      break;
                    }

                    result = nextProps.onTransitionStart(_this2.transitionProps, _this2.prevTransitionProps);

                    if (!(result instanceof Promise)) {
                      _context2.next = 5;
                      break;
                    }

                    _context2.next = 5;
                    return _regenerator.default.awrap(result);

                  case 5:
                    indexHasChanged && position.setValue(toValue);

                    _this2.handleTransitionEnd();

                  case 7:
                  case "end":
                    return _context2.stop();
                }
              }
            });
          });
        } else if (isTransitioning) {
          this.isTransitionRunning = true;
          this.setState(nextState, function _callee3() {
            var result, transitionUserSpec, transitionSpec, timing, positionHasChanged;
            return _regenerator.default.async(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    if (!nextProps.onTransitionStart) {
                      _context3.next = 5;
                      break;
                    }

                    result = nextProps.onTransitionStart(_this2.transitionProps, _this2.prevTransitionProps);

                    if (!(result instanceof Promise)) {
                      _context3.next = 5;
                      break;
                    }

                    _context3.next = 5;
                    return _regenerator.default.awrap(result);

                  case 5:
                    transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(_this2.transitionProps, _this2.prevTransitionProps) : null;
                    transitionSpec = (0, _objectSpread2.default)({}, DefaultTransitionSpec, transitionUserSpec);
                    timing = transitionSpec.timing;
                    delete transitionSpec.timing;
                    positionHasChanged = position.__getValue() !== toValue;

                    if (indexHasChanged && positionHasChanged) {
                      timing(position, (0, _objectSpread2.default)({}, transitionSpec, {
                        toValue: nextProps.navigation.state.index
                      })).start(function () {
                        requestAnimationFrame(_this2.handleTransitionEnd);
                      });
                    } else {
                      _this2.handleTransitionEnd();
                    }

                  case 11:
                  case "end":
                    return _context3.stop();
                }
              }
            });
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(_reactNative.View, {
          onLayout: this.handleLayout,
          style: styles.main,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 267
          }
        }, this.props.render(this.transitionProps, this.prevTransitionProps));
      }
    }]);
    return Transitioner;
  }(React.Component);

  function buildTransitionProps(props, state) {
    var navigation = props.navigation;
    var layout = state.layout,
        position = state.position,
        scenes = state.scenes;
    var scene = scenes.find(isSceneActive);

    if (!scene) {
      throw new Error('Could not find active scene');
    }

    return {
      layout: layout,
      navigation: navigation,
      position: position,
      scenes: scenes,
      scene: scene,
      index: scene.index
    };
  }

  function isSceneNotStale(scene) {
    return !scene.isStale;
  }

  function filterStale(scenes) {
    var filtered = scenes.filter(isSceneNotStale);

    if (filtered.length === scenes.length) {
      return scenes;
    }

    return filtered;
  }

  function isSceneActive(scene) {
    return scene.isActive;
  }

  var styles = _reactNative.StyleSheet.create({
    main: {
      flex: 1
    }
  });

  var _default = Transitioner;
  exports.default = _default;
},451,[362,1,136,46,22,23,30,33,36,49,2,452]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ScenesReducer;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var SCENE_KEY_PREFIX = 'scene_';

  function compareKey(one, two) {
    var delta = one.length - two.length;

    if (delta > 0) {
      return 1;
    }

    if (delta < 0) {
      return -1;
    }

    return one > two ? 1 : -1;
  }

  function compareScenes(one, two) {
    if (one.index > two.index) {
      return 1;
    }

    if (one.index < two.index) {
      return -1;
    }

    return compareKey(one.key, two.key);
  }

  function areScenesShallowEqual(one, two) {
    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);
  }

  function areRoutesShallowEqual(one, two) {
    if (!one || !two) {
      return one === two;
    }

    if (one.key !== two.key) {
      return false;
    }

    return (0, _shallowEqual.default)(one, two);
  }

  function ScenesReducer(scenes, nextState, prevState, descriptors) {
    scenes.forEach(function (scene) {
      var route = scene.route;

      if (descriptors && descriptors[route.key]) {
        scene.descriptor = descriptors[route.key];
      }
    });

    if (prevState === nextState) {
      return scenes;
    }

    var prevScenes = new Map();
    var freshScenes = new Map();
    var staleScenes = new Map();
    scenes.forEach(function (scene) {
      var key = scene.key;

      if (scene.isStale) {
        staleScenes.set(key, scene);
      }

      prevScenes.set(key, scene);
    });
    var nextKeys = new Set();
    var nextRoutes = nextState.routes;

    if (nextRoutes.length > nextState.index + 1) {
      console.warn('StackRouter provided invalid state, index should always be the top route');
      nextRoutes = nextState.routes.slice(0, nextState.index + 1);
    }

    nextRoutes.forEach(function (route, index) {
      var key = SCENE_KEY_PREFIX + route.key;
      var descriptor = descriptors && descriptors[route.key];
      var scene = {
        index: index,
        isActive: false,
        isStale: false,
        key: key,
        route: route,
        descriptor: descriptor
      };

      if (nextKeys.has(key)) {
        throw new Error("navigation.state.routes[" + index + "].key \"" + key + "\" conflicts with " + 'another route!');
      }

      nextKeys.add(key);

      if (staleScenes.has(key)) {
        staleScenes.delete(key);
      }

      freshScenes.set(key, scene);
    });

    if (prevState) {
      var prevRoutes = prevState.routes;

      if (prevRoutes.length > prevState.index + 1) {
        console.warn('StackRouter provided invalid state, index should always be the top route');
        prevRoutes = prevRoutes.slice(0, prevState.index + 1);
      }

      prevRoutes.forEach(function (route, index) {
        var key = SCENE_KEY_PREFIX + route.key;

        if (freshScenes.has(key)) {
          return;
        }

        var lastScene = scenes.find(function (scene) {
          return scene.route.key === route.key;
        });
        var descriptor = lastScene ? lastScene.descriptor : descriptors[route.key];

        if (descriptor) {
          staleScenes.set(key, {
            index: index,
            isActive: false,
            isStale: true,
            key: key,
            route: route,
            descriptor: descriptor
          });
        }
      });
    }

    var nextScenes = [];

    var mergeScene = function mergeScene(nextScene) {
      var key = nextScene.key;
      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;

      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {
        nextScenes.push(prevScene);
      } else {
        nextScenes.push(nextScene);
      }
    };

    staleScenes.forEach(mergeScene);
    freshScenes.forEach(mergeScene);
    nextScenes.sort(compareScenes);
    var activeScenesCount = 0;
    nextScenes.forEach(function (scene, ii) {
      var isActive = !scene.isStale && scene.index === nextState.index;

      if (isActive !== scene.isActive) {
        nextScenes[ii] = (0, _objectSpread2.default)({}, scene, {
          isActive: isActive
        });
      }

      if (isActive) {
        activeScenesCount++;
      }
    });

    if (activeScenesCount !== 1) {
      throw new Error("There should always be only one scene active, not " + activeScenesCount + ".");
    }

    if (nextScenes.length !== scenes.length) {
      return nextScenes;
    }

    if (nextScenes.some(function (scene, index) {
      return !areScenesShallowEqual(scenes[index], scene);
    })) {
      return nextScenes;
    }

    return scenes;
  }
},452,[1,46,453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function is(x, y) {
    if (x === y) {
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  var _default = shallowEqual;
  exports.default = _default;
},453,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get createBottomTabNavigator() {
      return _$$_REQUIRE(_dependencyMap[0]).default;
    },

    get createMaterialTopTabNavigator() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },

    get BottomTabBar() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },

    get MaterialTopTabBar() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },

    get createTabNavigator() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    }

  };
},454,[455,462,458,474,457]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactLifecyclesCompat = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[12]);

  var _createTabNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _BottomTabBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ResourceSavingScene = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var TabNavigationView = function (_React$PureComponent) {
    (0, _inherits2.default)(TabNavigationView, _React$PureComponent);

    function TabNavigationView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TabNavigationView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TabNavigationView)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        loaded: [_this.props.navigation.state.index]
      };

      _this._renderTabBar = function () {
        var _this$props = _this.props,
            _this$props$tabBarCom = _this$props.tabBarComponent,
            TabBarComponent = _this$props$tabBarCom === undefined ? _BottomTabBar.default : _this$props$tabBarCom,
            tabBarOptions = _this$props.tabBarOptions,
            navigation = _this$props.navigation,
            screenProps = _this$props.screenProps,
            getLabelText = _this$props.getLabelText,
            getAccessibilityLabel = _this$props.getAccessibilityLabel,
            getButtonComponent = _this$props.getButtonComponent,
            getAccessibilityRole = _this$props.getAccessibilityRole,
            getAccessibilityStates = _this$props.getAccessibilityStates,
            getTestID = _this$props.getTestID,
            renderIcon = _this$props.renderIcon,
            onTabPress = _this$props.onTabPress,
            onTabLongPress = _this$props.onTabLongPress;
        var descriptors = _this.props.descriptors;
        var state = _this.props.navigation.state;
        var route = state.routes[state.index];
        var descriptor = descriptors[route.key];
        var options = descriptor.options;

        if (options.tabBarVisible === false) {
          return null;
        }

        return React.createElement(TabBarComponent, (0, _extends2.default)({}, tabBarOptions, {
          jumpTo: _this._jumpTo,
          navigation: navigation,
          screenProps: screenProps,
          onTabPress: onTabPress,
          onTabLongPress: onTabLongPress,
          getLabelText: getLabelText,
          getButtonComponent: getButtonComponent,
          getAccessibilityLabel: getAccessibilityLabel,
          getAccessibilityRole: getAccessibilityRole,
          getAccessibilityStates: getAccessibilityStates,
          getTestID: getTestID,
          renderIcon: renderIcon
        }));
      };

      _this._jumpTo = function (key) {
        var _this$props2 = _this.props,
            navigation = _this$props2.navigation,
            onIndexChange = _this$props2.onIndexChange;
        var index = navigation.state.routes.findIndex(function (route) {
          return route.key === key;
        });
        onIndexChange(index);
      };

      return _this;
    }

    (0, _createClass2.default)(TabNavigationView, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            navigation = _this$props3.navigation,
            renderScene = _this$props3.renderScene,
            lazy = _this$props3.lazy;
        var routes = navigation.state.routes;
        var loaded = this.state.loaded;
        return React.createElement(_reactNative.View, {
          style: styles.container
        }, React.createElement(_reactNativeScreens.ScreenContainer, {
          style: styles.pages
        }, routes.map(function (route, index) {
          if (lazy && !loaded.includes(index)) {
            return null;
          }

          var isFocused = navigation.state.index === index;
          return React.createElement(_ResourceSavingScene.default, {
            key: route.key,
            style: _reactNative.StyleSheet.absoluteFill,
            isVisible: isFocused
          }, renderScene({
            route: route
          }));
        })), this._renderTabBar());
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var index = nextProps.navigation.state.index;
        return {
          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat((0, _toConsumableArray2.default)(prevState.loaded), [index])
        };
      }
    }]);
    return TabNavigationView;
  }(React.PureComponent);

  TabNavigationView.defaultProps = {
    lazy: true,
    getAccessibilityRole: function getAccessibilityRole() {
      return 'button';
    },
    getAccessibilityStates: function getAccessibilityStates(_ref) {
      var focused = _ref.focused;
      return focused ? ['selected'] : [];
    }
  };
  (0, _reactLifecyclesCompat.polyfill)(TabNavigationView);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    pages: {
      flex: 1
    }
  });

  var _default = (0, _createTabNavigator.default)(TabNavigationView);

  exports.default = _default;
},455,[362,1,18,11,22,23,30,33,36,49,2,456,432,457,458,461]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  function componentWillMount() {
    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);

    if (state !== null && state !== undefined) {
      this.setState(state);
    }
  }

  function componentWillReceiveProps(nextProps) {
    function updater(prevState) {
      var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
      return state !== null && state !== undefined ? state : null;
    }

    this.setState(updater.bind(this));
  }

  function componentWillUpdate(nextProps, nextState) {
    try {
      var prevProps = this.props;
      var prevState = this.state;
      this.props = nextProps;
      this.state = nextState;
      this.__reactInternalSnapshotFlag = true;
      this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
    } finally {
      this.props = prevProps;
      this.state = prevState;
    }
  }

  componentWillMount.__suppressDeprecationWarning = true;
  componentWillReceiveProps.__suppressDeprecationWarning = true;
  componentWillUpdate.__suppressDeprecationWarning = true;

  function polyfill(Component) {
    var prototype = Component.prototype;

    if (!prototype || !prototype.isReactComponent) {
      throw new Error('Can only polyfill class components');
    }

    if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {
      return Component;
    }

    var foundWillMountName = null;
    var foundWillReceivePropsName = null;
    var foundWillUpdateName = null;

    if (typeof prototype.componentWillMount === 'function') {
      foundWillMountName = 'componentWillMount';
    } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
      foundWillMountName = 'UNSAFE_componentWillMount';
    }

    if (typeof prototype.componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'componentWillReceiveProps';
    } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
    }

    if (typeof prototype.componentWillUpdate === 'function') {
      foundWillUpdateName = 'componentWillUpdate';
    } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
      foundWillUpdateName = 'UNSAFE_componentWillUpdate';
    }

    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
      var componentName = Component.displayName || Component.name;
      var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
      throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') + '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks');
    }

    if (typeof Component.getDerivedStateFromProps === 'function') {
      prototype.componentWillMount = componentWillMount;
      prototype.componentWillReceiveProps = componentWillReceiveProps;
    }

    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
      if (typeof prototype.componentDidUpdate !== 'function') {
        throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');
      }

      prototype.componentWillUpdate = componentWillUpdate;
      var componentDidUpdate = prototype.componentDidUpdate;

      prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
        var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
        componentDidUpdate.call(this, prevProps, prevState, snapshot);
      };
    }

    return Component;
  }

  exports.polyfill = polyfill;
},456,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createTabNavigator;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _core = _$$_REQUIRE(_dependencyMap[10]);

  function createTabNavigator(TabView) {
    var NavigationView = function (_React$Component) {
      (0, _inherits2.default)(NavigationView, _React$Component);

      function NavigationView() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, NavigationView);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NavigationView)).call.apply(_getPrototypeOf2, [this].concat(args)));

        _this._renderScene = function (_ref) {
          var route = _ref.route;
          var _this$props = _this.props,
              screenProps = _this$props.screenProps,
              descriptors = _this$props.descriptors;
          var descriptor = descriptors[route.key];
          var TabComponent = descriptor.getComponent();
          return React.createElement(_core.SceneView, {
            screenProps: screenProps,
            navigation: descriptor.navigation,
            component: TabComponent
          });
        };

        _this._renderIcon = function (_ref2) {
          var route = _ref2.route,
              _ref2$focused = _ref2.focused,
              focused = _ref2$focused === undefined ? true : _ref2$focused,
              tintColor = _ref2.tintColor,
              _ref2$horizontal = _ref2.horizontal,
              horizontal = _ref2$horizontal === undefined ? false : _ref2$horizontal;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var options = descriptor.options;

          if (options.tabBarIcon) {
            return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({
              focused: focused,
              tintColor: tintColor,
              horizontal: horizontal
            }) : options.tabBarIcon;
          }

          return null;
        };

        _this._getButtonComponent = function (_ref3) {
          var route = _ref3.route;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var options = descriptor.options;

          if (options.tabBarButtonComponent) {
            return options.tabBarButtonComponent;
          }

          return null;
        };

        _this._getLabelText = function (_ref4) {
          var route = _ref4.route;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var options = descriptor.options;

          if (options.tabBarLabel) {
            return options.tabBarLabel;
          }

          if (typeof options.title === 'string') {
            return options.title;
          }

          return route.routeName;
        };

        _this._getAccessibilityLabel = function (_ref5) {
          var route = _ref5.route;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var options = descriptor.options;

          if (typeof options.tabBarAccessibilityLabel !== 'undefined') {
            return options.tabBarAccessibilityLabel;
          }

          var label = _this._getLabelText({
            route: route
          });

          if (typeof label === 'string') {
            var routes = _this.props.navigation.state.routes;
            return label + ", tab, " + (routes.indexOf(route) + 1) + " of " + routes.length;
          }
        };

        _this._getTestID = function (_ref6) {
          var route = _ref6.route;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var options = descriptor.options;
          return options.tabBarTestID;
        };

        _this._makeDefaultHandler = function (_ref7) {
          var route = _ref7.route,
              navigation = _ref7.navigation;
          return function () {
            if (navigation.isFocused()) {
              if (route.hasOwnProperty('index') && route.index > 0) {
                navigation.dispatch(_core.StackActions.popToTop({
                  key: route.key
                }));
              } else {
                navigation.emit('refocus');
              }
            } else {
              _this._jumpTo(route.routeName);
            }
          };
        };

        _this._handleTabPress = function (_ref8) {
          var route = _ref8.route;
          _this._isTabPress = true;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var navigation = descriptor.navigation,
              options = descriptor.options;

          var defaultHandler = _this._makeDefaultHandler({
            route: route,
            navigation: navigation
          });

          if (options.tabBarOnPress) {
            options.tabBarOnPress({
              navigation: navigation,
              defaultHandler: defaultHandler
            });
          } else {
            defaultHandler();
          }
        };

        _this._handleTabLongPress = function (_ref9) {
          var route = _ref9.route;
          var descriptors = _this.props.descriptors;
          var descriptor = descriptors[route.key];
          var navigation = descriptor.navigation,
              options = descriptor.options;

          var defaultHandler = _this._makeDefaultHandler({
            route: route,
            navigation: navigation
          });

          if (options.tabBarOnLongPress) {
            options.tabBarOnLongPress({
              navigation: navigation,
              defaultHandler: defaultHandler
            });
          } else {
            defaultHandler();
          }
        };

        _this._handleIndexChange = function (index) {
          if (_this._isTabPress) {
            _this._isTabPress = false;
            return;
          }

          _this._jumpTo(_this.props.navigation.state.routes[index].routeName);
        };

        _this._handleSwipeStart = function () {
          _this.setState({
            isSwiping: true
          });
        };

        _this._handleSwipeEnd = function () {
          _this.setState({
            isSwiping: false
          });
        };

        _this._jumpTo = function (routeName) {
          return _this.props.navigation.dispatch(_core.NavigationActions.navigate({
            routeName: routeName
          }));
        };

        _this._isTabPress = false;
        return _this;
      }

      (0, _createClass2.default)(NavigationView, [{
        key: "render",
        value: function render() {
          var _this$props2 = this.props,
              descriptors = _this$props2.descriptors,
              navigation = _this$props2.navigation,
              screenProps = _this$props2.screenProps;
          var state = navigation.state;
          var route = state.routes[state.index];
          var descriptor = descriptors[route.key];
          var options = (0, _objectSpread2.default)({}, this.props.navigationConfig, descriptor.options);
          return React.createElement(TabView, (0, _extends2.default)({}, options, {
            getLabelText: this._getLabelText,
            getButtonComponent: this._getButtonComponent,
            getAccessibilityLabel: this._getAccessibilityLabel,
            getTestID: this._getTestID,
            renderIcon: this._renderIcon,
            renderScene: this._renderScene,
            onIndexChange: this._handleIndexChange,
            onTabPress: this._handleTabPress,
            onTabLongPress: this._handleTabLongPress,
            navigation: navigation,
            descriptors: descriptors,
            screenProps: screenProps
          }));
        }
      }]);
      return NavigationView;
    }(React.Component);

    return function (routes) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var router = (0, _core.TabRouter)(routes, config);
      return (0, _core.createNavigator)(NavigationView, router, config);
    };
  }
},457,[362,1,11,46,22,23,30,33,36,49,357]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _native = _$$_REQUIRE(_dependencyMap[9]);

  var _CrossFadeIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _withDimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var majorVersion = parseInt(_reactNative.Platform.Version, 10);
  var isIos = _reactNative.Platform.OS === 'ios';
  var isIOS11 = majorVersion >= 11 && isIos;
  var DEFAULT_MAX_TAB_ITEM_WIDTH = 125;

  var TouchableWithoutFeedbackWrapper = function (_React$Component) {
    (0, _inherits2.default)(TouchableWithoutFeedbackWrapper, _React$Component);

    function TouchableWithoutFeedbackWrapper() {
      (0, _classCallCheck2.default)(this, TouchableWithoutFeedbackWrapper);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(TouchableWithoutFeedbackWrapper).apply(this, arguments));
    }

    (0, _createClass2.default)(TouchableWithoutFeedbackWrapper, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            onPress = _this$props.onPress,
            onLongPress = _this$props.onLongPress,
            testID = _this$props.testID,
            accessibilityLabel = _this$props.accessibilityLabel,
            accessibilityRole = _this$props.accessibilityRole,
            accessibilityStates = _this$props.accessibilityStates,
            props = (0, _objectWithoutProperties2.default)(_this$props, ["onPress", "onLongPress", "testID", "accessibilityLabel", "accessibilityRole", "accessibilityStates"]);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: onPress,
          onLongPress: onLongPress,
          testID: testID,
          hitSlop: {
            left: 15,
            right: 15,
            top: 0,
            bottom: 5
          },
          accessibilityLabel: accessibilityLabel,
          accessibilityRole: accessibilityRole,
          accessibilityStates: accessibilityStates
        }, _react.default.createElement(_reactNative.View, props));
      }
    }]);
    return TouchableWithoutFeedbackWrapper;
  }(_react.default.Component);

  var TabBarBottom = function (_React$Component2) {
    (0, _inherits2.default)(TabBarBottom, _React$Component2);

    function TabBarBottom() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TabBarBottom);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        layout: {
          height: 0,
          width: 0
        },
        keyboard: false,
        visible: new _reactNative.Animated.Value(1)
      };

      _this._handleKeyboardShow = function () {
        return _this.setState({
          keyboard: true
        }, function () {
          return _reactNative.Animated.timing(_this.state.visible, {
            toValue: 0,
            duration: 150,
            useNativeDriver: true
          }).start();
        });
      };

      _this._handleKeyboardHide = function () {
        return _reactNative.Animated.timing(_this.state.visible, {
          toValue: 1,
          duration: 100,
          useNativeDriver: true
        }).start(function () {
          _this.setState({
            keyboard: false
          });
        });
      };

      _this._handleLayout = function (e) {
        var layout = _this.state.layout;
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            height = _e$nativeEvent$layout.height,
            width = _e$nativeEvent$layout.width;

        if (height === layout.height && width === layout.width) {
          return;
        }

        _this.setState({
          layout: {
            height: height,
            width: width
          }
        });
      };

      _this._renderLabel = function (_ref) {
        var route = _ref.route,
            focused = _ref.focused;
        var _this$props2 = _this.props,
            activeTintColor = _this$props2.activeTintColor,
            inactiveTintColor = _this$props2.inactiveTintColor,
            labelStyle = _this$props2.labelStyle,
            showLabel = _this$props2.showLabel,
            showIcon = _this$props2.showIcon,
            allowFontScaling = _this$props2.allowFontScaling;

        if (showLabel === false) {
          return null;
        }

        var label = _this.props.getLabelText({
          route: route
        });

        var tintColor = focused ? activeTintColor : inactiveTintColor;

        if (typeof label === 'string') {
          return _react.default.createElement(_reactNative.Animated.Text, {
            numberOfLines: 1,
            style: [styles.label, {
              color: tintColor
            }, showIcon && _this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, labelStyle],
            allowFontScaling: allowFontScaling
          }, label);
        }

        if (typeof label === 'function') {
          return label({
            route: route,
            focused: focused,
            tintColor: tintColor
          });
        }

        return label;
      };

      _this._renderIcon = function (_ref2) {
        var route = _ref2.route,
            focused = _ref2.focused;
        var _this$props3 = _this.props,
            navigation = _this$props3.navigation,
            activeTintColor = _this$props3.activeTintColor,
            inactiveTintColor = _this$props3.inactiveTintColor,
            renderIcon = _this$props3.renderIcon,
            showIcon = _this$props3.showIcon,
            showLabel = _this$props3.showLabel;

        if (showIcon === false) {
          return null;
        }

        var horizontal = _this._shouldUseHorizontalLabels();

        var activeOpacity = focused ? 1 : 0;
        var inactiveOpacity = focused ? 0 : 1;
        return _react.default.createElement(_CrossFadeIcon.default, {
          route: route,
          horizontal: horizontal,
          navigation: navigation,
          activeOpacity: activeOpacity,
          inactiveOpacity: inactiveOpacity,
          activeTintColor: activeTintColor,
          inactiveTintColor: inactiveTintColor,
          renderIcon: renderIcon,
          style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel]
        });
      };

      _this._shouldUseHorizontalLabels = function () {
        var routes = _this.props.navigation.state.routes;
        var _this$props4 = _this.props,
            isLandscape = _this$props4.isLandscape,
            dimensions = _this$props4.dimensions,
            adaptive = _this$props4.adaptive,
            tabStyle = _this$props4.tabStyle;

        if (!adaptive) {
          return false;
        }

        if (_reactNative.Platform.isPad) {
          var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;

          var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);

          if (flattenedStyle) {
            if (typeof flattenedStyle.width === 'number') {
              maxTabItemWidth = flattenedStyle.width;
            } else if (typeof flattenedStyle.maxWidth === 'number') {
              maxTabItemWidth = flattenedStyle.maxWidth;
            }
          }

          return routes.length * maxTabItemWidth <= dimensions.width;
        } else {
          return isLandscape;
        }
      };

      return _this;
    }

    (0, _createClass2.default)(TabBarBottom, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (_reactNative.Platform.OS === 'ios') {
          _reactNative.Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);

          _reactNative.Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);
        } else {
          _reactNative.Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);

          _reactNative.Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (_reactNative.Platform.OS === 'ios') {
          _reactNative.Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);

          _reactNative.Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);
        } else {
          _reactNative.Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);

          _reactNative.Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props5 = this.props,
            navigation = _this$props5.navigation,
            keyboardHidesTabBar = _this$props5.keyboardHidesTabBar,
            activeBackgroundColor = _this$props5.activeBackgroundColor,
            inactiveBackgroundColor = _this$props5.inactiveBackgroundColor,
            onTabPress = _this$props5.onTabPress,
            onTabLongPress = _this$props5.onTabLongPress,
            safeAreaInset = _this$props5.safeAreaInset,
            style = _this$props5.style,
            tabStyle = _this$props5.tabStyle;
        var routes = navigation.state.routes;
        var tabBarStyle = [styles.tabBar, this._shouldUseHorizontalLabels() && !_reactNative.Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.container, keyboardHidesTabBar ? {
            transform: [{
              translateY: this.state.visible.interpolate({
                inputRange: [0, 1],
                outputRange: [this.state.layout.height, 0]
              })
            }],
            position: this.state.keyboard ? 'absolute' : null
          } : null],
          pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',
          onLayout: this._handleLayout
        }, _react.default.createElement(_native.SafeAreaView, {
          style: tabBarStyle,
          forceInset: safeAreaInset
        }, routes.map(function (route, index) {
          var focused = index === navigation.state.index;
          var scene = {
            route: route,
            focused: focused
          };

          var accessibilityLabel = _this2.props.getAccessibilityLabel({
            route: route
          });

          var accessibilityRole = _this2.props.getAccessibilityRole({
            route: route
          });

          var accessibilityStates = _this2.props.getAccessibilityStates(scene);

          var testID = _this2.props.getTestID({
            route: route
          });

          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
          var ButtonComponent = _this2.props.getButtonComponent({
            route: route
          }) || TouchableWithoutFeedbackWrapper;
          return _react.default.createElement(ButtonComponent, {
            key: route.key,
            onPress: function onPress() {
              return onTabPress({
                route: route
              });
            },
            onLongPress: function onLongPress() {
              return onTabLongPress({
                route: route
              });
            },
            testID: testID,
            accessibilityLabel: accessibilityLabel,
            accessibilityRole: accessibilityRole,
            accessibilityStates: accessibilityStates,
            style: [styles.tab, {
              backgroundColor: backgroundColor
            }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle]
          }, _this2._renderIcon(scene), _this2._renderLabel(scene));
        })));
      }
    }]);
    return TabBarBottom;
  }(_react.default.Component);

  TabBarBottom.defaultProps = {
    keyboardHidesTabBar: false,
    activeTintColor: '#007AFF',
    activeBackgroundColor: 'transparent',
    inactiveTintColor: '#8E8E93',
    inactiveBackgroundColor: 'transparent',
    showLabel: true,
    showIcon: true,
    allowFontScaling: true,
    adaptive: isIOS11,
    safeAreaInset: {
      bottom: 'always',
      top: 'never'
    }
  };
  var DEFAULT_HEIGHT = 49;
  var COMPACT_HEIGHT = 29;

  var styles = _reactNative.StyleSheet.create({
    tabBar: {
      backgroundColor: '#fff',
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderTopColor: 'rgba(0, 0, 0, .3)',
      flexDirection: 'row'
    },
    container: {
      left: 0,
      right: 0,
      bottom: 0,
      elevation: 8
    },
    tabBarCompact: {
      height: COMPACT_HEIGHT
    },
    tabBarRegular: {
      height: DEFAULT_HEIGHT
    },
    tab: {
      flex: 1,
      alignItems: isIos ? 'center' : 'stretch'
    },
    tabPortrait: {
      justifyContent: 'flex-end',
      flexDirection: 'column'
    },
    tabLandscape: {
      justifyContent: 'center',
      flexDirection: 'row'
    },
    iconWithoutLabel: {
      flex: 1
    },
    iconWithLabel: {
      flex: 1
    },
    iconWithExplicitHeight: {
      height: _reactNative.Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT
    },
    label: {
      textAlign: 'center',
      backgroundColor: 'transparent'
    },
    labelBeneath: {
      fontSize: 11,
      marginBottom: 1.5
    },
    labelBeside: {
      fontSize: 12,
      marginLeft: 15
    }
  });

  var _default = (0, _withDimensions.default)(TabBarBottom);

  exports.default = _default;
},458,[1,9,22,23,30,33,36,49,2,355,459,460]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var TabBarIcon = function (_React$Component) {
    (0, _inherits2.default)(TabBarIcon, _React$Component);

    function TabBarIcon() {
      (0, _classCallCheck2.default)(this, TabBarIcon);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TabBarIcon).apply(this, arguments));
    }

    (0, _createClass2.default)(TabBarIcon, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            route = _this$props.route,
            activeOpacity = _this$props.activeOpacity,
            inactiveOpacity = _this$props.inactiveOpacity,
            activeTintColor = _this$props.activeTintColor,
            inactiveTintColor = _this$props.inactiveTintColor,
            renderIcon = _this$props.renderIcon,
            horizontal = _this$props.horizontal,
            style = _this$props.style;
        return _react.default.createElement(_reactNative.View, {
          style: style
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.icon, {
            opacity: activeOpacity
          }]
        }, renderIcon({
          route: route,
          focused: true,
          horizontal: horizontal,
          tintColor: activeTintColor
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.icon, {
            opacity: inactiveOpacity
          }]
        }, renderIcon({
          route: route,
          focused: false,
          horizontal: horizontal,
          tintColor: inactiveTintColor
        })));
      }
    }]);
    return TabBarIcon;
  }(_react.default.Component);

  exports.default = TabBarIcon;

  var styles = _reactNative.StyleSheet.create({
    icon: {
      position: 'absolute',
      alignSelf: 'center',
      alignItems: 'center',
      justifyContent: 'center',
      height: '100%',
      width: '100%',
      minWidth: 25
    }
  });
},459,[1,22,23,30,33,36,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = withDimensions;
  exports.isOrientationLandscape = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var isOrientationLandscape = function isOrientationLandscape(_ref) {
    var width = _ref.width,
        height = _ref.height;
    return width > height;
  };

  exports.isOrientationLandscape = isOrientationLandscape;

  function withDimensions(WrappedComponent) {
    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height;

    var EnhancedComponent = function (_React$Component) {
      (0, _inherits2.default)(EnhancedComponent, _React$Component);

      function EnhancedComponent() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, EnhancedComponent);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(EnhancedComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _this.state = {
          dimensions: {
            width: width,
            height: height
          },
          isLandscape: isOrientationLandscape({
            width: width,
            height: height
          })
        };

        _this.handleOrientationChange = function (_ref2) {
          var window = _ref2.window;
          var isLandscape = isOrientationLandscape(window);

          _this.setState({
            isLandscape: isLandscape
          });
        };

        return _this;
      }

      (0, _createClass2.default)(EnhancedComponent, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          _reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          _reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);
        }
      }, {
        key: "render",
        value: function render() {
          return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.state));
        }
      }]);
      return EnhancedComponent;
    }(React.Component);

    EnhancedComponent.displayName = "withDimensions(" + WrappedComponent.displayName + ")";
    return (0, _hoistNonReactStatics.default)(EnhancedComponent, WrappedComponent);
  }
},460,[362,1,11,22,23,30,33,36,49,2,418]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[11]);

  var FAR_FAR_AWAY = 3000;

  var ResourceSavingScene = function (_React$Component) {
    (0, _inherits2.default)(ResourceSavingScene, _React$Component);

    function ResourceSavingScene() {
      (0, _classCallCheck2.default)(this, ResourceSavingScene);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ResourceSavingScene).apply(this, arguments));
    }

    (0, _createClass2.default)(ResourceSavingScene, [{
      key: "render",
      value: function render() {
        if (_reactNativeScreens.screensEnabled && (0, _reactNativeScreens.screensEnabled)()) {
          var _this$props = this.props,
              _isVisible = _this$props.isVisible,
              _rest = (0, _objectWithoutProperties2.default)(_this$props, ["isVisible"]);

          return React.createElement(_reactNativeScreens.Screen, (0, _extends2.default)({
            active: _isVisible ? 1 : 0
          }, _rest));
        }

        var _this$props2 = this.props,
            isVisible = _this$props2.isVisible,
            children = _this$props2.children,
            style = _this$props2.style,
            rest = (0, _objectWithoutProperties2.default)(_this$props2, ["isVisible", "children", "style"]);
        return React.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, style, {
            opacity: isVisible ? 1 : 0
          }],
          collapsable: false,
          removeClippedSubviews: _reactNative.Platform.OS === 'ios' ? !isVisible : true,
          pointerEvents: isVisible ? 'auto' : 'none'
        }, rest), React.createElement(_reactNative.View, {
          style: isVisible ? styles.attached : styles.detached
        }, children));
      }
    }]);
    return ResourceSavingScene;
  }(React.Component);

  exports.default = ResourceSavingScene;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    attached: {
      flex: 1
    },
    detached: {
      flex: 1,
      top: FAR_FAR_AWAY
    }
  });
},461,[362,1,11,9,22,23,30,33,36,49,2,432]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _reactLifecyclesCompat = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNativeTabView = _$$_REQUIRE(_dependencyMap[13]);

  var _createTabNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _MaterialTopTabBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ResourceSavingScene = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var MaterialTabView = function (_React$PureComponent) {
    (0, _inherits2.default)(MaterialTabView, _React$PureComponent);

    function MaterialTabView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MaterialTabView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MaterialTabView)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        index: 0,
        isSwiping: false,
        loaded: [_this.props.navigation.state.index],
        transitioningFromIndex: null
      };

      _this._renderIcon = function (_ref) {
        var focused = _ref.focused,
            route = _ref.route,
            tintColor = _ref.tintColor;
        var descriptors = _this.props.descriptors;
        var descriptor = descriptors[route.key];
        var options = descriptor.options;

        if (options.tabBarIcon) {
          return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({
            tintColor: tintColor,
            focused: focused
          }) : options.tabBarIcon;
        }

        return null;
      };

      _this._renderTabBar = function (props) {
        var state = _this.props.navigation.state;
        var route = state.routes[state.index];
        var descriptors = _this.props.descriptors;
        var descriptor = descriptors[route.key];
        var options = descriptor.options;
        var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;
        var _this$props = _this.props,
            _this$props$tabBarCom = _this$props.tabBarComponent,
            TabBarComponent = _this$props$tabBarCom === undefined ? _MaterialTopTabBar.default : _this$props$tabBarCom,
            tabBarPosition = _this$props.tabBarPosition,
            tabBarOptions = _this$props.tabBarOptions;

        if (TabBarComponent === null || !tabBarVisible) {
          return null;
        }

        return React.createElement(TabBarComponent, (0, _extends2.default)({}, tabBarOptions, props, {
          tabBarPosition: tabBarPosition,
          screenProps: _this.props.screenProps,
          navigation: _this.props.navigation,
          getLabelText: _this.props.getLabelText,
          getAccessibilityLabel: _this.props.getAccessibilityLabel,
          getTestID: _this.props.getTestID,
          renderIcon: _this._renderIcon,
          onTabPress: _this.props.onTabPress,
          onTabLongPress: _this.props.onTabLongPress
        }));
      };

      _this._renderPanPager = function (props) {
        return React.createElement(_reactNativeTabView.PagerPan, props);
      };

      _this._handleAnimationEnd = function () {
        var lazy = _this.props.lazy;

        if (lazy) {
          _this.setState({
            transitioningFromIndex: null,
            isSwiping: false
          });
        }
      };

      _this._handleSwipeStart = function () {
        var _this$props2 = _this.props,
            navigation = _this$props2.navigation,
            lazy = _this$props2.lazy;

        if (lazy) {
          _this.setState({
            isSwiping: true,
            loaded: (0, _toConsumableArray2.default)(new Set([].concat((0, _toConsumableArray2.default)(_this.state.loaded), [Math.max(navigation.state.index - 1, 0), Math.min(navigation.state.index + 1, navigation.state.routes.length - 1)])))
          });
        }
      };

      _this._handleIndexChange = function (index) {
        var _this$props3 = _this.props,
            animationEnabled = _this$props3.animationEnabled,
            navigation = _this$props3.navigation,
            onIndexChange = _this$props3.onIndexChange,
            lazy = _this$props3.lazy;

        if (lazy && animationEnabled) {
          _this.setState({
            transitioningFromIndex: navigation.state.index || 0
          });
        }

        onIndexChange(index);
      };

      _this._mustBeVisible = function (_ref2) {
        var index = _ref2.index,
            focused = _ref2.focused;
        var _this$props4 = _this.props,
            animationEnabled = _this$props4.animationEnabled,
            navigation = _this$props4.navigation;
        var _this$state = _this.state,
            isSwiping = _this$state.isSwiping,
            transitioningFromIndex = _this$state.transitioningFromIndex;

        if (isSwiping) {
          var isSibling = navigation.state.index === index - 1 || navigation.state.index === index + 1;

          if (isSibling) {
            return true;
          }
        }

        if (animationEnabled && transitioningFromIndex === index) {
          return true;
        }

        return focused;
      };

      _this._renderScene = function (_ref3) {
        var route = _ref3.route;
        var _this$props5 = _this.props,
            renderScene = _this$props5.renderScene,
            descriptors = _this$props5.descriptors,
            lazy = _this$props5.lazy,
            optimizationsEnabled = _this$props5.optimizationsEnabled;

        if (lazy) {
          var loaded = _this.state.loaded;
          var routes = _this.props.navigation.state.routes;
          var index = routes.findIndex(function (_ref4) {
            var key = _ref4.key;
            return key === route.key;
          });
          var navigation = descriptors[route.key].navigation;

          var mustBeVisible = _this._mustBeVisible({
            index: index,
            focused: navigation.isFocused()
          });

          if (!loaded.includes(index) && !mustBeVisible) {
            return React.createElement(_reactNative.View, null);
          }

          if (optimizationsEnabled) {
            return React.createElement(_ResourceSavingScene.default, {
              isVisible: mustBeVisible
            }, renderScene({
              route: route
            }));
          }
        }

        return renderScene({
          route: route
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MaterialTabView, [{
      key: "render",
      value: function render() {
        var _this$props6 = this.props,
            navigation = _this$props6.navigation,
            animationEnabled = _this$props6.animationEnabled,
            renderScene = _this$props6.renderScene,
            onIndexChange = _this$props6.onIndexChange,
            rest = (0, _objectWithoutProperties2.default)(_this$props6, ["navigation", "animationEnabled", "renderScene", "onIndexChange"]);
        var renderPager = rest.renderPager;
        var state = this.props.navigation.state;
        var route = state.routes[state.index];
        var descriptors = this.props.descriptors;
        var descriptor = descriptors[route.key];
        var options = descriptor.options;
        var swipeEnabled = options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;

        if (typeof swipeEnabled === 'function') {
          swipeEnabled = swipeEnabled(state);
        }

        if (animationEnabled === false && swipeEnabled === false) {
          renderPager = this._renderPanPager;
        }

        return React.createElement(_reactNativeTabView.TabView, (0, _extends2.default)({}, rest, {
          navigationState: navigation.state,
          animationEnabled: animationEnabled,
          swipeEnabled: swipeEnabled,
          onAnimationEnd: this._handleAnimationEnd,
          onIndexChange: this._handleIndexChange,
          onSwipeStart: this._handleSwipeStart,
          renderPager: renderPager,
          renderTabBar: this._renderTabBar,
          renderScene: this._renderScene
        }));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var index = nextProps.navigation.state.index;

        if (prevState.index === index) {
          return null;
        }

        return {
          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat((0, _toConsumableArray2.default)(prevState.loaded), [index]),
          index: index
        };
      }
    }]);
    return MaterialTabView;
  }(React.PureComponent);

  MaterialTabView.defaultProps = {
    initialLayout: _reactNative.Platform.select({
      android: {
        width: 1,
        height: 0
      }
    }),
    animationEnabled: true,
    lazy: false,
    optimizationsEnabled: false
  };
  (0, _reactLifecyclesCompat.polyfill)(MaterialTabView);

  var _default = (0, _createTabNavigator.default)(MaterialTabView);

  exports.default = _default;
},462,[362,1,9,18,11,22,23,30,33,36,49,2,456,463,457,474,461]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TabView", {
    enumerable: true,
    get: function get() {
      return _TabView.default;
    }
  });
  Object.defineProperty(exports, "TabBar", {
    enumerable: true,
    get: function get() {
      return _TabBar.default;
    }
  });
  Object.defineProperty(exports, "PagerDefault", {
    enumerable: true,
    get: function get() {
      return _PagerDefault.default;
    }
  });
  Object.defineProperty(exports, "PagerPan", {
    enumerable: true,
    get: function get() {
      return _PagerPan.default;
    }
  });
  Object.defineProperty(exports, "PagerScroll", {
    enumerable: true,
    get: function get() {
      return _PagerScroll.default;
    }
  });
  Object.defineProperty(exports, "PagerAndroid", {
    enumerable: true,
    get: function get() {
      return _PagerAndroid.default;
    }
  });
  Object.defineProperty(exports, "PagerExperimental", {
    enumerable: true,
    get: function get() {
      return _PagerExperimental.default;
    }
  });
  Object.defineProperty(exports, "SceneMap", {
    enumerable: true,
    get: function get() {
      return _SceneMap.default;
    }
  });

  var _TabView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _TabBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _PagerDefault = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _PagerPan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PagerScroll = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _PagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PagerExperimental = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _SceneMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
},463,[1,464,465,468,471,470,469,472,473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _TabBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _PagerDefault = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _PropTypes = _$$_REQUIRE(_dependencyMap[14]);

  var TabView = function (_React$Component) {
    (0, _inherits2.default)(TabView, _React$Component);

    function TabView(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, TabView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TabView).call(this, _props));
      _this._mounted = false;

      _this._renderScene = function (props) {
        return _this.props.renderScene(props);
      };

      _this._handleLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            height = _e$nativeEvent$layout.height,
            width = _e$nativeEvent$layout.width;

        if (_this.state.layout.width === width && _this.state.layout.height === height) {
          return;
        }

        _this.state.panX.setValue(0);

        _this.state.offsetX.setValue(-_this.props.navigationState.index * width);

        _this.state.layoutXY.setValue({
          x: width || 0.001,
          y: height || 0.001
        });

        _this.setState({
          layout: {
            measured: true,
            height: height,
            width: width
          }
        });
      };

      _this._buildSceneRendererProps = function () {
        return {
          panX: _this.state.panX,
          offsetX: _this.state.offsetX,
          position: _this.state.position,
          layout: _this.state.layout,
          navigationState: _this.props.navigationState,
          jumpTo: _this._jumpTo,
          useNativeDriver: _this.props.useNativeDriver === true
        };
      };

      _this._jumpTo = function (key) {
        if (!_this._mounted) {
          return;
        }

        var _this$props = _this.props,
            canJumpToTab = _this$props.canJumpToTab,
            navigationState = _this$props.navigationState;
        var index = navigationState.routes.findIndex(function (route) {
          return route.key === key;
        });

        if (!canJumpToTab(navigationState.routes[index])) {
          return;
        }

        if (index !== navigationState.index) {
          _this.props.onIndexChange(index);
        }
      };

      var _navigationState = _this.props.navigationState;
      var layout = (0, _objectSpread2.default)({}, _this.props.initialLayout, {
        measured: false
      });
      var panX = new _reactNative.Animated.Value(0);
      var offsetX = new _reactNative.Animated.Value(-_navigationState.index * layout.width);
      var layoutXY = new _reactNative.Animated.ValueXY({
        x: layout.width || 0.001,
        y: layout.height || 0.001
      });

      var position = _reactNative.Animated.multiply(_reactNative.Animated.divide(_reactNative.Animated.add(panX, offsetX), layoutXY.x), -1);

      _this.state = {
        layout: layout,
        layoutXY: layoutXY,
        panX: panX,
        offsetX: offsetX,
        position: position,
        renderUnfocusedScenes: false
      };
      return _this;
    }

    (0, _createClass2.default)(TabView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this._mounted = true;
        setTimeout(function () {
          return _this2.setState({
            renderUnfocusedScenes: true
          });
        }, 0);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._mounted = false;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props2 = this.props,
            navigationState = _this$props2.navigationState,
            onIndexChange = _this$props2.onIndexChange,
            initialLayout = _this$props2.initialLayout,
            renderScene = _this$props2.renderScene,
            renderPager = _this$props2.renderPager,
            renderTabBar = _this$props2.renderTabBar,
            tabBarPosition = _this$props2.tabBarPosition,
            rest = (0, _objectWithoutProperties2.default)(_this$props2, ["navigationState", "onIndexChange", "initialLayout", "renderScene", "renderPager", "renderTabBar", "tabBarPosition"]);

        var props = this._buildSceneRendererProps();

        return React.createElement(_reactNative.View, {
          collapsable: false,
          style: [styles.container, this.props.style]
        }, tabBarPosition === 'top' && renderTabBar(props), React.createElement(_reactNative.View, {
          onLayout: this._handleLayout,
          style: styles.pager
        }, renderPager((0, _objectSpread2.default)({}, props, rest, {
          panX: this.state.panX,
          offsetX: this.state.offsetX,
          children: navigationState.routes.map(function (route, index) {
            var isFocused = _this3.props.navigationState.index === index;
            var scene;

            if (isFocused || _this3.state.renderUnfocusedScenes) {
              scene = _this3._renderScene((0, _objectSpread2.default)({}, props, {
                route: route
              }));
            } else {
              scene = React.createElement(_reactNative.View, null);
            }

            if (React.isValidElement(scene)) {
              scene = React.cloneElement(scene, {
                key: route.key
              });
            }

            return scene;
          })
        }))), tabBarPosition === 'bottom' && renderTabBar(props));
      }
    }]);
    return TabView;
  }(React.Component);

  exports.default = TabView;
  TabView.propTypes = {
    navigationState: _PropTypes.NavigationStatePropType.isRequired,
    onIndexChange: _propTypes.default.func.isRequired,
    initialLayout: _propTypes.default.shape({
      height: _propTypes.default.number.isRequired,
      width: _propTypes.default.number.isRequired
    }),
    canJumpToTab: _propTypes.default.func.isRequired,
    renderPager: _propTypes.default.func.isRequired,
    renderScene: _propTypes.default.func.isRequired,
    renderTabBar: _propTypes.default.func,
    tabBarPosition: _propTypes.default.oneOf(['top', 'bottom'])
  };
  TabView.defaultProps = {
    canJumpToTab: function canJumpToTab() {
      return true;
    },
    tabBarPosition: 'top',
    renderTabBar: function renderTabBar(props) {
      return React.createElement(_TabBar.default, props);
    },
    renderPager: function renderPager(props) {
      return React.createElement(_PagerDefault.default, props);
    },
    getTestID: function getTestID(_ref) {
      var route = _ref.route;
      return typeof route.testID === 'string' ? route.testID : undefined;
    },
    initialLayout: {
      height: 0,
      width: 0
    },
    useNativeDriver: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    pager: {
      flex: 1
    }
  });
},464,[362,1,9,46,22,23,30,33,36,49,61,2,465,468,467]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _PropTypes = _$$_REQUIRE(_dependencyMap[13]);

  var useNativeDriver = Boolean(_reactNative.NativeModules.NativeAnimatedModule);

  var TabBar = function (_React$Component) {
    (0, _inherits2.default)(TabBar, _React$Component);

    function TabBar(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, TabBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TabBar).call(this, _props));
      _this._isIntial = true;
      _this._isManualScroll = false;
      _this._isMomentumScroll = false;

      _this._startTrackingPosition = function () {
        _this._offsetXListener = _this.props.offsetX.addListener(function (_ref) {
          var value = _ref.value;
          _this._lastOffsetX = value;

          _this._handlePosition();
        });
        _this._panXListener = _this.props.panX.addListener(function (_ref2) {
          var value = _ref2.value;
          _this._lastPanX = value;

          _this._handlePosition();
        });
      };

      _this._stopTrackingPosition = function () {
        _this.props.offsetX.removeListener(_this._offsetXListener);

        _this.props.panX.removeListener(_this._panXListener);
      };

      _this._handlePosition = function () {
        var _this$props = _this.props,
            navigationState = _this$props.navigationState,
            layout = _this$props.layout;

        if (layout.width === 0) {
          return;
        }

        var panX = typeof _this._lastPanX === 'number' ? _this._lastPanX : 0;
        var offsetX = typeof _this._lastOffsetX === 'number' ? _this._lastOffsetX : -navigationState.index * layout.width;
        var value = (panX + offsetX) / -(layout.width || 0.001);

        _this._adjustScroll(value);
      };

      _this._renderLabel = function (scene) {
        if (typeof _this.props.renderLabel !== 'undefined') {
          return _this.props.renderLabel(scene);
        }

        var label = _this.props.getLabelText(scene);

        if (typeof label !== 'string') {
          return null;
        }

        return React.createElement(_reactNative.Animated.Text, {
          style: [styles.tabLabel, _this.props.labelStyle]
        }, label);
      };

      _this._renderIndicator = function (props) {
        if (typeof _this.props.renderIndicator !== 'undefined') {
          return _this.props.renderIndicator(props);
        }

        var width = props.width,
            position = props.position,
            navigationState = props.navigationState;

        var translateX = _reactNative.Animated.multiply(_reactNative.Animated.multiply(position.interpolate({
          inputRange: [-1, navigationState.routes.length],
          outputRange: [-1, navigationState.routes.length],
          extrapolate: 'clamp'
        }), width), _reactNative.I18nManager.isRTL ? -1 : 1);

        return React.createElement(_reactNative.Animated.View, {
          style: [styles.indicator, {
            width: width,
            transform: [{
              translateX: translateX
            }]
          }, _this.props.indicatorStyle]
        });
      };

      _this._getTabWidth = function (props) {
        var layout = props.layout,
            navigationState = props.navigationState,
            tabStyle = props.tabStyle;

        var flattened = _reactNative.StyleSheet.flatten(tabStyle);

        if (flattened) {
          switch (typeof flattened.width) {
            case 'number':
              return flattened.width;

            case 'string':
              if (flattened.width.endsWith('%')) {
                var width = parseFloat(flattened.width);

                if (Number.isFinite(width)) {
                  return layout.width * (width / 100);
                }
              }

          }
        }

        if (props.scrollEnabled) {
          return layout.width / 5 * 2;
        }

        return layout.width / navigationState.routes.length;
      };

      _this._handleTabPress = function (_ref3) {
        var route = _ref3.route;
        _this._pendingIndex = _this.props.navigationState.routes.indexOf(route);

        if (_this.props.onTabPress) {
          _this.props.onTabPress({
            route: route
          });
        }

        _this.props.jumpTo(route.key);
      };

      _this._handleTabLongPress = function (_ref4) {
        var route = _ref4.route;

        if (_this.props.onTabLongPress) {
          _this.props.onTabLongPress({
            route: route
          });
        }
      };

      _this._normalizeScrollValue = function (props, value) {
        var layout = props.layout,
            navigationState = props.navigationState;

        var tabWidth = _this._getTabWidth(props);

        var tabBarWidth = Math.max(tabWidth * navigationState.routes.length, layout.width);
        var maxDistance = tabBarWidth - layout.width;
        return Math.max(Math.min(value, maxDistance), 0);
      };

      _this._getScrollAmount = function (props, i) {
        var layout = props.layout;

        var tabWidth = _this._getTabWidth(props);

        var centerDistance = tabWidth * (i + 0.5);
        var scrollAmount = centerDistance - layout.width / 2;
        return _this._normalizeScrollValue(props, scrollAmount);
      };

      _this._adjustScroll = function (value) {
        if (_this.props.scrollEnabled) {
          global.cancelAnimationFrame(_this._scrollResetCallback);
          _this._scrollView && _this._scrollView.scrollTo({
            x: _this._normalizeScrollValue(_this.props, _this._getScrollAmount(_this.props, value)),
            animated: !_this._isIntial
          });
          _this._isIntial = false;
        }
      };

      _this._resetScroll = function (value) {
        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (_this.props.scrollEnabled) {
          global.cancelAnimationFrame(_this._scrollResetCallback);
          _this._scrollResetCallback = global.requestAnimationFrame(function () {
            _this._scrollView && _this._scrollView.scrollTo({
              x: _this._getScrollAmount(_this.props, value),
              animated: animated
            });
          });
        }
      };

      _this._handleBeginDrag = function () {
        _this._isManualScroll = true;
        _this._isMomentumScroll = false;
      };

      _this._handleEndDrag = function () {
        global.requestAnimationFrame(function () {
          if (_this._isMomentumScroll) {
            return;
          }

          _this._isManualScroll = false;
        });
      };

      _this._handleMomentumScrollBegin = function () {
        _this._isMomentumScroll = true;
      };

      _this._handleMomentumScrollEnd = function () {
        _this._isMomentumScroll = false;
        _this._isManualScroll = false;
      };

      var initialVisibility = 1;

      if (_this.props.scrollEnabled) {
        var tabWidth = _this._getTabWidth(_this.props);

        if (!tabWidth) {
          initialVisibility = 0;
        }
      }

      var initialOffset = _this.props.scrollEnabled && _this.props.layout.width ? {
        x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),
        y: 0
      } : undefined;
      _this.state = {
        visibility: new _reactNative.Animated.Value(initialVisibility),
        scrollAmount: new _reactNative.Animated.Value(0),
        initialOffset: initialOffset
      };
      return _this;
    }

    (0, _createClass2.default)(TabBar, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.props.scrollEnabled && this._startTrackingPosition();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var prevTabWidth = this._getTabWidth(prevProps);

        var currentTabWidth = this._getTabWidth(this.props);

        var pendingIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this.props.navigationState.index;
        this._pendingIndex = null;

        if (prevTabWidth !== currentTabWidth && currentTabWidth) {
          this.state.visibility.setValue(1);
        }

        if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {
          this._resetScroll(this.props.navigationState.index, false);
        } else if (prevProps.navigationState.index !== pendingIndex) {
          this._resetScroll(this.props.navigationState.index);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._stopTrackingPosition();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            position = _this$props2.position,
            navigationState = _this$props2.navigationState,
            scrollEnabled = _this$props2.scrollEnabled,
            bounces = _this$props2.bounces;
        var routes = navigationState.routes;

        var tabWidth = this._getTabWidth(this.props);

        var tabBarWidth = tabWidth * routes.length;
        var inputRange = [-1].concat((0, _toConsumableArray2.default)(routes.map(function (x, i) {
          return i;
        })));

        var translateX = _reactNative.Animated.multiply(this.state.scrollAmount, -1);

        return React.createElement(_reactNative.Animated.View, {
          style: [styles.tabBar, this.props.style]
        }, React.createElement(_reactNative.Animated.View, {
          pointerEvents: "none",
          style: [styles.indicatorContainer, scrollEnabled ? {
            width: tabBarWidth,
            transform: [{
              translateX: translateX
            }]
          } : null]
        }, this._renderIndicator((0, _objectSpread2.default)({}, this.props, {
          width: tabWidth
        }))), React.createElement(_reactNative.View, {
          style: styles.scroll
        }, React.createElement(_reactNative.Animated.ScrollView, {
          horizontal: true,
          keyboardShouldPersistTaps: "handled",
          scrollEnabled: scrollEnabled,
          bounces: bounces,
          alwaysBounceHorizontal: false,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          automaticallyAdjustContentInsets: false,
          overScrollMode: "never",
          contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],
          scrollEventThrottle: 1,
          onScroll: _reactNative.Animated.event([{
            nativeEvent: {
              contentOffset: {
                x: this.state.scrollAmount
              }
            }
          }], {
            useNativeDriver: useNativeDriver
          }),
          onScrollBeginDrag: this._handleBeginDrag,
          onScrollEndDrag: this._handleEndDrag,
          onMomentumScrollBegin: this._handleMomentumScrollBegin,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          contentOffset: this.state.initialOffset,
          ref: function ref(el) {
            return _this2._scrollView = el && el.getNode();
          }
        }, routes.map(function (route, i) {
          var outputRange = inputRange.map(function (inputIndex) {
            return inputIndex === i ? 1 : 0.7;
          });

          var opacity = _reactNative.Animated.multiply(_this2.state.visibility, position.interpolate({
            inputRange: inputRange,
            outputRange: outputRange
          }));

          var label = _this2._renderLabel({
            route: route
          });

          var icon = _this2.props.renderIcon ? _this2.props.renderIcon({
            route: route
          }) : null;
          var badge = _this2.props.renderBadge ? _this2.props.renderBadge({
            route: route
          }) : null;
          var tabStyle = {};
          tabStyle.opacity = opacity;

          if (icon) {
            if (label) {
              tabStyle.paddingTop = 8;
            } else {
              tabStyle.padding = 12;
            }
          }

          var passedTabStyle = _reactNative.StyleSheet.flatten(_this2.props.tabStyle);

          var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;
          var tabContainerStyle = {};

          if (isWidthSet) {
            tabStyle.width = tabWidth;
          }

          if (passedTabStyle && typeof passedTabStyle.flex === 'number') {
            tabContainerStyle.flex = passedTabStyle.flex;
          } else if (!isWidthSet) {
            tabContainerStyle.flex = 1;
          }

          var accessibilityLabel = _this2.props.getAccessibilityLabel({
            route: route
          });

          accessibilityLabel = typeof accessibilityLabel !== 'undefined' ? accessibilityLabel : _this2.props.getLabelText({
            route: route
          });
          var isFocused = i === navigationState.index;
          return React.createElement(_TouchableItem.default, {
            borderless: true,
            key: route.key,
            testID: _this2.props.getTestID({
              route: route
            }),
            accessible: _this2.props.getAccessible({
              route: route
            }),
            accessibilityLabel: accessibilityLabel,
            accessibilityTraits: isFocused ? ['button', 'selected'] : 'button',
            accessibilityComponentType: "button",
            accessibilityRole: "button",
            accessibilityStates: isFocused ? ['selected'] : [],
            pressColor: _this2.props.pressColor,
            pressOpacity: _this2.props.pressOpacity,
            delayPressIn: 0,
            onPress: function onPress() {
              return _this2._handleTabPress({
                route: route
              });
            },
            onLongPress: function onLongPress() {
              return _this2._handleTabLongPress({
                route: route
              });
            },
            style: tabContainerStyle
          }, React.createElement(_reactNative.View, {
            pointerEvents: "none",
            style: styles.container
          }, React.createElement(_reactNative.Animated.View, {
            style: [styles.tabItem, tabStyle, passedTabStyle, styles.container]
          }, icon, label), badge ? React.createElement(_reactNative.Animated.View, {
            style: [styles.badge, {
              opacity: _this2.state.visibility
            }]
          }, badge) : null));
        }))));
      }
    }]);
    return TabBar;
  }(React.Component);

  exports.default = TabBar;
  TabBar.propTypes = (0, _objectSpread2.default)({}, _PropTypes.SceneRendererPropType, {
    scrollEnabled: _propTypes.default.bool,
    bounces: _propTypes.default.bool,
    pressColor: _TouchableItem.default.propTypes.pressColor,
    pressOpacity: _TouchableItem.default.propTypes.pressOpacity,
    getLabelText: _propTypes.default.func,
    getAccessible: _propTypes.default.func,
    getAccessibilityLabel: _propTypes.default.func,
    getTestID: _propTypes.default.func,
    renderIcon: _propTypes.default.func,
    renderLabel: _propTypes.default.func,
    renderIndicator: _propTypes.default.func,
    onTabPress: _propTypes.default.func,
    onTabLongPress: _propTypes.default.func,
    labelStyle: _propTypes.default.any,
    style: _propTypes.default.any
  });
  TabBar.defaultProps = {
    getLabelText: function getLabelText(_ref5) {
      var route = _ref5.route;
      return typeof route.title === 'string' ? route.title.toUpperCase() : route.title;
    },
    getAccessible: function getAccessible(_ref6) {
      var route = _ref6.route;
      return typeof route.accessible !== 'undefined' ? route.accessible : true;
    },
    getAccessibilityLabel: function getAccessibilityLabel(_ref7) {
      var route = _ref7.route;
      return route.accessibilityLabel;
    },
    getTestID: function getTestID(_ref8) {
      var route = _ref8.route;
      return route.testID;
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    scroll: {
      overflow: _reactNative.Platform.OS === 'web' ? 'auto' : 'scroll'
    },
    tabBar: {
      backgroundColor: '#2196f3',
      elevation: 4,
      shadowColor: 'black',
      shadowOpacity: 0.1,
      shadowRadius: _reactNative.StyleSheet.hairlineWidth,
      shadowOffset: {
        height: _reactNative.StyleSheet.hairlineWidth
      },
      zIndex: _reactNative.Platform.OS === 'android' ? 0 : 1
    },
    tabContent: {
      flexDirection: 'row',
      flexWrap: 'nowrap'
    },
    tabLabel: {
      backgroundColor: 'transparent',
      color: 'white',
      margin: 8
    },
    tabItem: {
      flex: 1,
      padding: 8,
      alignItems: 'center',
      justifyContent: 'center'
    },
    badge: {
      position: 'absolute',
      top: 0,
      right: 0
    },
    indicatorContainer: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    indicator: {
      backgroundColor: '#ffeb3b',
      position: 'absolute',
      left: 0,
      bottom: 0,
      right: 0,
      height: 2
    }
  });
},465,[362,1,46,18,22,23,30,33,36,49,61,2,466,467]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var LOLLIPOP = 21;

  var TouchableItem = function (_React$Component) {
    (0, _inherits2.default)(TouchableItem, _React$Component);

    function TouchableItem() {
      (0, _classCallCheck2.default)(this, TouchableItem);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableItem).apply(this, arguments));
    }

    (0, _createClass2.default)(TouchableItem, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            pressOpacity = _this$props.pressOpacity,
            pressColor = _this$props.pressColor,
            borderless = _this$props.borderless,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["style", "pressOpacity", "pressColor", "borderless"]);

        if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= LOLLIPOP) {
          return React.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, rest, {
            background: _reactNative.TouchableNativeFeedback.Ripple(pressColor, borderless)
          }), React.createElement(_reactNative.View, {
            style: style
          }, React.Children.only(this.props.children)));
        } else {
          return React.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, rest, {
            rejectResponderTermination: true,
            style: style,
            activeOpacity: pressOpacity
          }), this.props.children);
        }
      }
    }]);
    return TouchableItem;
  }(React.Component);

  exports.default = TouchableItem;
  TouchableItem.propTypes = {
    onPress: _propTypes.default.func.isRequired,
    delayPressIn: _propTypes.default.number,
    borderless: _propTypes.default.bool,
    pressColor: _propTypes.default.string,
    pressOpacity: _propTypes.default.number,
    children: _propTypes.default.node.isRequired
  };
  TouchableItem.defaultProps = {
    pressColor: 'rgba(255, 255, 255, .4)'
  };
},466,[362,1,11,9,22,23,30,33,36,49,61,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PagerRendererPropType = exports.SceneRendererPropType = exports.NavigationStatePropType = exports.NavigationRoutePropType = undefined;

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var NavigationRoutePropType = _propTypes.default.shape({
    title: _propTypes.default.string,
    key: _propTypes.default.string.isRequired
  });

  exports.NavigationRoutePropType = NavigationRoutePropType;

  var NavigationStatePropType = _propTypes.default.shape({
    routes: _propTypes.default.arrayOf(NavigationRoutePropType).isRequired,
    index: _propTypes.default.number.isRequired
  });

  exports.NavigationStatePropType = NavigationStatePropType;
  var SceneRendererPropType = {
    panX: _propTypes.default.object.isRequired,
    offsetX: _propTypes.default.object.isRequired,
    layout: _propTypes.default.shape({
      measured: _propTypes.default.bool.isRequired,
      height: _propTypes.default.number.isRequired,
      width: _propTypes.default.number.isRequired
    }).isRequired,
    navigationState: NavigationStatePropType.isRequired,
    position: _propTypes.default.object.isRequired,
    jumpTo: _propTypes.default.func.isRequired,
    useNativeDriver: _propTypes.default.bool
  };
  exports.SceneRendererPropType = SceneRendererPropType;
  var PagerRendererPropType = {
    layout: _propTypes.default.shape({
      measured: _propTypes.default.bool.isRequired,
      height: _propTypes.default.number.isRequired,
      width: _propTypes.default.number.isRequired
    }).isRequired,
    navigationState: NavigationStatePropType.isRequired,
    panX: _propTypes.default.instanceOf(_reactNative.Animated.Value).isRequired,
    offsetX: _propTypes.default.instanceOf(_reactNative.Animated.Value).isRequired,
    canJumpToTab: _propTypes.default.func.isRequired,
    jumpTo: _propTypes.default.func.isRequired,
    animationEnabled: _propTypes.default.bool,
    swipeEnabled: _propTypes.default.bool,
    useNativeDriver: _propTypes.default.bool,
    onSwipeStart: _propTypes.default.func,
    onSwipeEnd: _propTypes.default.func,
    onAnimationEnd: _propTypes.default.func,
    children: _propTypes.default.node.isRequired
  };
  exports.PagerRendererPropType = PagerRendererPropType;
},467,[1,61,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var Pager;

  switch (_reactNative.Platform.OS) {
    case 'android':
      Pager = _$$_REQUIRE(_dependencyMap[1]).default;
      break;

    case 'ios':
      Pager = _$$_REQUIRE(_dependencyMap[2]).default;
      break;

    default:
      Pager = _$$_REQUIRE(_dependencyMap[3]).default;
      break;
  }

  var _default = Pager;
  exports.default = _default;
},468,[2,469,470,471]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _PropTypes = _$$_REQUIRE(_dependencyMap[9]);

  var PagerAndroid = function (_React$Component) {
    (0, _inherits2.default)(PagerAndroid, _React$Component);

    function PagerAndroid(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PagerAndroid);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PagerAndroid).call(this, props));
      _this._isIdle = true;
      _this._currentIndex = 0;

      _this._getPageIndex = function (index) {
        return _reactNative.I18nManager.isRTL ? _this.props.navigationState.routes.length - (index + 1) : index;
      };

      _this._setPage = function (index) {
        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var pager = _this._viewPager;

        if (pager) {
          var page = _this._getPageIndex(index);

          if (_this.props.animationEnabled === false || animated === false) {
            pager.setPageWithoutAnimation(page);
          } else {
            pager.setPage(page);
          }
        }
      };

      _this._handlePageChange = function (index, animated) {
        if (_this._isIdle && _this._currentIndex !== index) {
          _this._setPage(index, animated);

          _this._currentIndex = index;
        }
      };

      _this._handlePageScroll = function (e) {
        _this.props.offsetX.setValue(_this._getPageIndex(e.nativeEvent.position) * _this.props.layout.width * -1);

        _this.props.panX.setValue(e.nativeEvent.offset * _this.props.layout.width * (_reactNative.I18nManager.isRTL ? 1 : -1));
      };

      _this._handlePageScrollStateChanged = function (e) {
        _this._isIdle = typeof e !== 'string' && e.nativeEvent ? e.nativeEvent.pageScrollState === 'idle' : e === 'idle';
        var nextIndex = _this._currentIndex;
        var nextRoute = _this.props.navigationState.routes[nextIndex];

        if (_this.props.canJumpToTab({
          route: nextRoute
        })) {
          _this.props.jumpTo(nextRoute.key);
        } else {
          _this._setPage(_this.props.navigationState.index);

          _this._currentIndex = _this.props.navigationState.index;
        }

        switch (e) {
          case 'dragging':
            _this.props.onSwipeStart && _this.props.onSwipeStart();
            break;

          case 'settling':
            _this.props.onSwipeEnd && _this.props.onSwipeEnd();
            break;

          case 'idle':
            _this.props.onAnimationEnd && _this.props.onAnimationEnd();
            break;
        }
      };

      _this._handlePageSelected = function (e) {
        var index = _this._getPageIndex(e.nativeEvent.position);

        _this._currentIndex = index;
      };

      _this._currentIndex = _this.props.navigationState.index;
      return _this;
    }

    (0, _createClass2.default)(PagerAndroid, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {
          this._handlePageChange(this.props.navigationState.index, false);
        } else if (prevProps.navigationState.index !== this.props.navigationState.index) {
          this._handlePageChange(this.props.navigationState.index);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            navigationState = _this$props.navigationState,
            swipeEnabled = _this$props.swipeEnabled,
            keyboardDismissMode = _this$props.keyboardDismissMode;
        var children = _reactNative.I18nManager.isRTL ? React.Children.toArray(this.props.children).reverse() : React.Children.toArray(this.props.children);
        var content = children.map(function (child, i) {
          var route = navigationState.routes[i];
          var focused = i === navigationState.index;
          return React.createElement(_reactNative.View, {
            key: route.key,
            testID: _this2.props.getTestID({
              route: route
            }),
            accessibilityElementsHidden: !focused,
            importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
            style: styles.page
          }, child);
        });

        var initialPage = this._getPageIndex(navigationState.index);

        return React.createElement(_reactNative.ViewPagerAndroid, {
          key: navigationState.routes.length,
          keyboardDismissMode: keyboardDismissMode,
          initialPage: initialPage,
          scrollEnabled: swipeEnabled !== false,
          onPageScroll: this._handlePageScroll,
          onPageScrollStateChanged: this._handlePageScrollStateChanged,
          onPageSelected: this._handlePageSelected,
          style: styles.container,
          ref: function ref(el) {
            return _this2._viewPager = el;
          }
        }, content);
      }
    }]);
    return PagerAndroid;
  }(React.Component);

  exports.default = PagerAndroid;
  PagerAndroid.propTypes = _PropTypes.PagerRendererPropType;
  PagerAndroid.defaultProps = {
    canJumpToTab: function canJumpToTab() {
      return true;
    },
    keyboardDismissMode: 'on-drag'
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexGrow: 1
    },
    page: {
      overflow: 'hidden'
    }
  });
},469,[362,1,22,23,30,33,36,49,2,467]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _PropTypes = _$$_REQUIRE(_dependencyMap[11]);

  var PagerScroll = function (_React$Component) {
    (0, _inherits2.default)(PagerScroll, _React$Component);

    function PagerScroll(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PagerScroll);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PagerScroll).call(this, props));
      _this._isIdle = true;
      _this._isInitial = true;

      _this._setInitialPage = function () {
        if (_this.props.layout.width) {
          _this._isInitial = true;

          _this._scrollTo(_this.props.navigationState.index * _this.props.layout.width, false);
        }

        setTimeout(function () {
          _this._isInitial = false;
        }, 50);
      };

      _this._scrollTo = function (x) {
        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (_this._isIdle && _this._scrollView) {
          _this._scrollView.scrollTo({
            x: x,
            animated: animated && _this.props.animationEnabled !== false
          });
        }
      };

      _this._handleMomentumScrollEnd = function (e) {
        var nextIndex = Math.round(e.nativeEvent.contentOffset.x / _this.props.layout.width);
        var nextRoute = _this.props.navigationState.routes[nextIndex];

        if (_this.props.canJumpToTab({
          route: nextRoute
        })) {
          _this.props.jumpTo(nextRoute.key);

          _this.props.onAnimationEnd && _this.props.onAnimationEnd();
        } else {
          global.requestAnimationFrame(function () {
            _this._scrollTo(_this.props.navigationState.index * _this.props.layout.width);
          });
        }
      };

      _this._handleScroll = function (e) {
        if (_this._isInitial || e.nativeEvent.contentSize.width === 0) {
          return;
        }

        var _this$props = _this.props,
            navigationState = _this$props.navigationState,
            layout = _this$props.layout;
        var offset = navigationState.index * layout.width;

        _this.props.offsetX.setValue(-offset);

        _this.props.panX.setValue(offset - e.nativeEvent.contentOffset.x);

        global.cancelAnimationFrame(_this._idleCallback);
        _this._isIdle = false;
        _this._idleCallback = global.requestAnimationFrame(function () {
          _this._isIdle = true;
        });
      };

      var _this$props2 = _this.props,
          _navigationState = _this$props2.navigationState,
          _layout = _this$props2.layout;
      _this.state = {
        initialOffset: {
          x: _navigationState.index * _layout.width,
          y: 0
        }
      };
      return _this;
    }

    (0, _createClass2.default)(PagerScroll, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._setInitialPage();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var amount = this.props.navigationState.index * this.props.layout.width;

        if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {
          this._scrollTo(amount, false);
        } else if (prevProps.navigationState.index !== this.props.navigationState.index) {
          this._scrollTo(amount);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props3 = this.props,
            children = _this$props3.children,
            layout = _this$props3.layout,
            navigationState = _this$props3.navigationState,
            onSwipeStart = _this$props3.onSwipeStart,
            onSwipeEnd = _this$props3.onSwipeEnd,
            bounces = _this$props3.bounces;
        return React.createElement(_reactNative.ScrollView, {
          horizontal: true,
          pagingEnabled: true,
          directionalLockEnabled: true,
          keyboardDismissMode: "on-drag",
          keyboardShouldPersistTaps: "always",
          overScrollMode: "never",
          scrollToOverflowEnabled: true,
          scrollEnabled: this.props.swipeEnabled,
          automaticallyAdjustContentInsets: false,
          bounces: bounces,
          alwaysBounceHorizontal: bounces,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          scrollEventThrottle: 1,
          onScroll: this._handleScroll,
          onScrollBeginDrag: onSwipeStart,
          onScrollEndDrag: onSwipeEnd,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          contentOffset: this.state.initialOffset,
          style: styles.container,
          contentContainerStyle: layout.width ? null : styles.container,
          ref: function ref(el) {
            return _this2._scrollView = el;
          }
        }, React.Children.map(children, function (child, i) {
          var route = navigationState.routes[i];
          var focused = i === navigationState.index;
          return React.createElement(_reactNative.View, {
            key: route.key,
            testID: _this2.props.getTestID({
              route: route
            }),
            accessibilityElementsHidden: !focused,
            importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
            style: layout.width ? {
              width: layout.width,
              overflow: 'hidden'
            } : focused ? styles.page : null
          }, focused || layout.width ? child : null);
        }));
      }
    }]);
    return PagerScroll;
  }(React.Component);

  exports.default = PagerScroll;
  PagerScroll.propTypes = (0, _objectSpread2.default)({}, _PropTypes.PagerRendererPropType, {
    bounces: _propTypes.default.bool.isRequired
  });
  PagerScroll.defaultProps = {
    canJumpToTab: function canJumpToTab() {
      return true;
    },
    bounces: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    page: {
      flex: 1,
      overflow: 'hidden'
    }
  });
},470,[362,1,46,22,23,30,33,36,49,61,2,467]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _PropTypes = _$$_REQUIRE(_dependencyMap[13]);

  var DEAD_ZONE = 12;
  var DefaultTransitionSpec = {
    timing: _reactNative.Animated.spring,
    tension: 300,
    friction: 35
  };

  var PagerPan = function (_React$Component) {
    (0, _inherits2.default)(PagerPan, _React$Component);

    function PagerPan() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PagerPan);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PagerPan)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._currentIndex = _this.props.navigationState.index;

      _this._isMovingHorizontally = function (evt, gestureState) {
        return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);
      };

      _this._canMoveScreen = function (evt, gestureState) {
        if (_this.props.swipeEnabled === false) {
          return false;
        }

        var routes = _this.props.navigationState.routes;
        return _this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && _this._currentIndex > 0 || gestureState.dx <= -12 && _this._currentIndex < routes.length - 1);
      };

      _this._startGesture = function () {
        _this.props.onSwipeStart && _this.props.onSwipeStart();

        _this.props.panX.stopAnimation();
      };

      _this._respondToGesture = function (evt, gestureState) {
        var _this$props$navigatio = _this.props.navigationState,
            routes = _this$props$navigatio.routes,
            index = _this$props$navigatio.index;

        if (gestureState.dx > 0 && index <= 0 || gestureState.dx < 0 && index >= routes.length - 1) {
          return;
        }

        _this.props.panX.setValue(gestureState.dx);
      };

      _this._finishGesture = function (evt, gestureState) {
        var _this$props = _this.props,
            navigationState = _this$props.navigationState,
            layout = _this$props.layout,
            _this$props$swipeDist = _this$props.swipeDistanceThreshold,
            swipeDistanceThreshold = _this$props$swipeDist === undefined ? layout.width / 1.75 : _this$props$swipeDist;
        var _this$props$swipeVelo = _this.props.swipeVelocityThreshold,
            swipeVelocityThreshold = _this$props$swipeVelo === undefined ? 0.15 : _this$props$swipeVelo;
        _this.props.onSwipeEnd && _this.props.onSwipeEnd();

        if (_reactNative.Platform.OS === 'android') {
          swipeVelocityThreshold /= 1000000;
        }

        var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : _this._currentIndex;
        var nextIndex = currentIndex;

        if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {
          nextIndex = Math.round(Math.min(Math.max(0, currentIndex - gestureState.dx / Math.abs(gestureState.dx)), navigationState.routes.length - 1));
          _this._currentIndex = nextIndex;
        }

        if (!isFinite(nextIndex) || !_this.props.canJumpToTab({
          route: _this.props.navigationState.routes[nextIndex]
        })) {
          nextIndex = currentIndex;
        }

        _this._transitionTo(nextIndex);
      };

      _this._transitionTo = function (index) {
        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var offset = -index * _this.props.layout.width;
        var route = _this.props.navigationState.routes[index];

        if (_this.props.animationEnabled === false || animated === false) {
          _this.props.panX.setValue(0);

          _this.props.offsetX.setValue(offset);

          _this.props.jumpTo(route.key);

          return;
        }

        var timing = DefaultTransitionSpec.timing,
            transitionConfig = (0, _objectWithoutProperties2.default)(DefaultTransitionSpec, ["timing"]);

        _reactNative.Animated.parallel([timing(_this.props.panX, (0, _objectSpread2.default)({}, transitionConfig, {
          toValue: 0
        })), timing(_this.props.offsetX, (0, _objectSpread2.default)({}, transitionConfig, {
          toValue: offset
        }))]).start(function (_ref) {
          var finished = _ref.finished;

          if (finished) {
            _this.props.jumpTo(route.key);

            _this.props.onAnimationEnd && _this.props.onAnimationEnd();
            _this._pendingIndex = null;
          }
        });

        _this._pendingIndex = index;
      };

      _this._panResponder = _reactNative.PanResponder.create({
        onMoveShouldSetPanResponder: _this._canMoveScreen,
        onMoveShouldSetPanResponderCapture: _this._canMoveScreen,
        onPanResponderGrant: _this._startGesture,
        onPanResponderMove: _this._respondToGesture,
        onPanResponderTerminate: _this._finishGesture,
        onPanResponderRelease: _this._finishGesture,
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        }
      });
      return _this;
    }

    (0, _createClass2.default)(PagerPan, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        this._currentIndex = this.props.navigationState.index;

        if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {
          this._transitionTo(this.props.navigationState.index, false);
        } else if (prevProps.navigationState.index !== this.props.navigationState.index) {
          this._transitionTo(this.props.navigationState.index);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            panX = _this$props2.panX,
            offsetX = _this$props2.offsetX,
            navigationState = _this$props2.navigationState,
            layout = _this$props2.layout,
            children = _this$props2.children;
        var width = layout.width;
        var routes = navigationState.routes;
        var maxTranslate = width * (routes.length - 1);

        var translateX = _reactNative.Animated.multiply(_reactNative.Animated.add(panX, offsetX).interpolate({
          inputRange: [-maxTranslate, 0],
          outputRange: [-maxTranslate, 0],
          extrapolate: 'clamp'
        }), _reactNative.I18nManager.isRTL ? -1 : 1);

        return React.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [styles.sheet, width ? {
            width: routes.length * width,
            transform: [{
              translateX: translateX
            }]
          } : null]
        }, this._panResponder.panHandlers), React.Children.map(children, function (child, i) {
          var route = navigationState.routes[i];
          var focused = i === navigationState.index;
          return React.createElement(_reactNative.View, {
            key: route.key,
            testID: _this2.props.getTestID({
              route: route
            }),
            style: width ? {
              width: width
            } : focused ? _reactNative.StyleSheet.absoluteFill : null
          }, focused || width ? child : null);
        }));
      }
    }]);
    return PagerPan;
  }(React.Component);

  exports.default = PagerPan;
  PagerPan.propTypes = (0, _objectSpread2.default)({}, _PropTypes.PagerRendererPropType, {
    swipeDistanceThreshold: _propTypes.default.number,
    swipeVelocityThreshold: _propTypes.default.number
  });
  PagerPan.defaultProps = {
    canJumpToTab: function canJumpToTab() {
      return true;
    },
    initialLayout: {
      height: 0,
      width: 0
    }
  };

  var styles = _reactNative.StyleSheet.create({
    sheet: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'stretch'
    }
  });
},471,[362,1,11,46,9,22,23,30,33,36,49,61,2,467]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _PropTypes = _$$_REQUIRE(_dependencyMap[12]);

  var DefaultTransitionSpec = {
    timing: _reactNative.Animated.spring,
    tension: 68,
    friction: 12
  };

  var PagerExperimental = function (_React$Component) {
    (0, _inherits2.default)(PagerExperimental, _React$Component);

    function PagerExperimental() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PagerExperimental);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PagerExperimental)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._handleHandlerStateChange = function (event) {
        var GestureHandler = _this.props.GestureHandler;

        if (event.nativeEvent.state === GestureHandler.State.BEGAN) {
          _this.props.onSwipeStart && _this.props.onSwipeStart();
        } else if (event.nativeEvent.state === GestureHandler.State.END) {
          _this.props.onSwipeEnd && _this.props.onSwipeEnd();
          var _this$props = _this.props,
              navigationState = _this$props.navigationState,
              layout = _this$props.layout,
              _this$props$swipeDist = _this$props.swipeDistanceThreshold,
              swipeDistanceThreshold = _this$props$swipeDist === undefined ? layout.width / 1.75 : _this$props$swipeDist,
              _this$props$swipeVelo = _this$props.swipeVelocityThreshold,
              swipeVelocityThreshold = _this$props$swipeVelo === undefined ? 150 : _this$props$swipeVelo;
          var _event$nativeEvent = event.nativeEvent,
              translationX = _event$nativeEvent.translationX,
              translationY = _event$nativeEvent.translationY,
              velocityX = _event$nativeEvent.velocityX,
              velocityY = _event$nativeEvent.velocityY;
          var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : navigationState.index;
          var nextIndex = currentIndex;

          if (Math.abs(translationX) > Math.abs(translationY) && Math.abs(velocityX) > Math.abs(velocityY) && (Math.abs(translationX) > swipeDistanceThreshold || Math.abs(velocityX) > swipeVelocityThreshold)) {
            nextIndex = Math.round(Math.min(Math.max(0, currentIndex - translationX / Math.abs(translationX)), navigationState.routes.length - 1));
          }

          if (!isFinite(nextIndex) || !_this.props.canJumpToTab(_this.props.navigationState.routes[nextIndex])) {
            nextIndex = currentIndex;
          }

          _this._transitionTo(nextIndex, velocityX);
        }
      };

      _this._transitionTo = function (index, velocity) {
        var animated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        var offset = -index * _this.props.layout.width;

        if (_this.props.animationEnabled === false || animated === false) {
          _this.props.panX.setValue(0);

          _this.props.offsetX.setValue(offset);

          return;
        }

        var timing = DefaultTransitionSpec.timing,
            transitionConfig = (0, _objectWithoutProperties2.default)(DefaultTransitionSpec, ["timing"]);
        var useNativeDriver = _this.props.useNativeDriver;

        _reactNative.Animated.parallel([timing(_this.props.panX, (0, _objectSpread2.default)({}, transitionConfig, {
          toValue: 0,
          velocity: velocity,
          useNativeDriver: useNativeDriver
        })), timing(_this.props.offsetX, (0, _objectSpread2.default)({}, transitionConfig, {
          toValue: offset,
          velocity: velocity,
          useNativeDriver: useNativeDriver
        }))]).start(function (_ref) {
          var finished = _ref.finished;

          if (finished) {
            var route = _this.props.navigationState.routes[index];

            _this.props.jumpTo(route.key);

            _this.props.onAnimationEnd && _this.props.onAnimationEnd();
            _this._pendingIndex = null;
          }
        });

        _this._pendingIndex = index;
      };

      return _this;
    }

    (0, _createClass2.default)(PagerExperimental, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {
          this._transitionTo(this.props.navigationState.index, undefined, false);
        } else if (prevProps.navigationState.index !== this.props.navigationState.index && this.props.navigationState.index !== this._pendingIndex) {
          this._transitionTo(this.props.navigationState.index);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            GestureHandler = _this$props2.GestureHandler,
            panX = _this$props2.panX,
            offsetX = _this$props2.offsetX,
            layout = _this$props2.layout,
            navigationState = _this$props2.navigationState,
            swipeEnabled = _this$props2.swipeEnabled,
            children = _this$props2.children;
        var width = layout.width;
        var routes = navigationState.routes;
        var maxTranslate = width * (routes.length - 1);
        var translateX = routes.length > 1 ? _reactNative.Animated.add(panX, offsetX).interpolate({
          inputRange: [-maxTranslate, 0],
          outputRange: [-maxTranslate, 0],
          extrapolate: 'clamp'
        }) : 0;
        return React.createElement(GestureHandler.PanGestureHandler, {
          enabled: layout.width !== 0 && swipeEnabled !== false,
          minDeltaX: 10,
          onGestureEvent: _reactNative.Animated.event([{
            nativeEvent: {
              translationX: this.props.panX
            }
          }], {
            useNativeDriver: this.props.useNativeDriver
          }),
          onHandlerStateChange: this._handleHandlerStateChange
        }, React.createElement(_reactNative.Animated.View, {
          style: [styles.sheet, width ? {
            width: routes.length * width,
            transform: [{
              translateX: translateX
            }]
          } : null]
        }, React.Children.map(children, function (child, i) {
          var route = navigationState.routes[i];
          var focused = i === navigationState.index;
          return React.createElement(_reactNative.View, {
            key: route.key,
            testID: _this2.props.getTestID({
              route: route
            }),
            accessibilityElementsHidden: !focused,
            importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
            style: width ? {
              width: width
            } : focused ? _reactNative.StyleSheet.absoluteFill : null
          }, focused || width ? child : null);
        })));
      }
    }]);
    return PagerExperimental;
  }(React.Component);

  exports.default = PagerExperimental;
  PagerExperimental.propTypes = (0, _objectSpread2.default)({}, _PropTypes.PagerRendererPropType, {
    swipeDistanceThreshold: _propTypes.default.number,
    swipeVelocityThreshold: _propTypes.default.number,
    GestureHandler: _propTypes.default.object
  });
  PagerExperimental.defaultProps = {
    canJumpToTab: function canJumpToTab() {
      return true;
    }
  };

  var styles = _reactNative.StyleSheet.create({
    sheet: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'stretch'
    }
  });
},472,[362,1,46,9,22,23,30,33,36,49,61,2,467]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = SceneMap;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var SceneComponent = function (_React$PureComponent) {
    (0, _inherits2.default)(SceneComponent, _React$PureComponent);

    function SceneComponent() {
      (0, _classCallCheck2.default)(this, SceneComponent);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SceneComponent).apply(this, arguments));
    }

    (0, _createClass2.default)(SceneComponent, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            component = _this$props.component,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["component"]);
        return React.createElement(component, rest);
      }
    }]);
    return SceneComponent;
  }(React.PureComponent);

  function SceneMap(scenes) {
    return function (_ref) {
      var route = _ref.route,
          jumpTo = _ref.jumpTo;
      return React.createElement(SceneComponent, {
        key: route.key,
        component: scenes[route.key],
        route: route,
        jumpTo: jumpTo
      });
    };
  }
},473,[362,1,9,22,23,30,33,36,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeTabView = _$$_REQUIRE(_dependencyMap[12]);

  var _CrossFadeIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var TabBarTop = function (_React$PureComponent) {
    (0, _inherits2.default)(TabBarTop, _React$PureComponent);

    function TabBarTop() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TabBarTop);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TabBarTop)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._renderLabel = function (_ref) {
        var route = _ref.route;
        var _this$props = _this.props,
            position = _this$props.position,
            navigation = _this$props.navigation,
            activeTintColor = _this$props.activeTintColor,
            inactiveTintColor = _this$props.inactiveTintColor,
            showLabel = _this$props.showLabel,
            upperCaseLabel = _this$props.upperCaseLabel,
            labelStyle = _this$props.labelStyle,
            allowFontScaling = _this$props.allowFontScaling;

        if (showLabel === false) {
          return null;
        }

        var routes = navigation.state.routes;
        var index = routes.indexOf(route);
        var focused = index === navigation.state.index;
        var inputRange = [-1].concat((0, _toConsumableArray2.default)(routes.map(function (x, i) {
          return i;
        })));
        var outputRange = inputRange.map(function (inputIndex) {
          return inputIndex === index ? activeTintColor : inactiveTintColor;
        });
        var color = position.interpolate({
          inputRange: inputRange,
          outputRange: outputRange
        });
        var tintColor = focused ? activeTintColor : inactiveTintColor;

        var label = _this.props.getLabelText({
          route: route
        });

        if (typeof label === 'string') {
          return React.createElement(_reactNative.Animated.Text, {
            style: [styles.label, {
              color: color
            }, labelStyle],
            allowFontScaling: allowFontScaling
          }, upperCaseLabel ? label.toUpperCase() : label);
        }

        if (typeof label === 'function') {
          return label({
            focused: focused,
            tintColor: tintColor
          });
        }

        return label;
      };

      _this._renderIcon = function (_ref2) {
        var route = _ref2.route;
        var _this$props2 = _this.props,
            position = _this$props2.position,
            navigation = _this$props2.navigation,
            activeTintColor = _this$props2.activeTintColor,
            inactiveTintColor = _this$props2.inactiveTintColor,
            renderIcon = _this$props2.renderIcon,
            showIcon = _this$props2.showIcon,
            iconStyle = _this$props2.iconStyle;

        if (showIcon === false) {
          return null;
        }

        var index = navigation.state.routes.indexOf(route);
        var inputRange = [-1].concat((0, _toConsumableArray2.default)(navigation.state.routes.map(function (x, i) {
          return i;
        })));
        var activeOpacity = position.interpolate({
          inputRange: inputRange,
          outputRange: inputRange.map(function (i) {
            return i === index ? 1 : 0;
          })
        });
        var inactiveOpacity = position.interpolate({
          inputRange: inputRange,
          outputRange: inputRange.map(function (i) {
            return i === index ? 0 : 1;
          })
        });
        return React.createElement(_CrossFadeIcon.default, {
          route: route,
          navigation: navigation,
          activeOpacity: activeOpacity,
          inactiveOpacity: inactiveOpacity,
          activeTintColor: activeTintColor,
          inactiveTintColor: inactiveTintColor,
          renderIcon: renderIcon,
          style: [styles.icon, iconStyle]
        });
      };

      return _this;
    }

    (0, _createClass2.default)(TabBarTop, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            navigation = _this$props3.navigation,
            renderIcon = _this$props3.renderIcon,
            getLabelText = _this$props3.getLabelText,
            rest = (0, _objectWithoutProperties2.default)(_this$props3, ["navigation", "renderIcon", "getLabelText"]);
        return React.createElement(_reactNativeTabView.TabBar, (0, _extends2.default)({}, rest, {
          navigationState: navigation.state,
          renderIcon: this._renderIcon,
          renderLabel: this._renderLabel
        }));
      }
    }]);
    return TabBarTop;
  }(React.PureComponent);

  exports.default = TabBarTop;
  TabBarTop.defaultProps = {
    activeTintColor: '#fff',
    inactiveTintColor: '#fff',
    showIcon: false,
    showLabel: true,
    upperCaseLabel: true,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    icon: {
      height: 24,
      width: 24
    },
    label: {
      textAlign: 'center',
      fontSize: 13,
      margin: 8,
      backgroundColor: 'transparent'
    }
  });
},474,[362,1,11,9,18,22,23,30,33,36,49,2,463,459]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get createDrawerNavigator() {
      return _$$_REQUIRE(_dependencyMap[0]).default;
    },

    get DrawerRouter() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },

    get DrawerActions() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },

    get DrawerNavigatorItems() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },

    get DrawerSidebar() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },

    get DrawerView() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    },

    get DrawerGestureContext() {
      return _$$_REQUIRE(_dependencyMap[6]).default;
    }

  };
},475,[476,477,478,484,480,479,482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _core = _$$_REQUIRE(_dependencyMap[4]);

  var _native = _$$_REQUIRE(_dependencyMap[5]);

  var _DrawerRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _DrawerView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _DrawerNavigatorItems = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var defaultContentComponent = function defaultContentComponent(props) {
    return _react.default.createElement(_reactNative.ScrollView, {
      alwaysBounceVertical: false
    }, _react.default.createElement(_native.SafeAreaView, {
      forceInset: {
        top: 'always',
        horizontal: 'never'
      }
    }, _react.default.createElement(_DrawerNavigatorItems.default, props)));
  };

  var DefaultDrawerConfig = {
    drawerWidth: function drawerWidth() {
      var _Dimensions$get = _reactNative.Dimensions.get('window'),
          height = _Dimensions$get.height,
          width = _Dimensions$get.width;

      var smallerAxisSize = Math.min(height, width);
      var isLandscape = width > height;
      var isTablet = smallerAxisSize >= 600;
      var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;
      var maxWidth = isTablet ? 320 : 280;
      return Math.min(smallerAxisSize - appBarHeight, maxWidth);
    },
    contentComponent: defaultContentComponent,
    drawerPosition: 'left',
    keyboardDismissMode: 'on-drag',
    drawerBackgroundColor: 'white',
    useNativeAnimations: true,
    drawerType: 'front',
    hideStatusBar: false,
    statusBarAnimation: 'slide',
    overlayColor: 'black'
  };

  var DrawerNavigator = function DrawerNavigator(routeConfigs) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var mergedConfig = (0, _objectSpread2.default)({}, DefaultDrawerConfig, config);
    var drawerRouter = (0, _DrawerRouter.default)(routeConfigs, mergedConfig);
    var navigator = (0, _core.createNavigator)(_DrawerView.default, drawerRouter, mergedConfig);
    return navigator;
  };

  var _default = DrawerNavigator;
  exports.default = _default;
},476,[1,46,49,2,357,355,477,479,484]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _core = _$$_REQUIRE(_dependencyMap[2]);

  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function withDefaultValue(obj, key, defaultValue) {
    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {
      return obj;
    }

    obj[key] = defaultValue;
    return obj;
  }

  var getActiveRouteKey = function getActiveRouteKey(route) {
    if (route.routes && route.routes[route.index]) {
      return getActiveRouteKey(route.routes[route.index]);
    }

    return route.key;
  };

  var _default = function _default(routeConfigs) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    config = (0, _objectSpread2.default)({}, config);
    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);
    config = withDefaultValue(config, 'backBehavior', 'initialRoute');
    var switchRouter = (0, _core.SwitchRouter)(routeConfigs, config);

    var __id = -1;

    var genId = function genId() {
      __id++;
      return __id;
    };

    return (0, _objectSpread2.default)({}, switchRouter, {
      getActionCreators: function getActionCreators(route, navStateKey) {
        return (0, _objectSpread2.default)({
          openDrawer: function openDrawer() {
            return _DrawerActions.default.openDrawer({
              key: navStateKey
            });
          },
          closeDrawer: function closeDrawer() {
            return _DrawerActions.default.closeDrawer({
              key: navStateKey
            });
          },
          toggleDrawer: function toggleDrawer() {
            return _DrawerActions.default.toggleDrawer({
              key: navStateKey
            });
          }
        }, switchRouter.getActionCreators(route, navStateKey));
      },
      getStateForAction: function getStateForAction(action, state) {
        if (!state) {
          return (0, _objectSpread2.default)({}, switchRouter.getStateForAction(action, undefined), {
            isDrawerOpen: false,
            isDrawerIdle: true,
            drawerMovementDirection: null,
            openId: genId(),
            closeId: genId(),
            toggleId: genId()
          });
        }

        var isRouterTargeted = action.key == null || action.key === state.key;

        if (isRouterTargeted) {
          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {
            return (0, _objectSpread2.default)({}, state, {
              isDrawerOpen: false,
              isDrawerIdle: true,
              drawerMovementDirection: null
            });
          }

          if (action.type === _DrawerActions.default.DRAWER_OPENED) {
            return (0, _objectSpread2.default)({}, state, {
              isDrawerOpen: true,
              isDrawerIdle: true,
              drawerMovementDirection: null
            });
          }

          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {
            return (0, _objectSpread2.default)({}, state, {
              closeId: genId()
            });
          }

          if (action.type === _DrawerActions.default.MARK_DRAWER_SETTLING) {
            return (0, _objectSpread2.default)({}, state, {
              isDrawerIdle: false,
              drawerMovementDirection: action.willShow ? 'opening' : 'closing'
            });
          }

          if (action.type === _DrawerActions.default.MARK_DRAWER_ACTIVE) {
            return (0, _objectSpread2.default)({}, state, {
              isDrawerIdle: false,
              drawerMovementDirection: null
            });
          }

          if (action.type === _DrawerActions.default.MARK_DRAWER_IDLE) {
            return (0, _objectSpread2.default)({}, state, {
              isDrawerIdle: true,
              drawerMovementDirection: null
            });
          }

          if (action.type === _core.NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {
            return (0, _objectSpread2.default)({}, state, {
              closeId: genId()
            });
          }

          if (action.type === _DrawerActions.default.OPEN_DRAWER) {
            return (0, _objectSpread2.default)({}, state, {
              openId: genId()
            });
          }

          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {
            return (0, _objectSpread2.default)({}, state, {
              toggleId: genId()
            });
          }
        }

        var switchedState = switchRouter.getStateForAction(action, state);

        if (switchedState === null) {
          return null;
        }

        if (switchedState !== state) {
          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {
            return (0, _objectSpread2.default)({}, switchedState, {
              closeId: genId()
            });
          }

          return switchedState;
        }

        return state;
      }
    });
  };

  exports.default = _default;
},477,[1,46,357,478]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var OPEN_DRAWER = 'Navigation/OPEN_DRAWER';
  var CLOSE_DRAWER = 'Navigation/CLOSE_DRAWER';
  var TOGGLE_DRAWER = 'Navigation/TOGGLE_DRAWER';
  var DRAWER_OPENED = 'Navigation/DRAWER_OPENED';
  var DRAWER_CLOSED = 'Navigation/DRAWER_CLOSED';
  var MARK_DRAWER_ACTIVE = 'Navigation/MARK_DRAWER_ACTIVE';
  var MARK_DRAWER_SETTLING = 'Navigation/MARK_DRAWER_SETTLING';
  var MARK_DRAWER_IDLE = 'Navigation/MARK_DRAWER_IDLE';

  var openDrawer = function openDrawer(payload) {
    return (0, _objectSpread2.default)({
      type: OPEN_DRAWER
    }, payload);
  };

  var closeDrawer = function closeDrawer(payload) {
    return (0, _objectSpread2.default)({
      type: CLOSE_DRAWER
    }, payload);
  };

  var markDrawerActive = function markDrawerActive(payload) {
    return (0, _objectSpread2.default)({
      type: MARK_DRAWER_ACTIVE
    }, payload);
  };

  var markDrawerIdle = function markDrawerIdle(payload) {
    return (0, _objectSpread2.default)({
      type: MARK_DRAWER_IDLE
    }, payload);
  };

  var markDrawerSettling = function markDrawerSettling(payload) {
    return (0, _objectSpread2.default)({
      type: MARK_DRAWER_SETTLING
    }, payload);
  };

  var toggleDrawer = function toggleDrawer(payload) {
    return (0, _objectSpread2.default)({
      type: TOGGLE_DRAWER
    }, payload);
  };

  var _default = {
    OPEN_DRAWER: OPEN_DRAWER,
    CLOSE_DRAWER: CLOSE_DRAWER,
    TOGGLE_DRAWER: TOGGLE_DRAWER,
    DRAWER_OPENED: DRAWER_OPENED,
    DRAWER_CLOSED: DRAWER_CLOSED,
    MARK_DRAWER_ACTIVE: MARK_DRAWER_ACTIVE,
    MARK_DRAWER_IDLE: MARK_DRAWER_IDLE,
    MARK_DRAWER_SETTLING: MARK_DRAWER_SETTLING,
    openDrawer: openDrawer,
    closeDrawer: closeDrawer,
    toggleDrawer: toggleDrawer,
    markDrawerIdle: markDrawerIdle,
    markDrawerActive: markDrawerActive,
    markDrawerSettling: markDrawerSettling
  };
  exports.default = _default;
},478,[1,46]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _core = _$$_REQUIRE(_dependencyMap[10]);

  var _DrawerLayout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[12]);

  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _DrawerSidebar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _DrawerGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ResourceSavingScene = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var DrawerView = function (_React$PureComponent) {
    (0, _inherits2.default)(DrawerView, _React$PureComponent);

    function DrawerView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, DrawerView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DrawerView)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        loaded: [_this.props.navigation.state.index],
        drawerWidth: typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth
      };
      _this.drawerGestureRef = _react.default.createRef();

      _this._handleDrawerStateChange = function (newState, willShow) {
        if (newState === 'Idle') {
          if (!_this.props.navigation.state.isDrawerIdle) {
            _this.props.navigation.dispatch({
              type: _DrawerActions.default.MARK_DRAWER_IDLE,
              key: _this.props.navigation.state.key
            });
          }
        } else if (newState === 'Settling') {
          _this.props.navigation.dispatch({
            type: _DrawerActions.default.MARK_DRAWER_SETTLING,
            key: _this.props.navigation.state.key,
            willShow: willShow
          });
        } else {
          if (_this.props.navigation.state.isDrawerIdle) {
            _this.props.navigation.dispatch({
              type: _DrawerActions.default.MARK_DRAWER_ACTIVE,
              key: _this.props.navigation.state.key
            });
          }
        }
      };

      _this._handleDrawerOpen = function () {
        _this.props.navigation.dispatch({
          type: _DrawerActions.default.DRAWER_OPENED,
          key: _this.props.navigation.state.key
        });
      };

      _this._handleDrawerClose = function () {
        _this.props.navigation.dispatch({
          type: _DrawerActions.default.DRAWER_CLOSED,
          key: _this.props.navigation.state.key
        });
      };

      _this._updateWidth = function () {
        var drawerWidth = typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth;

        if (_this.state.drawerWidth !== drawerWidth) {
          _this.setState({
            drawerWidth: drawerWidth
          });
        }
      };

      _this._renderNavigationView = function (drawerOpenProgress) {
        return _react.default.createElement(_DrawerGestureContext.default.Provider, {
          value: _this.drawerGestureRef
        }, _react.default.createElement(_DrawerSidebar.default, (0, _extends2.default)({
          screenProps: _this.props.screenProps,
          drawerOpenProgress: drawerOpenProgress,
          navigation: _this.props.navigation,
          descriptors: _this.props.descriptors,
          contentComponent: _this.props.navigationConfig.contentComponent,
          contentOptions: _this.props.navigationConfig.contentOptions,
          drawerPosition: _this.props.navigationConfig.drawerPosition,
          style: _this.props.navigationConfig.style
        }, _this.props.navigationConfig)));
      };

      _this._renderContent = function () {
        var _this$props = _this.props,
            lazy = _this$props.lazy,
            navigation = _this$props.navigation;
        var loaded = _this.state.loaded;
        var routes = navigation.state.routes;

        if (_this.props.navigationConfig.unmountInactiveRoutes) {
          var activeKey = navigation.state.routes[navigation.state.index].key;
          var descriptor = _this.props.descriptors[activeKey];
          return _react.default.createElement(_core.SceneView, {
            navigation: descriptor.navigation,
            screenProps: _this.props.screenProps,
            component: descriptor.getComponent()
          });
        } else {
          return _react.default.createElement(_reactNativeScreens.ScreenContainer, {
            style: styles.pages
          }, routes.map(function (route, index) {
            if (lazy && !loaded.includes(index)) {
              return null;
            }

            var isFocused = navigation.state.index === index;
            var descriptor = _this.props.descriptors[route.key];
            return _react.default.createElement(_ResourceSavingScene.default, {
              key: route.key,
              style: [_reactNative.StyleSheet.absoluteFill, {
                opacity: isFocused ? 1 : 0
              }],
              isVisible: isFocused
            }, _react.default.createElement(_core.SceneView, {
              navigation: descriptor.navigation,
              screenProps: _this.props.screenProps,
              component: descriptor.getComponent()
            }));
          }));
        }
      };

      _this._setDrawerGestureRef = function (ref) {
        _this.drawerGestureRef.current = ref;
      };

      return _this;
    }

    (0, _createClass2.default)(DrawerView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        _reactNative.Dimensions.addEventListener('change', this._updateWidth);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this2 = this;

        var _this$props$navigatio = this.props.navigation.state,
            openId = _this$props$navigatio.openId,
            closeId = _this$props$navigatio.closeId,
            toggleId = _this$props$navigatio.toggleId,
            isDrawerOpen = _this$props$navigatio.isDrawerOpen;
        var _prevProps$navigation = prevProps.navigation.state,
            prevOpenId = _prevProps$navigation.openId,
            prevCloseId = _prevProps$navigation.closeId,
            prevToggleId = _prevProps$navigation.toggleId;
        var prevIds = [prevOpenId, prevCloseId, prevToggleId];
        var changedIds = [openId, closeId, toggleId].filter(function (id) {
          return !prevIds.includes(id);
        }).sort(function (a, b) {
          return a > b;
        });
        changedIds.forEach(function (id) {
          if (id === openId) {
            _this2._drawer.openDrawer();
          } else if (id === closeId) {
            _this2._drawer.closeDrawer();
          } else if (id === toggleId) {
            if (isDrawerOpen) {
              _this2._drawer.closeDrawer();
            } else {
              _this2._drawer.openDrawer();
            }
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.Dimensions.removeEventListener('change', this._updateWidth);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var navigation = this.props.navigation;
        var activeKey = navigation.state.routes[navigation.state.index].key;
        var drawerLockMode = this.props.descriptors[activeKey].options.drawerLockMode;
        return _react.default.createElement(_DrawerLayout.default, {
          ref: function ref(c) {
            _this3._drawer = c;
          },
          onGestureRef: this._setDrawerGestureRef,
          drawerLockMode: drawerLockMode || this.props.screenProps && this.props.screenProps.drawerLockMode || this.props.navigationConfig.drawerLockMode,
          drawerBackgroundColor: this.props.navigationConfig.drawerBackgroundColor,
          keyboardDismissMode: this.props.navigationConfig.keyboardDismissMode,
          drawerWidth: this.state.drawerWidth,
          onDrawerOpen: this._handleDrawerOpen,
          onDrawerClose: this._handleDrawerClose,
          onDrawerStateChanged: this._handleDrawerStateChange,
          useNativeAnimations: this.props.navigationConfig.useNativeAnimations,
          renderNavigationView: this._renderNavigationView,
          drawerPosition: this.props.navigationConfig.drawerPosition === 'right' ? _DrawerLayout.default.positions.Right : _DrawerLayout.default.positions.Left,
          drawerType: this.props.navigationConfig.drawerType,
          edgeWidth: this.props.navigationConfig.edgeWidth,
          hideStatusBar: this.props.navigationConfig.hideStatusBar,
          statusBarAnimation: this.props.navigationConfig.statusBarAnimation,
          minSwipeDistance: this.props.navigationConfig.minSwipeDistance,
          overlayColor: this.props.navigationConfig.overlayColor,
          drawerContainerStyle: this.props.navigationConfig.drawerContainerStyle,
          contentContainerStyle: this.props.navigationConfig.contentContainerStyle
        }, _react.default.createElement(_DrawerGestureContext.default.Provider, {
          value: this.drawerGestureRef
        }, this._renderContent()));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var index = nextProps.navigation.state.index;
        return {
          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat((0, _toConsumableArray2.default)(prevState.loaded), [index])
        };
      }
    }]);
    return DrawerView;
  }(_react.default.PureComponent);

  exports.default = DrawerView;
  DrawerView.defaultProps = {
    lazy: true
  };

  var styles = _reactNative.StyleSheet.create({
    pages: {
      flex: 1
    }
  });
},479,[1,18,11,22,23,30,33,36,49,2,357,421,432,478,480,482,483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _core = _$$_REQUIRE(_dependencyMap[9]);

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var DrawerSidebar = function (_React$PureComponent) {
    (0, _inherits2.default)(DrawerSidebar, _React$PureComponent);

    function DrawerSidebar() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, DrawerSidebar);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DrawerSidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._getScreenOptions = function (routeKey) {
        var descriptor = _this.props.descriptors[routeKey];
        (0, _invariant.default)(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');
        return descriptor.options;
      };

      _this._getLabel = function (_ref) {
        var focused = _ref.focused,
            tintColor = _ref.tintColor,
            route = _ref.route;

        var _this$_getScreenOptio = _this._getScreenOptions(route.key),
            drawerLabel = _this$_getScreenOptio.drawerLabel,
            title = _this$_getScreenOptio.title;

        if (drawerLabel) {
          return typeof drawerLabel === 'function' ? drawerLabel({
            tintColor: tintColor,
            focused: focused
          }) : drawerLabel;
        }

        if (typeof title === 'string') {
          return title;
        }

        return route.routeName;
      };

      _this._renderIcon = function (_ref2) {
        var focused = _ref2.focused,
            tintColor = _ref2.tintColor,
            route = _ref2.route;

        var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),
            drawerIcon = _this$_getScreenOptio2.drawerIcon;

        if (drawerIcon) {
          return typeof drawerIcon === 'function' ? drawerIcon({
            tintColor: tintColor,
            focused: focused
          }) : drawerIcon;
        }

        return null;
      };

      _this._onItemPress = function (_ref3) {
        var route = _ref3.route,
            focused = _ref3.focused;

        if (focused) {
          _this.props.navigation.closeDrawer();
        } else {
          _this.props.navigation.dispatch(_core.NavigationActions.navigate({
            routeName: route.routeName
          }));
        }
      };

      return _this;
    }

    (0, _createClass2.default)(DrawerSidebar, [{
      key: "render",
      value: function render() {
        var ContentComponent = this.props.contentComponent;

        if (!ContentComponent) {
          return null;
        }

        var state = this.props.navigation.state;
        (0, _invariant.default)(typeof state.index === 'number', 'should be set');
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, this.props.style]
        }, _react.default.createElement(ContentComponent, (0, _extends2.default)({}, this.props.contentOptions, {
          navigation: this.props.navigation,
          descriptors: this.props.descriptors,
          drawerOpenProgress: this.props.drawerOpenProgress,
          items: state.routes,
          activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,
          screenProps: this.props.screenProps,
          getLabel: this._getLabel,
          renderIcon: this._renderIcon,
          onItemPress: this._onItemPress,
          drawerPosition: this.props.drawerPosition
        })));
      }
    }]);
    return DrawerSidebar;
  }(_react.default.PureComponent);

  var _default = DrawerSidebar;
  exports.default = _default;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    }
  });
},480,[1,11,22,23,30,33,36,49,2,357,481]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = invariant;

  function invariant(condition, format, a, b, c, d, e, f) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }
},481,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _react.default.createContext(null);

  exports.default = _default;
},482,[1,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[11]);

  var FAR_FAR_AWAY = 3000;

  var ResourceSavingScene = function (_React$Component) {
    (0, _inherits2.default)(ResourceSavingScene, _React$Component);

    function ResourceSavingScene() {
      (0, _classCallCheck2.default)(this, ResourceSavingScene);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ResourceSavingScene).apply(this, arguments));
    }

    (0, _createClass2.default)(ResourceSavingScene, [{
      key: "render",
      value: function render() {
        if (_reactNativeScreens.screensEnabled && (0, _reactNativeScreens.screensEnabled)()) {
          var _this$props = this.props,
              _isVisible = _this$props.isVisible,
              _rest = (0, _objectWithoutProperties2.default)(_this$props, ["isVisible"]);

          return React.createElement(_reactNativeScreens.Screen, (0, _extends2.default)({
            active: _isVisible ? 1 : 0
          }, _rest));
        }

        var _this$props2 = this.props,
            isVisible = _this$props2.isVisible,
            children = _this$props2.children,
            style = _this$props2.style,
            rest = (0, _objectWithoutProperties2.default)(_this$props2, ["isVisible", "children", "style"]);
        return React.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, style],
          collapsable: false,
          removeClippedSubviews: _reactNative.Platform.OS === 'ios' ? !isVisible : true,
          pointerEvents: isVisible ? 'auto' : 'none'
        }, rest), React.createElement(_reactNative.View, {
          style: isVisible ? styles.attached : styles.detached
        }, children));
      }
    }]);
    return ResourceSavingScene;
  }(React.Component);

  exports.default = ResourceSavingScene;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    attached: {
      flex: 1
    },
    detached: {
      flex: 1,
      top: FAR_FAR_AWAY
    }
  });
},483,[362,1,11,9,22,23,30,33,36,49,2,432]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _native = _$$_REQUIRE(_dependencyMap[4]);

  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var DrawerNavigatorItems = function DrawerNavigatorItems(_ref) {
    var items = _ref.items,
        activeItemKey = _ref.activeItemKey,
        activeTintColor = _ref.activeTintColor,
        activeBackgroundColor = _ref.activeBackgroundColor,
        inactiveTintColor = _ref.inactiveTintColor,
        inactiveBackgroundColor = _ref.inactiveBackgroundColor,
        getLabel = _ref.getLabel,
        renderIcon = _ref.renderIcon,
        onItemPress = _ref.onItemPress,
        itemsContainerStyle = _ref.itemsContainerStyle,
        itemStyle = _ref.itemStyle,
        labelStyle = _ref.labelStyle,
        activeLabelStyle = _ref.activeLabelStyle,
        inactiveLabelStyle = _ref.inactiveLabelStyle,
        iconContainerStyle = _ref.iconContainerStyle,
        drawerPosition = _ref.drawerPosition;
    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, itemsContainerStyle]
    }, items.map(function (route, index) {
      var _ref2;

      var focused = activeItemKey === route.key;
      var color = focused ? activeTintColor : inactiveTintColor;
      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
      var scene = {
        route: route,
        index: index,
        focused: focused,
        tintColor: color
      };
      var icon = renderIcon(scene);
      var label = getLabel(scene);
      var accessibilityLabel = typeof label === 'string' ? label : undefined;
      var extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;
      return _react.default.createElement(_TouchableItem.default, {
        key: route.key,
        accessible: true,
        accessibilityLabel: accessibilityLabel,
        onPress: function onPress() {
          onItemPress({
            route: route,
            focused: focused
          });
        },
        delayPressIn: 0
      }, _react.default.createElement(_native.SafeAreaView, {
        style: [{
          backgroundColor: backgroundColor
        }, styles.item, itemStyle],
        forceInset: (_ref2 = {}, (0, _defineProperty2.default)(_ref2, drawerPosition, 'always'), (0, _defineProperty2.default)(_ref2, drawerPosition === 'left' ? 'right' : 'left', 'never'), (0, _defineProperty2.default)(_ref2, "vertical", 'never'), _ref2)
      }, icon ? _react.default.createElement(_reactNative.View, {
        style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle]
      }, icon) : null, typeof label === 'string' ? _react.default.createElement(_reactNative.Text, {
        style: [styles.label, {
          color: color
        }, labelStyle, extraLabelStyle]
      }, label) : label));
    }));
  };

  DrawerNavigatorItems.defaultProps = {
    activeTintColor: '#2196f3',
    activeBackgroundColor: 'rgba(0, 0, 0, .04)',
    inactiveTintColor: 'rgba(0, 0, 0, .87)',
    inactiveBackgroundColor: 'transparent'
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: 4
    },
    item: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    icon: {
      marginHorizontal: 16,
      width: 24,
      alignItems: 'center'
    },
    inactiveIcon: {
      opacity: 0.62
    },
    label: {
      margin: 16,
      fontWeight: 'bold'
    }
  });

  var _default = DrawerNavigatorItems;
  exports.default = _default;
},484,[1,47,49,2,355,485]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var ANDROID_VERSION_LOLLIPOP = 21;

  var TouchableItem = function (_React$Component) {
    (0, _inherits2.default)(TouchableItem, _React$Component);

    function TouchableItem() {
      (0, _classCallCheck2.default)(this, TouchableItem);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableItem).apply(this, arguments));
    }

    (0, _createClass2.default)(TouchableItem, [{
      key: "render",
      value: function render() {
        if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
          var _this$props = this.props,
              style = _this$props.style,
              rest = (0, _objectWithoutProperties2.default)(_this$props, ["style"]);
          return _react.default.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, rest, {
            style: null,
            background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless)
          }), _react.default.createElement(_reactNative.View, {
            style: style
          }, _react.default.Children.only(this.props.children)));
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, this.props, this.props.children);
      }
    }]);
    return TouchableItem;
  }(_react.default.Component);

  exports.default = TouchableItem;
  TouchableItem.defaultProps = {
    borderless: false,
    pressColor: 'rgba(0, 0, 0, .32)'
  };
},485,[1,11,9,22,23,30,33,36,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var ModalExample = function (_React$Component) {
    (0, _inherits2.default)(ModalExample, _React$Component);

    function ModalExample() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ModalExample);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ModalExample)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        modalVisible: false
      };
      return _this;
    }

    (0, _createClass2.default)(ModalExample, [{
      key: "setModalVisible",
      value: function setModalVisible(visible) {
        this.setState({
          modalVisible: visible
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Modal, {
          animationType: "slide",
          transparent: true,
          visible: this.state.modalVisible,
          onRequestClose: function onRequestClose() {
            alert("Modal has been closed.");
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 192,
            backgroundColor: 'red'
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.Text, null, "Hello World!"), _react.default.createElement(_reactNative.TouchableHighlight, {
          onPress: function onPress() {
            _this2.setModalVisible(!_this2.state.modalVisible);
          }
        }, _react.default.createElement(_reactNative.Text, null, "Hide Modal"))))), _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 22
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          onPress: function onPress() {
            _this2.setModalVisible(true);
          },
          style: {
            marginBottom: 22,
            justifyContent: "center"
          }
        }, _react.default.createElement(_reactNative.Text, null, "Show Modal,bugai ddekhkdjhdh"))));
      }
    }]);
    return ModalExample;
  }(_react.default.Component);

  exports.default = ModalExample;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'row',
      backgroundColor: 'white'
    }
  });
},486,[362,1,22,23,30,33,36,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _NativeData = _$$_REQUIRE(_dependencyMap[8]);

  var _MyListViewItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var MultiListPicker = function (_React$Component) {
    (0, _inherits2.default)(MultiListPicker, _React$Component);

    function MultiListPicker(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MultiListPicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MultiListPicker).call(this, props));
      _this.state = {
        ToTalDepth: 3,
        CurrentColumnIndex0: 0,
        CurrentColumnIndex1: 0,
        CurrentColumnIndex2: 0,
        CurrentColumnIndex3: 0,
        ChooseResult: '',
        ChooserIndexArray: []
      };
      return _this;
    }

    (0, _createClass2.default)(MultiListPicker, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.state.ToTalDepth = this.getDefaultCurrentDepth(_NativeData.dataList.godProviderData);

        for (var k = 0; k < this.state.ToTalDepth; k++) {
          this.state.ChooserIndexArray[k] = 0;
        }

        console.log('MultiListPicker componentDidMount start default ToTalDepth=' + this.state.ToTalDepth + ", ChooserIndexArray" + this.state.ChooserIndexArray);
        this.setState(function (state) {
          return {};
        });
      }
    }, {
      key: "objectIsUndefinedOrNull",
      value: function objectIsUndefinedOrNull(object) {
        if (typeof object == "undefined" || object === null) {
          console.log("MultiListPicker checkUndefinedOrNull object is undefined or null");
          return true;
        } else {
          return false;
          console.log("MultiListPicker checkUndefinedOrNull object is valid");
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var pages = [];
        var dataSource = _NativeData.dataList.godProviderData;
        this.state.ToTalDepth = this.getMyCurrentDepth(dataSource, 0);
        console.log('MultiListPicker render depth= ' + this.state.ToTalDepth);

        var _loop = function _loop(i) {
          myListData = [];

          for (var j = 0; j < _this2.getObjectLength(dataSource.subList); j++) {
            myListData.push({
              key: dataSource.subList[j].Name
            });
          }

          console.log('MultiListPicker render myListData= ' + myListData);
          pages.push(_react.default.createElement(_reactNative.FlatList, {
            data: myListData,
            keyExtractor: function keyExtractor(item) {
              return item.keys;
            },
            renderItem: function renderItem(item, index) {
              return _this2.renderItem(item, i);
            }
          }));
          dataSource = dataSource.subList[_this2.state.ChooserIndexArray[i]];
        };

        for (var i = 0; i < this.state.ToTalDepth; i++) {
          var myListData;

          _loop(i);
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, pages);
      }
    }, {
      key: "renderItem",
      value: function renderItem(item, tag) {
        var _this3 = this;

        console.log("MultiListPicker renderItem tag=" + tag);
        console.log("MultiListPicker renderItem myIndex=" + this.state.ChooserIndexArray[tag]);
        return _react.default.createElement(_MyListViewItem.default, {
          onPressItem: function onPressItem() {
            console.log("MultiListPicker-----------tag=" + tag + ',index' + item.index);

            _this3.itemClick(item, tag);
          },
          title: item.item.key,
          onClickState: item.index === this.state.ChooserIndexArray[tag]
        });
      }
    }, {
      key: "itemClick",
      value: function itemClick(item, tag) {
        console.log("MultiListPicker itemClick start tag=" + tag + ",index=" + item.index);
        this.state.ChooserIndexArray[tag] = item.index;

        for (var ii = 0; ii < this.state.ToTalDepth; ii++) {
          if (ii > tag) {
            this.state.ChooserIndexArray[ii] = 0;
          }
        }

        if (tag === this.state.ToTalDepth - 1) {
          var showContent = this.getChooseContent(_NativeData.dataList.godProviderData);
          console.log('MultiListPicker itemClick  chooseContent=' + showContent);

          _reactNative.Alert.alert('选中区域为', '' + showContent, [{
            text: 'OK',
            onPress: function onPress() {
              return console.log('OK Pressed');
            }
          }], {
            cancelable: false
          });
        }

        this.setState(function (state) {
          return {};
        });
      }
    }, {
      key: "getObjectLength",
      value: function getObjectLength(o) {
        var t = typeof o;

        if (t == 'string') {
          return o.length;
        } else if (t == 'object') {
          var n = 0;

          for (var i in o) {
            n++;
          }

          return n;
        }

        return 0;
      }
    }, {
      key: "getMyCurrentDepth",
      value: function getMyCurrentDepth(dataSource, dataLevel) {
        console.log('MultiListPicker getMyCurrentDepth start dataSource=' + dataSource.Name);

        if (dataSource.subList === null || this.getObjectLength(dataSource.subList) === 0) {
          return 0;
        } else {
          if (this.objectIsUndefinedOrNull(this.state.ChooserIndexArray[dataLevel])) {
            return 0;
          } else {
            return 1 + this.getMyCurrentDepth(dataSource.subList[this.state.ChooserIndexArray[dataLevel]], dataLevel + 1);
          }
        }
      }
    }, {
      key: "getDefaultCurrentDepth",
      value: function getDefaultCurrentDepth(dataSource) {
        console.log('MultiListPicker getDefaultCurrentDepth start dataSource=' + dataSource.Name);

        if (dataSource.subList === null || this.getObjectLength(dataSource.subList) === 0) {
          return 0;
        } else {
          return 1 + this.getDefaultCurrentDepth(dataSource.subList[0]);
        }
      }
    }, {
      key: "getChooseContent",
      value: function getChooseContent(data) {
        var ChooseContent = "";

        for (var i = 0; i < this.state.ToTalDepth; i++) {
          ChooseContent = ChooseContent + data.subList[0].Name;
          console.log('MultiListPicker getChooseContent data=' + data.subList[0].Name + " ,i=" + i + ", ChooseContent= " + ChooseContent);
          data = data.subList[this.state.ChooserIndexArray[i]];
        }

        return ChooseContent;
      }
    }]);
    return MultiListPicker;
  }(_react.default.Component);

  exports.default = MultiListPicker;
},487,[1,22,23,30,33,36,2,49,488,489]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.dataList = undefined;
  var dataList = {
    "cityList": [{
      "cityName": "厦门",
      "areaList": [{
        'areaName': "湖里",
        'townList': [{
          'townName': "湖乡镇一"
        }, {
          'townName': "湖乡镇二"
        }, {
          'townName': "湖乡镇三"
        }, {
          'townName': "湖乡镇四"
        }]
      }, {
        'areaName': "思明",
        'townList': [{
          'townName': "思乡镇一"
        }, {
          'townName': "思乡镇二"
        }, {
          'townName': "思乡镇三"
        }, {
          'townName': "思乡镇四"
        }]
      }, {
        'areaName': "翔安",
        'townList': [{
          'townName': "翔乡镇一"
        }, {
          'townName': "翔乡镇二"
        }, {
          'townName': "翔乡镇三"
        }, {
          'townName': "翔乡镇四"
        }]
      }, {
        'areaName': "同安",
        'townList': [{
          'townName': "同乡镇一"
        }, {
          'townName': "同乡镇二"
        }, {
          'townName': "同乡镇三"
        }, {
          'townName': "同乡镇四"
        }]
      }]
    }, {
      "cityName": "北京",
      "areaList": [{
        'areaName': "北京一区",
        'townList': [{
          'townName': "北一乡镇一"
        }, {
          'townName': "北一乡镇二"
        }, {
          'townName': "北一乡镇三"
        }, {
          'townName': "北一乡镇四"
        }]
      }, {
        'areaName': "北京二区",
        'townList': [{
          'townName': "北二乡镇一"
        }, {
          'townName': "北二乡镇二"
        }, {
          'townName': "北二乡镇三"
        }, {
          'townName': "北二乡镇四"
        }]
      }, {
        'areaName': "北京三区",
        'townList': [{
          'townName': "北三乡镇一"
        }, {
          'townName': "北三乡镇二"
        }, {
          'townName': "北三乡镇三"
        }, {
          'townName': "北三乡镇四"
        }]
      }, {
        'areaName': "北京四区",
        'townList': [{
          'townName': "北四乡镇一"
        }, {
          'townName': "北四乡镇二"
        }, {
          'townName': "北四乡镇三"
        }, {
          'townName': "北四乡镇四"
        }]
      }]
    }],
    "godProviderData": {
      "Name": "provider",
      "subList": [{
        "Name": "厦门",
        "subList": [{
          "Name": "湖里",
          "subList": [{
            "Name": "湖乡镇一",
            "subList": [{
              "Name": "湖乡镇村一"
            }, {
              "Name": "湖乡镇村二"
            }, {
              "Name": "湖乡镇村三"
            }, {
              "Name": "湖乡镇村四"
            }]
          }, {
            "Name": "湖乡镇二"
          }, {
            "Name": "湖乡镇三"
          }, {
            "Name": "湖乡镇四"
          }]
        }, {
          "Name": "不限"
        }, {
          "Name": "思明",
          "subList": [{
            "Name": "思乡镇一"
          }, {
            "Name": "思乡镇二"
          }, {
            "Name": "思乡镇三"
          }, {
            "Name": "思乡镇四"
          }]
        }, {
          "Name": "翔安",
          "subList": [{
            "Name": "翔乡镇一"
          }, {
            "Name": "翔乡镇二"
          }, {
            "Name": "翔乡镇三"
          }, {
            "Name": "翔乡镇四"
          }]
        }, {
          "Name": "同安",
          "subList": [{
            "Name": "同乡镇一"
          }, {
            "Name": "同乡镇二"
          }, {
            "Name": "同乡镇三"
          }, {
            "Name": "同乡镇四"
          }]
        }]
      }, {
        "Name": "不限"
      }, {
        "Name": "深圳",
        "subList": [{
          "Name": "罗湖",
          "subList": [{
            "Name": "罗乡镇一"
          }, {
            "Name": "罗乡镇二"
          }, {
            "Name": "罗乡镇三"
          }, {
            "Name": "罗乡镇四"
          }]
        }, {
          "Name": "福田",
          "subList": [{
            "Name": "福乡镇一"
          }, {
            "Name": "福乡镇二"
          }, {
            "Name": "福乡镇三"
          }, {
            "Name": "福乡镇四"
          }]
        }, {
          "Name": "南山",
          "subList": [{
            "Name": "南乡镇一"
          }, {
            "Name": "南乡镇二"
          }, {
            "Name": "南乡镇三"
          }, {
            "Name": "南乡镇四"
          }]
        }, {
          "Name": "盐田",
          "subList": [{
            "Name": "盐乡镇一"
          }, {
            "Name": "盐乡镇二"
          }, {
            "Name": "盐乡镇三"
          }, {
            "Name": "盐乡镇四"
          }]
        }]
      }]
    }
  };
  exports.dataList = dataList;
},488,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var MyListViewItem = function (_React$Component) {
    (0, _inherits2.default)(MyListViewItem, _React$Component);

    function MyListViewItem(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MyListViewItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MyListViewItem).call(this, props));
      _this.state = {
        onPressState: false
      };
      return _this;
    }

    (0, _createClass2.default)(MyListViewItem, [{
      key: "_onItemPress",
      value: function _onItemPress() {
        var _this2 = this;

        console.log('MyListViewItem onItemPress start');
        this.setState(function () {
          return {
            onPressState: !_this2.state.onPressState
          };
        });
        this.props.onPressItem();
        console.log('MyListViewItem onItemPress end ' + this.state.onPressState);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        console.log('MyListViewItem componentWillReceiveProps');
        this.updateDataSource(nextProps.onClickState);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var selectColor = this.state.onPressState ? "red" : "white";
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this3._onItemPress();
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: {
            backgroundColor: selectColor
          }
        }, this.props.title))));
      }
    }, {
      key: "updateDataSource",
      value: function updateDataSource(clickState) {
        if (clickState === true) {
          this.setState(function (state) {
            return {
              onPressState: true
            };
          });
        } else {
          this.setState(function (state) {
            return {
              onPressState: false
            };
          });
        }
      }
    }]);
    return MyListViewItem;
  }(_react.default.Component);

  exports.default = MyListViewItem;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: "#FFFFFF",
      flex: 1,
      padding: 10,
      flexDirection: 'row',
      justifyContent: "center",
      alignItems: "center"
    }
  });
},489,[1,22,23,30,33,36,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative2 = _$$_REQUIRE(_dependencyMap[8]);

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[9]);

  var HomeScreen = function (_React$Component) {
    (0, _inherits2.default)(HomeScreen, _React$Component);

    function HomeScreen() {
      (0, _classCallCheck2.default)(this, HomeScreen);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomeScreen).apply(this, arguments));
    }

    (0, _createClass2.default)(HomeScreen, [{
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, null, "this is Home Screen"), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to Modal",
          onPress: function onPress() {
            return _this.props.navigation.navigate('Modal');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to \u591A\u7EA7\u8054\u52A8\u57CE\u5E02\u5217\u8868",
          onPress: function onPress() {
            return _this.props.navigation.navigate('MultiListPicker');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to \u5496\u5561\u94B1\u5305",
          onPress: function onPress() {
            return _this.props.navigation.navigate('CoffeeWallet');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to \u652F\u4ED8\u5931\u8D25",
          onPress: function onPress() {
            return _this.props.navigation.navigate('LKDiscountResult');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to \u6D4B\u8BD5ES6 extend",
          onPress: function onPress() {
            return _this.props.navigation.navigate('Man');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to \u6D4B\u8BD5ScrollTab",
          onPress: function onPress() {
            return _this.props.navigation.navigate('TestScrollTabPage');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to svg",
          onPress: function onPress() {
            return _this.props.navigation.navigate('SvgShow');
          }
        }), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative2.WhiteSpace, null), _react.default.createElement(_reactNative.Button, {
          title: "Go to \u6D4B\u8BD5\u63A7\u4EF6\u9875",
          onPress: function onPress() {
            return _this.props.navigation.navigate('TestComponentPage');
          }
        }));
      }
    }]);
    return HomeScreen;
  }(_react.default.Component);

  exports.default = HomeScreen;

  HomeScreen.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerLeft: _react.default.createElement(_NavigationComponents.LuckinBackView, null),
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "主页面"
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };
},490,[1,22,23,30,33,36,49,2,491,762]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _index = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, 'Accordion', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index)['default'];
    }
  });

  var _index2 = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, 'ActionSheet', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index2)['default'];
    }
  });

  var _index3 = _$$_REQUIRE(_dependencyMap[2]);

  Object.defineProperty(exports, 'ActivityIndicator', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index3)['default'];
    }
  });

  var _index4 = _$$_REQUIRE(_dependencyMap[3]);

  Object.defineProperty(exports, 'Badge', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index4)['default'];
    }
  });

  var _index5 = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, 'Button', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index5)['default'];
    }
  });

  var _index6 = _$$_REQUIRE(_dependencyMap[5]);

  Object.defineProperty(exports, 'Card', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index6)['default'];
    }
  });

  var _index7 = _$$_REQUIRE(_dependencyMap[6]);

  Object.defineProperty(exports, 'Carousel', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index7)['default'];
    }
  });

  var _index8 = _$$_REQUIRE(_dependencyMap[7]);

  Object.defineProperty(exports, 'Checkbox', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index8)['default'];
    }
  });

  var _index9 = _$$_REQUIRE(_dependencyMap[8]);

  Object.defineProperty(exports, 'DatePickerView', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index9)['default'];
    }
  });

  var _index10 = _$$_REQUIRE(_dependencyMap[9]);

  Object.defineProperty(exports, 'DatePicker', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index10)['default'];
    }
  });

  var _index11 = _$$_REQUIRE(_dependencyMap[10]);

  Object.defineProperty(exports, 'Drawer', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index11)['default'];
    }
  });

  var _index12 = _$$_REQUIRE(_dependencyMap[11]);

  Object.defineProperty(exports, 'Flex', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index12)['default'];
    }
  });

  var _index13 = _$$_REQUIRE(_dependencyMap[12]);

  Object.defineProperty(exports, 'Grid', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index13)['default'];
    }
  });

  var _index14 = _$$_REQUIRE(_dependencyMap[13]);

  Object.defineProperty(exports, 'Icon', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index14)['default'];
    }
  });

  var _index15 = _$$_REQUIRE(_dependencyMap[14]);

  Object.defineProperty(exports, 'ImagePicker', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index15)['default'];
    }
  });

  var _index16 = _$$_REQUIRE(_dependencyMap[15]);

  Object.defineProperty(exports, 'InputItem', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index16)['default'];
    }
  });

  var _index17 = _$$_REQUIRE(_dependencyMap[16]);

  Object.defineProperty(exports, 'ListView', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index17)['default'];
    }
  });

  var _index18 = _$$_REQUIRE(_dependencyMap[17]);

  Object.defineProperty(exports, 'List', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index18)['default'];
    }
  });

  var _index19 = _$$_REQUIRE(_dependencyMap[18]);

  Object.defineProperty(exports, 'Modal', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index19)['default'];
    }
  });

  var _index20 = _$$_REQUIRE(_dependencyMap[19]);

  Object.defineProperty(exports, 'NoticeBar', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index20)['default'];
    }
  });

  var _index21 = _$$_REQUIRE(_dependencyMap[20]);

  Object.defineProperty(exports, 'Pagination', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index21)['default'];
    }
  });

  var _index22 = _$$_REQUIRE(_dependencyMap[21]);

  Object.defineProperty(exports, 'PickerView', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index22)['default'];
    }
  });

  var _index23 = _$$_REQUIRE(_dependencyMap[22]);

  Object.defineProperty(exports, 'Picker', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index23)['default'];
    }
  });

  var _index24 = _$$_REQUIRE(_dependencyMap[23]);

  Object.defineProperty(exports, 'Popover', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index24)['default'];
    }
  });

  var _index25 = _$$_REQUIRE(_dependencyMap[24]);

  Object.defineProperty(exports, 'Portal', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index25)['default'];
    }
  });

  var _index26 = _$$_REQUIRE(_dependencyMap[25]);

  Object.defineProperty(exports, 'Progress', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index26)['default'];
    }
  });

  var _index27 = _$$_REQUIRE(_dependencyMap[26]);

  Object.defineProperty(exports, 'Provider', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index27)['default'];
    }
  });

  var _index28 = _$$_REQUIRE(_dependencyMap[27]);

  Object.defineProperty(exports, 'Radio', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index28)['default'];
    }
  });

  var _index29 = _$$_REQUIRE(_dependencyMap[28]);

  Object.defineProperty(exports, 'Result', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index29)['default'];
    }
  });

  var _index30 = _$$_REQUIRE(_dependencyMap[29]);

  Object.defineProperty(exports, 'SearchBar', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index30)['default'];
    }
  });

  var _index31 = _$$_REQUIRE(_dependencyMap[30]);

  Object.defineProperty(exports, 'SegmentedControl', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index31)['default'];
    }
  });

  var _index32 = _$$_REQUIRE(_dependencyMap[31]);

  Object.defineProperty(exports, 'Slider', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index32)['default'];
    }
  });

  var _index33 = _$$_REQUIRE(_dependencyMap[32]);

  Object.defineProperty(exports, 'Stepper', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index33)['default'];
    }
  });

  var _index34 = _$$_REQUIRE(_dependencyMap[33]);

  Object.defineProperty(exports, 'Steps', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index34)['default'];
    }
  });

  var _index35 = _$$_REQUIRE(_dependencyMap[34]);

  Object.defineProperty(exports, 'SwipeAction', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index35)['default'];
    }
  });

  var _index36 = _$$_REQUIRE(_dependencyMap[35]);

  Object.defineProperty(exports, 'Switch', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index36)['default'];
    }
  });

  var _index37 = _$$_REQUIRE(_dependencyMap[36]);

  Object.defineProperty(exports, 'TabBar', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index37)['default'];
    }
  });

  var _index38 = _$$_REQUIRE(_dependencyMap[37]);

  Object.defineProperty(exports, 'Tabs', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index38)['default'];
    }
  });

  var _index39 = _$$_REQUIRE(_dependencyMap[38]);

  Object.defineProperty(exports, 'Tag', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index39)['default'];
    }
  });

  var _index40 = _$$_REQUIRE(_dependencyMap[39]);

  Object.defineProperty(exports, 'TextareaItem', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index40)['default'];
    }
  });

  var _index41 = _$$_REQUIRE(_dependencyMap[40]);

  Object.defineProperty(exports, 'Toast', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index41)['default'];
    }
  });

  var _index42 = _$$_REQUIRE(_dependencyMap[41]);

  Object.defineProperty(exports, 'WhiteSpace', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index42)['default'];
    }
  });

  var _index43 = _$$_REQUIRE(_dependencyMap[42]);

  Object.defineProperty(exports, 'WingBlank', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_index43)['default'];
    }
  });

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }
},491,[492,591,610,612,614,616,621,623,631,644,652,654,657,582,659,674,665,628,677,688,691,694,699,702,592,710,712,714,718,720,724,729,730,733,736,741,742,747,753,755,757,760,761]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _Accordion = _$$_REQUIRE(_dependencyMap[7]);

  var _Accordion2 = _interopRequireDefault(_Accordion);

  var _icon = _$$_REQUIRE(_dependencyMap[8]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[9]);

  var _index = _$$_REQUIRE(_dependencyMap[10]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var AccordionPanel = function (_React$Component) {
    (0, _inherits3['default'])(AccordionPanel, _React$Component);

    function AccordionPanel() {
      (0, _classCallCheck3['default'])(this, AccordionPanel);
      return (0, _possibleConstructorReturn3['default'])(this, (AccordionPanel.__proto__ || Object.getPrototypeOf(AccordionPanel)).apply(this, arguments));
    }

    (0, _createClass3['default'])(AccordionPanel, [{
      key: 'render',
      value: function render() {
        return null;
      }
    }]);
    return AccordionPanel;
  }(_react2['default'].Component);

  var Accordion = function (_React$Component2) {
    (0, _inherits3['default'])(Accordion, _React$Component2);

    function Accordion() {
      (0, _classCallCheck3['default'])(this, Accordion);

      var _this2 = (0, _possibleConstructorReturn3['default'])(this, (Accordion.__proto__ || Object.getPrototypeOf(Accordion)).apply(this, arguments));

      _this2.renderHeader = function (styles) {
        return function (section, _, isActive) {
          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.header, section.style]
          }, _react2['default'].isValidElement(section.title) ? section.title : _react2['default'].createElement(_reactNative.View, {
            style: styles.headerWrap
          }, _react2['default'].createElement(_reactNative.Text, {
            style: styles.headerText
          }, section.title)), _react2['default'].createElement(_reactNative.View, {
            style: styles.arrow
          }, _react2['default'].createElement(_icon2['default'], {
            name: isActive ? 'up' : 'down',
            style: styles.arrow
          })));
        };
      };

      _this2.renderContent = function (styles) {
        return function (section) {
          return _react2['default'].isValidElement(section.content) ? section.content : _react2['default'].createElement(_reactNative.View, {
            style: styles.content
          }, _react2['default'].createElement(_reactNative.Text, {
            style: styles.contentText
          }, section.content));
        };
      };

      return _this2;
    }

    (0, _createClass3['default'])(Accordion, [{
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _a = this.props,
            children = _a.children,
            style = _a.style,
            _a$activeSections = _a.activeSections,
            activeSections = _a$activeSections === undefined ? [] : _a$activeSections,
            rest = __rest(_a, ["children", "style", "activeSections"]);

        var styles = this.props.styles;

        var headers = _react2['default'].Children.map(children, function (child) {
          return {
            title: child.props.header,
            content: child.props.children,
            style: child.props.style || {}
          };
        });

        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: styles
        }, function (s) {
          return _react2['default'].createElement(_reactNative.View, {
            style: [s.container, style]
          }, _react2['default'].createElement(_Accordion2['default'], (0, _extends3['default'])({
            underlayColor: 'transparent',
            renderHeader: _this3.renderHeader(s),
            renderContent: _this3.renderContent(s),
            duration: 0,
            sections: headers,
            activeSections: activeSections
          }, rest)));
        });
      }
    }]);
    return Accordion;
  }(_react2['default'].Component);

  Accordion.Panel = AccordionPanel;
  exports['default'] = Accordion;
  module.exports = exports['default'];
},492,[493,532,533,537,571,49,2,579,582,587,590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _assign = _$$_REQUIRE(_dependencyMap[0]);

  var _assign2 = _interopRequireDefault(_assign);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = _assign2.default || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
},493,[494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},494,[495]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  module.exports = _$$_REQUIRE(_dependencyMap[1]).Object.assign;
},495,[496,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var $export = _$$_REQUIRE(_dependencyMap[0]);

  $export($export.S + $export.F, 'Object', {
    assign: _$$_REQUIRE(_dependencyMap[1])
  });
},496,[497,513]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var global = _$$_REQUIRE(_dependencyMap[0]);

  var core = _$$_REQUIRE(_dependencyMap[1]);

  var ctx = _$$_REQUIRE(_dependencyMap[2]);

  var hide = _$$_REQUIRE(_dependencyMap[3]);

  var has = _$$_REQUIRE(_dependencyMap[4]);

  var PROTOTYPE = 'prototype';

  var $export = function $export(type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var IS_WRAP = type & $export.W;
    var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
    var expProto = exports[PROTOTYPE];
    var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
    var key, own, out;
    if (IS_GLOBAL) source = name;

    for (key in source) {
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && has(exports, key)) continue;
      out = own ? target[key] : source[key];
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] : IS_BIND && own ? ctx(out, global) : IS_WRAP && target[key] == out ? function (C) {
        var F = function F(a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0:
                return new C();

              case 1:
                return new C(a);

              case 2:
                return new C(a, b);
            }

            return new C(a, b, c);
          }

          return C.apply(this, arguments);
        };

        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;

      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out;
        if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
      }
    }
  };

  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  $export.U = 64;
  $export.R = 128;
  module.exports = $export;
},497,[498,499,500,502,512]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if (typeof __g == 'number') __g = global;
},498,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var core = module.exports = {
    version: '2.6.5'
  };
  if (typeof __e == 'number') __e = core;
},499,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var aFunction = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;

    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };

      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };

      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }

    return function () {
      return fn.apply(that, arguments);
    };
  };
},500,[501]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };
},501,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var dP = _$$_REQUIRE(_dependencyMap[0]);

  var createDesc = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = _$$_REQUIRE(_dependencyMap[2]) ? function (object, key, value) {
    return dP.f(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
},502,[503,511,507]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var anObject = _$$_REQUIRE(_dependencyMap[0]);

  var IE8_DOM_DEFINE = _$$_REQUIRE(_dependencyMap[1]);

  var toPrimitive = _$$_REQUIRE(_dependencyMap[2]);

  var dP = Object.defineProperty;
  exports.f = _$$_REQUIRE(_dependencyMap[3]) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (IE8_DOM_DEFINE) try {
      return dP(O, P, Attributes);
    } catch (e) {}
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
},503,[504,506,510,507]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };
},504,[505]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
},505,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = !_$$_REQUIRE(_dependencyMap[0]) && !_$$_REQUIRE(_dependencyMap[1])(function () {
    return Object.defineProperty(_$$_REQUIRE(_dependencyMap[2])('div'), 'a', {
      get: function get() {
        return 7;
      }
    }).a != 7;
  });
},506,[507,508,509]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = !_$$_REQUIRE(_dependencyMap[0])(function () {
    return Object.defineProperty({}, 'a', {
      get: function get() {
        return 7;
      }
    }).a != 7;
  });
},507,[508]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
},508,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]);

  var document = _$$_REQUIRE(_dependencyMap[1]).document;

  var is = isObject(document) && isObject(document.createElement);

  module.exports = function (it) {
    return is ? document.createElement(it) : {};
  };
},509,[505,498]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function (it, S) {
    if (!isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };
},510,[505]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
},511,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var hasOwnProperty = {}.hasOwnProperty;

  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };
},512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var getKeys = _$$_REQUIRE(_dependencyMap[0]);

  var gOPS = _$$_REQUIRE(_dependencyMap[1]);

  var pIE = _$$_REQUIRE(_dependencyMap[2]);

  var toObject = _$$_REQUIRE(_dependencyMap[3]);

  var IObject = _$$_REQUIRE(_dependencyMap[4]);

  var $assign = Object.assign;
  module.exports = !$assign || _$$_REQUIRE(_dependencyMap[5])(function () {
    var A = {};
    var B = {};
    var S = Symbol();
    var K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source) {
    var T = toObject(target);
    var aLen = arguments.length;
    var index = 1;
    var getSymbols = gOPS.f;
    var isEnum = pIE.f;

    while (aLen > index) {
      var S = IObject(arguments[index++]);
      var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
      var length = keys.length;
      var j = 0;
      var key;

      while (length > j) {
        if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
      }
    }

    return T;
  } : $assign;
},513,[514,529,530,531,517,508]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var $keys = _$$_REQUIRE(_dependencyMap[0]);

  var enumBugKeys = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = Object.keys || function keys(O) {
    return $keys(O, enumBugKeys);
  };
},514,[515,528]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var has = _$$_REQUIRE(_dependencyMap[0]);

  var toIObject = _$$_REQUIRE(_dependencyMap[1]);

  var arrayIndexOf = _$$_REQUIRE(_dependencyMap[2])(false);

  var IE_PROTO = _$$_REQUIRE(_dependencyMap[3])('IE_PROTO');

  module.exports = function (object, names) {
    var O = toIObject(object);
    var i = 0;
    var result = [];
    var key;

    for (key in O) {
      if (key != IE_PROTO) has(O, key) && result.push(key);
    }

    while (names.length > i) {
      if (has(O, key = names[i++])) {
        ~arrayIndexOf(result, key) || result.push(key);
      }
    }

    return result;
  };
},515,[512,516,520,524]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var IObject = _$$_REQUIRE(_dependencyMap[0]);

  var defined = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (it) {
    return IObject(defined(it));
  };
},516,[517,519]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cof = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
},517,[518]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };
},518,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };
},519,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toIObject = _$$_REQUIRE(_dependencyMap[0]);

  var toLength = _$$_REQUIRE(_dependencyMap[1]);

  var toAbsoluteIndex = _$$_REQUIRE(_dependencyMap[2]);

  module.exports = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIObject($this);
      var length = toLength(O.length);
      var index = toAbsoluteIndex(fromIndex, length);
      var value;
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        if (value != value) return true;
      } else for (; length > index; index++) {
        if (IS_INCLUDES || index in O) {
          if (O[index] === el) return IS_INCLUDES || index || 0;
        }
      }
      return !IS_INCLUDES && -1;
    };
  };
},520,[516,521,523]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toInteger = _$$_REQUIRE(_dependencyMap[0]);

  var min = Math.min;

  module.exports = function (it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
  };
},521,[522]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ceil = Math.ceil;
  var floor = Math.floor;

  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
},522,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toInteger = _$$_REQUIRE(_dependencyMap[0]);

  var max = Math.max;
  var min = Math.min;

  module.exports = function (index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
},523,[522]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var shared = _$$_REQUIRE(_dependencyMap[0])('keys');

  var uid = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (key) {
    return shared[key] || (shared[key] = uid(key));
  };
},524,[525,527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var core = _$$_REQUIRE(_dependencyMap[0]);

  var global = _$$_REQUIRE(_dependencyMap[1]);

  var SHARED = '__core-js_shared__';
  var store = global[SHARED] || (global[SHARED] = {});
  (module.exports = function (key, value) {
    return store[key] || (store[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: core.version,
    mode: _$$_REQUIRE(_dependencyMap[2]) ? 'pure' : 'global',
    copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
  });
},525,[499,498,526]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = true;
},526,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var id = 0;
  var px = Math.random();

  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
},527,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
},528,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.f = Object.getOwnPropertySymbols;
},529,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.f = {}.propertyIsEnumerable;
},530,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defined = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function (it) {
    return Object(defined(it));
  };
},531,[519]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  exports.default = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
},532,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _defineProperty2 = _interopRequireDefault(_defineProperty);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        (0, _defineProperty2.default)(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
},533,[534]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},534,[535]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  var $Object = _$$_REQUIRE(_dependencyMap[1]).Object;

  module.exports = function defineProperty(it, key, desc) {
    return $Object.defineProperty(it, key, desc);
  };
},535,[536,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var $export = _$$_REQUIRE(_dependencyMap[0]);

  $export($export.S + $export.F * !_$$_REQUIRE(_dependencyMap[1]), 'Object', {
    defineProperty: _$$_REQUIRE(_dependencyMap[2]).f
  });
},536,[497,507,503]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _typeof2 = _$$_REQUIRE(_dependencyMap[0]);

  var _typeof3 = _interopRequireDefault(_typeof2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
  };
},537,[538]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _iterator = _$$_REQUIRE(_dependencyMap[0]);

  var _iterator2 = _interopRequireDefault(_iterator);

  var _symbol = _$$_REQUIRE(_dependencyMap[1]);

  var _symbol2 = _interopRequireDefault(_symbol);

  var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj;
  };

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof(obj);
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
  };
},538,[539,558]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},539,[540]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  module.exports = _$$_REQUIRE(_dependencyMap[2]).f('iterator');
},540,[541,553,557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var $at = _$$_REQUIRE(_dependencyMap[0])(true);

  _$$_REQUIRE(_dependencyMap[1])(String, 'String', function (iterated) {
    this._t = String(iterated);
    this._i = 0;
  }, function () {
    var O = this._t;
    var index = this._i;
    var point;
    if (index >= O.length) return {
      value: undefined,
      done: true
    };
    point = $at(O, index);
    this._i += point.length;
    return {
      value: point,
      done: false
    };
  });
},541,[542,543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toInteger = _$$_REQUIRE(_dependencyMap[0]);

  var defined = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that));
      var i = toInteger(pos);
      var l = s.length;
      var a, b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
},542,[522,519]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var LIBRARY = _$$_REQUIRE(_dependencyMap[0]);

  var $export = _$$_REQUIRE(_dependencyMap[1]);

  var redefine = _$$_REQUIRE(_dependencyMap[2]);

  var hide = _$$_REQUIRE(_dependencyMap[3]);

  var Iterators = _$$_REQUIRE(_dependencyMap[4]);

  var $iterCreate = _$$_REQUIRE(_dependencyMap[5]);

  var setToStringTag = _$$_REQUIRE(_dependencyMap[6]);

  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[7]);

  var ITERATOR = _$$_REQUIRE(_dependencyMap[8])('iterator');

  var BUGGY = !([].keys && 'next' in [].keys());
  var FF_ITERATOR = '@@iterator';
  var KEYS = 'keys';
  var VALUES = 'values';

  var returnThis = function returnThis() {
    return this;
  };

  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);

    var getMethod = function getMethod(kind) {
      if (!BUGGY && kind in proto) return proto[kind];

      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };

        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }

      return function entries() {
        return new Constructor(this, kind);
      };
    };

    var TAG = NAME + ' Iterator';
    var DEF_VALUES = DEFAULT == VALUES;
    var VALUES_BUG = false;
    var proto = Base.prototype;
    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
    var $default = $native || getMethod(DEFAULT);
    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
    var methods, key, IteratorPrototype;

    if ($anyNative) {
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));

      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
        setToStringTag(IteratorPrototype, TAG, true);
        if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }

    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;

      $default = function values() {
        return $native.call(this);
      };
    }

    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }

    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;

    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }

    return methods;
  };
},543,[526,497,544,502,545,546,550,552,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},544,[502]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},545,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var create = _$$_REQUIRE(_dependencyMap[0]);

  var descriptor = _$$_REQUIRE(_dependencyMap[1]);

  var setToStringTag = _$$_REQUIRE(_dependencyMap[2]);

  var IteratorPrototype = {};

  _$$_REQUIRE(_dependencyMap[3])(IteratorPrototype, _$$_REQUIRE(_dependencyMap[4])('iterator'), function () {
    return this;
  });

  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = create(IteratorPrototype, {
      next: descriptor(1, next)
    });
    setToStringTag(Constructor, NAME + ' Iterator');
  };
},546,[547,511,550,502,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var anObject = _$$_REQUIRE(_dependencyMap[0]);

  var dPs = _$$_REQUIRE(_dependencyMap[1]);

  var enumBugKeys = _$$_REQUIRE(_dependencyMap[2]);

  var IE_PROTO = _$$_REQUIRE(_dependencyMap[3])('IE_PROTO');

  var Empty = function Empty() {};

  var PROTOTYPE = 'prototype';

  var _createDict = function createDict() {
    var iframe = _$$_REQUIRE(_dependencyMap[4])('iframe');

    var i = enumBugKeys.length;
    var lt = '<';
    var gt = '>';
    var iframeDocument;
    iframe.style.display = 'none';

    _$$_REQUIRE(_dependencyMap[5]).appendChild(iframe);

    iframe.src = 'javascript:';
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write("<script>document.F=Object</script>");
    iframeDocument.close();
    _createDict = iframeDocument.F;

    while (i--) {
      delete _createDict[PROTOTYPE][enumBugKeys[i]];
    }

    return _createDict();
  };

  module.exports = Object.create || function create(O, Properties) {
    var result;

    if (O !== null) {
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty();
      Empty[PROTOTYPE] = null;
      result[IE_PROTO] = O;
    } else result = _createDict();

    return Properties === undefined ? result : dPs(result, Properties);
  };
},547,[504,548,528,524,509,549]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var dP = _$$_REQUIRE(_dependencyMap[0]);

  var anObject = _$$_REQUIRE(_dependencyMap[1]);

  var getKeys = _$$_REQUIRE(_dependencyMap[2]);

  module.exports = _$$_REQUIRE(_dependencyMap[3]) ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys = getKeys(Properties);
    var length = keys.length;
    var i = 0;
    var P;

    while (length > i) {
      dP.f(O, P = keys[i++], Properties[P]);
    }

    return O;
  };
},548,[503,504,514,507]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var document = _$$_REQUIRE(_dependencyMap[0]).document;

  module.exports = document && document.documentElement;
},549,[498]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var def = _$$_REQUIRE(_dependencyMap[0]).f;

  var has = _$$_REQUIRE(_dependencyMap[1]);

  var TAG = _$$_REQUIRE(_dependencyMap[2])('toStringTag');

  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
      configurable: true,
      value: tag
    });
  };
},550,[503,512,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var store = _$$_REQUIRE(_dependencyMap[0])('wks');

  var uid = _$$_REQUIRE(_dependencyMap[1]);

  var Symbol = _$$_REQUIRE(_dependencyMap[2]).Symbol;

  var USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function (name) {
    return store[name] || (store[name] = USE_SYMBOL && (typeof Symbol === "function" ? Symbol[name] : "@@name") || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };

  $exports.store = store;
},551,[525,527,498]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var has = _$$_REQUIRE(_dependencyMap[0]);

  var toObject = _$$_REQUIRE(_dependencyMap[1]);

  var IE_PROTO = _$$_REQUIRE(_dependencyMap[2])('IE_PROTO');

  var ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function (O) {
    O = toObject(O);
    if (has(O, IE_PROTO)) return O[IE_PROTO];

    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }

    return O instanceof Object ? ObjectProto : null;
  };
},552,[512,531,524]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  var global = _$$_REQUIRE(_dependencyMap[1]);

  var hide = _$$_REQUIRE(_dependencyMap[2]);

  var Iterators = _$$_REQUIRE(_dependencyMap[3]);

  var TO_STRING_TAG = _$$_REQUIRE(_dependencyMap[4])('toStringTag');

  var DOMIterables = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(',');

  for (var i = 0; i < DOMIterables.length; i++) {
    var NAME = DOMIterables[i];
    var Collection = global[NAME];
    var proto = Collection && Collection.prototype;
    if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = Iterators.Array;
  }
},553,[554,498,502,545,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var addToUnscopables = _$$_REQUIRE(_dependencyMap[0]);

  var step = _$$_REQUIRE(_dependencyMap[1]);

  var Iterators = _$$_REQUIRE(_dependencyMap[2]);

  var toIObject = _$$_REQUIRE(_dependencyMap[3]);

  module.exports = _$$_REQUIRE(_dependencyMap[4])(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated);
    this._i = 0;
    this._k = kind;
  }, function () {
    var O = this._t;
    var kind = this._k;
    var index = this._i++;

    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }

    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');
  Iterators.Arguments = Iterators.Array;
  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
},554,[555,556,545,516,543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function () {};
},555,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function (done, value) {
    return {
      value: value,
      done: !!done
    };
  };
},556,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.f = _$$_REQUIRE(_dependencyMap[0]);
},557,[551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},558,[559]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  module.exports = _$$_REQUIRE(_dependencyMap[4]).Symbol;
},559,[560,568,569,570,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var global = _$$_REQUIRE(_dependencyMap[0]);

  var has = _$$_REQUIRE(_dependencyMap[1]);

  var DESCRIPTORS = _$$_REQUIRE(_dependencyMap[2]);

  var $export = _$$_REQUIRE(_dependencyMap[3]);

  var redefine = _$$_REQUIRE(_dependencyMap[4]);

  var META = _$$_REQUIRE(_dependencyMap[5]).KEY;

  var $fails = _$$_REQUIRE(_dependencyMap[6]);

  var shared = _$$_REQUIRE(_dependencyMap[7]);

  var setToStringTag = _$$_REQUIRE(_dependencyMap[8]);

  var uid = _$$_REQUIRE(_dependencyMap[9]);

  var wks = _$$_REQUIRE(_dependencyMap[10]);

  var wksExt = _$$_REQUIRE(_dependencyMap[11]);

  var wksDefine = _$$_REQUIRE(_dependencyMap[12]);

  var enumKeys = _$$_REQUIRE(_dependencyMap[13]);

  var isArray = _$$_REQUIRE(_dependencyMap[14]);

  var anObject = _$$_REQUIRE(_dependencyMap[15]);

  var isObject = _$$_REQUIRE(_dependencyMap[16]);

  var toIObject = _$$_REQUIRE(_dependencyMap[17]);

  var toPrimitive = _$$_REQUIRE(_dependencyMap[18]);

  var createDesc = _$$_REQUIRE(_dependencyMap[19]);

  var _create = _$$_REQUIRE(_dependencyMap[20]);

  var gOPNExt = _$$_REQUIRE(_dependencyMap[21]);

  var $GOPD = _$$_REQUIRE(_dependencyMap[22]);

  var $DP = _$$_REQUIRE(_dependencyMap[23]);

  var $keys = _$$_REQUIRE(_dependencyMap[24]);

  var gOPD = $GOPD.f;
  var dP = $DP.f;
  var gOPN = gOPNExt.f;
  var $Symbol = global.Symbol;
  var $JSON = global.JSON;

  var _stringify = $JSON && $JSON.stringify;

  var PROTOTYPE = 'prototype';
  var HIDDEN = wks('_hidden');
  var TO_PRIMITIVE = wks('toPrimitive');
  var isEnum = {}.propertyIsEnumerable;
  var SymbolRegistry = shared('symbol-registry');
  var AllSymbols = shared('symbols');
  var OPSymbols = shared('op-symbols');
  var ObjectProto = Object[PROTOTYPE];
  var USE_NATIVE = typeof $Symbol == 'function';
  var QObject = global.QObject;
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
  var setSymbolDesc = DESCRIPTORS && $fails(function () {
    return _create(dP({}, 'a', {
      get: function get() {
        return dP(this, 'a', {
          value: 7
        }).a;
      }
    })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = gOPD(ObjectProto, key);
    if (protoDesc) delete ObjectProto[key];
    dP(it, key, D);
    if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function wrap(tag) {
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);

    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);

    if (has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _create(D, {
          enumerable: createDesc(0, false)
        });
      }

      return setSymbolDesc(it, key, D);
    }

    return dP(it, key, D);
  };

  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P));
    var i = 0;
    var l = keys.length;
    var key;

    while (l > i) {
      $defineProperty(it, key = keys[i++], P[key]);
    }

    return it;
  };

  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };

  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };

  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = toIObject(it);
    key = toPrimitive(key, true);
    if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
    var D = gOPD(it, key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };

  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN(toIObject(it));
    var result = [];
    var i = 0;
    var key;

    while (names.length > i) {
      if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
    }

    return result;
  };

  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto;
    var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
    var result = [];
    var i = 0;
    var key;

    while (names.length > i) {
      if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
    }

    return result;
  };

  if (!USE_NATIVE) {
    $Symbol = function Symbol() {
      if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);

      var $set = function $set(value) {
        if (this === ObjectProto) $set.call(OPSymbols, value);
        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };

      if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {
        configurable: true,
        set: $set
      });
      return wrap(tag);
    };

    redefine($Symbol[PROTOTYPE], 'toString', function toString() {
      return this._k;
    });
    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f = $defineProperty;
    _$$_REQUIRE(_dependencyMap[25]).f = gOPNExt.f = $getOwnPropertyNames;
    _$$_REQUIRE(_dependencyMap[26]).f = $propertyIsEnumerable;
    _$$_REQUIRE(_dependencyMap[27]).f = $getOwnPropertySymbols;

    if (DESCRIPTORS && !_$$_REQUIRE(_dependencyMap[28])) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function (name) {
      return wrap(wks(name));
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {
    Symbol: $Symbol
  });

  for (var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {
    wks(es6Symbols[j++]);
  }

  for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) {
    wksDefine(wellKnownSymbols[k++]);
  }

  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    'for': function _for(key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    keyFor: function keyFor(sym) {
      if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');

      for (var key in SymbolRegistry) {
        if (SymbolRegistry[key] === sym) return key;
      }
    },
    useSetter: function useSetter() {
      setter = true;
    },
    useSimple: function useSimple() {
      setter = false;
    }
  });
  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    create: $create,
    defineProperty: $defineProperty,
    defineProperties: $defineProperties,
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    getOwnPropertyNames: $getOwnPropertyNames,
    getOwnPropertySymbols: $getOwnPropertySymbols
  });
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
    var S = $Symbol();
    return _stringify([S]) != '[null]' || _stringify({
      a: S
    }) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it) {
      var args = [it];
      var i = 1;
      var replacer, $replacer;

      while (arguments.length > i) {
        args.push(arguments[i++]);
      }

      $replacer = replacer = args[1];
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return;
      if (!isArray(replacer)) replacer = function replacer(key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || _$$_REQUIRE(_dependencyMap[29])($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  setToStringTag($Symbol, 'Symbol');
  setToStringTag(Math, 'Math', true);
  setToStringTag(global.JSON, 'JSON', true);
},560,[498,512,507,497,544,561,508,525,550,527,551,557,562,563,564,504,505,516,510,511,547,565,567,503,514,566,530,529,526,502]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var META = _$$_REQUIRE(_dependencyMap[0])('meta');

  var isObject = _$$_REQUIRE(_dependencyMap[1]);

  var has = _$$_REQUIRE(_dependencyMap[2]);

  var setDesc = _$$_REQUIRE(_dependencyMap[3]).f;

  var id = 0;

  var isExtensible = Object.isExtensible || function () {
    return true;
  };

  var FREEZE = !_$$_REQUIRE(_dependencyMap[4])(function () {
    return isExtensible(Object.preventExtensions({}));
  });

  var setMeta = function setMeta(it) {
    setDesc(it, META, {
      value: {
        i: 'O' + ++id,
        w: {}
      }
    });
  };

  var fastKey = function fastKey(it, create) {
    if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

    if (!has(it, META)) {
      if (!isExtensible(it)) return 'F';
      if (!create) return 'E';
      setMeta(it);
    }

    return it[META].i;
  };

  var getWeak = function getWeak(it, create) {
    if (!has(it, META)) {
      if (!isExtensible(it)) return true;
      if (!create) return false;
      setMeta(it);
    }

    return it[META].w;
  };

  var onFreeze = function onFreeze(it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
    return it;
  };

  var meta = module.exports = {
    KEY: META,
    NEED: false,
    fastKey: fastKey,
    getWeak: getWeak,
    onFreeze: onFreeze
  };
},561,[527,505,512,503,508]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var global = _$$_REQUIRE(_dependencyMap[0]);

  var core = _$$_REQUIRE(_dependencyMap[1]);

  var LIBRARY = _$$_REQUIRE(_dependencyMap[2]);

  var wksExt = _$$_REQUIRE(_dependencyMap[3]);

  var defineProperty = _$$_REQUIRE(_dependencyMap[4]).f;

  module.exports = function (name) {
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, {
      value: wksExt.f(name)
    });
  };
},562,[498,499,526,557,503]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getKeys = _$$_REQUIRE(_dependencyMap[0]);

  var gOPS = _$$_REQUIRE(_dependencyMap[1]);

  var pIE = _$$_REQUIRE(_dependencyMap[2]);

  module.exports = function (it) {
    var result = getKeys(it);
    var getSymbols = gOPS.f;

    if (getSymbols) {
      var symbols = getSymbols(it);
      var isEnum = pIE.f;
      var i = 0;
      var key;

      while (symbols.length > i) {
        if (isEnum.call(it, key = symbols[i++])) result.push(key);
      }
    }

    return result;
  };
},563,[514,529,530]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cof = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Array.isArray || function isArray(arg) {
    return cof(arg) == 'Array';
  };
},564,[518]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toIObject = _$$_REQUIRE(_dependencyMap[0]);

  var gOPN = _$$_REQUIRE(_dependencyMap[1]).f;

  var toString = {}.toString;
  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function getWindowNames(it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };
},565,[516,566]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var $keys = _$$_REQUIRE(_dependencyMap[0]);

  var hiddenKeys = _$$_REQUIRE(_dependencyMap[1]).concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $keys(O, hiddenKeys);
  };
},566,[515,528]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var pIE = _$$_REQUIRE(_dependencyMap[0]);

  var createDesc = _$$_REQUIRE(_dependencyMap[1]);

  var toIObject = _$$_REQUIRE(_dependencyMap[2]);

  var toPrimitive = _$$_REQUIRE(_dependencyMap[3]);

  var has = _$$_REQUIRE(_dependencyMap[4]);

  var IE8_DOM_DEFINE = _$$_REQUIRE(_dependencyMap[5]);

  var gOPD = Object.getOwnPropertyDescriptor;
  exports.f = _$$_REQUIRE(_dependencyMap[6]) ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = toIObject(O);
    P = toPrimitive(P, true);
    if (IE8_DOM_DEFINE) try {
      return gOPD(O, P);
    } catch (e) {}
    if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
  };
},567,[530,511,516,510,512,506,507]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {},568,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0])('asyncIterator');
},569,[562]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0])('observable');
},570,[562]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

  var _create = _$$_REQUIRE(_dependencyMap[1]);

  var _create2 = _interopRequireDefault(_create);

  var _typeof2 = _$$_REQUIRE(_dependencyMap[2]);

  var _typeof3 = _interopRequireDefault(_typeof2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }

    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };
},571,[572,576,538]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},572,[573]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  module.exports = _$$_REQUIRE(_dependencyMap[1]).Object.setPrototypeOf;
},573,[574,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var $export = _$$_REQUIRE(_dependencyMap[0]);

  $export($export.S, 'Object', {
    setPrototypeOf: _$$_REQUIRE(_dependencyMap[1]).set
  });
},574,[497,575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]);

  var anObject = _$$_REQUIRE(_dependencyMap[1]);

  var check = function check(O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
  };

  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {
      try {
        set = _$$_REQUIRE(_dependencyMap[2])(Function.call, _$$_REQUIRE(_dependencyMap[3]).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }

      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
},575,[505,504,500,567]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},576,[577]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  var $Object = _$$_REQUIRE(_dependencyMap[1]).Object;

  module.exports = function create(P, D) {
    return $Object.create(P, D);
  };
},577,[578,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var $export = _$$_REQUIRE(_dependencyMap[0]);

  $export($export.S, 'Object', {
    create: _$$_REQUIRE(_dependencyMap[1])
  });
},578,[497,547]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Collapsible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _config = _$$_REQUIRE(_dependencyMap[13]);

  var COLLAPSIBLE_PROPS = Object.keys(_Collapsible.default.propTypes);
  var VIEW_PROPS = Object.keys(_config.ViewPropTypes);

  var Accordion = function (_Component) {
    (0, _inherits2.default)(Accordion, _Component);

    function Accordion() {
      (0, _classCallCheck2.default)(this, Accordion);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Accordion).apply(this, arguments));
    }

    (0, _createClass2.default)(Accordion, [{
      key: "_toggleSection",
      value: function _toggleSection(section) {
        if (!this.props.disabled) {
          var _this$props = this.props,
              activeSections = _this$props.activeSections,
              expandMultiple = _this$props.expandMultiple,
              onChange = _this$props.onChange;
          var updatedSections = [];

          if (activeSections.includes(section)) {
            updatedSections = activeSections.filter(function (a) {
              return a !== section;
            });
          } else if (expandMultiple) {
            updatedSections = [].concat((0, _toConsumableArray2.default)(activeSections), [section]);
          } else {
            updatedSections = [section];
          }

          onChange && onChange(updatedSections);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this = this;

        var viewProps = {};
        var collapsibleProps = {};
        Object.keys(this.props).forEach(function (key) {
          if (COLLAPSIBLE_PROPS.includes(key)) {
            collapsibleProps[key] = _this.props[key];
          } else if (VIEW_PROPS.includes(key)) {
            viewProps[key] = _this.props[key];
          }
        });
        var _this$props2 = this.props,
            activeSections = _this$props2.activeSections,
            containerStyle = _this$props2.containerStyle,
            sectionContainerStyle = _this$props2.sectionContainerStyle,
            expandFromBottom = _this$props2.expandFromBottom,
            sections = _this$props2.sections,
            underlayColor = _this$props2.underlayColor,
            touchableProps = _this$props2.touchableProps,
            Touchable = _this$props2.touchableComponent,
            _onAnimationEnd = _this$props2.onAnimationEnd,
            renderContent = _this$props2.renderContent,
            renderHeader = _this$props2.renderHeader,
            renderSectionTitle = _this$props2.renderSectionTitle;

        var renderCollapsible = function renderCollapsible(section, key) {
          return _react.default.createElement(_Collapsible.default, (0, _extends2.default)({
            collapsed: !activeSections.includes(key)
          }, collapsibleProps, {
            onAnimationEnd: function onAnimationEnd() {
              return _onAnimationEnd(section, key);
            }
          }), renderContent(section, key, activeSections.includes(key), sections));
        };

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: containerStyle
        }, viewProps), sections.map(function (section, key) {
          return _react.default.createElement(_reactNative.View, {
            key: key,
            style: sectionContainerStyle
          }, renderSectionTitle(section, key, activeSections.includes(key)), expandFromBottom && renderCollapsible(section, key), _react.default.createElement(Touchable, (0, _extends2.default)({
            onPress: function onPress() {
              return _this._toggleSection(key);
            },
            underlayColor: underlayColor
          }, touchableProps), renderHeader(section, key, activeSections.includes(key), sections)), !expandFromBottom && renderCollapsible(section, key));
        }));
      }
    }]);
    return Accordion;
  }(_react.Component);

  exports.default = Accordion;
  Accordion.propTypes = {
    sections: _propTypes.default.array.isRequired,
    renderHeader: _propTypes.default.func.isRequired,
    renderContent: _propTypes.default.func.isRequired,
    renderSectionTitle: _propTypes.default.func,
    activeSections: _propTypes.default.arrayOf(_propTypes.default.number).isRequired,
    onChange: _propTypes.default.func.isRequired,
    align: _propTypes.default.oneOf(['top', 'center', 'bottom']),
    duration: _propTypes.default.number,
    easing: _propTypes.default.string,
    underlayColor: _propTypes.default.string,
    touchableComponent: _propTypes.default.func,
    touchableProps: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    expandFromBottom: _propTypes.default.bool,
    expandMultiple: _propTypes.default.bool,
    onAnimationEnd: _propTypes.default.func,
    sectionContainerStyle: _config.ViewPropTypes.style,
    containerStyle: _config.ViewPropTypes.style
  };
  Accordion.defaultProps = {
    underlayColor: 'black',
    disabled: false,
    expandFromBottom: false,
    expandMultiple: false,
    touchableComponent: _reactNative.TouchableHighlight,
    renderSectionTitle: function renderSectionTitle() {
      return null;
    },
    onAnimationEnd: function onAnimationEnd() {
      return null;
    },
    sectionContainerStyle: {}
  };
},579,[362,1,11,18,22,23,30,33,36,49,61,2,580,581]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _config = _$$_REQUIRE(_dependencyMap[10]);

  var ANIMATED_EASING_PREFIXES = ['easeInOut', 'easeOut', 'easeIn'];

  var Collapsible = function (_Component) {
    (0, _inherits2.default)(Collapsible, _Component);

    function Collapsible(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Collapsible);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Collapsible).call(this, props));
      _this.contentHandle = null;

      _this._handleRef = function (ref) {
        _this.contentHandle = ref;
      };

      _this._handleLayoutChange = function (event) {
        var contentHeight = event.nativeEvent.layout.height;

        if (_this.state.animating || _this.props.collapsed || _this.state.measuring || _this.state.contentHeight === contentHeight) {
          return;
        }

        _this.state.height.setValue(contentHeight);

        _this.setState({
          contentHeight: contentHeight
        });
      };

      _this.state = {
        measuring: false,
        measured: false,
        height: new _reactNative.Animated.Value(props.collapsedHeight),
        contentHeight: 0,
        animating: false
      };
      return _this;
    }

    (0, _createClass2.default)(Collapsible, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this2 = this;

        if (prevProps.collapsed !== this.props.collapsed) {
          this.setState({
            measured: false
          }, function () {
            return _this2._componentDidUpdate(prevProps);
          });
        } else {
          this._componentDidUpdate(prevProps);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.unmounted = true;
      }
    }, {
      key: "_componentDidUpdate",
      value: function _componentDidUpdate(prevProps) {
        if (prevProps.collapsed !== this.props.collapsed) {
          this._toggleCollapsed(this.props.collapsed);
        } else if (this.props.collapsed && prevProps.collapsedHeight !== this.props.collapsedHeight) {
          this.state.height.setValue(this.props.collapsedHeight);
        }
      }
    }, {
      key: "_measureContent",
      value: function _measureContent(callback) {
        var _this3 = this;

        this.setState({
          measuring: true
        }, function () {
          requestAnimationFrame(function () {
            if (!_this3.contentHandle) {
              _this3.setState({
                measuring: false
              }, function () {
                return callback(_this3.props.collapsedHeight);
              });
            } else {
              _this3.contentHandle.getNode().measure(function (x, y, width, height) {
                _this3.setState({
                  measuring: false,
                  measured: true,
                  contentHeight: height
                }, function () {
                  return callback(height);
                });
              });
            }
          });
        });
      }
    }, {
      key: "_toggleCollapsed",
      value: function _toggleCollapsed(collapsed) {
        var _this4 = this;

        if (collapsed) {
          this._transitionToHeight(this.props.collapsedHeight);
        } else if (!this.contentHandle) {
          if (this.state.measured) {
            this._transitionToHeight(this.state.contentHeight);
          }

          return;
        } else {
          this._measureContent(function (contentHeight) {
            _this4._transitionToHeight(contentHeight);
          });
        }
      }
    }, {
      key: "_transitionToHeight",
      value: function _transitionToHeight(height) {
        var _this5 = this;

        var duration = this.props.duration;
        var easing = this.props.easing;

        if (typeof easing === 'string') {
          var prefix;
          var found = false;

          for (var i = 0; i < ANIMATED_EASING_PREFIXES.length; i++) {
            prefix = ANIMATED_EASING_PREFIXES[i];

            if (easing.substr(0, prefix.length) === prefix) {
              easing = easing.substr(prefix.length, 1).toLowerCase() + easing.substr(prefix.length + 1);
              prefix = prefix.substr(4, 1).toLowerCase() + prefix.substr(5);
              easing = _reactNative.Easing[prefix](_reactNative.Easing[easing || 'ease']);
              found = true;
              break;
            }
          }

          if (!found) {
            easing = _reactNative.Easing[easing];
          }

          if (!easing) {
            throw new Error('Invalid easing type "' + this.props.easing + '"');
          }
        }

        if (this._animation) {
          this._animation.stop();
        }

        this.setState({
          animating: true
        });
        this._animation = _reactNative.Animated.timing(this.state.height, {
          toValue: height,
          duration: duration,
          easing: easing
        }).start(function () {
          if (_this5.unmounted) {
            return;
          }

          _this5.setState({
            animating: false
          }, function () {
            if (_this5.unmounted) {
              return;
            }

            _this5.props.onAnimationEnd();
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            collapsed = _this$props.collapsed,
            enablePointerEvents = _this$props.enablePointerEvents;
        var _this$state = this.state,
            height = _this$state.height,
            contentHeight = _this$state.contentHeight,
            measuring = _this$state.measuring,
            measured = _this$state.measured;
        var hasKnownHeight = !measuring && (measured || collapsed);
        var style = hasKnownHeight && {
          overflow: 'hidden',
          height: height
        };
        var contentStyle = {};

        if (measuring) {
          contentStyle.position = 'absolute';
          contentStyle.opacity = 0;
        } else if (this.props.align === 'center') {
          contentStyle.transform = [{
            translateY: height.interpolate({
              inputRange: [0, contentHeight],
              outputRange: [contentHeight / -2, 0]
            })
          }];
        } else if (this.props.align === 'bottom') {
          contentStyle.transform = [{
            translateY: height.interpolate({
              inputRange: [0, contentHeight],
              outputRange: [-contentHeight, 0]
            })
          }];
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: style,
          pointerEvents: !enablePointerEvents && collapsed ? 'none' : 'auto'
        }, _react.default.createElement(_reactNative.Animated.View, {
          ref: this._handleRef,
          style: [this.props.style, contentStyle],
          onLayout: this.state.animating ? undefined : this._handleLayoutChange
        }, this.props.children));
      }
    }]);
    return Collapsible;
  }(_react.Component);

  exports.default = Collapsible;
  Collapsible.propTypes = {
    align: _propTypes.default.oneOf(['top', 'center', 'bottom']),
    collapsed: _propTypes.default.bool,
    collapsedHeight: _propTypes.default.number,
    enablePointerEvents: _propTypes.default.bool,
    duration: _propTypes.default.number,
    easing: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
    style: _config.ViewPropTypes.style,
    onAnimationEnd: _propTypes.default.func,
    children: _propTypes.default.node
  };
  Collapsible.defaultProps = {
    align: 'top',
    collapsed: true,
    collapsedHeight: 0,
    enablePointerEvents: false,
    duration: 300,
    easing: 'easeOutCubic',
    onAnimationEnd: function onAnimationEnd() {
      return null;
    }
  };
},580,[362,1,22,23,30,33,36,49,61,2,581]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ViewPropTypes = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var ViewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;
  exports.ViewPropTypes = ViewPropTypes;
},581,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _iconsReactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Icon = function (_React$Component) {
    (0, _inherits3['default'])(Icon, _React$Component);

    function Icon() {
      (0, _classCallCheck3['default'])(this, Icon);
      return (0, _possibleConstructorReturn3['default'])(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Icon, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            size = _a.size,
            color = _a.color,
            name = _a.name,
            rest = __rest(_a, ["size", "color", "name"]);

        var sizeMap = {
          xxs: 15,
          xs: 18,
          sm: 21,
          md: 22,
          lg: 36
        };
        var fontSize = typeof size === 'string' ? sizeMap[size] : size;
        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          return _react2['default'].createElement(_iconsReactNative.IconOutline, (0, _extends3['default'])({
            size: fontSize,
            color: color || theme.color_icon_base,
            name: name
          }, rest));
        });
      }
    }]);
    return Icon;
  }(_react2['default'].Component);

  exports['default'] = Icon;
  Icon.defaultProps = {
    size: 'md'
  };
  Icon.displayName = 'Icon';
  module.exports = exports['default'];
},582,[493,532,533,537,571,583,49,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _fill = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, 'IconFill', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_fill)['default'];
    }
  });

  var _outline = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, 'IconOutline', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_outline)['default'];
    }
  });

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }
},583,[584,586]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fillGlyphMap = undefined;

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = _$$_REQUIRE(_dependencyMap[1]);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[4]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var React = _interopRequireWildcard(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj["default"] = obj;
      return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  var fillGlyphMap = exports.fillGlyphMap = {
    "account-book": 57345,
    alert: 57346,
    "alipay-circle": 57347,
    "alipay-square": 57348,
    aliwangwang: 57349,
    "amazon-circle": 57350,
    "amazon-square": 57351,
    android: 57352,
    api: 57353,
    apple: 57354,
    appstore: 57355,
    audio: 57356,
    backward: 57357,
    bank: 57358,
    "behance-circle": 57359,
    "behance-square": 57360,
    bell: 57361,
    book: 57362,
    "box-plot": 57363,
    build: 57364,
    bulb: 57365,
    calculator: 57366,
    calendar: 57367,
    camera: 57368,
    car: 57369,
    "caret-down": 57370,
    "caret-left": 57371,
    "caret-right": 57372,
    "caret-up": 57373,
    "carry-out": 57374,
    "check-circle": 57375,
    "check-square": 57376,
    chrome: 57377,
    "ci-circle": 57378,
    "clock-circle": 57379,
    "close-circle": 57380,
    "close-square": 57381,
    cloud: 57382,
    "code-sandbox-circle": 57383,
    "code-sandbox-square": 57384,
    code: 57385,
    "codepen-circle": 57386,
    "codepen-square": 57387,
    compass: 57388,
    contacts: 57389,
    container: 57390,
    control: 57391,
    copy: 57392,
    "copyright-circle": 57393,
    "credit-card": 57394,
    crown: 57395,
    "customer-service": 57396,
    dashboard: 57397,
    database: 57398,
    "delete": 57399,
    diff: 57400,
    "dingtalk-circle": 57401,
    "dingtalk-square": 57402,
    dislike: 57403,
    "dollar-circle": 57404,
    "down-circle": 57405,
    "down-square": 57406,
    "dribbble-circle": 57407,
    "dribbble-square": 57408,
    "dropbox-circle": 57409,
    "dropbox-square": 57410,
    edit: 57411,
    environment: 57412,
    "euro-circle": 57413,
    "exclamation-circle": 57414,
    experiment: 57415,
    "eye-invisible": 57416,
    eye: 57417,
    facebook: 57418,
    "fast-backward": 57419,
    "fast-forward": 57420,
    "file-add": 57421,
    "file-excel": 57422,
    "file-exclamation": 57423,
    "file-image": 57424,
    "file-markdown": 57425,
    "file-pdf": 57426,
    "file-ppt": 57427,
    "file-text": 57428,
    "file-unknown": 57429,
    "file-word": 57430,
    "file-zip": 57431,
    file: 57432,
    filter: 57433,
    fire: 57434,
    flag: 57435,
    "folder-add": 57436,
    "folder-open": 57437,
    folder: 57438,
    forward: 57439,
    frown: 57440,
    fund: 57441,
    "funnel-plot": 57442,
    gift: 57443,
    github: 57444,
    gitlab: 57445,
    golden: 57446,
    "google-circle": 57447,
    "google-plus-circle": 57448,
    "google-plus-square": 57449,
    "google-square": 57450,
    hdd: 57451,
    heart: 57452,
    highlight: 57453,
    home: 57454,
    hourglass: 57455,
    html5: 57456,
    idcard: 57457,
    "ie-circle": 57458,
    "ie-square": 57459,
    "info-circle": 57460,
    instagram: 57461,
    insurance: 57462,
    interation: 57463,
    layout: 57464,
    "left-circle": 57465,
    "left-square": 57466,
    like: 57467,
    linkedin: 57468,
    lock: 57469,
    mail: 57470,
    "medicine-box": 57471,
    "medium-circle": 57472,
    "medium-square": 57473,
    meh: 57474,
    message: 57475,
    "minus-circle": 57476,
    "minus-square": 57477,
    mobile: 57478,
    "money-collect": 57479,
    notification: 57480,
    "pause-circle": 57481,
    "pay-circle": 57482,
    phone: 57483,
    picture: 57484,
    "pie-chart": 57485,
    "play-circle": 57486,
    "play-square": 57487,
    "plus-circle": 57488,
    "plus-square": 57489,
    "pound-circle": 57490,
    printer: 57491,
    profile: 57492,
    project: 57493,
    "property-safety": 57494,
    pushpin: 57495,
    "qq-circle": 57496,
    "qq-square": 57497,
    "question-circle": 57498,
    read: 57499,
    reconciliation: 57500,
    "red-envelope": 57501,
    "reddit-circle": 57502,
    "reddit-square": 57503,
    rest: 57504,
    "right-circle": 57505,
    "right-square": 57506,
    rocket: 57507,
    "safety-certificate": 57508,
    save: 57509,
    schedule: 57510,
    "security-scan": 57511,
    setting: 57512,
    shop: 57513,
    shopping: 57514,
    "sketch-circle": 57515,
    "sketch-square": 57516,
    skin: 57517,
    skype: 57518,
    "slack-circle": 57519,
    "slack-square": 57520,
    sliders: 57521,
    smile: 57522,
    snippets: 57523,
    sound: 57524,
    star: 57525,
    "step-backward": 57526,
    "step-forward": 57527,
    stop: 57528,
    switcher: 57529,
    tablet: 57530,
    tag: 57531,
    tags: 57532,
    "taobao-circle": 57533,
    "taobao-square": 57534,
    thunderbolt: 57535,
    tool: 57536,
    "trademark-circle": 57537,
    trophy: 57538,
    "twitter-circle": 57539,
    "twitter-square": 57540,
    unlock: 57541,
    "up-circle": 57542,
    "up-square": 57543,
    usb: 57544,
    "video-camera": 57545,
    wallet: 57546,
    warning: 57547,
    wechat: 57548,
    "weibo-circle": 57549,
    "weibo-square": 57550,
    windows: 57551,
    yahoo: 57552,
    youtube: 57553,
    yuque: 57554,
    "zhihu-circle": 57555,
    "zhihu-square": 57556
  };

  var IconFill = function (_React$PureComponent) {
    (0, _inherits3["default"])(IconFill, _React$PureComponent);

    function IconFill() {
      (0, _classCallCheck3["default"])(this, IconFill);
      return (0, _possibleConstructorReturn3["default"])(this, (IconFill.__proto__ || Object.getPrototypeOf(IconFill)).apply(this, arguments));
    }

    (0, _createClass3["default"])(IconFill, [{
      key: "render",
      value: function render() {
        var _props = this.props,
            name = _props.name,
            style = _props.style,
            children = _props.children,
            _props$size = _props.size,
            size = _props$size === undefined ? 14 : _props$size,
            _props$color = _props.color,
            color = _props$color === undefined ? "black" : _props$color,
            props = (0, _objectWithoutProperties3["default"])(_props, ["name", "style", "children", "size", "color"]);
        var styleOverrides = {
          fontFamily: "antfill",
          fontWeight: "normal",
          fontStyle: "normal",
          fontSize: size,
          color: color
        };
        var glyph = name ? fillGlyphMap[name] || "?" : "";

        if (typeof glyph === "number") {
          glyph = String.fromCharCode(glyph);
        }

        return React.createElement(_reactNative.Text, (0, _extends3["default"])({}, props, {
          style: [styleOverrides, style]
        }), glyph, children);
      }
    }]);
    return IconFill;
  }(React.PureComponent);

  exports["default"] = IconFill;
},584,[493,585,532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  exports.default = function (obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  };
},585,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.outlineGlyphMap = undefined;

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = _$$_REQUIRE(_dependencyMap[1]);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[4]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var React = _interopRequireWildcard(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj["default"] = obj;
      return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  var outlineGlyphMap = exports.outlineGlyphMap = {
    "account-book": 57345,
    alert: 57346,
    alibaba: 57347,
    "align-center": 57348,
    "align-left": 57349,
    "align-right": 57350,
    "alipay-circle": 57351,
    alipay: 57352,
    aliwangwang: 57353,
    aliyun: 57354,
    amazon: 57355,
    android: 57356,
    "ant-cloud": 57357,
    "ant-design": 57358,
    apartment: 57359,
    api: 57360,
    apple: 57361,
    appstore: 57362,
    "area-chart": 57363,
    "arrow-down": 57364,
    "arrow-left": 57365,
    "arrow-right": 57366,
    "arrow-up": 57367,
    "arrows-alt": 57368,
    audio: 57369,
    audit: 57370,
    backward: 57371,
    bank: 57372,
    "bar-chart": 57373,
    barcode: 57374,
    bars: 57375,
    "behance-square": 57376,
    behance: 57377,
    bell: 57378,
    "bg-colors": 57379,
    block: 57380,
    bold: 57381,
    book: 57382,
    "border-bottom": 57383,
    "border-horizontal": 57384,
    "border-inner": 57385,
    "border-left": 57386,
    "border-outer": 57387,
    "border-right": 57388,
    "border-top": 57389,
    "border-verticle": 57390,
    border: 57391,
    "box-plot": 57392,
    branches: 57393,
    build: 57394,
    bulb: 57395,
    calculator: 57396,
    calendar: 57397,
    camera: 57398,
    car: 57399,
    "caret-down": 57400,
    "caret-left": 57401,
    "caret-right": 57402,
    "caret-up": 57403,
    "carry-out": 57404,
    "check-circle": 57405,
    "check-square": 57406,
    check: 57407,
    chrome: 57408,
    ci: 57409,
    "clock-circle": 57410,
    "close-circle": 57411,
    "close-square": 57412,
    close: 57413,
    "cloud-download": 57414,
    "cloud-server": 57415,
    "cloud-sync": 57416,
    "cloud-upload": 57417,
    cloud: 57418,
    cluster: 57419,
    "code-sandbox": 57420,
    code: 57421,
    "codepen-circle": 57422,
    codepen: 57423,
    coffee: 57424,
    "colum-height": 57425,
    "column-width": 57426,
    compass: 57427,
    contacts: 57428,
    container: 57429,
    control: 57430,
    copy: 57431,
    copyright: 57432,
    "credit-card": 57433,
    crown: 57434,
    "customer-service": 57435,
    dash: 57436,
    dashboard: 57437,
    database: 57438,
    "delete": 57439,
    "deployment-unit": 57440,
    desktop: 57441,
    diff: 57442,
    dingding: 57443,
    disconnect: 57444,
    dislike: 57445,
    dollar: 57446,
    "dot-chart": 57447,
    "double-left": 57448,
    "double-right": 57449,
    "down-circle": 57450,
    "down-square": 57451,
    down: 57452,
    download: 57453,
    drag: 57454,
    "dribbble-square": 57455,
    dribbble: 57456,
    dropbox: 57457,
    edit: 57458,
    ellipsis: 57459,
    enter: 57460,
    environment: 57461,
    euro: 57462,
    exception: 57463,
    "exclamation-circle": 57464,
    exclamation: 57465,
    experiment: 57466,
    "export": 57467,
    "eye-invisible": 57468,
    eye: 57469,
    facebook: 57470,
    fall: 57471,
    "fast-backward": 57472,
    "fast-forward": 57473,
    "file-add": 57474,
    "file-done": 57475,
    "file-excel": 57476,
    "file-exclamation": 57477,
    "file-image": 57478,
    "file-jpg": 57479,
    "file-markdown": 57480,
    "file-pdf": 57481,
    "file-ppt": 57482,
    "file-protect": 57483,
    "file-search": 57484,
    "file-sync": 57485,
    "file-text": 57486,
    "file-unknown": 57487,
    "file-word": 57488,
    "file-zip": 57489,
    file: 57490,
    filter: 57491,
    fire: 57492,
    flag: 57493,
    "folder-add": 57494,
    "folder-open": 57495,
    folder: 57496,
    "font-colors": 57497,
    "font-size": 57498,
    fork: 57499,
    form: 57500,
    forward: 57501,
    frown: 57502,
    "fullscreen-exit": 57503,
    fullscreen: 57504,
    fund: 57505,
    "funnel-plot": 57506,
    gateway: 57507,
    gift: 57508,
    github: 57509,
    gitlab: 57510,
    global: 57511,
    gold: 57512,
    "google-plus": 57513,
    google: 57514,
    hdd: 57515,
    heart: 57516,
    "heat-map": 57517,
    highlight: 57518,
    home: 57519,
    hourglass: 57520,
    html5: 57521,
    idcard: 57522,
    ie: 57523,
    "import": 57524,
    inbox: 57525,
    "info-circle": 57526,
    info: 57527,
    instagram: 57528,
    insurance: 57529,
    interation: 57530,
    "issues-close": 57531,
    italic: 57532,
    key: 57533,
    laptop: 57534,
    layout: 57535,
    "left-circle": 57536,
    "left-square": 57537,
    left: 57538,
    like: 57539,
    "line-chart": 57540,
    "line-height": 57541,
    line: 57542,
    link: 57543,
    linkedin: 57544,
    "loading-3-quarters": 57545,
    loading: 57546,
    lock: 57547,
    login: 57548,
    logout: 57549,
    mail: 57550,
    man: 57551,
    "medicine-box": 57552,
    "medium-workmark": 57553,
    medium: 57554,
    meh: 57555,
    "menu-fold": 57556,
    "menu-unfold": 57557,
    menu: 57558,
    message: 57559,
    "minus-circle": 57560,
    "minus-square": 57561,
    minus: 57562,
    mobile: 57563,
    "money-collect": 57564,
    monitor: 57565,
    mr: 57566,
    notification: 57567,
    number: 57568,
    "ordered-list": 57569,
    "paper-clip": 57570,
    "pause-circle": 57571,
    pause: 57572,
    "pay-circle": 57573,
    percentage: 57574,
    phone: 57575,
    "pic-center": 57576,
    "pic-left": 57577,
    "pic-right": 57578,
    picture: 57579,
    "pie-chart": 57580,
    "play-circle": 57581,
    "play-square": 57582,
    "plus-circle": 57583,
    "plus-square": 57584,
    plus: 57585,
    pound: 57586,
    poweroff: 57587,
    printer: 57588,
    profile: 57589,
    project: 57590,
    "property-safety": 57591,
    pushpin: 57592,
    qq: 57593,
    qrcode: 57594,
    "question-circle": 57595,
    question: 57596,
    "radar-chart": 57597,
    "radius-bottomleft": 57598,
    "radius-bottomright": 57599,
    "radius-setting": 57600,
    "radius-upleft": 57601,
    "radius-upright": 57602,
    read: 57603,
    reconciliation: 57604,
    "red-envelope": 57605,
    reddit: 57606,
    redo: 57607,
    "reload-time": 57608,
    reload: 57609,
    rest: 57610,
    retweet: 57611,
    "right-circle": 57612,
    "right-square": 57613,
    right: 57614,
    rise: 57615,
    robot: 57616,
    rocket: 57617,
    rollback: 57618,
    "safety-certificate": 57619,
    safety: 57620,
    save: 57621,
    scan: 57622,
    schedule: 57623,
    scissor: 57624,
    search: 57625,
    "security-scan": 57626,
    select: 57627,
    setting: 57628,
    shake: 57629,
    "share-alt": 57630,
    shop: 57631,
    "shopping-cart": 57632,
    shopping: 57633,
    shrink: 57634,
    sketch: 57635,
    skin: 57636,
    skype: 57637,
    "slack-square": 57638,
    slack: 57639,
    sliders: 57640,
    "small-dash": 57641,
    smile: 57642,
    snippets: 57643,
    solution: 57644,
    "sort-ascending": 57645,
    "sort-descending": 57646,
    sound: 57647,
    star: 57648,
    "step-backward": 57649,
    "step-forward": 57650,
    stock: 57651,
    stop: 57652,
    strikethrough: 57653,
    "swap-left": 57654,
    "swap-right": 57655,
    swap: 57656,
    switcher: 57657,
    sync: 57658,
    table: 57659,
    tablet: 57660,
    tag: 57661,
    tags: 57662,
    "taobao-circle": 57663,
    taobao: 57664,
    team: 57665,
    thunderbolt: 57666,
    "to-top": 57667,
    tool: 57668,
    trademark: 57669,
    transaction: 57670,
    trophy: 57671,
    twitter: 57672,
    underline: 57673,
    undo: 57674,
    unlock: 57675,
    "unordered-list": 57676,
    "up-circle": 57677,
    "up-square": 57678,
    up: 57679,
    upload: 57680,
    usb: 57681,
    "user-add": 57682,
    "user-delete": 57683,
    user: 57684,
    "usergroup-add": 57685,
    "usergroup-delete": 57686,
    "vertical-align-bottom": 57687,
    "vertical-align-middle": 57688,
    "vertical-align-top": 57689,
    "vertical-left": 57690,
    "vertical-right": 57691,
    "video-camera": 57692,
    wallet: 57693,
    warning: 57694,
    wechat: 57695,
    "weibo-circle": 57696,
    "weibo-square": 57697,
    weibo: 57698,
    wifi: 57699,
    windows: 57700,
    woman: 57701,
    yahoo: 57702,
    youtube: 57703,
    yuque: 57704,
    zhihu: 57705,
    "zoom-in": 57706,
    "zoom-out": 57707
  };

  var IconOutline = function (_React$PureComponent) {
    (0, _inherits3["default"])(IconOutline, _React$PureComponent);

    function IconOutline() {
      (0, _classCallCheck3["default"])(this, IconOutline);
      return (0, _possibleConstructorReturn3["default"])(this, (IconOutline.__proto__ || Object.getPrototypeOf(IconOutline)).apply(this, arguments));
    }

    (0, _createClass3["default"])(IconOutline, [{
      key: "render",
      value: function render() {
        var _props = this.props,
            name = _props.name,
            style = _props.style,
            children = _props.children,
            _props$size = _props.size,
            size = _props$size === undefined ? 14 : _props$size,
            _props$color = _props.color,
            color = _props$color === undefined ? "black" : _props$color,
            props = (0, _objectWithoutProperties3["default"])(_props, ["name", "style", "children", "size", "color"]);
        var styleOverrides = {
          fontFamily: "antoutline",
          fontWeight: "normal",
          fontStyle: "normal",
          fontSize: size,
          color: color
        };
        var glyph = name ? outlineGlyphMap[name] || "?" : "";

        if (typeof glyph === "number") {
          glyph = String.fromCharCode(glyph);
        }

        return React.createElement(_reactNative.Text, (0, _extends3["default"])({}, props, {
          style: [styleOverrides, style]
        }), glyph, children);
      }
    }]);
    return IconOutline;
  }(React.PureComponent);

  exports["default"] = IconOutline;
},586,[493,585,532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WithTheme = exports.useTheme = exports.ThemeProvider = exports.ThemeContext = undefined;

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _extends2 = _$$_REQUIRE(_dependencyMap[4]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _deepmerge = _$$_REQUIRE(_dependencyMap[5]);

  var _deepmerge2 = _interopRequireDefault(_deepmerge);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _default = _$$_REQUIRE(_dependencyMap[7]);

  var _default2 = _interopRequireDefault(_default);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ThemeContext = exports.ThemeContext = _react2['default'].createContext(_default2['default']);

  var ThemeProvider = exports.ThemeProvider = function ThemeProvider(props) {
    var theme = (0, _extends3['default'])({}, _default2['default'], props.value);
    return _react2['default'].createElement(ThemeContext.Provider, {
      value: theme
    }, props.children);
  };

  var useTheme = exports.useTheme = function useTheme() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var theme = (0, _react.useContext)(ThemeContext);
    return (0, _extends3['default'])({}, theme, props.theme);
  };

  var WithTheme = exports.WithTheme = function (_React$Component) {
    (0, _inherits3['default'])(WithTheme, _React$Component);

    function WithTheme() {
      (0, _classCallCheck3['default'])(this, WithTheme);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (WithTheme.__proto__ || Object.getPrototypeOf(WithTheme)).apply(this, arguments));

      _this.getStyles = function (theme) {
        var _this$props = _this.props,
            themeStyles = _this$props.themeStyles,
            styles = _this$props.styles;
        var defaultThemeStyles = themeStyles(theme);

        if (styles) {
          return (0, _deepmerge2['default'])(defaultThemeStyles, styles);
        }

        return defaultThemeStyles;
      };

      return _this;
    }

    (0, _createClass3['default'])(WithTheme, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        return _react2['default'].createElement(ThemeContext.Consumer, null, function (theme) {
          return _this2.props.children(_this2.getStyles(theme), theme);
        });
      }
    }]);
    return WithTheme;
  }(_react2['default'].Component);

  WithTheme.defaultProps = {
    themeStyles: function themeStyles() {}
  };
},587,[532,533,537,571,493,588,49,589]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.deepmerge = factory();
  })(this, function () {
    'use strict';

    var isMergeableObject = function isMergeableObject(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };

    function isNonNullObject(value) {
      return !!value && typeof value === 'object';
    }

    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
    }

    var canUseSymbol = typeof Symbol === 'function' && (typeof Symbol === "function" ? Symbol.for : "@@for");
    var REACT_ELEMENT_TYPE = canUseSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")('react.element') : 0xeac7;

    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }

    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }

    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
    }

    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function (element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }

    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge;
      }

      var customMerge = options.customMerge(key);
      return typeof customMerge === 'function' ? customMerge : deepmerge;
    }

    function mergeObject(target, source, options) {
      var destination = {};

      if (options.isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }

      Object.keys(source).forEach(function (key) {
        if (!options.isMergeableObject(source[key]) || !target[key]) {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        } else {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        }
      });
      return destination;
    }

    function deepmerge(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }

    deepmerge.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error('first argument should be an array');
      }

      return array.reduce(function (prev, next) {
        return deepmerge(prev, next, options);
      }, {});
    };

    var deepmerge_1 = deepmerge;
    return deepmerge_1;
  });
},588,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var brandPrimary = '#108ee9';
  var brandPrimaryTap = '#1284d6';
  exports['default'] = {
    color_text_base: '#000000',
    color_text_base_inverse: '#ffffff',
    color_text_secondary: '#a4a9b0',
    color_text_placeholder: '#bbbbbb',
    color_text_disabled: '#bbbbbb',
    color_text_caption: '#888888',
    color_text_paragraph: '#333333',
    color_link: brandPrimary,
    fill_base: '#ffffff',
    fill_body: '#f5f5f9',
    fill_tap: '#dddddd',
    fill_disabled: '#dddddd',
    fill_mask: 'rgba(0, 0, 0, .4)',
    color_icon_base: '#cccccc',
    fill_grey: '#f7f7f7',
    opacity_disabled: '0.3',
    brand_primary: brandPrimary,
    brand_primary_tap: brandPrimaryTap,
    brand_success: '#6abf47',
    brand_warning: '#f4333c',
    brand_error: '#f4333c',
    brand_important: '#ff5b05',
    brand_wait: '#108ee9',
    border_color_base: '#dddddd',
    font_size_icontext: 10,
    font_size_caption_sm: 12,
    font_size_base: 14,
    font_size_subhead: 15,
    font_size_caption: 16,
    font_size_heading: 17,
    radius_xs: 2,
    radius_sm: 3,
    radius_md: 5,
    radius_lg: 7,
    border_width_sm: 0.5,
    border_width_md: 1,
    border_width_lg: 2,
    h_spacing_sm: 5,
    h_spacing_md: 8,
    h_spacing_lg: 15,
    v_spacing_xs: 3,
    v_spacing_sm: 6,
    v_spacing_md: 9,
    v_spacing_lg: 15,
    v_spacing_xl: 21,
    line_height_base: 1,
    line_height_paragraph: 1.5,
    icon_size_xxs: 15,
    icon_size_xs: 18,
    icon_size_sm: 21,
    icon_size_md: 22,
    icon_size_lg: 36,
    ease_in_out_quint: 'cubic_bezier(0.86, 0, 0.07, 1)',
    actionsheet_item_height: 50,
    actionsheet_item_font_size: 18,
    button_height: 47,
    button_font_size: 18,
    button_height_sm: 23,
    button_font_size_sm: 12,
    primary_button_fill: brandPrimary,
    primary_button_fill_tap: '#0e80d2',
    ghost_button_color: brandPrimary,
    ghost_button_fill_tap: "#108ee999",
    warning_button_fill: '#e94f4f',
    warning_button_fill_tap: '#d24747',
    link_button_fill_tap: '#dddddd',
    link_button_font_size: 16,
    modal_font_size_heading: 18,
    modal_button_font_size: 18,
    modal_button_height: 50,
    list_title_height: 30,
    list_item_height_sm: 35,
    list_item_height: 44,
    input_label_width: 17,
    input_font_size: 17,
    input_color_icon: '#cccccc',
    input_color_icon_tap: brandPrimary,
    tabs_color: brandPrimary,
    tabs_height: 42,
    tabs_font_size_heading: 15,
    segmented_control_color: brandPrimary,
    segmented_control_height: 27,
    segmented_control_fill_tap: "#108ee910",
    tab_bar_fill: '#ebeeef',
    tab_bar_height: 50,
    toast_fill: 'rgba(0, 0, 0, .8)',
    search_bar_fill: '#efeff4',
    search_bar_height: 44,
    search_bar_input_height: 28,
    search_bar_font_size: 15,
    search_color_icon: '#bbbbbb',
    notice_bar_fill: '#fffada',
    notice_bar_height: 36,
    switch_fill: '#4dd865',
    tag_height: 25,
    tag_small_height: 15,
    option_height: 42,
    toast_zindex: 1999,
    action_sheet_zindex: 1000,
    popup_zindex: 999,
    modal_zindex: 999
  };
  module.exports = exports['default'];
},589,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
        borderTopColor: theme.border_color_base
      },
      header: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingLeft: theme.h_spacing_lg,
        paddingRight: 2 * theme.h_spacing_lg,
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
        borderBottomColor: theme.border_color_base
      },
      arrow: {
        color: theme.color_icon_base
      },
      headerWrap: {
        flex: 1,
        height: theme.list_item_height,
        alignItems: 'center',
        flexDirection: 'row'
      },
      headerText: {
        color: theme.color_text_base,
        fontSize: theme.font_size_heading
      },
      content: {
        paddingVertical: theme.v_spacing_md,
        paddingHorizontal: theme.h_spacing_md,
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
        borderBottomColor: theme.border_color_base
      },
      contentText: {
        fontSize: theme.font_size_subhead,
        color: theme.color_text_paragraph
      }
    });
  };

  module.exports = exports['default'];
},590,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _portal = _$$_REQUIRE(_dependencyMap[2]);

  var _portal2 = _interopRequireDefault(_portal);

  var _AndroidContainer = _$$_REQUIRE(_dependencyMap[3]);

  var _AndroidContainer2 = _interopRequireDefault(_AndroidContainer);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var instance = undefined;
  exports['default'] = {
    showActionSheetWithOptions: function showActionSheetWithOptions(config, callback) {
      if (_reactNative.Platform.OS === 'ios') {
        _reactNative.ActionSheetIOS.showActionSheetWithOptions(config, callback);

        return;
      }

      var key = _portal2['default'].add(_react2['default'].createElement(_AndroidContainer2['default'], {
        visible: true,
        ref: function ref(_ref) {
          return instance = _ref;
        },
        onAnimationEnd: function onAnimationEnd(visible) {
          if (!visible) {
            _portal2['default'].remove(key);
          }
        },
        config: config,
        callback: callback
      }));
    },
    showShareActionSheetWithOptions: function showShareActionSheetWithOptions(config, failureCallback, successCallback) {
      var content = {};
      var options = {};
      content.message = config.message;

      if (config.title) {
        content.title = config.title;
        options.dialogTitle = config.title;
      }

      if (config.url) {
        content.url = config.url;
      }

      if (config.excludedActivityTypes) {
        options.excludedActivityTypes = config.excludedActivityTypes;
      }

      if (config.tintColor) {
        options.tintColor = config.tintColor;
      }

      _reactNative.Share.share(content, options).then(function (result) {
        if (result.action === _reactNative.Share.sharedAction) {
          if (successCallback) {
            successCallback(true, result.activityType);
          }
        } else if (result.action === _reactNative.Share.dismissedAction) {
          if (successCallback) {
            successCallback(false);
          }
        }
      })['catch'](function (error) {
        if (failureCallback) {
          failureCallback(error);
        }
      });
    },
    close: function close() {
      if (instance) {
        instance.close();
      }
    }
  };
  module.exports = exports['default'];
},591,[49,2,592,607]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _portal = _$$_REQUIRE(_dependencyMap[0]);

  var _portal2 = _interopRequireDefault(_portal);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = _portal2['default'];
  module.exports = exports['default'];
},592,[593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _portalConsumer = _$$_REQUIRE(_dependencyMap[5]);

  var _portalConsumer2 = _interopRequireDefault(_portalConsumer);

  var _portalHost = _$$_REQUIRE(_dependencyMap[6]);

  var _portalHost2 = _interopRequireDefault(_portalHost);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Portal = function (_React$Component) {
    (0, _inherits3['default'])(Portal, _React$Component);

    function Portal() {
      (0, _classCallCheck3['default'])(this, Portal);
      return (0, _possibleConstructorReturn3['default'])(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Portal, [{
      key: 'render',
      value: function render() {
        var children = this.props.children;
        return _react2['default'].createElement(_portalHost.PortalContext.Consumer, null, function (manager) {
          return _react2['default'].createElement(_portalConsumer2['default'], {
            manager: manager
          }, children);
        });
      }
    }]);
    return Portal;
  }(_react2['default'].Component);

  Portal.Host = _portalHost2['default'];
  Portal.add = _portalHost.portal.add;
  Portal.remove = _portalHost.portal.remove;
  exports['default'] = Portal;
  module.exports = exports['default'];
},593,[532,533,537,571,49,594,595]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PortalConsumer = function (_React$Component) {
    (0, _inherits3['default'])(PortalConsumer, _React$Component);

    function PortalConsumer() {
      (0, _classCallCheck3['default'])(this, PortalConsumer);
      return (0, _possibleConstructorReturn3['default'])(this, (PortalConsumer.__proto__ || Object.getPrototypeOf(PortalConsumer)).apply(this, arguments));
    }

    (0, _createClass3['default'])(PortalConsumer, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (!this.props.manager) {
          throw new Error('Looks like you forgot to wrap your root component with `Provider` component from `@ant-design/react-native`.\n\n');
        }

        this._key = this.props.manager.mount(this.props.children);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.props.manager.update(this._key, this.props.children);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.props.manager.unmount(this._key);
      }
    }, {
      key: 'render',
      value: function render() {
        return null;
      }
    }]);
    return PortalConsumer;
  }(_react2['default'].Component);

  exports['default'] = PortalConsumer;
  module.exports = exports['default'];
},594,[532,533,537,571,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.portal = exports.PortalContext = undefined;

  var _createClass2 = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[2]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[3]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _portalManager = _$$_REQUIRE(_dependencyMap[6]);

  var _portalManager2 = _interopRequireDefault(_portalManager);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PortalContext = exports.PortalContext = _react2['default'].createContext(null);

  var addType = 'ANT_DESIGN_MOBILE_RN_ADD_PORTAL';
  var removeType = 'ANT_DESIGN_MOBILE_RN_REMOVE_PORTAL';
  var TopViewEventEmitter = _reactNative.DeviceEventEmitter || new _reactNative.NativeEventEmitter();

  var PortalGuard = function PortalGuard() {
    var _this = this;

    (0, _classCallCheck3['default'])(this, PortalGuard);
    this.nextKey = 10000;

    this.add = function (e) {
      var key = _this.nextKey++;
      TopViewEventEmitter.emit(addType, e, key);
      return key;
    };

    this.remove = function (key) {
      return TopViewEventEmitter.emit(removeType, key);
    };
  };

  var portal = exports.portal = new PortalGuard();

  var PortalHost = function (_React$Component) {
    (0, _inherits3['default'])(PortalHost, _React$Component);

    function PortalHost() {
      (0, _classCallCheck3['default'])(this, PortalHost);

      var _this2 = (0, _possibleConstructorReturn3['default'])(this, (PortalHost.__proto__ || Object.getPrototypeOf(PortalHost)).apply(this, arguments));

      _this2._nextKey = 0;
      _this2._queue = [];

      _this2._setManager = function (manager) {
        _this2._manager = manager;
      };

      _this2._mount = function (children, _key) {
        var key = _key || _this2._nextKey++;

        if (_this2._manager) {
          _this2._manager.mount(key, children);
        } else {
          _this2._queue.push({
            type: 'mount',
            key: key,
            children: children
          });
        }

        return key;
      };

      _this2._update = function (key, children) {
        if (_this2._manager) {
          _this2._manager.update(key, children);
        } else {
          var op = {
            type: 'mount',
            key: key,
            children: children
          };

          var index = _this2._queue.findIndex(function (o) {
            return o.type === 'mount' || o.type === 'update' && o.key === key;
          });

          if (index > -1) {
            _this2._queue[index] = op;
          } else {
            _this2._queue.push(op);
          }
        }
      };

      _this2._unmount = function (key) {
        if (_this2._manager) {
          _this2._manager.unmount(key);
        } else {
          _this2._queue.push({
            type: 'unmount',
            key: key
          });
        }
      };

      return _this2;
    }

    (0, _createClass3['default'])(PortalHost, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        var manager = this._manager;
        var queue = this._queue;
        TopViewEventEmitter.addListener(addType, this._mount);
        TopViewEventEmitter.addListener(removeType, this._unmount);

        while (queue.length && manager) {
          var action = queue.pop();

          if (!action) {
            continue;
          }

          switch (action.type) {
            case 'mount':
              manager.mount(action.key, action.children);
              break;

            case 'update':
              manager.update(action.key, action.children);
              break;

            case 'unmount':
              manager.unmount(action.key);
              break;
          }
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        TopViewEventEmitter.removeListener(addType, this._mount);
        TopViewEventEmitter.removeListener(removeType, this._unmount);
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2['default'].createElement(PortalContext.Provider, {
          value: {
            mount: this._mount,
            update: this._update,
            unmount: this._unmount
          }
        }, _react2['default'].createElement(_reactNative.View, {
          style: styles.container,
          collapsable: false
        }, this.props.children), _react2['default'].createElement(_portalManager2['default'], {
          ref: this._setManager
        }));
      }
    }]);
    return PortalHost;
  }(_react2['default'].Component);

  exports['default'] = PortalHost;
  PortalHost.displayName = 'Portal.Host';

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    }
  });
},595,[533,537,571,532,49,2,596]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[1]);

  var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[4]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PortalManager = function (_React$PureComponent) {
    (0, _inherits3['default'])(PortalManager, _React$PureComponent);

    function PortalManager() {
      (0, _classCallCheck3['default'])(this, PortalManager);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (PortalManager.__proto__ || Object.getPrototypeOf(PortalManager)).apply(this, arguments));

      _this.state = {
        portals: []
      };

      _this.mount = function (key, children) {
        _this.setState(function (state) {
          return {
            portals: [].concat((0, _toConsumableArray3['default'])(state.portals), [{
              key: key,
              children: children
            }])
          };
        });
      };

      _this.update = function (key, children) {
        return _this.setState(function (state) {
          return {
            portals: state.portals.map(function (item) {
              if (item.key === key) {
                return (0, _extends3['default'])({}, item, {
                  children: children
                });
              }

              return item;
            })
          };
        });
      };

      _this.unmount = function (key) {
        return _this.setState(function (state) {
          return {
            portals: state.portals.filter(function (item) {
              return item.key !== key;
            })
          };
        });
      };

      return _this;
    }

    (0, _createClass3['default'])(PortalManager, [{
      key: 'render',
      value: function render() {
        return this.state.portals.map(function (_ref, i) {
          var key = _ref.key,
              children = _ref.children;
          return _react2['default'].createElement(_reactNative.View, {
            key: key,
            collapsable: false,
            pointerEvents: 'box-none',
            style: [_reactNative.StyleSheet.absoluteFill, {
              zIndex: 1000 + i
            }]
          }, children);
        });
      }
    }]);
    return PortalManager;
  }(_react2['default'].PureComponent);

  exports['default'] = PortalManager;
  module.exports = exports['default'];
},596,[493,597,532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _from = _$$_REQUIRE(_dependencyMap[0]);

  var _from2 = _interopRequireDefault(_from);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = function (arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    } else {
      return (0, _from2.default)(arr);
    }
  };
},597,[598]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    "default": _$$_REQUIRE(_dependencyMap[0]),
    __esModule: true
  };
},598,[599]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  module.exports = _$$_REQUIRE(_dependencyMap[2]).Array.from;
},599,[541,600,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ctx = _$$_REQUIRE(_dependencyMap[0]);

  var $export = _$$_REQUIRE(_dependencyMap[1]);

  var toObject = _$$_REQUIRE(_dependencyMap[2]);

  var call = _$$_REQUIRE(_dependencyMap[3]);

  var isArrayIter = _$$_REQUIRE(_dependencyMap[4]);

  var toLength = _$$_REQUIRE(_dependencyMap[5]);

  var createProperty = _$$_REQUIRE(_dependencyMap[6]);

  var getIterFn = _$$_REQUIRE(_dependencyMap[7]);

  $export($export.S + $export.F * !_$$_REQUIRE(_dependencyMap[8])(function (iter) {
    Array.from(iter);
  }), 'Array', {
    from: function from(arrayLike) {
      var O = toObject(arrayLike);
      var C = typeof this == 'function' ? this : Array;
      var aLen = arguments.length;
      var mapfn = aLen > 1 ? arguments[1] : undefined;
      var mapping = mapfn !== undefined;
      var index = 0;
      var iterFn = getIterFn(O);
      var length, result, step, iterator;
      if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);

      if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
        for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
          createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
        }
      } else {
        length = toLength(O.length);

        for (result = new C(length); length > index; index++) {
          createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
        }
      }

      result.length = index;
      return result;
    }
  });
},600,[500,497,531,601,602,521,603,604,606]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var anObject = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function (iterator, fn, value, entries) {
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined) anObject(ret.call(iterator));
      throw e;
    }
  };
},601,[504]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Iterators = _$$_REQUIRE(_dependencyMap[0]);

  var ITERATOR = _$$_REQUIRE(_dependencyMap[1])('iterator');

  var ArrayProto = Array.prototype;

  module.exports = function (it) {
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };
},602,[545,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var $defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var createDesc = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (object, index, value) {
    if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
  };
},603,[503,511]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var classof = _$$_REQUIRE(_dependencyMap[0]);

  var ITERATOR = _$$_REQUIRE(_dependencyMap[1])('iterator');

  var Iterators = _$$_REQUIRE(_dependencyMap[2]);

  module.exports = _$$_REQUIRE(_dependencyMap[3]).getIteratorMethod = function (it) {
    if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
  };
},604,[605,551,545,499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cof = _$$_REQUIRE(_dependencyMap[0]);

  var TAG = _$$_REQUIRE(_dependencyMap[1])('toStringTag');

  var ARG = cof(function () {
    return arguments;
  }()) == 'Arguments';

  var tryGet = function tryGet(it, key) {
    try {
      return it[key];
    } catch (e) {}
  };

  module.exports = function (it) {
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };
},605,[518,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ITERATOR = _$$_REQUIRE(_dependencyMap[0])('iterator');

  var SAFE_CLOSING = false;

  try {
    var riter = [7][ITERATOR]();

    riter['return'] = function () {
      SAFE_CLOSING = true;
    };

    Array.from(riter, function () {
      throw 2;
    });
  } catch (e) {}

  module.exports = function (exec, skipClosing) {
    if (!skipClosing && !SAFE_CLOSING) return false;
    var safe = false;

    try {
      var arr = [7];
      var iter = arr[ITERATOR]();

      iter.next = function () {
        return {
          done: safe = true
        };
      };

      arr[ITERATOR] = function () {
        return iter;
      };

      exec(arr);
    } catch (e) {}

    return safe;
  };
},606,[551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _ModalView = _$$_REQUIRE(_dependencyMap[6]);

  var _ModalView2 = _interopRequireDefault(_ModalView);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ActionSheetAndroid = function (_React$PureComponent) {
    (0, _inherits3['default'])(ActionSheetAndroid, _React$PureComponent);

    function ActionSheetAndroid(props) {
      (0, _classCallCheck3['default'])(this, ActionSheetAndroid);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (ActionSheetAndroid.__proto__ || Object.getPrototypeOf(ActionSheetAndroid)).call(this, props));

      _this.close = function () {
        _this.setState({
          visible: false
        });
      };

      _this.state = {
        visible: _this.props.visible || false
      };
      return _this;
    }

    (0, _createClass3['default'])(ActionSheetAndroid, [{
      key: 'confirm',
      value: function confirm(index) {
        var callback = this.props.callback;

        if (callback) {
          callback(index);
        }

        this.setState({
          visible: false
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            config = _props.config,
            onAnimationEnd = _props.onAnimationEnd;
        var title = config.title,
            message = config.message,
            options = config.options,
            destructiveButtonIndex = config.destructiveButtonIndex,
            cancelButtonIndex = config.cancelButtonIndex;
        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: this.props.styles
        }, function (styles, theme) {
          var titleMsg = !!title && _react2['default'].createElement(_reactNative.View, {
            style: styles.title,
            key: '0'
          }, _react2['default'].createElement(_reactNative.Text, {
            style: styles.titleText
          }, title));

          var content = options.map(function (item, index) {
            return _react2['default'].createElement(_reactNative.View, {
              key: index,
              style: [cancelButtonIndex === index ? styles.cancelBtn : undefined]
            }, _react2['default'].createElement(_reactNative.TouchableHighlight, {
              style: [styles.btn],
              underlayColor: theme.fill_tap,
              onPress: function onPress() {
                return _this2.confirm(index);
              }
            }, _react2['default'].createElement(_reactNative.Text, {
              style: [destructiveButtonIndex === index ? styles.destructiveBtn : undefined]
            }, item)), cancelButtonIndex === index ? _react2['default'].createElement(_reactNative.View, {
              style: styles.cancelBtnMask
            }) : null);
          });
          return _react2['default'].createElement(_reactNative.View, {
            style: styles.container
          }, _react2['default'].createElement(_ModalView2['default'], {
            animationDuration: 200,
            animateAppear: true,
            visible: _this2.state.visible,
            onAnimationEnd: onAnimationEnd,
            style: styles.content,
            animationType: 'slide-up',
            maskClosable: true,
            onClose: function onClose() {
              return _this2.confirm(cancelButtonIndex || -1);
            }
          }, _react2['default'].createElement(_reactNative.View, null, titleMsg, !!message && _react2['default'].createElement(_reactNative.View, {
            style: styles.message,
            key: '1'
          }, _react2['default'].createElement(_reactNative.Text, null, message)), _react2['default'].createElement(_reactNative.View, null, content))));
        });
      }
    }]);
    return ActionSheetAndroid;
  }(_react2['default'].PureComponent);

  exports['default'] = ActionSheetAndroid;
  module.exports = exports['default'];
},607,[532,533,537,571,49,2,608,587,609]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _portal = _$$_REQUIRE(_dependencyMap[6]);

  var _portal2 = _interopRequireDefault(_portal);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var styles = _reactNative.StyleSheet.create({
    wrap: {
      flex: 1,
      backgroundColor: 'rgba(0,0,0,0)'
    },
    mask: {
      backgroundColor: 'black',
      opacity: 0.5
    },
    content: {
      backgroundColor: 'white'
    },
    absolute: {
      position: 'absolute',
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  });

  var screen = _reactNative.Dimensions.get('window');

  var RCModal = function (_React$Component) {
    (0, _inherits3['default'])(RCModal, _React$Component);

    function RCModal(props) {
      (0, _classCallCheck3['default'])(this, RCModal);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (RCModal.__proto__ || Object.getPrototypeOf(RCModal)).call(this, props));

      _this.animateMask = function (visible) {
        _this.stopMaskAnim();

        _this.state.opacity.setValue(_this.getOpacity(!visible));

        _this.animMask = _reactNative.Animated.timing(_this.state.opacity, {
          toValue: _this.getOpacity(visible),
          duration: _this.props.animationDuration,
          useNativeDriver: true
        });

        _this.animMask.start(function () {
          _this.animMask = null;
        });
      };

      _this.stopMaskAnim = function () {
        if (_this.animMask) {
          _this.animMask.stop();

          _this.animMask = null;
        }
      };

      _this.stopDialogAnim = function () {
        if (_this.animDialog) {
          _this.animDialog.stop();

          _this.animDialog = null;
        }
      };

      _this.animateDialog = function (visible) {
        _this.stopDialogAnim();

        _this.animateMask(visible);

        var _this$props = _this.props,
            animationType = _this$props.animationType,
            animationDuration = _this$props.animationDuration;
        animationDuration = animationDuration;

        if (animationType !== 'none') {
          if (animationType === 'slide-up' || animationType === 'slide-down') {
            _this.state.position.setValue(_this.getPosition(!visible));

            _this.animDialog = _reactNative.Animated.timing(_this.state.position, {
              toValue: _this.getPosition(visible),
              duration: animationDuration,
              easing: visible ? _reactNative.Easing.elastic(0.8) : undefined,
              useNativeDriver: true
            });
          } else if (animationType === 'fade') {
            _this.animDialog = _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.opacity, {
              toValue: _this.getOpacity(visible),
              duration: animationDuration,
              easing: visible ? _reactNative.Easing.elastic(0.8) : undefined,
              useNativeDriver: true
            }), _reactNative.Animated.spring(_this.state.scale, {
              toValue: _this.getScale(visible),
              useNativeDriver: true
            })]);
          }

          _this.animDialog.start(function () {
            _this.animDialog = null;

            if (!visible) {
              _this.setState({
                modalVisible: false
              });
            }

            if (_this.props.onAnimationEnd) {
              _this.props.onAnimationEnd(visible);
            }
          });
        } else {
          if (!visible) {
            _this.setState({
              modalVisible: false
            });
          }
        }
      };

      _this.close = function () {
        _this.animateDialog(false);
      };

      _this.onMaskClose = function () {
        if (_this.props.maskClosable && _this.props.onClose) {
          _this.props.onClose();
        }
      };

      _this.getPosition = function (visible) {
        if (visible) {
          return 0;
        }

        return _this.props.animationType === 'slide-down' ? -screen.height : screen.height;
      };

      _this.getScale = function (visible) {
        return visible ? 1 : 1.05;
      };

      _this.getOpacity = function (visible) {
        return visible ? 1 : 0;
      };

      var visible = props.visible;
      _this.state = {
        position: new _reactNative.Animated.Value(_this.getPosition(visible)),
        scale: new _reactNative.Animated.Value(_this.getScale(visible)),
        opacity: new _reactNative.Animated.Value(_this.getOpacity(visible)),
        modalVisible: visible
      };
      return _this;
    }

    (0, _createClass3['default'])(RCModal, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (this.shouldComponentUpdate(nextProps, null)) {
          this.setState({
            modalVisible: true
          });
        }
      }
    }, {
      key: 'shouldComponentUpdate',
      value: function shouldComponentUpdate(nextProps, nextState) {
        if (this.props.visible || this.props.visible !== nextProps.visible) {
          return true;
        }

        if (nextState) {
          if (nextState.modalVisible !== this.state.modalVisible) {
            return true;
          }
        }

        return false;
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.props.animateAppear && this.props.animationType !== 'none') {
          this.componentDidUpdate({});
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        var props = this.props;

        if (prevProps.visible !== props.visible) {
          this.animateDialog(props.visible);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var props = this.props;

        if (!this.state.modalVisible) {
          return null;
        }

        var animationStyleMap = {
          none: {},
          'slide-up': {
            transform: [{
              translateY: this.state.position
            }]
          },
          'slide-down': {
            transform: [{
              translateY: this.state.position
            }]
          },
          fade: {
            transform: [{
              scale: this.state.scale
            }],
            opacity: this.state.opacity
          }
        };
        return _react2['default'].createElement(_portal2['default'], null, _react2['default'].createElement(_reactNative.View, {
          style: [styles.wrap, props.wrapStyle]
        }, _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: this.onMaskClose
        }, _react2['default'].createElement(_reactNative.Animated.View, {
          style: [styles.absolute, {
            opacity: this.state.opacity
          }]
        }, _react2['default'].createElement(_reactNative.View, {
          style: [styles.absolute, props.maskStyle]
        }))), _react2['default'].createElement(_reactNative.Animated.View, {
          style: [styles.content, props.style, animationStyleMap[props.animationType]]
        }, this.props.children)));
      }
    }]);
    return RCModal;
  }(_react2['default'].Component);

  exports['default'] = RCModal;
  RCModal.defaultProps = {
    wrapStyle: styles.wrap,
    maskStyle: styles.mask,
    animationType: 'slide-up',
    animateAppear: false,
    animationDuration: 300,
    visible: false,
    maskClosable: true,
    onClose: function onClose() {},
    onAnimationEnd: function onAnimationEnd(_visible) {}
  };
  module.exports = exports['default'];
},608,[532,533,537,571,49,2,592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        zIndex: theme.action_sheet_zindex
      },
      wrap: {
        position: 'absolute',
        left: 0,
        right: 0,
        top: 0
      },
      content: {
        position: 'absolute',
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: theme.fill_base
      },
      mask: {
        position: 'absolute',
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        backgroundColor: theme.fill_mask
      },
      title: {
        flex: 1,
        alignItems: 'center',
        marginTop: theme.h_spacing_lg,
        marginBottom: theme.h_spacing_lg
      },
      titleText: {
        fontWeight: '500'
      },
      message: {
        flex: 1,
        alignItems: 'center',
        marginBottom: theme.h_spacing_lg
      },
      btn: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
        height: theme.actionsheet_item_height,
        borderStyle: 'solid',
        borderTopWidth: 1,
        borderTopColor: theme.border_color_base,
        backgroundColor: 'white'
      },
      cancelBtn: {
        marginTop: theme.v_spacing_md,
        position: 'relative'
      },
      cancelBtnMask: {
        position: 'absolute',
        top: -theme.v_spacing_md,
        left: 0,
        right: 0,
        height: theme.v_spacing_md,
        backgroundColor: theme.fill_grey,
        borderStyle: 'solid',
        borderTopWidth: 1,
        borderTopColor: theme.border_color_base
      },
      destructiveBtn: {
        color: theme.brand_error,
        fontSize: theme.actionsheet_item_font_size
      }
    });
  };

  module.exports = exports['default'];
},609,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var RNActivityIndicator = function (_React$Component) {
    (0, _inherits3['default'])(RNActivityIndicator, _React$Component);

    function RNActivityIndicator() {
      (0, _classCallCheck3['default'])(this, RNActivityIndicator);
      return (0, _possibleConstructorReturn3['default'])(this, (RNActivityIndicator.__proto__ || Object.getPrototypeOf(RNActivityIndicator)).apply(this, arguments));
    }

    (0, _createClass3['default'])(RNActivityIndicator, [{
      key: '_renderToast',
      value: function _renderToast() {
        var _this2 = this;

        var _props = this.props,
            _props$color = _props.color,
            color = _props$color === undefined ? 'white' : _props$color,
            _props$size = _props.size,
            size = _props$size === undefined ? 'large' : _props$size;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.container]
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.innerContainer, {
              height: 89
            }]
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.wrapper]
          }, _react2['default'].createElement(_reactNative.ActivityIndicator, {
            color: color,
            size: size
          }), _this2.props.text && _react2['default'].createElement(_reactNative.Text, {
            style: [styles.toast]
          }, _this2.props.text))));
        });
      }
    }, {
      key: '_renderSpinner',
      value: function _renderSpinner() {
        var _props2 = this.props,
            color = _props2.color,
            size = _props2.size,
            text = _props2.text;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_reactNative.View, {
            style: styles.spinner
          }, _react2['default'].createElement(_reactNative.ActivityIndicator, {
            color: color,
            size: size
          }), text && _react2['default'].createElement(_reactNative.Text, {
            style: [styles.tip]
          }, text));
        });
      }
    }, {
      key: 'render',
      value: function render() {
        if (this.props.animating) {
          return this.props.toast ? this._renderToast() : this._renderSpinner();
        }

        return null;
      }
    }]);
    return RNActivityIndicator;
  }(_react2['default'].Component);

  exports['default'] = RNActivityIndicator;
  RNActivityIndicator.defaultProps = {
    animating: true,
    color: 'gray',
    size: 'small',
    toast: false
  };
  module.exports = exports['default'];
},610,[532,533,537,571,49,2,587,611]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        position: 'absolute',
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        backgroundColor: 'transparent',
        zIndex: theme.toast_zindex
      },
      innerContainer: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
        backgroundColor: 'transparent'
      },
      wrapper: {
        alignItems: 'center',
        justifyContent: 'center',
        width: 89,
        height: 89,
        borderRadius: theme.radius_md,
        backgroundColor: theme.toast_fill
      },
      tip: {
        color: theme.color_text_base,
        fontSize: theme.font_size_base,
        marginLeft: theme.h_spacing_md
      },
      toast: {
        color: theme.color_text_base_inverse,
        fontSize: theme.font_size_base,
        marginTop: theme.v_spacing_sm
      },
      spinner: {
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center'
      }
    });
  };

  module.exports = exports['default'];
},611,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Badge = function (_React$Component) {
    (0, _inherits3['default'])(Badge, _React$Component);

    function Badge() {
      (0, _classCallCheck3['default'])(this, Badge);
      return (0, _possibleConstructorReturn3['default'])(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Badge, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            styles = _a.styles,
            style = _a.style,
            children = _a.children,
            text = _a.text,
            size = _a.size,
            overflowCount = _a.overflowCount,
            dot = _a.dot,
            corner = _a.corner,
            restProps = __rest(_a, ["styles", "style", "children", "text", "size", "overflowCount", "dot", "corner"]);

        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: this.props.styles
        }, function (s) {
          text = typeof text === 'number' && text > overflowCount ? overflowCount + '+' : text;

          if (dot) {
            text = '';
          }

          var fakeStyles = s;
          var badgeCls = corner ? 'textCorner' : 'textDom';
          var contentDom = !dot ? _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({}, restProps, {
            style: [s[badgeCls], fakeStyles['' + badgeCls + size]]
          }), _react2['default'].createElement(_reactNative.Text, {
            style: [s.text]
          }, text)) : _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({}, restProps, {
            style: [s.dot, fakeStyles['dotSize' + size]]
          }));
          return _react2['default'].createElement(_reactNative.View, {
            style: [s.wrap, style]
          }, _react2['default'].createElement(_reactNative.View, {
            style: [fakeStyles[badgeCls + 'Wrap']]
          }, children, text || dot ? contentDom : null));
        });
      }
    }]);
    return Badge;
  }(_react2['default'].Component);

  exports['default'] = Badge;
  Badge.defaultProps = {
    size: 'small',
    overflowCount: 99,
    dot: false,
    corner: false
  };
  module.exports = exports['default'];
},612,[493,532,533,537,571,49,2,587,613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var grid = 4;

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      wrap: {
        flexDirection: 'row'
      },
      textCornerWrap: {
        overflow: 'hidden'
      },
      dot: {
        width: 8,
        height: 8,
        borderRadius: grid,
        backgroundColor: theme.brand_important,
        position: 'absolute',
        top: -4,
        right: -4
      },
      dotSizelarge: {
        width: 16,
        height: 16,
        borderRadius: 8
      },
      textDom: {
        paddingVertical: 2,
        paddingHorizontal: (_reactNative.Platform.OS === 'ios' ? 1.5 : 2) * grid,
        backgroundColor: theme.brand_important,
        borderRadius: 4 * theme.radius_sm,
        borderStyle: 'solid',
        position: 'absolute',
        top: -10,
        right: -15
      },
      textCorner: {
        width: 72,
        backgroundColor: theme.brand_important,
        transform: [{
          rotate: '45deg'
        }],
        position: 'absolute',
        top: 8
      },
      textCornerlarge: {
        width: 104,
        top: 12
      },
      text: {
        color: theme.color_text_base_inverse,
        textAlign: 'center'
      }
    });
  };

  module.exports = exports['default'];
},613,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Button = function (_React$Component) {
    (0, _inherits3['default'])(Button, _React$Component);

    function Button(props) {
      (0, _classCallCheck3['default'])(this, Button);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

      _this.onPressIn = function () {
        _this.setState({
          pressIn: true
        });

        if (_this.props.onPressIn) {
          var _this$props;

          (_this$props = _this.props).onPressIn.apply(_this$props, arguments);
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          pressIn: false
        });

        if (_this.props.onPressOut) {
          var _this$props2;

          (_this$props2 = _this.props).onPressOut.apply(_this$props2, arguments);
        }
      };

      _this.onShowUnderlay = function () {
        _this.setState({
          touchIt: true
        });

        if (_this.props.onShowUnderlay) {
          var _this$props3;

          (_this$props3 = _this.props).onShowUnderlay.apply(_this$props3, arguments);
        }
      };

      _this.onHideUnderlay = function () {
        _this.setState({
          touchIt: false
        });

        if (_this.props.onHideUnderlay) {
          var _this$props4;

          (_this$props4 = _this.props).onHideUnderlay.apply(_this$props4, arguments);
        }
      };

      _this.state = {
        pressIn: false,
        touchIt: false
      };
      return _this;
    }

    (0, _createClass3['default'])(Button, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            _a$size = _a.size,
            size = _a$size === undefined ? 'large' : _a$size,
            _a$type = _a.type,
            type = _a$type === undefined ? 'default' : _a$type,
            disabled = _a.disabled,
            activeStyle = _a.activeStyle,
            _onPress = _a.onPress,
            style = _a.style,
            styles = _a.styles,
            loading = _a.loading,
            restProps = __rest(_a, ["size", "type", "disabled", "activeStyle", "onPress", "style", "styles", "loading"]);

        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: styles
        }, function (_styles) {
          var textStyle = [_styles[size + 'RawText'], _styles[type + 'RawText'], disabled && _styles[type + 'DisabledRawText'], _this2.state.pressIn && _styles[type + 'HighlightText']];
          var wrapperStyle = [_styles.wrapperStyle, _styles[size + 'Raw'], _styles[type + 'Raw'], disabled && _styles[type + 'DisabledRaw'], _this2.state.pressIn && activeStyle && _styles[type + 'Highlight'], activeStyle && _this2.state.touchIt && activeStyle, style];

          var underlayColor = _reactNative.StyleSheet.flatten(activeStyle ? activeStyle : _styles[type + 'Highlight']).backgroundColor;

          var indicatorColor = _reactNative.StyleSheet.flatten(_this2.state.pressIn ? _styles[type + 'HighlightText'] : _styles[type + 'RawText']).color;

          return _react2['default'].createElement(_reactNative.TouchableHighlight, (0, _extends3['default'])({
            activeOpacity: 0.4
          }, restProps, {
            style: wrapperStyle,
            disabled: disabled,
            underlayColor: underlayColor,
            onPress: function onPress(e) {
              return _onPress && _onPress(e);
            },
            onPressIn: _this2.onPressIn,
            onPressOut: _this2.onPressOut,
            onShowUnderlay: _this2.onShowUnderlay,
            onHideUnderlay: _this2.onHideUnderlay
          }), _react2['default'].createElement(_reactNative.View, {
            style: _styles.container
          }, loading ? _react2['default'].createElement(_reactNative.ActivityIndicator, {
            style: _styles.indicator,
            animating: true,
            color: indicatorColor,
            size: 'small'
          }) : null, _react2['default'].createElement(_reactNative.Text, {
            style: textStyle
          }, _this2.props.children)));
        });
      }
    }]);
    return Button;
  }(_react2['default'].Component);

  exports['default'] = Button;
  Button.defaultProps = {
    pressIn: false,
    disabled: false,
    loading: false,
    onPress: function onPress(_) {},
    onPressIn: function onPressIn(_) {},
    onPressOut: function onPressOut(_) {},
    onShowUnderlay: function onShowUnderlay(_) {},
    onHideUnderlay: function onHideUnderlay(_) {}
  };
  module.exports = exports['default'];
},614,[493,532,533,537,571,49,2,587,615]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        flexDirection: 'row'
      },
      defaultHighlight: {
        backgroundColor: theme.fill_tap,
        borderColor: theme.border_color_base
      },
      primaryHighlight: {
        backgroundColor: theme.primary_button_fill_tap,
        borderColor: theme.primary_button_fill
      },
      ghostHighlight: {
        backgroundColor: 'transparent',
        borderColor: theme.ghost_button_fill_tap
      },
      warningHighlight: {
        backgroundColor: theme.warning_button_fill_tap,
        borderColor: theme.warning_button_fill
      },
      wrapperStyle: {
        alignItems: 'center',
        justifyContent: 'center',
        borderRadius: theme.radius_md,
        borderWidth: 1
      },
      largeRaw: {
        height: theme.button_height,
        paddingLeft: theme.h_spacing_lg,
        paddingRight: theme.h_spacing_lg
      },
      smallRaw: {
        height: theme.button_height_sm,
        paddingLeft: theme.h_spacing_sm,
        paddingRight: theme.h_spacing_sm
      },
      defaultRaw: {
        backgroundColor: theme.fill_base,
        borderColor: theme.border_color_base
      },
      primaryRaw: {
        backgroundColor: theme.primary_button_fill,
        borderColor: theme.primary_button_fill
      },
      ghostRaw: {
        backgroundColor: 'transparent',
        borderColor: theme.ghost_button_color
      },
      warningRaw: {
        backgroundColor: theme.warning_button_fill,
        borderColor: theme.warning_button_fill
      },
      defaultDisabledRaw: {
        backgroundColor: theme.fill_disabled,
        borderColor: theme.fill_disabled
      },
      primaryDisabledRaw: {
        opacity: 0.4
      },
      ghostDisabledRaw: {
        borderColor: theme.color_text_base + '1A'
      },
      warningDisabledRaw: {
        opacity: 0.4
      },
      defaultHighlightText: {
        color: theme.color_text_base
      },
      primaryHighlightText: {
        color: theme.color_text_base_inverse + '4D'
      },
      ghostHighlightText: {
        color: theme.ghost_button_fill_tap
      },
      warningHighlightText: {
        color: theme.color_text_base_inverse + '4D'
      },
      largeRawText: {
        fontSize: theme.button_font_size
      },
      smallRawText: {
        fontSize: theme.button_font_size_sm
      },
      defaultRawText: {
        color: theme.color_text_base
      },
      primaryRawText: {
        color: theme.color_text_base_inverse
      },
      ghostRawText: {
        color: theme.ghost_button_color
      },
      warningRawText: {
        color: theme.color_text_base_inverse
      },
      defaultDisabledRawText: {
        color: theme.color_text_base + '4D'
      },
      primaryDisabledRawText: {
        color: theme.color_text_base_inverse + '99'
      },
      ghostDisabledRawText: {
        color: theme.color_text_base + '1A'
      },
      warningDisabledRawText: {
        color: theme.color_text_base_inverse + '99'
      },
      indicator: {
        marginRight: theme.h_spacing_md
      }
    });
  };

  module.exports = exports['default'];
},615,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _CardBody = _$$_REQUIRE(_dependencyMap[8]);

  var _CardBody2 = _interopRequireDefault(_CardBody);

  var _CardFooter = _$$_REQUIRE(_dependencyMap[9]);

  var _CardFooter2 = _interopRequireDefault(_CardFooter);

  var _CardHeader = _$$_REQUIRE(_dependencyMap[10]);

  var _CardHeader2 = _interopRequireDefault(_CardHeader);

  var _index = _$$_REQUIRE(_dependencyMap[11]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Card = function (_React$Component) {
    (0, _inherits3['default'])(Card, _React$Component);

    function Card() {
      (0, _classCallCheck3['default'])(this, Card);
      return (0, _possibleConstructorReturn3['default'])(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Card, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            style = _a.style,
            styles = _a.styles,
            full = _a.full,
            children = _a.children,
            restProps = __rest(_a, ["style", "styles", "full", "children"]);

        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: styles
        }, function (s) {
          var cardStyle = full ? s.full : {};

          var childDom = _react2['default'].Children.map(children, function (child) {
            return _react2['default'].cloneElement(child, {
              s: s
            });
          });

          return _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
            style: [s.card, cardStyle, style]
          }, restProps), childDom);
        });
      }
    }]);
    return Card;
  }(_react2['default'].Component);

  exports['default'] = Card;
  Card.defaultProps = {
    style: {},
    full: false
  };
  Card.Header = _CardHeader2['default'];
  Card.Body = _CardBody2['default'];
  Card.Footer = _CardFooter2['default'];
  module.exports = exports['default'];
},616,[493,532,533,537,571,49,2,587,617,619,620,618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _style2 = _$$_REQUIRE(_dependencyMap[8]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var CardBody = function (_React$Component) {
    (0, _inherits3['default'])(CardBody, _React$Component);

    function CardBody() {
      (0, _classCallCheck3['default'])(this, CardBody);
      return (0, _possibleConstructorReturn3['default'])(this, (CardBody.__proto__ || Object.getPrototypeOf(CardBody)).apply(this, arguments));
    }

    (0, _createClass3['default'])(CardBody, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            style = _a.style,
            styles = _a.styles,
            restProps = __rest(_a, ["style", "styles"]);

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _style3['default']
        }, function (s) {
          return _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
            style: [s.body, style]
          }, restProps));
        });
      }
    }]);
    return CardBody;
  }(_react2['default'].Component);

  exports['default'] = CardBody;
  CardBody.defaultProps = {
    style: {}
  };
  module.exports = exports['default'];
},617,[493,532,533,537,571,49,2,587,618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      card: {
        borderWidth: theme.border_width_md,
        borderColor: theme.border_color_base,
        borderRadius: theme.radius_md,
        paddingBottom: theme.v_spacing_sm,
        flexDirection: 'column',
        backgroundColor: theme.fill_base
      },
      full: {
        borderRadius: 0,
        borderLeftWidth: 0,
        borderRightWidth: 0
      },
      headerWrap: {
        flexDirection: 'row',
        paddingVertical: theme.v_spacing_sm,
        paddingRight: theme.h_spacing_lg,
        marginLeft: theme.h_spacing_lg,
        alignItems: 'center'
      },
      headerTitle: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'center'
      },
      headerImage: {
        marginRight: theme.h_spacing_sm
      },
      headerContentWrap: {
        flex: 1
      },
      headerContent: {
        color: theme.color_text_base,
        fontSize: theme.font_size_heading,
        flex: 1
      },
      headerExtraWrap: {
        flex: 1
      },
      headerExtra: {
        flex: 1,
        fontSize: theme.font_size_heading,
        color: theme.color_text_caption,
        textAlign: 'right'
      },
      body: {
        flexGrow: 1,
        paddingVertical: theme.v_spacing_md,
        minHeight: 48,
        borderTopWidth: theme.border_width_md,
        borderColor: theme.border_color_base
      },
      footerWrap: {
        flexDirection: 'row',
        paddingHorizontal: theme.h_spacing_lg
      },
      footerContent: {
        flex: 1,
        fontSize: theme.font_size_base,
        color: theme.color_text_caption
      },
      footerExtra: {
        textAlign: 'right',
        fontSize: theme.font_size_base,
        color: theme.color_text_caption
      }
    });
  };

  module.exports = exports['default'];
},618,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _style2 = _$$_REQUIRE(_dependencyMap[8]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var CardFooter = function (_React$Component) {
    (0, _inherits3['default'])(CardFooter, _React$Component);

    function CardFooter() {
      (0, _classCallCheck3['default'])(this, CardFooter);
      return (0, _possibleConstructorReturn3['default'])(this, (CardFooter.__proto__ || Object.getPrototypeOf(CardFooter)).apply(this, arguments));
    }

    (0, _createClass3['default'])(CardFooter, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            content = _a.content,
            extra = _a.extra,
            styles = _a.styles,
            style = _a.style,
            restProps = __rest(_a, ["content", "extra", "styles", "style"]);

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _style3['default']
        }, function (s) {
          var contentDom = content !== undefined && _react2['default'].isValidElement(content) ? _react2['default'].createElement(_reactNative.View, {
            style: {
              flex: 1
            }
          }, content) : _react2['default'].createElement(_reactNative.Text, {
            style: s.footerContent
          }, content);
          var extraDom = extra !== undefined && _react2['default'].isValidElement(extra) ? _react2['default'].createElement(_reactNative.View, {
            style: {
              flex: 1
            }
          }, extra) : _react2['default'].createElement(_reactNative.Text, {
            style: [s.footerExtra]
          }, extra);
          return _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
            style: [s.footerWrap, style]
          }, restProps), contentDom, extra ? extraDom : null);
        });
      }
    }]);
    return CardFooter;
  }(_react2['default'].Component);

  exports['default'] = CardFooter;
  CardFooter.defaultProps = {
    style: {}
  };
  module.exports = exports['default'];
},619,[493,532,533,537,571,49,2,587,618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _style2 = _$$_REQUIRE(_dependencyMap[8]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var CardHeader = function (_React$Component) {
    (0, _inherits3['default'])(CardHeader, _React$Component);

    function CardHeader() {
      (0, _classCallCheck3['default'])(this, CardHeader);
      return (0, _possibleConstructorReturn3['default'])(this, (CardHeader.__proto__ || Object.getPrototypeOf(CardHeader)).apply(this, arguments));
    }

    (0, _createClass3['default'])(CardHeader, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            title = _a.title,
            thumb = _a.thumb,
            thumbStyle = _a.thumbStyle,
            extra = _a.extra,
            style = _a.style,
            styles = _a.styles,
            restProps = __rest(_a, ["title", "thumb", "thumbStyle", "extra", "style", "styles"]);

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _style3['default']
        }, function (s) {
          var titleDom = title === undefined ? null : _react2['default'].isValidElement(title) ? _react2['default'].createElement(_reactNative.View, {
            style: s.headerContentWrap
          }, title) : _react2['default'].createElement(_reactNative.Text, {
            style: s.headerContent
          }, title);
          var extraDom = extra === undefined ? null : _react2['default'].isValidElement(extra) ? _react2['default'].createElement(_reactNative.View, {
            style: s.headerExtraWrap
          }, extra) : _react2['default'].createElement(_reactNative.Text, {
            style: [s.headerExtra]
          }, extra);
          return _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
            style: [s.headerWrap, style]
          }, restProps), _react2['default'].createElement(_reactNative.View, {
            style: [s.headerTitle]
          }, typeof thumb === 'string' ? _react2['default'].createElement(_reactNative.Image, {
            source: {
              uri: thumb
            },
            style: [s.headerImage, thumbStyle]
          }) : thumb, titleDom), extra ? extraDom : null);
        });
      }
    }]);
    return CardHeader;
  }(_react2['default'].Component);

  exports['default'] = CardHeader;
  CardHeader.defaultProps = {
    thumbStyle: {},
    style: {}
  };
  module.exports = exports['default'];
},620,[493,532,533,537,571,49,2,587,618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _$$_REQUIRE(_dependencyMap[8]);

  var _index3 = _interopRequireDefault(_index2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var defaultPagination = function defaultPagination(props) {
    var styles = props.styles,
        current = props.current,
        vertical = props.vertical,
        count = props.count,
        dotStyle = props.dotStyle,
        dotActiveStyle = props.dotActiveStyle;
    var positionStyle = vertical ? 'paginationY' : 'paginationX';
    var flexDirection = vertical ? 'column' : 'row';
    var arr = [];

    for (var i = 0; i < count; i++) {
      arr.push(_react2['default'].createElement(_reactNative.View, {
        key: 'dot-' + i,
        style: [styles.pointStyle, styles.spaceStyle, dotStyle, i === current && styles.pointActiveStyle, i === current && dotActiveStyle]
      }));
    }

    return _react2['default'].createElement(_reactNative.View, {
      style: [styles.pagination, styles[positionStyle]]
    }, _react2['default'].createElement(_reactNative.View, {
      style: {
        flexDirection: flexDirection
      }
    }, arr));
  };

  var Carousel = function (_React$Component) {
    (0, _inherits3['default'])(Carousel, _React$Component);

    function Carousel(props) {
      (0, _classCallCheck3['default'])(this, Carousel);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));

      _this.getChildrenCount = function (children) {
        var count = children ? _react2['default'].Children.count(children) || 1 : 0;
        return count;
      };

      _this.loopJump = function () {
        var _this$state = _this.state,
            loopJump = _this$state.loopJump,
            selectedIndex = _this$state.selectedIndex,
            width = _this$state.width,
            height = _this$state.height;
        var _this$props = _this.props,
            infinite = _this$props.infinite,
            vertical = _this$props.vertical;

        if (loopJump && _reactNative.Platform.OS === 'android') {
          var _index = selectedIndex + (infinite ? 1 : 0);

          var x = 0;
          var y = 0;

          if (vertical) {
            y = height * _index;
          } else {
            x = width * _index;
          }

          setTimeout(function () {
            _this.scrollviewRef && _this.scrollviewRef.scrollTo({
              x: x,
              y: y,
              animated: false
            });
          }, 10);
        }
      };

      _this.autoplay = function () {
        var _this$props2 = _this.props,
            children = _this$props2.children,
            autoplay = _this$props2.autoplay,
            infinite = _this$props2.infinite,
            autoplayInterval = _this$props2.autoplayInterval;
        var _this$state2 = _this.state,
            isScrolling = _this$state2.isScrolling,
            autoplayEnd = _this$state2.autoplayEnd,
            selectedIndex = _this$state2.selectedIndex;

        var count = _this.getChildrenCount(children);

        if (!Array.isArray(children) || !autoplay || isScrolling || autoplayEnd) {
          return;
        }

        clearTimeout(_this.autoplayTimer);
        _this.autoplayTimer = setTimeout(function () {
          if (!infinite && selectedIndex === count - 1) {
            return _this.setState({
              autoplayEnd: true
            });
          }

          _this.scrollNextPage();
        }, autoplayInterval);
      };

      _this.onScrollBegin = function (e) {
        _this.setState({
          isScrolling: true
        }, function () {
          if (_this.props.onScrollBeginDrag) {
            _this.props.onScrollBeginDrag(e, _this.state, _this);
          }
        });
      };

      _this.onScrollEnd = function (e) {
        _this.setState({
          isScrolling: false
        });

        if (!e.nativeEvent.contentOffset) {
          var position = e.nativeEvent.position;
          e.nativeEvent.contentOffset = {
            x: position * _this.state.width,
            y: position * _this.state.height
          };
        }

        _this.updateIndex(e.nativeEvent.contentOffset);

        _this.scrollEndTimter = setTimeout(function () {
          _this.autoplay();

          _this.loopJump();

          if (_this.props.onMomentumScrollEnd) {
            _this.props.onMomentumScrollEnd(e, _this.state, _this);
          }
        });
      };

      _this.onScrollEndDrag = function (e) {
        var _this$state3 = _this.state,
            offset = _this$state3.offset,
            selectedIndex = _this$state3.selectedIndex;
        var _this$props3 = _this.props,
            vertical = _this$props3.vertical,
            children = _this$props3.children;
        var previousOffset = vertical ? offset.y : offset.x;
        var newOffset = vertical ? e.nativeEvent.contentOffset.y : e.nativeEvent.contentOffset.x;

        var count = _this.getChildrenCount(children);

        if (previousOffset === newOffset && (selectedIndex === 0 || selectedIndex === count - 1)) {
          _this.setState({
            isScrolling: false
          });
        }

        _this.paging(e.nativeEvent.contentOffset.y);
      };

      _this.paging = function (offsetY) {
        var height = _this.state.height;
        var _this$props4 = _this.props,
            vertical = _this$props4.vertical,
            infinite = _this$props4.infinite;

        if (_reactNative.Platform.OS === 'android' && vertical) {
          var _selectedIndex = Math.round(offsetY / height) - (infinite ? 1 : 0);

          _this.scrollviewRef && _this.scrollviewRef.scrollTo({
            x: 0,
            y: (_selectedIndex + (infinite ? 1 : 0)) * height
          });

          if (_reactNative.Platform.OS === 'android' && vertical) {
            _this.onScrollEnd({
              nativeEvent: {
                position: _selectedIndex + (infinite ? 1 : 0)
              }
            });
          }
        }
      };

      _this.updateIndex = function (offset) {
        var _this$props5 = _this.props,
            vertical = _this$props5.vertical,
            children = _this$props5.children,
            infinite = _this$props5.infinite,
            afterChange = _this$props5.afterChange;
        var _this$state4 = _this.state,
            _this$state4$offset = _this$state4.offset,
            x = _this$state4$offset.x,
            y = _this$state4$offset.y,
            height = _this$state4.height,
            width = _this$state4.width;
        var selectedIndex = _this.state.selectedIndex;
        var diff = vertical ? offset.y - y : offset.x - x;
        var step = vertical ? height : width;
        var loopJump = false;

        var count = _this.getChildrenCount(children);

        if (!diff) {
          return;
        }

        selectedIndex = selectedIndex + Math.round(diff / step);

        if (infinite) {
          if (selectedIndex <= -1) {
            selectedIndex = count - 1;

            if (vertical) {
              offset.y = step * count;
            } else {
              offset.x = step * count;
            }

            loopJump = true;
          } else if (selectedIndex >= count) {
            selectedIndex = 0;

            if (vertical) {
              offset.y = step;
            } else {
              offset.x = step;
            }

            loopJump = true;
          }
        }

        _this.setState({
          selectedIndex: selectedIndex,
          offset: offset,
          loopJump: loopJump
        });

        if (afterChange) {
          afterChange(selectedIndex);
        }
      };

      _this.scrollNextPage = function () {
        var _this$state5 = _this.state,
            isScrolling = _this$state5.isScrolling,
            selectedIndex = _this$state5.selectedIndex,
            width = _this$state5.width,
            height = _this$state5.height;
        var _this$props6 = _this.props,
            children = _this$props6.children,
            infinite = _this$props6.infinite,
            vertical = _this$props6.vertical;

        var count = _this.getChildrenCount(children);

        if (isScrolling || count < 2) {
          return;
        }

        var diff = (infinite ? 1 : 0) + selectedIndex + 1;

        if (vertical) {
          _this.scrollviewRef && _this.scrollviewRef.scrollTo({
            x: 0,
            y: diff * height
          });
        } else {
          _this.scrollviewRef && _this.scrollviewRef.scrollTo({
            x: diff * width,
            y: 0
          });
        }

        _this.setState({
          isScrolling: true,
          autoplayEnd: false
        });

        if (_reactNative.Platform.OS === 'android') {
          _this.androidScrollEndTimer = setTimeout(function () {
            _this.onScrollEnd({
              nativeEvent: {
                position: diff
              }
            });
          }, 0);
        }
      };

      _this.renderContent = function (pages) {
        var others = {
          onScrollBeginDrag: _this.onScrollBegin,
          onMomentumScrollEnd: _this.onScrollEnd,
          onScrollEndDrag: _this.onScrollEndDrag
        };
        return _react2['default'].createElement(_reactNative.ScrollView, (0, _extends3['default'])({
          ref: function ref(el) {
            return _this.scrollviewRef = el;
          }
        }, _this.props, {
          horizontal: !_this.props.vertical,
          pagingEnabled: true,
          bounces: !!_this.props.bounces,
          scrollEventThrottle: 100,
          removeClippedSubviews: false,
          automaticallyAdjustContentInsets: false,
          directionalLockEnabled: true,
          showsHorizontalScrollIndicator: false,
          showsVerticalScrollIndicator: false,
          contentContainerStyle: _this.props.style,
          contentOffset: _this.state.offset
        }, others), pages);
      };

      _this.renderDots = function (index) {
        var _this$props7 = _this.props,
            children = _this$props7.children,
            vertical = _this$props7.vertical,
            pagination = _this$props7.pagination,
            dotStyle = _this$props7.dotStyle,
            dotActiveStyle = _this$props7.dotActiveStyle;

        if (!pagination) {
          return null;
        }

        var count = _this.getChildrenCount(children);

        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index3['default'],
          styles: _this.props.styles
        }, function (styles) {
          return pagination({
            styles: styles,
            vertical: vertical,
            current: index,
            count: count,
            dotStyle: dotStyle,
            dotActiveStyle: dotActiveStyle
          });
        });
      };

      _this.onLayout = function (e) {
        var _this$props8 = _this.props,
            children = _this$props8.children,
            infinite = _this$props8.infinite,
            vertical = _this$props8.vertical;

        var count = _this.getChildrenCount(children);

        var selectedIndex = count > 1 ? Math.min(_this.props.selectedIndex, count - 1) : 0;
        var width = e.nativeEvent.layout.width;
        var offsetX = vertical ? 0 : width * (selectedIndex + (infinite ? 1 : 0));
        var offsetY = vertical ? _this.state.height * (selectedIndex + (infinite ? 1 : 0)) : 0;

        _this.setState({
          width: width,
          offset: {
            x: offsetX,
            y: offsetY
          }
        }, function () {
          if (_reactNative.Platform.OS === 'android') {
            _reactNative.InteractionManager.runAfterInteractions(function () {
              return _this.scrollviewRef && _this.scrollviewRef.scrollTo({
                x: offsetX,
                y: offsetY,
                animated: false
              });
            });
          }
        });
      };

      _this.onChildLayout = function (e) {
        if (_this.props.vertical) {
          _this.setState({
            height: e.nativeEvent.layout.height
          });
        }
      };

      var _this$props9 = _this.props,
          children = _this$props9.children,
          selectedIndex = _this$props9.selectedIndex;

      var count = _this.getChildrenCount(children);

      var index = count > 1 ? Math.min(selectedIndex, count - 1) : 0;
      _this.state = {
        width: 0,
        height: 0,
        isScrolling: false,
        autoplayEnd: false,
        loopJump: false,
        selectedIndex: index,
        offset: {
          x: 0,
          y: 0
        }
      };
      return _this;
    }

    (0, _createClass3['default'])(Carousel, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.autoplay();
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        clearTimeout(this.autoplayTimer);
        clearTimeout(this.androidScrollEndTimer);
        clearTimeout(this.scrollEndTimter);
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _state = this.state,
            width = _state.width,
            height = _state.height,
            selectedIndex = _state.selectedIndex;
        var _props = this.props,
            dots = _props.dots,
            infinite = _props.infinite,
            children = _props.children;

        if (!children) {
          return _react2['default'].createElement(_reactNative.Text, {
            style: {
              backgroundColor: 'white'
            }
          }, 'You are supposed to add children inside Carousel');
        }

        var pageStyle = {
          width: width
        };
        var count = this.getChildrenCount(children);
        var pages = undefined;

        if (count > 1) {
          var childrenArray = _react2['default'].Children.toArray(children);

          if (infinite) {
            childrenArray.unshift(childrenArray[count - 1]);
            childrenArray.push(childrenArray[1]);
          }

          pages = childrenArray.map(function (page, i) {
            return _react2['default'].createElement(_reactNative.View, {
              style: pageStyle,
              key: i,
              onLayout: i === 0 ? _this2.onChildLayout : function () {}
            }, page);
          });
        } else {
          pages = _react2['default'].createElement(_reactNative.View, {
            style: pageStyle,
            onLayout: this.onChildLayout
          }, children);
        }

        return _react2['default'].createElement(_reactNative.View, {
          onLayout: this.onLayout,
          style: height > 0 ? {
            height: height
          } : {}
        }, this.renderContent(pages), dots && this.renderDots(selectedIndex));
      }
    }]);
    return Carousel;
  }(_react2['default'].Component);

  Carousel.defaultProps = {
    bounces: true,
    infinite: false,
    dots: true,
    autoplay: false,
    autoplayInterval: 3000,
    selectedIndex: 0,
    vertical: false,
    pagination: defaultPagination,
    dotStyle: {},
    dotActiveStyle: {}
  };
  exports['default'] = Carousel;
  module.exports = exports['default'];
},621,[493,532,533,537,571,49,2,587,622]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      pagination: {
        position: 'absolute',
        alignItems: 'center'
      },
      paginationX: {
        bottom: 10,
        left: 0,
        right: 0
      },
      paginationY: {
        right: 10,
        top: 0,
        bottom: 0
      },
      pointStyle: {
        width: 8,
        height: 8,
        borderRadius: 8,
        backgroundColor: theme.color_icon_base
      },
      pointActiveStyle: {
        backgroundColor: '#888'
      },
      spaceStyle: {
        marginHorizontal: theme.h_spacing_sm / 2,
        marginVertical: theme.v_spacing_sm / 2
      }
    });
  };

  module.exports = exports['default'];
},622,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _AgreeItem = _$$_REQUIRE(_dependencyMap[0]);

  var _AgreeItem2 = _interopRequireDefault(_AgreeItem);

  var _Checkbox = _$$_REQUIRE(_dependencyMap[1]);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  var _CheckboxItem = _$$_REQUIRE(_dependencyMap[2]);

  var _CheckboxItem2 = _interopRequireDefault(_CheckboxItem);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  _Checkbox2['default'].AgreeItem = _AgreeItem2['default'];
  _Checkbox2['default'].CheckboxItem = _CheckboxItem2['default'];
  exports['default'] = _Checkbox2['default'];
  module.exports = exports['default'];
},623,[624,625,627]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _Checkbox = _$$_REQUIRE(_dependencyMap[7]);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var AgreeItem = function (_React$Component) {
    (0, _inherits3['default'])(AgreeItem, _React$Component);

    function AgreeItem() {
      (0, _classCallCheck3['default'])(this, AgreeItem);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (AgreeItem.__proto__ || Object.getPrototypeOf(AgreeItem)).apply(this, arguments));

      _this.handleClick = function () {
        if (_this.checkbox) {
          _this.checkbox.handleClick();
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(AgreeItem, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            checkboxStyle = _props.checkboxStyle,
            children = _props.children,
            disabled = _props.disabled,
            checked = _props.checked,
            defaultChecked = _props.defaultChecked,
            onChange = _props.onChange;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var contentDom = !children ? null : _react2['default'].isValidElement(children) ? children : _react2['default'].createElement(_reactNative.Text, null, children);
          return _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: _this2.handleClick
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.agreeItem, style]
          }, _react2['default'].createElement(_Checkbox2['default'], {
            ref: function ref(_ref) {
              return _this2.checkbox = _ref;
            },
            style: [styles.agreeItemCheckbox, checkboxStyle],
            disabled: disabled,
            checked: checked,
            defaultChecked: defaultChecked,
            onChange: onChange
          }), _react2['default'].createElement(_reactNative.View, {
            style: {
              flex: 1
            }
          }, contentDom)));
        });
      }
    }]);
    return AgreeItem;
  }(_react2['default'].Component);

  exports['default'] = AgreeItem;
  module.exports = exports['default'];
},624,[532,533,537,571,49,2,587,625,626]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _icon = _$$_REQUIRE(_dependencyMap[6]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Checkbox = function (_React$Component) {
    (0, _inherits3['default'])(Checkbox, _React$Component);

    function Checkbox(props, context) {
      (0, _classCallCheck3['default'])(this, Checkbox);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call(this, props, context));

      _this.handleClick = function () {
        if (_this.props.disabled) {
          return;
        }

        var checked = !_this.state.checked;

        if (!(typeof _this.props.checked === 'boolean')) {
          _this.setState({
            checked: checked
          });
        }

        if (_this.props.onChange) {
          _this.props.onChange({
            target: {
              checked: checked
            }
          });
        }
      };

      _this.state = {
        checked: props.checked || props.defaultChecked || false
      };
      return _this;
    }

    (0, _createClass3['default'])(Checkbox, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (typeof nextProps.checked === 'boolean') {
          this.setState({
            checked: !!nextProps.checked
          });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            disabled = _props.disabled,
            children = _props.children;
        var checked = this.state.checked;
        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: this.props.styles
        }, function (styles, theme) {
          var icon = undefined;

          if (checked) {
            icon = disabled ? _react2['default'].createElement(_icon2['default'], {
              name: 'check-square',
              style: [styles.icon, style]
            }) : _react2['default'].createElement(_icon2['default'], {
              name: 'check-square',
              color: theme.brand_primary,
              style: [styles.icon, style]
            });
          } else {
            icon = disabled ? _react2['default'].createElement(_icon2['default'], {
              name: 'border',
              style: [styles.icon, style]
            }) : _react2['default'].createElement(_icon2['default'], {
              name: 'border',
              color: theme.brand_primary,
              style: [styles.icon, style]
            });
          }

          return _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: _this2.handleClick
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.wrapper]
          }, icon, typeof children === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: styles.iconRight
          }, _this2.props.children) : children));
        });
      }
    }]);
    return Checkbox;
  }(_react2['default'].Component);

  exports['default'] = Checkbox;
  module.exports = exports['default'];
},625,[532,533,537,571,49,2,582,587,626]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      wrapper: {
        flexDirection: 'row',
        alignItems: 'center'
      },
      icon: {
        width: theme.icon_size_sm,
        height: theme.icon_size_sm
      },
      iconRight: {
        marginLeft: theme.h_spacing_md
      },
      agreeItem: {
        flexDirection: 'row',
        alignItems: 'center'
      },
      agreeItemCheckbox: {
        marginLeft: theme.h_spacing_lg,
        marginRight: theme.h_spacing_md
      },
      checkboxItemCheckbox: {
        marginRight: theme.h_spacing_md,
        alignSelf: 'center'
      }
    });
  };

  module.exports = exports['default'];
},626,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _index = _$$_REQUIRE(_dependencyMap[5]);

  var _index2 = _interopRequireDefault(_index);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _Checkbox = _$$_REQUIRE(_dependencyMap[7]);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  var _index3 = _$$_REQUIRE(_dependencyMap[8]);

  var _index4 = _interopRequireDefault(_index3);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ListItem = _index2['default'].Item;

  var CheckboxItem = function (_React$Component) {
    (0, _inherits3['default'])(CheckboxItem, _React$Component);

    function CheckboxItem() {
      (0, _classCallCheck3['default'])(this, CheckboxItem);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (CheckboxItem.__proto__ || Object.getPrototypeOf(CheckboxItem)).apply(this, arguments));

      _this.handleClick = function () {
        if (_this.checkbox) {
          _this.checkbox.handleClick();
        }

        if (_this.props.onPress) {
          _this.props.onPress();
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(CheckboxItem, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            checkboxStyle = _props.checkboxStyle,
            defaultChecked = _props.defaultChecked,
            checked = _props.checked,
            disabled = _props.disabled,
            children = _props.children,
            extra = _props.extra,
            onChange = _props.onChange;

        var thumbNode = _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index4['default']
        }, function (styles) {
          return _react2['default'].createElement(_Checkbox2['default'], {
            ref: function ref(_ref) {
              return _this2.checkbox = _ref;
            },
            style: [styles.checkboxItemCheckbox, checkboxStyle],
            defaultChecked: defaultChecked,
            checked: checked,
            onChange: onChange,
            disabled: disabled
          });
        });

        return _react2['default'].createElement(ListItem, {
          style: style,
          onPress: disabled ? undefined : this.handleClick,
          extra: extra,
          thumb: thumbNode
        }, children);
      }
    }]);
    return CheckboxItem;
  }(_react2['default'].Component);

  exports['default'] = CheckboxItem;
  module.exports = exports['default'];
},627,[532,533,537,571,49,628,587,625,626]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _ListItem2 = _interopRequireDefault(_ListItem);

  var _index = _$$_REQUIRE(_dependencyMap[9]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var List = function (_React$Component) {
    (0, _inherits3['default'])(List, _React$Component);

    function List() {
      (0, _classCallCheck3['default'])(this, List);
      return (0, _possibleConstructorReturn3['default'])(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));
    }

    (0, _createClass3['default'])(List, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            children = _a.children,
            style = _a.style,
            renderHeader = _a.renderHeader,
            renderFooter = _a.renderFooter,
            styles = _a.styles,
            restProps = __rest(_a, ["children", "style", "renderHeader", "renderFooter", "styles"]);

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _index2['default']
        }, function (s) {
          var headerDom = null;
          var footerDom = null;

          if (renderHeader) {
            var content = typeof renderHeader === 'function' ? renderHeader() : renderHeader;

            if (typeof content === 'string') {
              content = _react2['default'].createElement(_reactNative.Text, {
                style: s.Header
              }, content);
            }

            headerDom = _react2['default'].createElement(_reactNative.View, null, content);
          }

          if (renderFooter) {
            var _content = typeof renderFooter === 'function' ? renderFooter() : renderFooter;

            if (typeof _content === 'string') {
              _content = _react2['default'].createElement(_reactNative.Text, {
                style: s.Footer
              }, _content);
            }

            footerDom = _react2['default'].createElement(_reactNative.View, null, _content);
          }

          return _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({}, restProps, {
            style: style
          }), headerDom, _react2['default'].createElement(_reactNative.View, {
            style: s.Body
          }, children ? children : null, _react2['default'].createElement(_reactNative.View, {
            style: [s.BodyBottomLine]
          })), footerDom);
        });
      }
    }]);
    return List;
  }(_react2['default'].Component);

  exports['default'] = List;
  List.Item = _ListItem2['default'];
  module.exports = exports['default'];
},628,[493,532,533,537,571,49,2,587,629,630]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Brief = undefined;

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _icon = _$$_REQUIRE(_dependencyMap[7]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _index = _$$_REQUIRE(_dependencyMap[9]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Brief = exports.Brief = function (_React$Component) {
    (0, _inherits3['default'])(Brief, _React$Component);

    function Brief() {
      (0, _classCallCheck3['default'])(this, Brief);
      return (0, _possibleConstructorReturn3['default'])(this, (Brief.__proto__ || Object.getPrototypeOf(Brief)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Brief, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            children = _props.children,
            style = _props.style,
            wrap = _props.wrap;
        var numberOfLines = {};

        if (wrap === false) {
          numberOfLines = {
            numberOfLines: 1
          };
        }

        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.Brief]
          }, _react2['default'].createElement(_reactNative.Text, (0, _extends3['default'])({
            style: [styles.BriefText, style]
          }, numberOfLines), children));
        });
      }
    }]);
    return Brief;
  }(_react2['default'].Component);

  var Item = function (_React$Component2) {
    (0, _inherits3['default'])(Item, _React$Component2);

    function Item() {
      (0, _classCallCheck3['default'])(this, Item);
      return (0, _possibleConstructorReturn3['default'])(this, (Item.__proto__ || Object.getPrototypeOf(Item)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Item, [{
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _a = this.props,
            styles = _a.styles,
            children = _a.children,
            multipleLine = _a.multipleLine,
            thumb = _a.thumb,
            extra = _a.extra,
            arrow = _a.arrow,
            style = _a.style,
            onPress = _a.onPress,
            onPressIn = _a.onPressIn,
            onPressOut = _a.onPressOut,
            wrap = _a.wrap,
            disabled = _a.disabled,
            align = _a.align,
            restProps = __rest(_a, ["styles", "children", "multipleLine", "thumb", "extra", "arrow", "style", "onPress", "onPressIn", "onPressOut", "wrap", "disabled", "align"]);

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _index2['default']
        }, function (itemStyles) {
          var numberOfLines = {};

          if (wrap === false) {
            numberOfLines = {
              numberOfLines: 1
            };
          }

          var underlayColor = {};

          if (!disabled && onPress) {
            underlayColor = {
              underlayColor: _reactNative.StyleSheet.flatten(itemStyles.underlayColor).backgroundColor,
              activeOpacity: 0.5
            };
          } else {
            underlayColor = {
              activeOpacity: 1
            };
          }

          var alignStyle = {};

          if (align === 'top') {
            alignStyle = {
              alignItems: 'flex-start'
            };
          } else if (align === 'bottom') {
            alignStyle = {
              alignItems: 'flex-end'
            };
          }

          var contentDom = undefined;

          if (Array.isArray(children)) {
            var tempContentDom = [];
            children.forEach(function (el, index) {
              if (_react2['default'].isValidElement(el)) {
                tempContentDom.push(el);
              } else {
                tempContentDom.push(_react2['default'].createElement(_reactNative.Text, (0, _extends3['default'])({
                  style: [itemStyles.Content]
                }, numberOfLines, {
                  key: index + '-children'
                }), el));
              }
            });
            contentDom = _react2['default'].createElement(_reactNative.View, {
              style: [itemStyles.column]
            }, tempContentDom);
          } else {
            if (children && _react2['default'].isValidElement(children)) {
              contentDom = _react2['default'].createElement(_reactNative.View, {
                style: [itemStyles.column]
              }, children);
            } else {
              contentDom = _react2['default'].createElement(_reactNative.View, {
                style: [itemStyles.column]
              }, _react2['default'].createElement(_reactNative.Text, (0, _extends3['default'])({
                style: [itemStyles.Content]
              }, numberOfLines), children));
            }
          }

          var extraDom = undefined;

          if (extra) {
            extraDom = _react2['default'].createElement(_reactNative.View, {
              style: [itemStyles.column]
            }, _react2['default'].createElement(_reactNative.Text, (0, _extends3['default'])({
              style: [itemStyles.Extra]
            }, numberOfLines), extra));

            if (_react2['default'].isValidElement(extra)) {
              var extraChildren = extra.props.children;

              if (Array.isArray(extraChildren)) {
                var tempExtraDom = [];
                extraChildren.forEach(function (el, index) {
                  if (typeof el === 'string') {
                    tempExtraDom.push(_react2['default'].createElement(_reactNative.Text, (0, _extends3['default'])({}, numberOfLines, {
                      style: [itemStyles.Extra],
                      key: index + '-children'
                    }), el));
                  } else {
                    tempExtraDom.push(el);
                  }
                });
                extraDom = _react2['default'].createElement(_reactNative.View, {
                  style: [itemStyles.column]
                }, tempExtraDom);
              } else {
                extraDom = extra;
              }
            }
          }

          var arrEnum = {
            horizontal: _react2['default'].createElement(_icon2['default'], {
              name: 'right',
              style: itemStyles.Arrow
            }),
            down: _react2['default'].createElement(_icon2['default'], {
              name: 'down',
              style: itemStyles.ArrowV
            }),
            up: _react2['default'].createElement(_icon2['default'], {
              name: 'up',
              style: itemStyles.ArrowV
            })
          };

          var itemView = _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({}, restProps, {
            style: [itemStyles.Item, style]
          }), typeof thumb === 'string' ? _react2['default'].createElement(_reactNative.Image, {
            source: {
              uri: thumb
            },
            style: [itemStyles.Thumb, multipleLine && itemStyles.multipleThumb]
          }) : thumb, _react2['default'].createElement(_reactNative.View, {
            style: [itemStyles.Line, multipleLine && itemStyles.multipleLine, multipleLine && alignStyle]
          }, contentDom, extraDom, arrow ? arrEnum[arrow] || _react2['default'].createElement(_reactNative.View, {
            style: itemStyles.Arrow
          }) : null));

          return _react2['default'].createElement(_reactNative.TouchableHighlight, (0, _extends3['default'])({}, underlayColor, {
            onPress: _this3.props.onClick ? _this3.props.onClick : onPress || undefined,
            onPressIn: onPressIn,
            onPressOut: onPressOut
          }), itemView);
        });
      }
    }]);
    return Item;
  }(_react2['default'].Component);

  exports['default'] = Item;
  Item.defaultProps = {
    multipleLine: false,
    wrap: false
  };
  Item.Brief = Brief;
},629,[493,532,533,537,571,49,2,582,587,630]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (variables) {
    return _reactNative.StyleSheet.create({
      underlayColor: {
        backgroundColor: variables.fill_tap
      },
      Header: {
        fontSize: variables.font_size_base,
        color: variables.color_text_caption,
        paddingHorizontal: variables.h_spacing_lg,
        paddingTop: variables.v_spacing_lg,
        paddingBottom: variables.v_spacing_md,
        backgroundColor: variables.fill_body
      },
      Footer: {
        fontSize: variables.font_size_base,
        color: variables.color_text_caption,
        paddingHorizontal: variables.h_spacing_lg,
        paddingVertical: variables.v_spacing_md,
        backgroundColor: variables.fill_body
      },
      Body: {
        backgroundColor: variables.fill_base,
        borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
        borderTopColor: variables.border_color_base
      },
      BodyBottomLine: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        height: 1,
        backgroundColor: variables.fill_base,
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
        borderBottomColor: variables.border_color_base
      },
      Item: {
        flexGrow: 1,
        alignItems: 'center',
        flexDirection: 'row',
        paddingLeft: variables.h_spacing_lg,
        backgroundColor: variables.fill_base
      },
      Line: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'center',
        paddingRight: variables.h_spacing_lg,
        paddingVertical: variables.v_spacing_sm,
        minHeight: variables.list_item_height,
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
        borderBottomColor: variables.border_color_base
      },
      Thumb: {
        width: variables.icon_size_md,
        height: variables.icon_size_md,
        marginRight: variables.h_spacing_lg
      },
      Content: {
        color: variables.color_text_base,
        fontSize: variables.font_size_heading,
        textAlignVertical: 'center'
      },
      Extra: {
        color: variables.color_text_caption,
        fontSize: variables.font_size_heading,
        textAlign: 'right',
        textAlignVertical: 'center'
      },
      Brief: {
        minHeight: variables.font_size_icontext
      },
      BriefText: {
        color: variables.color_text_caption,
        fontSize: variables.font_size_subhead,
        paddingTop: variables.v_spacing_xs,
        textAlignVertical: 'center'
      },
      Arrow: {
        marginLeft: variables.h_spacing_md,
        marginTop: variables.v_spacing_xs
      },
      ArrowV: {
        marginLeft: variables.h_spacing_md
      },
      multipleLine: {
        paddingVertical: variables.v_spacing_sm
      },
      multipleThumb: {
        width: variables.icon_size_lg,
        height: variables.icon_size_lg
      },
      column: {
        flex: 1,
        flexDirection: 'column'
      }
    });
  };

  module.exports = exports['default'];
},630,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _datePickerView = _$$_REQUIRE(_dependencyMap[0]);

  var _datePickerView2 = _interopRequireDefault(_datePickerView);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = _datePickerView2['default'];
  module.exports = exports['default'];
},631,[632]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _datepicker = _$$_REQUIRE(_dependencyMap[7]);

  var _datepicker2 = _interopRequireDefault(_datepicker);

  var _getLocale = _$$_REQUIRE(_dependencyMap[8]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var DatePickerView = function (_React$Component) {
    (0, _inherits3['default'])(DatePickerView, _React$Component);

    function DatePickerView() {
      (0, _classCallCheck3['default'])(this, DatePickerView);
      return (0, _possibleConstructorReturn3['default'])(this, (DatePickerView.__proto__ || Object.getPrototypeOf(DatePickerView)).apply(this, arguments));
    }

    (0, _createClass3['default'])(DatePickerView, [{
      key: 'render',
      value: function render() {
        var props = this.props,
            context = this.context;
        var locale = (0, _getLocale.getComponentLocale)(props, context, 'DatePickerView', function () {
          return _$$_REQUIRE(_dependencyMap[9]);
        });
        return _react2['default'].createElement(_datepicker2['default'], (0, _extends3['default'])({}, props, {
          locale: locale,
          date: props.value,
          onDateChange: props.onChange,
          onValueChange: props.onValueChange,
          onScrollChange: props.onScrollChange
        }));
      }
    }]);
    return DatePickerView;
  }(_react2['default'].Component);

  exports['default'] = DatePickerView;
  DatePickerView.defaultProps = {
    mode: 'datetime',
    minuteStep: 1,
    use12Hours: false
  };
  DatePickerView.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  module.exports = exports['default'];
},632,[493,532,533,537,571,61,49,633,641,642]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _DatePicker = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_DatePicker)['default'];
    }
  });

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  module.exports = exports['default'];
},633,[634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _MultiPicker = _$$_REQUIRE(_dependencyMap[5]);

  var _MultiPicker2 = _interopRequireDefault(_MultiPicker);

  var _Picker = _$$_REQUIRE(_dependencyMap[6]);

  var _Picker2 = _interopRequireDefault(_Picker);

  var _en_US = _$$_REQUIRE(_dependencyMap[7]);

  var _en_US2 = _interopRequireDefault(_en_US);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function getDaysInMonth(date) {
    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
  }

  function pad(n) {
    return n < 10 ? '0' + n : n + '';
  }

  function cloneDate(date) {
    return new Date(+date);
  }

  function setMonth(date, month) {
    date.setDate(Math.min(date.getDate(), getDaysInMonth(new Date(date.getFullYear(), month))));
    date.setMonth(month);
  }

  var DATETIME = 'datetime';
  var DATE = 'date';
  var TIME = 'time';
  var MONTH = 'month';
  var YEAR = 'year';
  var ONE_DAY = 86400000;

  var DatePicker = function (_React$Component) {
    (0, _inherits3['default'])(DatePicker, _React$Component);

    function DatePicker() {
      (0, _classCallCheck3['default'])(this, DatePicker);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).apply(this, arguments));

      _this.state = {
        date: _this.props.date || _this.props.defaultDate
      };

      _this.getNewDate = function (values, index) {
        var value = parseInt(values[index], 10);
        var props = _this.props;
        var mode = props.mode;
        var newValue = cloneDate(_this.getDate());

        if (mode === DATETIME || mode === DATE || mode === YEAR || mode === MONTH) {
          switch (index) {
            case 0:
              newValue.setFullYear(value);
              break;

            case 1:
              setMonth(newValue, value);
              break;

            case 2:
              newValue.setDate(value);
              break;

            case 3:
              _this.setHours(newValue, value);

              break;

            case 4:
              newValue.setMinutes(value);
              break;

            case 5:
              _this.setAmPm(newValue, value);

              break;

            default:
              break;
          }
        } else if (mode === TIME) {
          switch (index) {
            case 0:
              _this.setHours(newValue, value);

              break;

            case 1:
              newValue.setMinutes(value);
              break;

            case 2:
              _this.setAmPm(newValue, value);

              break;

            default:
              break;
          }
        }

        return _this.clipDate(newValue);
      };

      _this.onValueChange = function (values, index) {
        var props = _this.props;

        var newValue = _this.getNewDate(values, index);

        if (!('date' in props)) {
          _this.setState({
            date: newValue
          });
        }

        if (props.onDateChange) {
          props.onDateChange(newValue);
        }

        if (props.onValueChange) {
          props.onValueChange(values, index);
        }
      };

      _this.onScrollChange = function (values, index) {
        var props = _this.props;

        if (props.onScrollChange) {
          var newValue = _this.getNewDate(values, index);

          props.onScrollChange(newValue, values, index);
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(DatePicker, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if ('date' in nextProps) {
          this.setState({
            date: nextProps.date || nextProps.defaultDate
          });
        }
      }
    }, {
      key: 'setHours',
      value: function setHours(date, hour) {
        if (this.props.use12Hours) {
          var dh = date.getHours();
          var nhour = hour;
          nhour = dh >= 12 ? hour + 12 : hour;
          nhour = nhour >= 24 ? 0 : nhour;
          date.setHours(nhour);
        } else {
          date.setHours(hour);
        }
      }
    }, {
      key: 'setAmPm',
      value: function setAmPm(date, index) {
        if (index === 0) {
          date.setTime(+date - 43200000);
        } else {
          date.setTime(+date + 43200000);
        }
      }
    }, {
      key: 'getDefaultMinDate',
      value: function getDefaultMinDate() {
        if (!this.defaultMinDate) {
          this.defaultMinDate = new Date(2000, 1, 1, 0, 0, 0);
        }

        return this.defaultMinDate;
      }
    }, {
      key: 'getDefaultMaxDate',
      value: function getDefaultMaxDate() {
        if (!this.defaultMaxDate) {
          this.defaultMaxDate = new Date(2030, 1, 1, 23, 59, 59);
        }

        return this.defaultMaxDate;
      }
    }, {
      key: 'getDate',
      value: function getDate() {
        return this.clipDate(this.state.date || this.getDefaultMinDate());
      }
    }, {
      key: 'getValue',
      value: function getValue() {
        return this.getDate();
      }
    }, {
      key: 'getMinYear',
      value: function getMinYear() {
        return this.getMinDate().getFullYear();
      }
    }, {
      key: 'getMaxYear',
      value: function getMaxYear() {
        return this.getMaxDate().getFullYear();
      }
    }, {
      key: 'getMinMonth',
      value: function getMinMonth() {
        return this.getMinDate().getMonth();
      }
    }, {
      key: 'getMaxMonth',
      value: function getMaxMonth() {
        return this.getMaxDate().getMonth();
      }
    }, {
      key: 'getMinDay',
      value: function getMinDay() {
        return this.getMinDate().getDate();
      }
    }, {
      key: 'getMaxDay',
      value: function getMaxDay() {
        return this.getMaxDate().getDate();
      }
    }, {
      key: 'getMinHour',
      value: function getMinHour() {
        return this.getMinDate().getHours();
      }
    }, {
      key: 'getMaxHour',
      value: function getMaxHour() {
        return this.getMaxDate().getHours();
      }
    }, {
      key: 'getMinMinute',
      value: function getMinMinute() {
        return this.getMinDate().getMinutes();
      }
    }, {
      key: 'getMaxMinute',
      value: function getMaxMinute() {
        return this.getMaxDate().getMinutes();
      }
    }, {
      key: 'getMinDate',
      value: function getMinDate() {
        return this.props.minDate || this.getDefaultMinDate();
      }
    }, {
      key: 'getMaxDate',
      value: function getMaxDate() {
        return this.props.maxDate || this.getDefaultMaxDate();
      }
    }, {
      key: 'getDateData',
      value: function getDateData() {
        var _props = this.props,
            locale = _props.locale,
            formatMonth = _props.formatMonth,
            formatDay = _props.formatDay,
            mode = _props.mode;
        var date = this.getDate();
        var selYear = date.getFullYear();
        var selMonth = date.getMonth();
        var minDateYear = this.getMinYear();
        var maxDateYear = this.getMaxYear();
        var minDateMonth = this.getMinMonth();
        var maxDateMonth = this.getMaxMonth();
        var minDateDay = this.getMinDay();
        var maxDateDay = this.getMaxDay();
        var years = [];

        for (var i = minDateYear; i <= maxDateYear; i++) {
          years.push({
            value: i + '',
            label: i + locale.year + ''
          });
        }

        var yearCol = {
          key: 'year',
          props: {
            children: years
          }
        };

        if (mode === YEAR) {
          return [yearCol];
        }

        var months = [];
        var minMonth = 0;
        var maxMonth = 11;

        if (minDateYear === selYear) {
          minMonth = minDateMonth;
        }

        if (maxDateYear === selYear) {
          maxMonth = maxDateMonth;
        }

        for (var _i = minMonth; _i <= maxMonth; _i++) {
          var label = formatMonth ? formatMonth(_i, date) : _i + 1 + locale.month + '';
          months.push({
            value: _i + '',
            label: label
          });
        }

        var monthCol = {
          key: 'month',
          props: {
            children: months
          }
        };

        if (mode === MONTH) {
          return [yearCol, monthCol];
        }

        var days = [];
        var minDay = 1;
        var maxDay = getDaysInMonth(date);

        if (minDateYear === selYear && minDateMonth === selMonth) {
          minDay = minDateDay;
        }

        if (maxDateYear === selYear && maxDateMonth === selMonth) {
          maxDay = maxDateDay;
        }

        for (var _i2 = minDay; _i2 <= maxDay; _i2++) {
          var _label = formatDay ? formatDay(_i2, date) : _i2 + locale.day + '';

          days.push({
            value: _i2 + '',
            label: _label
          });
        }

        return [yearCol, monthCol, {
          key: 'day',
          props: {
            children: days
          }
        }];
      }
    }, {
      key: 'getDisplayHour',
      value: function getDisplayHour(rawHour) {
        if (this.props.use12Hours) {
          if (rawHour === 0) {
            rawHour = 12;
          }

          if (rawHour > 12) {
            rawHour -= 12;
          }

          return rawHour;
        }

        return rawHour;
      }
    }, {
      key: 'getTimeData',
      value: function getTimeData(date) {
        var minHour = 0;
        var maxHour = 23;
        var minMinute = 0;
        var maxMinute = 59;
        var _props2 = this.props,
            mode = _props2.mode,
            locale = _props2.locale,
            minuteStep = _props2.minuteStep,
            use12Hours = _props2.use12Hours;
        var minDateMinute = this.getMinMinute();
        var maxDateMinute = this.getMaxMinute();
        var minDateHour = this.getMinHour();
        var maxDateHour = this.getMaxHour();
        var hour = date.getHours();

        if (mode === DATETIME) {
          var year = date.getFullYear();
          var month = date.getMonth();
          var day = date.getDate();
          var minDateYear = this.getMinYear();
          var maxDateYear = this.getMaxYear();
          var minDateMonth = this.getMinMonth();
          var maxDateMonth = this.getMaxMonth();
          var minDateDay = this.getMinDay();
          var maxDateDay = this.getMaxDay();

          if (minDateYear === year && minDateMonth === month && minDateDay === day) {
            minHour = minDateHour;

            if (minDateHour === hour) {
              minMinute = minDateMinute;
            }
          }

          if (maxDateYear === year && maxDateMonth === month && maxDateDay === day) {
            maxHour = maxDateHour;

            if (maxDateHour === hour) {
              maxMinute = maxDateMinute;
            }
          }
        } else {
          minHour = minDateHour;

          if (minDateHour === hour) {
            minMinute = minDateMinute;
          }

          maxHour = maxDateHour;

          if (maxDateHour === hour) {
            maxMinute = maxDateMinute;
          }
        }

        var hours = [];

        if (minHour === 0 && maxHour === 0 || minHour !== 0 && maxHour !== 0) {
          minHour = this.getDisplayHour(minHour);
        } else if (minHour === 0 && use12Hours) {
          minHour = 1;
          hours.push({
            value: '0',
            label: locale.hour ? '12' + locale.hour : '12'
          });
        }

        maxHour = this.getDisplayHour(maxHour);

        for (var i = minHour; i <= maxHour; i++) {
          hours.push({
            value: i + '',
            label: locale.hour ? i + locale.hour + '' : pad(i)
          });
        }

        var minutes = [];
        var selMinute = date.getMinutes();

        for (var _i3 = minMinute; _i3 <= maxMinute; _i3 += minuteStep) {
          minutes.push({
            value: _i3 + '',
            label: locale.minute ? _i3 + locale.minute + '' : pad(_i3)
          });

          if (selMinute > _i3 && selMinute < _i3 + minuteStep) {
            minutes.push({
              value: selMinute + '',
              label: locale.minute ? selMinute + locale.minute + '' : pad(selMinute)
            });
          }
        }

        var cols = [{
          key: 'hours',
          props: {
            children: hours
          }
        }, {
          key: 'minutes',
          props: {
            children: minutes
          }
        }].concat(use12Hours ? [{
          key: 'ampm',
          props: {
            children: [{
              value: '0',
              label: locale.am
            }, {
              value: '1',
              label: locale.pm
            }]
          }
        }] : []);
        return {
          cols: cols,
          selMinute: selMinute
        };
      }
    }, {
      key: 'clipDate',
      value: function clipDate(date) {
        var mode = this.props.mode;
        var minDate = this.getMinDate();
        var maxDate = this.getMaxDate();

        if (mode === DATETIME) {
          if (date < minDate) {
            return cloneDate(minDate);
          }

          if (date > maxDate) {
            return cloneDate(maxDate);
          }
        } else if (mode === DATE || mode === YEAR || mode === MONTH) {
          if (+date + ONE_DAY <= minDate) {
            return cloneDate(minDate);
          }

          if (date >= +maxDate + ONE_DAY) {
            return cloneDate(maxDate);
          }
        } else if (mode === TIME) {
          var maxHour = maxDate.getHours();
          var maxMinutes = maxDate.getMinutes();
          var minHour = minDate.getHours();
          var minMinutes = minDate.getMinutes();
          var hour = date.getHours();
          var minutes = date.getMinutes();

          if (hour < minHour || hour === minHour && minutes < minMinutes) {
            return cloneDate(minDate);
          }

          if (hour > maxHour || hour === maxHour && minutes > maxMinutes) {
            return cloneDate(maxDate);
          }
        }

        return date;
      }
    }, {
      key: 'getValueCols',
      value: function getValueCols() {
        var _props3 = this.props,
            mode = _props3.mode,
            use12Hours = _props3.use12Hours;
        var date = this.getDate();
        var cols = [];
        var value = [];

        if (mode === YEAR) {
          return {
            cols: this.getDateData(),
            value: [date.getFullYear() + '']
          };
        }

        if (mode === MONTH) {
          return {
            cols: this.getDateData(),
            value: [date.getFullYear() + '', date.getMonth() + '']
          };
        }

        if (mode === DATETIME || mode === DATE) {
          cols = this.getDateData();
          value = [date.getFullYear() + '', date.getMonth() + '', date.getDate() + ''];
        }

        if (mode === DATETIME || mode === TIME) {
          var time = this.getTimeData(date);
          cols = cols.concat(time.cols);
          var hour = date.getHours();
          var dtValue = [hour + '', time.selMinute + ''];
          var nhour = hour;

          if (use12Hours) {
            nhour = hour === 0 ? 12 : hour > 12 ? hour - 12 : hour;
            dtValue = [nhour + '', time.selMinute + '', (hour >= 12 ? 1 : 0) + ''];
          }

          value = value.concat(dtValue);
        }

        return {
          value: value,
          cols: cols
        };
      }
    }, {
      key: 'render',
      value: function render() {
        var _getValueCols = this.getValueCols(),
            value = _getValueCols.value,
            cols = _getValueCols.cols;

        var _props4 = this.props,
            disabled = _props4.disabled,
            rootNativeProps = _props4.rootNativeProps,
            style = _props4.style,
            itemStyle = _props4.itemStyle;
        return _react2['default'].createElement(_MultiPicker2['default'], {
          style: [{
            flexDirection: 'row',
            alignItems: 'center'
          }, style],
          rootNativeProps: rootNativeProps,
          selectedValue: value,
          onValueChange: this.onValueChange,
          onScrollChange: this.onScrollChange
        }, cols.map(function (p) {
          return _react2['default'].createElement(_Picker2['default'], {
            style: {
              flex: 1
            },
            key: p.key,
            disabled: disabled,
            itemStyle: itemStyle
          }, p.props.children.map(function (item) {
            return _react2['default'].createElement(_Picker2['default'].Item, {
              key: item.value,
              value: item.value
            }, item.label);
          }));
        }));
      }
    }]);
    return DatePicker;
  }(_react2['default'].Component);

  DatePicker.defaultProps = {
    prefixCls: 'rmc-date-picker',
    pickerPrefixCls: 'rmc-picker',
    locale: _en_US2['default'],
    mode: DATE,
    disabled: false,
    minuteStep: 1,
    onDateChange: function onDateChange() {},
    use12Hours: false
  };
  exports['default'] = DatePicker;
  module.exports = exports['default'];
},634,[532,533,537,571,49,635,637,640]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _MultiPickerMixin = _$$_REQUIRE(_dependencyMap[2]);

  var _MultiPickerMixin2 = _interopRequireDefault(_MultiPickerMixin);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var MultiPicker = function MultiPicker(props) {
    var children = props.children,
        style = props.style;
    var selectedValue = props.getValue();

    var colElements = _react2['default'].Children.map(children, function (col, i) {
      return _react2['default'].cloneElement(col, {
        selectedValue: selectedValue[i],
        onValueChange: function onValueChange() {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return props.onValueChange.apply(props, [i].concat(args));
        }
      });
    });

    return _react2['default'].createElement(_reactNative.View, {
      style: style
    }, colElements);
  };

  exports['default'] = (0, _MultiPickerMixin2['default'])(MultiPicker);
  module.exports = exports['default'];
},635,[49,2,636]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  exports['default'] = function (ComposedComponent) {
    var _a;

    return _a = function (_React$Component) {
      (0, _inherits3['default'])(_a, _React$Component);

      function _a() {
        (0, _classCallCheck3['default'])(this, _a);

        var _this = (0, _possibleConstructorReturn3['default'])(this, (_a.__proto__ || Object.getPrototypeOf(_a)).apply(this, arguments));

        _this.getValue = function () {
          var _this$props = _this.props,
              children = _this$props.children,
              selectedValue = _this$props.selectedValue;

          if (selectedValue && selectedValue.length) {
            return selectedValue;
          } else {
            if (!children) {
              return [];
            }

            return _react2['default'].Children.map(children, function (c) {
              var cc = _react2['default'].Children.toArray(c.children || c.props.children);

              return cc && cc[0] && cc[0].props.value;
            });
          }
        };

        _this.onChange = function (i, v, cb) {
          var value = _this.getValue().concat();

          value[i] = v;

          if (cb) {
            cb(value, i);
          }
        };

        _this.onValueChange = function (i, v) {
          _this.onChange(i, v, _this.props.onValueChange);
        };

        _this.onScrollChange = function (i, v) {
          _this.onChange(i, v, _this.props.onScrollChange);
        };

        return _this;
      }

      (0, _createClass3['default'])(_a, [{
        key: 'render',
        value: function render() {
          return _react2['default'].createElement(ComposedComponent, (0, _extends3['default'])({}, this.props, {
            getValue: this.getValue,
            onValueChange: this.onValueChange,
            onScrollChange: this.props.onScrollChange && this.onScrollChange
          }));
        }
      }]);
      return _a;
    }(_react2['default'].Component), _a.defaultProps = {
      prefixCls: 'rmc-multi-picker',
      onValueChange: function onValueChange() {}
    }, _a;
  };

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  module.exports = exports['default'];
},636,[493,532,533,537,571,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _NativePicker = _$$_REQUIRE(_dependencyMap[5]);

  var _NativePicker2 = _interopRequireDefault(_NativePicker);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Item = _NativePicker2['default'].Item;

  var Picker = function (_React$Component) {
    (0, _inherits3['default'])(Picker, _React$Component);

    function Picker() {
      (0, _classCallCheck3['default'])(this, Picker);
      return (0, _possibleConstructorReturn3['default'])(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Picker, [{
      key: 'getValue',
      value: function getValue() {
        if ('selectedValue' in this.props) {
          return this.props.selectedValue;
        }

        var children = _react2['default'].Children.toArray(this.props.children);

        return children && children[0] && children[0].props.value;
      }
    }, {
      key: 'shouldComponentUpdate',
      value: function shouldComponentUpdate(nextProps) {
        return this.props.selectedValue !== nextProps.selectedValue || this.props.children !== nextProps.children;
      }
    }, {
      key: 'render',
      value: function render() {
        var children = _react2['default'].Children.map(this.props.children, function (c) {
          return _react2['default'].createElement(Item, {
            label: c.props.children + '',
            value: c.props.value,
            key: c.key
          });
        });

        return _react2['default'].createElement(_NativePicker2['default'], this.props, children);
      }
    }]);
    return Picker;
  }(_react2['default'].Component);

  Picker.defaultProps = {
    children: []
  };

  Picker.Item = function () {};

  exports['default'] = Picker;
  module.exports = exports['default'];
},637,[532,533,537,571,49,638]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _PickerMixin = _$$_REQUIRE(_dependencyMap[6]);

  var _PickerMixin2 = _interopRequireDefault(_PickerMixin);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ratio = _reactNative.PixelRatio.get();

  var styles = _reactNative.StyleSheet.create({
    indicator: {
      position: 'absolute',
      left: 0,
      top: -99,
      borderColor: '#aaa',
      borderTopWidth: 1 / ratio,
      borderBottomWidth: 1 / ratio
    },
    scrollView: {
      height: 0
    },
    selectedItemText: {
      fontSize: 20,
      fontWeight: 'bold',
      color: '#000'
    },
    itemText: {
      fontSize: 20,
      color: '#aaa',
      textAlign: 'center'
    }
  });

  var Picker = function (_React$Component) {
    (0, _inherits3['default'])(Picker, _React$Component);

    function Picker() {
      (0, _classCallCheck3['default'])(this, Picker);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));

      _this.onItemLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            height = _e$nativeEvent$layout.height,
            width = _e$nativeEvent$layout.width;

        if (_this.itemHeight !== height || _this.itemWidth !== width) {
          _this.itemWidth = width;

          if (_this.indicatorRef) {
            _this.indicatorRef.setNativeProps({
              style: [styles.indicator, {
                top: height * 3,
                height: height,
                width: width
              }]
            });
          }
        }

        if (_this.itemHeight !== height) {
          _this.itemHeight = height;

          if (_this.scrollerRef) {
            _this.scrollerRef.setNativeProps({
              style: {
                height: height * 7
              }
            });
          }

          if (_this.contentRef) {
            _this.contentRef.setNativeProps({
              style: {
                paddingTop: height * 3,
                paddingBottom: height * 3
              }
            });
          }

          setTimeout(function () {
            _this.props.select(_this.props.selectedValue, _this.itemHeight, _this.scrollTo);
          }, 0);
        }
      };

      _this.scrollTo = function (y) {
        if (_this.scrollerRef) {
          _this.scrollerRef.scrollTo({
            y: y,
            animated: false
          });
        }
      };

      _this.fireValueChange = function (selectedValue) {
        if (_this.props.selectedValue !== selectedValue && _this.props.onValueChange) {
          _this.props.onValueChange(selectedValue);
        }
      };

      _this.onScroll = function (e) {
        var y = e.nativeEvent.contentOffset.y;

        _this.clearScrollBuffer();

        _this.scrollBuffer = setTimeout(function () {
          _this.clearScrollBuffer();

          _this.props.doScrollingComplete(y, _this.itemHeight, _this.fireValueChange);
        }, 50);
      };

      return _this;
    }

    (0, _createClass3['default'])(Picker, [{
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.props.select(this.props.selectedValue, this.itemHeight, this.scrollTo);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.clearScrollBuffer();
      }
    }, {
      key: 'clearScrollBuffer',
      value: function clearScrollBuffer() {
        if (this.scrollBuffer) {
          clearTimeout(this.scrollBuffer);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            children = _props.children,
            itemStyle = _props.itemStyle,
            selectedValue = _props.selectedValue,
            style = _props.style;

        var items = _react2['default'].Children.map(children, function (item, index) {
          var totalStyle = [styles.itemText];

          if (selectedValue === item.props.value) {
            totalStyle.push(styles.selectedItemText);
          }

          return _react2['default'].createElement(_reactNative.View, {
            ref: function ref(el) {
              return _this2['item' + index] = el;
            },
            onLayout: index === 0 ? _this2.onItemLayout : undefined,
            key: item.key
          }, _react2['default'].createElement(_reactNative.Text, {
            style: [{
              includeFontPadding: false
            }, totalStyle, itemStyle],
            numberOfLines: 1
          }, item.props.label));
        });

        return _react2['default'].createElement(_reactNative.View, {
          style: style
        }, _react2['default'].createElement(_reactNative.View, {
          ref: function ref(el) {
            return _this2.indicatorRef = el;
          },
          style: styles.indicator
        }), _react2['default'].createElement(_reactNative.ScrollView, {
          style: styles.scrollView,
          ref: function ref(el) {
            return _this2.scrollerRef = el;
          },
          onScroll: this.onScroll,
          showsVerticalScrollIndicator: false,
          overScrollMode: 'never',
          renderToHardwareTextureAndroid: true,
          scrollEventThrottle: 10,
          needsOffscreenAlphaCompositing: true,
          collapsable: true,
          horizontal: false,
          removeClippedSubviews: true
        }, _react2['default'].createElement(_reactNative.View, {
          ref: function ref(el) {
            return _this2.contentRef = el;
          }
        }, items)));
      }
    }]);
    return Picker;
  }(_react2['default'].Component);

  exports['default'] = (0, _PickerMixin2['default'])(Picker);
  module.exports = exports['default'];
},638,[532,533,537,571,49,2,639]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  exports['default'] = function (ComposedComponent) {
    var _a;

    return _a = function (_React$Component) {
      (0, _inherits3['default'])(_a, _React$Component);

      function _a() {
        (0, _classCallCheck3['default'])(this, _a);

        var _this = (0, _possibleConstructorReturn3['default'])(this, (_a.__proto__ || Object.getPrototypeOf(_a)).apply(this, arguments));

        _this.select = function (value, itemHeight, scrollTo) {
          var children = _react2['default'].Children.toArray(_this.props.children);

          for (var i = 0, len = children.length; i < len; i++) {
            if (children[i].props.value === value) {
              _this.selectByIndex(i, itemHeight, scrollTo);

              return;
            }
          }

          _this.selectByIndex(0, itemHeight, scrollTo);
        };

        _this.doScrollingComplete = function (top, itemHeight, fireValueChange) {
          var children = _react2['default'].Children.toArray(_this.props.children);

          var index = _this.computeChildIndex(top, itemHeight, children.length);

          var child = children[index];

          if (child) {
            fireValueChange(child.props.value);
          } else if (console.warn) {
            console.warn('child not found', children, index);
          }
        };

        return _this;
      }

      (0, _createClass3['default'])(_a, [{
        key: 'selectByIndex',
        value: function selectByIndex(index, itemHeight, zscrollTo) {
          if (index < 0 || index >= _react2['default'].Children.count(this.props.children) || !itemHeight) {
            return;
          }

          zscrollTo(index * itemHeight);
        }
      }, {
        key: 'computeChildIndex',
        value: function computeChildIndex(top, itemHeight, childrenLength) {
          var index = Math.round(top / itemHeight);
          return Math.min(index, childrenLength - 1);
        }
      }, {
        key: 'render',
        value: function render() {
          return _react2['default'].createElement(ComposedComponent, (0, _extends3['default'])({}, this.props, {
            doScrollingComplete: this.doScrollingComplete,
            computeChildIndex: this.computeChildIndex,
            select: this.select
          }));
        }
      }]);
      return _a;
    }(_react2['default'].Component), _a.Item = Item, _a;
  };

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Item = function Item(_props) {
    return null;
  };

  module.exports = exports['default'];
},639,[493,532,533,537,571,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    year: '',
    month: '',
    day: '',
    hour: '',
    minute: '',
    am: 'AM',
    pm: 'PM'
  };
  module.exports = exports['default'];
},640,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  exports.getComponentLocale = getComponentLocale;
  exports.getLocaleCode = getLocaleCode;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function getComponentLocale(props, context, componentName, getDefaultLocale) {
    var locale = {};

    if (context && context.antLocale && context.antLocale[componentName]) {
      locale = context.antLocale[componentName];
    } else {
      var defaultLocale = getDefaultLocale();
      locale = defaultLocale['default'] || defaultLocale;
    }

    var result = (0, _extends3['default'])({}, locale);

    if (props.locale) {
      result = (0, _extends3['default'])({}, result, props.locale);

      if (props.locale.lang) {
        result.lang = (0, _extends3['default'])({}, locale.lang, props.locale.lang);
      }
    }

    return result;
  }

  function getLocaleCode(context) {
    var localeCode = context.antLocale && context.antLocale.locale;

    if (context.antLocale && context.antLocale.exist && !localeCode) {
      return 'zh-cn';
    }

    return localeCode;
  }
},641,[493]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _zh_CN = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_CN2 = _interopRequireDefault(_zh_CN);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = _zh_CN2['default'];
  module.exports = exports['default'];
},642,[643]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    year: '年',
    month: '月',
    day: '日',
    hour: '时',
    minute: '分',
    am: '上午',
    pm: '下午'
  };
  module.exports = exports['default'];
},643,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _getLocale = _$$_REQUIRE(_dependencyMap[9]);

  var _datepicker = _$$_REQUIRE(_dependencyMap[10]);

  var _datepicker2 = _interopRequireDefault(_datepicker);

  var _Popup = _$$_REQUIRE(_dependencyMap[11]);

  var _Popup2 = _interopRequireDefault(_Popup);

  var _utils = _$$_REQUIRE(_dependencyMap[12]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var DatePicker = function (_React$Component) {
    (0, _inherits3['default'])(DatePicker, _React$Component);

    function DatePicker() {
      (0, _classCallCheck3['default'])(this, DatePicker);
      return (0, _possibleConstructorReturn3['default'])(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).apply(this, arguments));
    }

    (0, _createClass3['default'])(DatePicker, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            children = _props.children,
            value = _props.value,
            itemStyle = _props.itemStyle;
        var locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'DatePicker', function () {
          return _$$_REQUIRE(_dependencyMap[13]);
        });
        var okText = locale.okText,
            dismissText = locale.dismissText,
            extra = locale.extra,
            DatePickerLocale = locale.DatePickerLocale;

        var dataPicker = _react2['default'].createElement(_datepicker2['default'], {
          minuteStep: this.props.minuteStep,
          locale: DatePickerLocale,
          mode: this.props.mode,
          minDate: this.props.minDate,
          maxDate: this.props.maxDate,
          defaultDate: value,
          onValueChange: this.props.onValueChange,
          itemStyle: itemStyle
        });

        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_Popup2['default'], (0, _extends3['default'])({
            datePicker: dataPicker,
            styles: styles
          }, _this2.props, {
            date: value,
            dismissText: _this2.props.dismissText || dismissText,
            okText: _this2.props.okText || okText
          }), children && _react2['default'].isValidElement(children) && _react2['default'].cloneElement(children, {
            extra: value ? (0, _utils.formatProps)(_this2.props, value) : _this2.props.extra || extra
          }));
        });
      }
    }]);
    return DatePicker;
  }(_react2['default'].Component);

  exports['default'] = DatePicker;
  DatePicker.defaultProps = {
    mode: 'datetime',
    triggerType: 'onPress',
    minuteStep: 1
  };
  DatePicker.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  module.exports = exports['default'];
},644,[493,532,533,537,571,61,49,645,587,641,633,646,650,651]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function () {
    return _reactNative.StyleSheet.create({
      modal: {
        flex: 1,
        flexDirection: 'column',
        justifyContent: 'flex-end'
      },
      header: {
        flexGrow: 1,
        height: 44,
        alignItems: 'center',
        flexDirection: 'row',
        justifyContent: 'center',
        borderBottomWidth: 1,
        borderBottomColor: '#e7e7e7'
      },
      headerItem: {
        height: 44,
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center'
      },
      actionText: {
        color: '#0ae',
        fontSize: 18,
        textAlign: 'center'
      },
      okText: {},
      dismissText: {},
      title: {
        color: '#666',
        fontSize: 18,
        textAlign: 'center'
      }
    });
  };

  module.exports = exports['default'];
},645,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _Popup = _$$_REQUIRE(_dependencyMap[6]);

  var _Popup2 = _interopRequireDefault(_Popup);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PopupDatePicker = function (_React$Component) {
    (0, _inherits3['default'])(PopupDatePicker, _React$Component);

    function PopupDatePicker() {
      (0, _classCallCheck3['default'])(this, PopupDatePicker);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (PopupDatePicker.__proto__ || Object.getPrototypeOf(PopupDatePicker)).apply(this, arguments));

      _this.onOk = function (v) {
        var _this$props = _this.props,
            onChange = _this$props.onChange,
            onOk = _this$props.onOk;

        if (onChange) {
          onChange(v);
        }

        if (onOk) {
          onOk(v);
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(PopupDatePicker, [{
      key: 'render',
      value: function render() {
        return _react2['default'].createElement(_Popup2['default'], (0, _extends3['default'])({
          picker: this.props.datePicker,
          value: this.props.date
        }, this.props, {
          onOk: this.onOk
        }));
      }
    }]);
    return PopupDatePicker;
  }(_react2['default'].Component);

  PopupDatePicker.defaultProps = {
    pickerValueProp: 'date',
    pickerValueChangeProp: 'onDateChange'
  };
  exports['default'] = PopupDatePicker;
  module.exports = exports['default'];
},646,[493,532,533,537,571,49,647]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _ModalView = _$$_REQUIRE(_dependencyMap[2]);

  var _ModalView2 = _interopRequireDefault(_ModalView);

  var _PopupMixin = _$$_REQUIRE(_dependencyMap[3]);

  var _PopupMixin2 = _interopRequireDefault(_PopupMixin);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var getModal = function getModal(props, visible, _ref) {
    var getContent = _ref.getContent,
        hide = _ref.hide,
        onDismiss = _ref.onDismiss,
        onOk = _ref.onOk;
    var styles = props.styles,
        title = props.title,
        okText = props.okText,
        dismissText = props.dismissText;
    var titleEl = typeof title === 'string' ? _react2['default'].createElement(_reactNative.Text, {
      style: [styles.title]
    }, title) : title;
    var okEl = typeof okText === 'string' ? _react2['default'].createElement(_reactNative.Text, {
      style: [styles.actionText, styles.okText]
    }, okText) : okText;
    var dismissEl = typeof dismissText === 'string' ? _react2['default'].createElement(_reactNative.Text, {
      style: [styles.actionText, styles.dismissText]
    }, dismissText) : dismissText;
    return _react2['default'].createElement(_ModalView2['default'], {
      animationType: 'slide-up',
      wrapStyle: styles.modal,
      visible: visible,
      onClose: hide
    }, _react2['default'].createElement(_reactNative.View, {
      style: [styles.header]
    }, _react2['default'].createElement(_reactNative.TouchableHighlight, {
      onPress: onDismiss,
      style: [styles.headerItem],
      activeOpacity: props.actionTextActiveOpacity,
      underlayColor: props.actionTextUnderlayColor
    }, dismissEl), _react2['default'].createElement(_reactNative.View, {
      style: [styles.headerItem]
    }, titleEl), _react2['default'].createElement(_reactNative.TouchableHighlight, {
      onPress: onOk,
      style: [styles.headerItem],
      activeOpacity: props.actionTextActiveOpacity,
      underlayColor: props.actionTextUnderlayColor
    }, okEl)), getContent());
  };

  exports['default'] = (0, _PopupMixin2['default'])(getModal, {
    actionTextUnderlayColor: '#ddd',
    actionTextActiveOpacity: 1,
    triggerType: 'onPress',
    styles: {},
    WrapComponent: _reactNative.View
  });
  module.exports = exports['default'];
},647,[49,2,608,648]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _defineProperty2 = _$$_REQUIRE(_dependencyMap[1]);

  var _defineProperty3 = _interopRequireDefault(_defineProperty2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[2]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[3]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[4]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[5]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  exports['default'] = PopupMixin;

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function PopupMixin(getModal, platformProps) {
    var _a;

    return _a = function (_React$Component) {
      (0, _inherits3['default'])(_a, _React$Component);

      function _a(props) {
        (0, _classCallCheck3['default'])(this, _a);

        var _this = (0, _possibleConstructorReturn3['default'])(this, (_a.__proto__ || Object.getPrototypeOf(_a)).call(this, props));

        _this.onPickerChange = function (pickerValue) {
          if (_this.state.pickerValue !== pickerValue) {
            _this.setState({
              pickerValue: pickerValue
            });

            var _this$props = _this.props,
                picker = _this$props.picker,
                pickerValueChangeProp = _this$props.pickerValueChangeProp;

            if (picker && picker.props[pickerValueChangeProp]) {
              picker.props[pickerValueChangeProp](pickerValue);
            }
          }
        };

        _this.saveRef = function (picker) {
          _this.picker = picker;
        };

        _this.onTriggerClick = function (e) {
          var child = _this.props.children;
          var childProps = child.props || {};

          if (childProps[_this.props.triggerType]) {
            childProps[_this.props.triggerType](e);
          }

          _this.fireVisibleChange(!_this.state.visible);
        };

        _this.onOk = function () {
          _this.props.onOk(_this.picker && _this.picker.getValue());

          _this.fireVisibleChange(false);
        };

        _this.getContent = function () {
          if (_this.props.picker) {
            var _React$cloneElement;

            var pickerValue = _this.state.pickerValue;

            if (pickerValue === null) {
              pickerValue = _this.props.value;
            }

            return _react2['default'].cloneElement(_this.props.picker, (_React$cloneElement = {}, (0, _defineProperty3['default'])(_React$cloneElement, _this.props.pickerValueProp, pickerValue), (0, _defineProperty3['default'])(_React$cloneElement, _this.props.pickerValueChangeProp, _this.onPickerChange), (0, _defineProperty3['default'])(_React$cloneElement, 'ref', _this.saveRef), _React$cloneElement));
          } else {
            return _this.props.content;
          }
        };

        _this.onDismiss = function () {
          _this.props.onDismiss();

          _this.fireVisibleChange(false);
        };

        _this.hide = function () {
          _this.fireVisibleChange(false);
        };

        _this.state = {
          pickerValue: 'value' in _this.props ? _this.props.value : null,
          visible: _this.props.visible || false
        };
        return _this;
      }

      (0, _createClass3['default'])(_a, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
          if ('value' in nextProps) {
            this.setState({
              pickerValue: nextProps.value
            });
          }

          if ('visible' in nextProps) {
            this.setVisibleState(nextProps.visible);
          }
        }
      }, {
        key: 'setVisibleState',
        value: function setVisibleState(visible) {
          this.setState({
            visible: visible
          });

          if (!visible) {
            this.setState({
              pickerValue: null
            });
          }
        }
      }, {
        key: 'fireVisibleChange',
        value: function fireVisibleChange(visible) {
          if (this.state.visible !== visible) {
            if (!('visible' in this.props)) {
              this.setVisibleState(visible);
            }

            this.props.onVisibleChange(visible);
          }
        }
      }, {
        key: 'getRender',
        value: function getRender() {
          var props = this.props;
          var children = props.children;

          if (!children) {
            return getModal(props, this.state.visible, {
              getContent: this.getContent,
              onOk: this.onOk,
              hide: this.hide,
              onDismiss: this.onDismiss
            });
          }

          var _props = this.props,
              WrapComponent = _props.WrapComponent,
              disabled = _props.disabled;
          var child = children;
          var newChildProps = {};

          if (!disabled) {
            newChildProps[props.triggerType] = this.onTriggerClick;
          }

          return _react2['default'].createElement(WrapComponent, {
            style: props.wrapStyle
          }, _react2['default'].cloneElement(child, newChildProps), getModal(props, this.state.visible, {
            getContent: this.getContent,
            onOk: this.onOk,
            hide: this.hide,
            onDismiss: this.onDismiss
          }));
        }
      }, {
        key: 'render',
        value: function render() {
          return this.getRender();
        }
      }]);
      return _a;
    }(_react2['default'].Component), _a.defaultProps = (0, _extends3['default'])({
      onVisibleChange: function onVisibleChange(_) {},
      okText: 'Ok',
      dismissText: 'Dismiss',
      title: '',
      onOk: function onOk(_) {},
      onDismiss: function onDismiss() {}
    }, platformProps), _a;
  }

  module.exports = exports['default'];
},648,[493,649,532,533,537,571,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _defineProperty2 = _interopRequireDefault(_defineProperty);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = function (obj, key, value) {
    if (key in obj) {
      (0, _defineProperty2.default)(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  };
},649,[534]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof2 = _$$_REQUIRE(_dependencyMap[0]);

  var _typeof3 = _interopRequireDefault(_typeof2);

  exports.formatFn = formatFn;
  exports.formatProps = formatProps;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function formatIt(date, form) {
    var pad = function pad(n) {
      return n < 10 ? '0' + n : n;
    };

    var dateStr = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate());
    var timeStr = pad(date.getHours()) + ':' + pad(date.getMinutes());

    if (form === 'YYYY-MM-DD') {
      return dateStr;
    }

    if (form === 'HH:mm') {
      return timeStr;
    }

    return dateStr + ' ' + timeStr;
  }

  function formatFn(instance, value) {
    var formatsEnum = {
      date: 'YYYY-MM-DD',
      time: 'HH:mm',
      datetime: 'YYYY-MM-DD HH:mm'
    };
    var format = instance.props.format;
    var type = typeof format === 'undefined' ? 'undefined' : (0, _typeof3['default'])(format);

    if (type === 'string') {
      return formatIt(value, format);
    }

    if (type === 'function') {
      return format(value);
    }

    return formatIt(value, formatsEnum[instance.props.mode]);
  }

  function formatProps(props, value) {
    var formatsEnum = {
      date: 'YYYY-MM-DD',
      time: 'HH:mm',
      datetime: 'YYYY-MM-DD HH:mm'
    };
    var format = props.format;
    var type = typeof format === 'undefined' ? 'undefined' : (0, _typeof3['default'])(format);

    if (type === 'string') {
      return formatIt(value, format);
    }

    if (type === 'function') {
      return format(value);
    }

    return formatIt(value, formatsEnum[props.mode]);
  }
},650,[538]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _zh_CN = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_CN2 = _interopRequireDefault(_zh_CN);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = {
    okText: '确定',
    dismissText: '取消',
    extra: '请选择',
    DatePickerLocale: _zh_CN2['default']
  };
  module.exports = exports['default'];
},651,[643]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _reactNativeDrawerLayout = _$$_REQUIRE(_dependencyMap[5]);

  var _reactNativeDrawerLayout2 = _interopRequireDefault(_reactNativeDrawerLayout);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Drawer = function (_React$Component) {
    (0, _inherits3['default'])(Drawer, _React$Component);

    function Drawer() {
      (0, _classCallCheck3['default'])(this, Drawer);
      return (0, _possibleConstructorReturn3['default'])(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Drawer, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.props.open && this.drawer) {
          this.drawer.openDrawer();
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.open !== this.props.open && this.drawer) {
          this.drawer[nextProps.open ? 'openDrawer' : 'closeDrawer']();
        }
      }
    }, {
      key: 'onOpenChange',
      value: function onOpenChange(isOpen) {
        if (this.props.onOpenChange) {
          this.props.onOpenChange(isOpen);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            sidebar = _a.sidebar,
            position = _a.position,
            drawerRef = _a.drawerRef,
            _a$drawerWidth = _a.drawerWidth,
            drawerWidth = _a$drawerWidth === undefined ? 300 : _a$drawerWidth,
            restProps = __rest(_a, ["sidebar", "position", "drawerRef", "drawerWidth"]);

        ['onOpenChange', 'onDrawerOpen', 'onDrawerClose', 'drawerPosition', 'renderNavigationView'].forEach(function (prop) {
          if (restProps.hasOwnProperty(prop)) {
            delete restProps[prop];
          }
        });
        var _position = _reactNativeDrawerLayout2['default'].positions.Left;

        if (position === 'right') {
          _position = _reactNativeDrawerLayout2['default'].positions.Right;
        }

        return _react2['default'].createElement(_reactNativeDrawerLayout2['default'], (0, _extends3['default'])({
          ref: function ref(el) {
            if (drawerRef) {
              drawerRef(el);
            }

            _this2.drawer = el;
          },
          renderNavigationView: function renderNavigationView() {
            return sidebar;
          },
          drawerPosition: _position,
          onDrawerOpen: function onDrawerOpen() {
            return _this2.onOpenChange(true);
          },
          onDrawerClose: function onDrawerClose() {
            return _this2.onOpenChange(false);
          },
          keyboardDismissMode: 'on-drag',
          drawerWidth: drawerWidth
        }, restProps));
      }
    }]);
    return Drawer;
  }(_react2['default'].Component);

  exports['default'] = Drawer;
  Drawer.defaultProps = {
    position: 'left',
    open: false,
    drawerWidth: 300
  };
  module.exports = exports['default'];
},652,[493,532,533,537,571,653,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _class,
      _temp,
      _jsxFileName = 'src/DrawerLayout.js';

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var MIN_SWIPE_DISTANCE = 3;
  var DEVICE_WIDTH = parseFloat(_reactNative.Dimensions.get('window').width);
  var THRESHOLD = DEVICE_WIDTH / 2;
  var VX_MAX = 0.1;
  var IDLE = 'Idle';
  var DRAGGING = 'Dragging';
  var SETTLING = 'Settling';
  var DrawerLayout = (_temp = _class = function (_Component) {
    _inherits(DrawerLayout, _Component);

    function DrawerLayout(props, context) {
      _classCallCheck(this, DrawerLayout);

      var _this = _possibleConstructorReturn(this, (DrawerLayout.__proto__ || Object.getPrototypeOf(DrawerLayout)).call(this, props, context));

      _this._onOverlayClick = function (e) {
        e.stopPropagation();

        if (!_this._isLockedClosed() && !_this._isLockedOpen()) {
          _this.closeDrawer();
        }
      };

      _this._emitStateChanged = function (newState) {
        if (_this.props.onDrawerStateChanged) {
          _this.props.onDrawerStateChanged(newState);
        }
      };

      _this.openDrawer = function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _this._emitStateChanged(SETTLING);

        _reactNative.Animated.spring(_this.state.openValue, _extends({
          toValue: 1,
          bounciness: 0,
          restSpeedThreshold: 0.1,
          useNativeDriver: _this.props.useNativeAnimations
        }, options)).start(function () {
          if (_this.props.onDrawerOpen) {
            _this.props.onDrawerOpen();
          }

          _this._emitStateChanged(IDLE);
        });
      };

      _this.closeDrawer = function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _this._emitStateChanged(SETTLING);

        _reactNative.Animated.spring(_this.state.openValue, _extends({
          toValue: 0,
          bounciness: 0,
          restSpeedThreshold: 1,
          useNativeDriver: _this.props.useNativeAnimations
        }, options)).start(function () {
          if (_this.props.onDrawerClose) {
            _this.props.onDrawerClose();
          }

          _this._emitStateChanged(IDLE);
        });
      };

      _this._handleDrawerOpen = function () {
        if (_this.props.onDrawerOpen) {
          _this.props.onDrawerOpen();
        }
      };

      _this._handleDrawerClose = function () {
        if (_this.props.onDrawerClose) {
          _this.props.onDrawerClose();
        }
      };

      _this._shouldSetPanResponder = function (e, _ref) {
        var moveX = _ref.moveX,
            dx = _ref.dx,
            dy = _ref.dy;

        if (!dx || !dy || Math.abs(dx) < MIN_SWIPE_DISTANCE) {
          return false;
        }

        if (_this._isLockedClosed() || _this._isLockedOpen()) {
          return false;
        }

        if (_this.getDrawerPosition() === 'left') {
          var overlayArea = DEVICE_WIDTH - (DEVICE_WIDTH - _this.props.drawerWidth);

          if (_this._lastOpenValue === 1) {
            if (dx < 0 && Math.abs(dx) > Math.abs(dy) * 3 || moveX > overlayArea) {
              _this._isClosing = true;
              _this._closingAnchorValue = _this._getOpenValueForX(moveX);
              return true;
            }
          } else {
            if (moveX <= 35 && dx > 0) {
              _this._isClosing = false;
              return true;
            }

            return false;
          }
        } else {
          var _overlayArea = DEVICE_WIDTH - _this.props.drawerWidth;

          if (_this._lastOpenValue === 1) {
            if (dx > 0 && Math.abs(dx) > Math.abs(dy) * 3 || moveX < _overlayArea) {
              _this._isClosing = true;
              _this._closingAnchorValue = _this._getOpenValueForX(moveX);
              return true;
            }
          } else {
            if (moveX >= DEVICE_WIDTH - 35 && dx < 0) {
              _this._isClosing = false;
              return true;
            }

            return false;
          }
        }
      };

      _this._panResponderGrant = function () {
        _this._emitStateChanged(DRAGGING);
      };

      _this._panResponderMove = function (e, _ref2) {
        var moveX = _ref2.moveX;

        var openValue = _this._getOpenValueForX(moveX);

        if (_this._isClosing) {
          openValue = 1 - (_this._closingAnchorValue - openValue);
        }

        if (openValue > 1) {
          openValue = 1;
        } else if (openValue < 0) {
          openValue = 0;
        }

        _this.state.openValue.setValue(openValue);
      };

      _this._panResponderRelease = function (e, _ref3) {
        var moveX = _ref3.moveX,
            vx = _ref3.vx;
        var previouslyOpen = _this._isClosing;
        var isWithinVelocityThreshold = vx < VX_MAX && vx > -0.1;

        if (_this.getDrawerPosition() === 'left') {
          if (vx > 0 && moveX > THRESHOLD || vx >= VX_MAX || isWithinVelocityThreshold && previouslyOpen && moveX > THRESHOLD) {
            _this.openDrawer({
              velocity: vx
            });
          } else if (vx < 0 && moveX < THRESHOLD || vx < -0.1 || isWithinVelocityThreshold && !previouslyOpen) {
            _this.closeDrawer({
              velocity: vx
            });
          } else if (previouslyOpen) {
            _this.openDrawer();
          } else {
            _this.closeDrawer();
          }
        } else {
          if (vx < 0 && moveX < THRESHOLD || vx <= -0.1 || isWithinVelocityThreshold && previouslyOpen && moveX < THRESHOLD) {
            _this.openDrawer({
              velocity: -1 * vx
            });
          } else if (vx > 0 && moveX > THRESHOLD || vx > VX_MAX || isWithinVelocityThreshold && !previouslyOpen) {
            _this.closeDrawer({
              velocity: -1 * vx
            });
          } else if (previouslyOpen) {
            _this.openDrawer();
          } else {
            _this.closeDrawer();
          }
        }
      };

      _this._isLockedClosed = function () {
        return _this.props.drawerLockMode === 'locked-closed' && !_this.state.drawerShown;
      };

      _this._isLockedOpen = function () {
        return _this.props.drawerLockMode === 'locked-open' && _this.state.drawerShown;
      };

      _this.state = {
        accessibilityViewIsModal: false,
        drawerShown: false,
        openValue: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    _createClass(DrawerLayout, [{
      key: 'getDrawerPosition',
      value: function getDrawerPosition() {
        var drawerPosition = this.props.drawerPosition;
        var rtl = _reactNative.I18nManager.isRTL;
        return rtl ? drawerPosition === 'left' ? 'right' : 'left' : drawerPosition;
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        var _this2 = this;

        var openValue = this.state.openValue;
        openValue.addListener(function (_ref4) {
          var value = _ref4.value;
          var drawerShown = value > 0;
          var accessibilityViewIsModal = drawerShown;

          if (drawerShown !== _this2.state.drawerShown) {
            _this2.setState({
              drawerShown: drawerShown,
              accessibilityViewIsModal: accessibilityViewIsModal
            });
          }

          if (_this2.props.keyboardDismissMode === 'on-drag') {
            _reactNative.Keyboard.dismiss();
          }

          _this2._lastOpenValue = value;

          if (_this2.props.onDrawerSlide) {
            _this2.props.onDrawerSlide({
              nativeEvent: {
                offset: value
              }
            });
          }
        });
        this._panResponder = _reactNative.PanResponder.create({
          onMoveShouldSetPanResponder: this._shouldSetPanResponder,
          onPanResponderGrant: this._panResponderGrant,
          onPanResponderMove: this._panResponderMove,
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderRelease: this._panResponderRelease,
          onPanResponderTerminate: function onPanResponderTerminate() {}
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _state = this.state,
            accessibilityViewIsModal = _state.accessibilityViewIsModal,
            drawerShown = _state.drawerShown,
            openValue = _state.openValue;
        var _props = this.props,
            drawerBackgroundColor = _props.drawerBackgroundColor,
            drawerWidth = _props.drawerWidth,
            drawerPosition = _props.drawerPosition;
        var dynamicDrawerStyles = {
          backgroundColor: drawerBackgroundColor,
          width: drawerWidth,
          left: drawerPosition === 'left' ? 0 : null,
          right: drawerPosition === 'right' ? 0 : null
        };
        var outputRange = undefined;

        if (this.getDrawerPosition() === 'left') {
          outputRange = [-drawerWidth, 0];
        } else {
          outputRange = [drawerWidth, 0];
        }

        var drawerTranslateX = openValue.interpolate({
          inputRange: [0, 1],
          outputRange: outputRange,
          extrapolate: 'clamp'
        });
        var animatedDrawerStyles = {
          transform: [{
            translateX: drawerTranslateX
          }]
        };
        var overlayOpacity = openValue.interpolate({
          inputRange: [0, 1],
          outputRange: [0, 0.7],
          extrapolate: 'clamp'
        });
        var animatedOverlayStyles = {
          opacity: overlayOpacity
        };
        var pointerEvents = drawerShown ? 'auto' : 'none';
        return _react2.default.createElement(_reactNative.View, _extends({
          style: {
            flex: 1,
            backgroundColor: 'transparent'
          }
        }, this._panResponder.panHandlers, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 177
          }
        }), _react2.default.createElement(_reactNative.Animated.View, {
          style: styles.main,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 181
          }
        }, this.props.children), _react2.default.createElement(_reactNative.TouchableWithoutFeedback, {
          pointerEvents: pointerEvents,
          onPress: this._onOverlayClick,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 184
          }
        }, _react2.default.createElement(_reactNative.Animated.View, {
          pointerEvents: pointerEvents,
          style: [styles.overlay, animatedOverlayStyles],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 188
          }
        })), _react2.default.createElement(_reactNative.Animated.View, {
          accessibilityViewIsModal: accessibilityViewIsModal,
          style: [styles.drawer, dynamicDrawerStyles, animatedDrawerStyles, {
            opacity: drawerShown ? 1 : 0
          }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 193
          }
        }, this.props.renderNavigationView()));
      }
    }, {
      key: '_getOpenValueForX',
      value: function _getOpenValueForX(x) {
        var drawerWidth = this.props.drawerWidth;

        if (this.getDrawerPosition() === 'left') {
          return x / drawerWidth;
        }

        return (DEVICE_WIDTH - x) / drawerWidth;
      }
    }]);

    return DrawerLayout;
  }(_react.Component), _class.defaultProps = {
    drawerWidth: 0,
    drawerPosition: 'left',
    useNativeAnimations: false
  }, _class.positions = {
    Left: 'left',
    Right: 'right'
  }, _temp);
  exports.default = DrawerLayout;

  var styles = _reactNative.StyleSheet.create({
    drawer: {
      position: 'absolute',
      top: 0,
      bottom: 0,
      zIndex: 1001
    },
    main: {
      flex: 1,
      zIndex: 0
    },
    overlay: {
      backgroundColor: '#000',
      position: 'absolute',
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      zIndex: 1000
    }
  });
},653,[49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Flex = _$$_REQUIRE(_dependencyMap[0]);

  var _Flex2 = _interopRequireDefault(_Flex);

  var _FlexItem = _$$_REQUIRE(_dependencyMap[1]);

  var _FlexItem2 = _interopRequireDefault(_FlexItem);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  _Flex2['default'].Item = _FlexItem2['default'];
  exports['default'] = _Flex2['default'];
  module.exports = exports['default'];
},654,[655,656]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Flex = function (_React$Component) {
    (0, _inherits3['default'])(Flex, _React$Component);

    function Flex() {
      (0, _classCallCheck3['default'])(this, Flex);
      return (0, _possibleConstructorReturn3['default'])(this, (Flex.__proto__ || Object.getPrototypeOf(Flex)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Flex, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            style = _a.style,
            direction = _a.direction,
            wrap = _a.wrap,
            justify = _a.justify,
            align = _a.align,
            children = _a.children,
            restProps = __rest(_a, ["style", "direction", "wrap", "justify", "align", "children"]);

        var transferConst = [justify, align];
        var transferConstStyle = transferConst.map(function (el) {
          var tempTxt = undefined;

          switch (el) {
            case 'start':
              tempTxt = 'flex-start';
              break;

            case 'end':
              tempTxt = 'flex-end';
              break;

            case 'between':
              tempTxt = 'space-between';
              break;

            case 'around':
              tempTxt = 'space-around';
              break;

            default:
              tempTxt = el;
              break;
          }

          return tempTxt;
        });
        var flexStyle = {
          flexDirection: direction,
          flexWrap: wrap,
          justifyContent: transferConstStyle[0],
          alignItems: transferConstStyle[1]
        };

        var inner = _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
          style: [flexStyle, style]
        }, restProps), children);

        var shouldWrapInTouchableComponent = restProps.onPress || restProps.onLongPress || restProps.onPressIn || restProps.onPressOut;

        if (!!shouldWrapInTouchableComponent) {
          return _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, restProps, inner);
        } else {
          return inner;
        }
      }
    }]);
    return Flex;
  }(_react2['default'].Component);

  exports['default'] = Flex;
  Flex.defaultProps = {
    direction: 'row',
    wrap: 'nowrap',
    justify: 'start',
    align: 'center'
  };
  module.exports = exports['default'];
},655,[493,532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var FlexItem = function (_React$Component) {
    (0, _inherits3['default'])(FlexItem, _React$Component);

    function FlexItem() {
      (0, _classCallCheck3['default'])(this, FlexItem);
      return (0, _possibleConstructorReturn3['default'])(this, (FlexItem.__proto__ || Object.getPrototypeOf(FlexItem)).apply(this, arguments));
    }

    (0, _createClass3['default'])(FlexItem, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            style = _a.style,
            children = _a.children,
            flex = _a.flex,
            restProps = __rest(_a, ["style", "children", "flex"]);

        var flexItemStyle = {
          flex: flex || 1
        };

        var inner = _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
          style: [flexItemStyle, style]
        }, restProps), children);

        var shouldWrapInTouchableComponent = restProps.onPress || restProps.onLongPress || restProps.onPressIn || restProps.onPressOut;

        if (!!shouldWrapInTouchableComponent) {
          return _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, restProps, inner);
        } else {
          return inner;
        }
      }
    }]);
    return FlexItem;
  }(_react2['default'].Component);

  exports['default'] = FlexItem;
  FlexItem.defaultProps = {
    flex: 1
  };
  module.exports = exports['default'];
},656,[493,532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  var _index3 = _$$_REQUIRE(_dependencyMap[8]);

  var _index4 = _interopRequireDefault(_index3);

  var _style = _$$_REQUIRE(_dependencyMap[9]);

  var _index5 = _$$_REQUIRE(_dependencyMap[10]);

  var _index6 = _interopRequireDefault(_index5);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Grid = function (_React$Component) {
    (0, _inherits3['default'])(Grid, _React$Component);

    function Grid() {
      (0, _classCallCheck3['default'])(this, Grid);
      return (0, _possibleConstructorReturn3['default'])(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Grid, [{
      key: 'getFlexItemStyle',
      value: function getFlexItemStyle(columnNum) {
        return {
          height: _reactNative.Dimensions.get('window').width / columnNum,
          borderRightWidth: this.props.hasLine ? _reactNative.StyleSheet.hairlineWidth : 0
        };
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            data = _props.data,
            hasLine = _props.hasLine,
            isCarousel = _props.isCarousel,
            _props$onPress = _props.onPress,
            _onPress = _props$onPress === undefined ? function () {} : _props$onPress,
            carouselProps = _props.carouselProps;

        var columnNum = this.props.columnNum;
        var customItemStyle = this.props.itemStyle;
        var carouselMaxRow = this.props.carouselMaxRow;
        var dataLength = data && data.length || 0;
        var rowCount = Math.ceil(dataLength / columnNum);
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index6['default']
        }, function (styles) {
          var renderItem = _this2.props.renderItem || function (dataItem, index) {
            return _react2['default'].createElement(_index4['default'], {
              direction: 'column',
              justify: 'center',
              style: {
                flex: 1
              },
              onPress: function onPress() {
                return _onPress(dataItem, index);
              }
            }, _react2['default'].isValidElement(dataItem.icon) ? dataItem.icon : _react2['default'].createElement(_reactNative.Image, {
              source: {
                uri: dataItem.icon
              },
              style: styles.icon
            }), _react2['default'].createElement(_reactNative.Text, {
              style: styles.text
            }, dataItem.text));
          };

          var flexItemStyle = _this2.getFlexItemStyle(columnNum);

          var rowsArr = [];

          for (var i = 0; i < rowCount; i++) {
            var rowArr = [];

            var _loop = function _loop(j) {
              var dataIndex = i * columnNum + j;

              if (dataIndex < dataLength) {
                var el = data && data[dataIndex];
                rowArr.push(_react2['default'].createElement(_index4['default'].Item, {
                  key: j,
                  style: [styles.grayBorderBox, flexItemStyle, {
                    borderLeftWidth: hasLine && j === 0 ? _reactNative.StyleSheet.hairlineWidth : 0
                  }, customItemStyle],
                  onPress: function onPress() {
                    return _onPress(el, dataIndex);
                  }
                }, renderItem(el, dataIndex)));
              } else {
                rowArr.push(_react2['default'].createElement(_index4['default'].Item, {
                  key: j,
                  style: [styles.grayBorderBox, flexItemStyle]
                }));
              }
            };

            for (var j = 0; j < columnNum; j++) {
              _loop(j);
            }

            var boxBorderStyle = {
              borderTopWidth: hasLine && i === 0 ? _reactNative.StyleSheet.hairlineWidth : 0,
              borderBottomWidth: hasLine ? _reactNative.StyleSheet.hairlineWidth : 0
            };
            rowsArr.push(_react2['default'].createElement(_index4['default'], {
              key: i,
              style: [styles.grayBorderBox, boxBorderStyle]
            }, rowArr));
          }

          var pageCount = Math.ceil(rowCount / carouselMaxRow);
          var pagesArr = [];

          if (isCarousel && pageCount > 1) {
            for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {
              var pageRows = [];

              for (var ii = 0; ii < carouselMaxRow; ii++) {
                var rowIndex = pageIndex * carouselMaxRow + ii;

                if (rowIndex < rowCount) {
                  pageRows.push(rowsArr[rowIndex]);
                } else {
                  var res = [];

                  for (var jjj = 0; jjj < columnNum; jjj++) {
                    res.push(_react2['default'].createElement(_index4['default'].Item, {
                      key: jjj,
                      style: [styles.grayBorderBox, flexItemStyle]
                    }));
                  }

                  pageRows.push(_react2['default'].createElement(_index4['default'], {
                    key: rowIndex,
                    style: [styles.grayBorderBox, {
                      borderBottomWidth: hasLine ? _reactNative.StyleSheet.hairlineWidth : 0
                    }]
                  }, res));
                }
              }

              pagesArr.push(_react2['default'].createElement(_reactNative.View, {
                key: pageIndex,
                style: [styles.grayBorderBox, {
                  borderTopWidth: hasLine && pageIndex !== 0 ? _reactNative.StyleSheet.hairlineWidth : 0
                }]
              }, pageRows));
            }
          }

          return isCarousel && pageCount > 1 ? _react2['default'].createElement(_index2['default'], (0, _extends3['default'])({
            infinite: false,
            dots: true
          }, carouselProps), pagesArr) : _react2['default'].createElement(_index4['default'], {
            direction: 'column'
          }, rowsArr);
        });
      }
    }]);
    return Grid;
  }(_react2['default'].Component);

  exports['default'] = Grid;
  Grid.defaultProps = {
    data: [],
    hasLine: true,
    isCarousel: false,
    columnNum: 4,
    carouselMaxRow: 2,
    itemStyle: {},
    carouselProps: {}
  };
  module.exports = exports['default'];
},657,[493,532,533,537,571,49,2,621,654,587,658]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      grayBorderBox: {
        borderColor: theme.border_color_base
      },
      icon: {
        width: theme.icon_size_md,
        height: theme.icon_size_md
      },
      text: {
        fontSize: theme.font_size_caption_sm,
        color: theme.color_text_base,
        marginTop: theme.v_spacing_md
      }
    });
  };

  module.exports = exports['default'];
},658,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _ImageRoll = _$$_REQUIRE(_dependencyMap[7]);

  var _ImageRoll2 = _interopRequireDefault(_ImageRoll);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ImagePicker = function (_React$Component) {
    (0, _inherits3['default'])(ImagePicker, _React$Component);

    function ImagePicker(props) {
      (0, _classCallCheck3['default'])(this, ImagePicker);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (ImagePicker.__proto__ || Object.getPrototypeOf(ImagePicker)).call(this, props));

      _this.onPressIn = function (styles) {
        return function () {
          _this.plusWrap.setNativeProps({
            style: [styles.item, styles.size, styles.plusWrapHighlight]
          });
        };
      };

      _this.onPressOut = function (styles) {
        return function () {
          _this.plusWrap.setNativeProps({
            style: [styles.item, styles.size, styles.plusWrapNormal]
          });
        };
      };

      _this.showPicker = function () {
        if (_this.props.onAddImageClick) {
          _this.props.onAddImageClick();

          return;
        }

        _this.setState({
          visible: true
        });
      };

      _this.hideImageRoll = function () {
        _this.setState({
          visible: false
        });

        if (_this.props.onFail) {
          _this.props.onFail('cancel image selection');
        }
      };

      _this.state = {
        visible: false
      };
      return _this;
    }

    (0, _createClass3['default'])(ImagePicker, [{
      key: 'addImage',
      value: function addImage(imageObj) {
        if (!imageObj.url) {
          imageObj.url = imageObj.uri;
          delete imageObj.uri;
        }

        var _props$files = this.props.files,
            files = _props$files === undefined ? [] : _props$files;
        var newImages = files.concat(imageObj);

        if (this.props.onChange) {
          this.props.onChange(newImages, 'add');
        }
      }
    }, {
      key: 'removeImage',
      value: function removeImage(idx) {
        var newImages = [];
        var _props$files2 = this.props.files,
            files = _props$files2 === undefined ? [] : _props$files2;
        files.forEach(function (image, index) {
          if (index !== idx) {
            newImages.push(image);
          }
        });

        if (this.props.onChange) {
          this.props.onChange(newImages, 'remove', idx);
        }
      }
    }, {
      key: 'onImageClick',
      value: function onImageClick(index) {
        if (this.props.onImageClick) {
          this.props.onImageClick(index, this.props.files);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            _props$files3 = _props.files,
            files = _props$files3 === undefined ? [] : _props$files3,
            selectable = _props.selectable,
            cameraPickerProps = _props.cameraPickerProps;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var filesView = files.map(function (item, index) {
            return _react2['default'].createElement(_reactNative.View, {
              key: index,
              style: [styles.item, styles.size]
            }, _react2['default'].createElement(_reactNative.TouchableOpacity, {
              onPress: function onPress() {
                return _this2.onImageClick(index);
              },
              activeOpacity: 0.6
            }, _react2['default'].createElement(_reactNative.Image, {
              source: {
                uri: item.url
              },
              style: [styles.size, styles.image]
            })), _react2['default'].createElement(_reactNative.TouchableOpacity, {
              onPress: function onPress() {
                return _this2.removeImage(index);
              },
              style: styles.closeWrap,
              activeOpacity: 0.6
            }, _react2['default'].createElement(_reactNative.Text, {
              style: styles.closeText
            }, '\xD7')));
          });

          var imageRollEl = _react2['default'].createElement(_ImageRoll2['default'], {
            onCancel: _this2.hideImageRoll,
            onSelected: function onSelected(imgObj) {
              return _this2.addImage(imgObj);
            },
            title: _this2.props.title,
            cancelText: _this2.props.cancelText,
            cameraPickerProps: cameraPickerProps
          });

          return _react2['default'].createElement(_reactNative.View, {
            style: styles.container
          }, filesView, selectable && _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: _this2.showPicker,
            onPressIn: _this2.onPressIn(styles),
            onPressOut: _this2.onPressOut(styles)
          }, _react2['default'].createElement(_reactNative.View, {
            ref: function ref(conponent) {
              return _this2.plusWrap = conponent;
            },
            style: [styles.item, styles.size, styles.plusWrap, styles.plusWrapNormal]
          }, _react2['default'].createElement(_reactNative.Text, {
            style: [styles.plusText]
          }, '+'))), _this2.state.visible ? imageRollEl : null);
        });
      }
    }]);
    return ImagePicker;
  }(_react2['default'].Component);

  exports['default'] = ImagePicker;
  ImagePicker.defaultProps = {
    onChange: function onChange() {},
    onFail: function onFail() {},
    files: [],
    selectable: true
  };
  module.exports = exports['default'];
},659,[532,533,537,571,49,2,587,660,673]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _default = _$$_REQUIRE(_dependencyMap[7]);

  var _default2 = _interopRequireDefault(_default);

  var _CameraRollPicker = _$$_REQUIRE(_dependencyMap[8]);

  var _CameraRollPicker2 = _interopRequireDefault(_CameraRollPicker);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var styles = _reactNative.StyleSheet.create({
    statusBarBg: {
      height: 20
    },
    naviBar: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      borderBottomWidth: 1,
      borderBottomColor: '#d9d9d9',
      height: 44
    },
    barTitle: {
      flex: 1,
      textAlign: 'center',
      fontWeight: '500',
      marginLeft: 28,
      fontSize: 16
    },
    rightBtn: {
      width: 56,
      color: _default2['default'].brand_primary,
      fontSize: 16
    }
  });

  var ImageRoll = function (_React$Component) {
    (0, _inherits3['default'])(ImageRoll, _React$Component);

    function ImageRoll() {
      (0, _classCallCheck3['default'])(this, ImageRoll);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (ImageRoll.__proto__ || Object.getPrototypeOf(ImageRoll)).apply(this, arguments));

      _this.onSelected = function (images, _) {
        _this.props.onSelected(images[0]);

        _this.props.onCancel();
      };

      return _this;
    }

    (0, _createClass3['default'])(ImageRoll, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            title = _props.title,
            cancelText = _props.cancelText,
            cameraPickerProps = _props.cameraPickerProps;
        return _react2['default'].createElement(_reactNative.Modal, {
          animationType: 'slide',
          visible: true,
          onRequestClose: function onRequestClose() {},
          transparent: false
        }, _react2['default'].createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react2['default'].createElement(_reactNative.StatusBar, {
          barStyle: 'light-content'
        }), _react2['default'].createElement(_reactNative.View, {
          style: styles.statusBarBg
        }), _react2['default'].createElement(_reactNative.View, {
          style: [styles.naviBar]
        }, _react2['default'].createElement(_reactNative.Text, {
          style: [styles.barTitle]
        }, title), _react2['default'].createElement(_reactNative.TouchableOpacity, {
          onPress: this.props.onCancel
        }, _react2['default'].createElement(_reactNative.Text, {
          style: styles.rightBtn
        }, cancelText))), _react2['default'].createElement(_CameraRollPicker2['default'], (0, _extends3['default'])({
          selected: [],
          callback: this.onSelected,
          maximum: 1
        }, cameraPickerProps))));
      }
    }]);
    return ImageRoll;
  }(_react2['default'].Component);

  exports['default'] = ImageRoll;
  ImageRoll.defaultProps = {
    title: '图片',
    cancelText: '取消',
    cameraPickerProps: {}
  };
  module.exports = exports['default'];
},660,[493,532,533,537,571,49,2,589,661]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _regenerator = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator2 = _interopRequireDefault(_regenerator);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _listView = _$$_REQUIRE(_dependencyMap[7]);

  var _listView2 = _interopRequireDefault(_listView);

  var _ImageItem = _$$_REQUIRE(_dependencyMap[8]);

  var _ImageItem2 = _interopRequireDefault(_ImageItem);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __awaiter = function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }

      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }

      function step(result) {
        result.done ? resolve(result.value) : new P(function (resolve) {
          resolve(result.value);
        }).then(fulfilled, rejected);
      }

      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };

  var styles = _reactNative.StyleSheet.create({
    wrapper: {
      flex: 1
    },
    row: {
      flexDirection: 'row',
      flex: 1
    },
    marker: {
      position: 'absolute',
      top: 5,
      backgroundColor: 'transparent'
    },
    spinner: {}
  });

  var CameraRollPicker = function (_Component) {
    (0, _inherits3['default'])(CameraRollPicker, _Component);

    function CameraRollPicker(props) {
      (0, _classCallCheck3['default'])(this, CameraRollPicker);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (CameraRollPicker.__proto__ || Object.getPrototypeOf(CameraRollPicker)).call(this, props));

      _this.onFetch = function () {
        var _ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

        var startFetch = arguments[1];
        var abortFetch = arguments[2];
        return __awaiter(_this, undefined, undefined, _regenerator2['default'].mark(function _callee() {
          var _props, assetType, groupTypes, first, groupName, mimeTypes, params, res, data;

          return _regenerator2['default'].wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.prev = 0;
                  _props = this.props, assetType = _props.assetType, groupTypes = _props.groupTypes, first = _props.first, groupName = _props.groupName, mimeTypes = _props.mimeTypes;
                  params = {
                    first: first,
                    after: this.after,
                    assetType: assetType,
                    groupName: groupName,
                    mimeTypes: mimeTypes
                  };

                  if (_reactNative.Platform.OS !== 'android') {
                    params.groupTypes = groupTypes;
                  }

                  _context.next = 6;
                  return _reactNative.CameraRoll.getPhotos(params);

                case 6:
                  res = _context.sent;

                  if (res) {
                    data = res.edges;

                    if (res.page_info) {
                      this.after = res.page_info.has_next_page ? res.page_info.end_cursor : '';
                    }

                    startFetch(data, first);
                  }

                  _context.next = 14;
                  break;

                case 10:
                  _context.prev = 10;
                  _context.t0 = _context['catch'](0);
                  abortFetch();

                case 14:
                case 'end':
                  return _context.stop();
              }
            }
          }, _callee, this, [[0, 10]]);
        }));
      };

      _this._renderImage = function (item) {
        var selected = _this.state.selected;
        var _this$props = _this.props,
            imageMargin = _this$props.imageMargin,
            selectedMarker = _this$props.selectedMarker,
            imagesPerRow = _this$props.imagesPerRow,
            containerWidth = _this$props.containerWidth;
        var uri = item.node.image.uri;
        var isSelected = _this._arrayObjectIndexOf(selected, 'uri', uri) >= 0 ? true : false;
        return _react2['default'].createElement(_ImageItem2['default'], {
          key: uri,
          item: item,
          selected: isSelected,
          imageMargin: imageMargin,
          selectedMarker: selectedMarker,
          imagesPerRow: imagesPerRow,
          containerWidth: containerWidth,
          onPress: _this._selectImage.bind(_this)
        });
      };

      _this.state = {
        images: [],
        selected: _this.props.selected
      };
      return _this;
    }

    (0, _createClass3['default'])(CameraRollPicker, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this.setState({
          selected: nextProps.selected
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props2 = this.props,
            imageMargin = _props2.imageMargin,
            backgroundColor = _props2.backgroundColor,
            imagesPerRow = _props2.imagesPerRow;
        return _react2['default'].createElement(_reactNative.View, {
          style: [styles.wrapper, {
            padding: imageMargin,
            paddingRight: 0,
            backgroundColor: backgroundColor
          }]
        }, _react2['default'].createElement(_listView2['default'], {
          onFetch: this.onFetch,
          refreshable: false,
          numColumns: imagesPerRow,
          renderItem: function renderItem(item) {
            return _this2._renderImage(item);
          }
        }));
      }
    }, {
      key: '_selectImage',
      value: function _selectImage(image) {
        var _props3 = this.props,
            maximum = _props3.maximum,
            callback = _props3.callback,
            selectSingleItem = _props3.selectSingleItem;
        var selected = this.state.selected;

        var index = this._arrayObjectIndexOf(selected, 'uri', image.uri);

        if (index >= 0) {
          selected.splice(index, 1);
        } else {
          if (selectSingleItem) {
            selected.splice(0, selected.length);
          }

          if (selected.length < maximum) {
            selected.push(image);
          }
        }

        this.setState({
          selected: selected
        });
        callback(selected, image);
      }
    }, {
      key: '_nEveryRow',
      value: function _nEveryRow(data, n) {
        var result = [];
        var temp = [];

        for (var i = 0; i < data.length; ++i) {
          if (i > 0 && i % n === 0) {
            result.push(temp);
            temp = [];
          }

          temp.push(data[i]);
        }

        if (temp.length > 0) {
          while (temp.length !== n) {
            temp.push(null);
          }

          result.push(temp);
        }

        return result;
      }
    }, {
      key: '_arrayObjectIndexOf',
      value: function _arrayObjectIndexOf(array, property, value) {
        return array.map(function (o) {
          return o[property];
        }).indexOf(value);
      }
    }]);
    return CameraRollPicker;
  }(_react.Component);

  CameraRollPicker.defaultProps = {
    groupTypes: 'SavedPhotos',
    maximum: 15,
    imagesPerRow: 6,
    imageMargin: 4,
    first: 50,
    selectSingleItem: false,
    assetType: 'Photos',
    backgroundColor: 'white',
    selected: [],
    callback: function callback(selectedImages, currentImage) {
      console.log(currentImage);
      console.log(selectedImages);
    }
  };
  exports['default'] = CameraRollPicker;
  module.exports = exports['default'];
},661,[662,532,533,537,571,49,2,665,672]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},662,[663]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var g = function () {
    return this;
  }() || Function("return this")();

  var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
  var oldRuntime = hadRuntime && g.regeneratorRuntime;
  g.regeneratorRuntime = undefined;
  module.exports = _$$_REQUIRE(_dependencyMap[0]);

  if (hadRuntime) {
    g.regeneratorRuntime = oldRuntime;
  } else {
    try {
      delete g.regeneratorRuntime;
    } catch (e) {
      g.regeneratorRuntime = undefined;
    }
  }
},663,[664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  !function (global) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    var inModule = typeof module === "object";
    var runtime = global.regeneratorRuntime;

    if (runtime) {
      if (inModule) {
        module.exports = runtime;
      }

      return;
    }

    runtime = global.regeneratorRuntime = inModule ? module.exports : {};

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    runtime.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    runtime.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    runtime.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    runtime.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return Promise.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return Promise.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, reject);
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new Promise(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    runtime.AsyncIterator = AsyncIterator;

    runtime.async = function (innerFn, outerFn, self, tryLocsList) {
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
      return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator.return) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    runtime.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    runtime.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
  }(function () {
    return this;
  }() || Function("return this")());
},664,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _reactNativeUltimateListview = _$$_REQUIRE(_dependencyMap[5]);

  var _propTypes = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[7]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _icon = _$$_REQUIRE(_dependencyMap[9]);

  var _icon2 = _interopRequireDefault(_icon);

  var _getLocale = _$$_REQUIRE(_dependencyMap[10]);

  var _zh_CN = _$$_REQUIRE(_dependencyMap[11]);

  var _zh_CN2 = _interopRequireDefault(_zh_CN);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var ListView = function (_React$PureComponent) {
    (0, _inherits3['default'])(ListView, _React$PureComponent);

    function ListView() {
      (0, _classCallCheck3['default'])(this, ListView);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (ListView.__proto__ || Object.getPrototypeOf(ListView)).apply(this, arguments));

      _this.refresh = function () {
        if (_this.ulv) {
          _this.ulv.refresh();
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(ListView, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            renderItem = _a.renderItem,
            props = __rest(_a, ["renderItem"]);

        var locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'ListView', function () {
          return _zh_CN2['default'];
        });
        return _react2['default'].createElement(_reactNativeUltimateListview.UltimateListView, (0, _extends3['default'])({
          key: 'ant-list-view',
          keyExtractor: function keyExtractor(_, index) {
            return 'item-' + index;
          },
          refreshableMode: _reactNative.Platform.OS === 'ios' ? 'advanced' : 'basic',
          numColumns: 1,
          waitingSpinnerText: locale.loading,
          allLoadedText: locale.done,
          refreshableTitlePull: locale.refreshableTitlePull,
          refreshableTitleRelease: locale.refreshableTitleRelease,
          refreshableTitleRefreshing: locale.refreshableTitleRefreshing,
          emptyView: function emptyView() {
            return _this2.props.emptyView ? _this2.props.emptyView() : _react2['default'].createElement(_reactNative.View, {
              style: {
                flex: 1,
                alignItems: 'center',
                justifyContent: 'center'
              }
            }, _react2['default'].createElement(_reactNative.Text, {
              style: {
                textAlign: 'center',
                padding: '10%'
              }
            }, locale.noData));
          },
          customRefreshView: function customRefreshView(status) {
            return _react2['default'].createElement(_reactNative.View, {
              style: {
                flexDirection: 'row'
              }
            }, status === 2 ? _react2['default'].createElement(_reactNative.ActivityIndicator, null) : _react2['default'].createElement(_icon2['default'], {
              name: status === 0 ? 'arrow-down' : 'arrow-up',
              size: 18
            }), _react2['default'].createElement(_reactNative.Text, {
              style: {
                marginLeft: 5
              }
            }, status === 0 ? locale.refreshableTitlePull : status === 1 ? locale.refreshableTitleRelease : locale.refreshableTitleRefreshing));
          }
        }, props, {
          item: renderItem,
          ref: function ref(_ref) {
            return _this2.ulv = _ref;
          }
        }));
      }
    }]);
    return ListView;
  }(_react2['default'].PureComponent);

  ListView.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  exports['default'] = ListView;
  module.exports = exports['default'];
},665,[493,532,533,537,571,666,61,49,2,582,641,671]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "UltimateListView", {
    enumerable: true,
    get: function get() {
      return _ultimateListView.default;
    }
  });
  Object.defineProperty(exports, "UltimateRefreshView", {
    enumerable: true,
    get: function get() {
      return _refreshableScrollView.default;
    }
  });

  var _ultimateListView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _refreshableScrollView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},666,[1,667,668]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _refreshableScrollView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var PaginationStatus = {
    firstLoad: 0,
    waiting: 1,
    allLoaded: 2
  };

  var UltimateListView = function (_Component) {
    (0, _inherits2.default)(UltimateListView, _Component);

    function UltimateListView(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, UltimateListView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UltimateListView).call(this, _props));

      _this.onRefresh = function () {
        console.log('onRefresh()');

        if (_this.mounted) {
          _this.setState({
            isRefreshing: true
          });

          _this.setPage(1);

          _this.props.onFetch(_this.getPage(), _this.postRefresh, _this.endFetch);
        }
      };

      _this.onPaginate = function () {
        if (_this.state.paginationStatus !== PaginationStatus.allLoaded && !_this.state.isRefreshing) {
          console.log('onPaginate()');

          _this.setState({
            paginationStatus: PaginationStatus.waiting
          });

          _this.props.onFetch(_this.getPage() + 1, _this.postPaginate, _this.endFetch);
        }
      };

      _this.onEndReached = function () {
        if (_this.props.pagination && _this.props.autoPagination && _this.state.paginationStatus === PaginationStatus.waiting) {
          _this.onPaginate();
        }
      };

      _this.setPage = function (page) {
        return _this.page = page;
      };

      _this.getPage = function () {
        return _this.page;
      };

      _this.setRows = function (rows) {
        return _this.rows = rows;
      };

      _this.getRows = function () {
        return _this.rows;
      };

      _this.sleep = function (time) {
        return new Promise(function (resolve) {
          return setTimeout(function () {
            return resolve();
          }, time);
        });
      };

      _this.refresh = function () {
        _this.onRefresh();
      };

      _this.scrollToOffset = function (option) {
        _this._flatList.scrollToOffset(option);
      };

      _this.scrollToIndex = function (option) {
        _this._flatList.scrollToIndex(option);
      };

      _this.scrollToItem = function (option) {
        _this._flatList.scrollToItem(option);
      };

      _this.scrollToEnd = function (option) {
        _this._flatList.scrollToEnd(option);
      };

      _this.postRefresh = function () {
        var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var pageLimit = arguments.length > 1 ? arguments[1] : undefined;

        if (_this.mounted) {
          var paginationStatus = PaginationStatus.waiting;

          if (rows.length < pageLimit) {
            paginationStatus = PaginationStatus.allLoaded;
          }

          _this.updateRows(rows, paginationStatus);
        }
      };

      _this.endFetch = function () {
        if (_this.mounted) {
          _this.setState({
            isRefreshing: false
          });

          if (_this.props.refreshableMode === 'advanced' && _this._flatList._listRef._scrollRef.onRefreshEnd) {
            _this._flatList._listRef._scrollRef.onRefreshEnd();
          }
        }
      };

      _this.postPaginate = function () {
        var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var pageLimit = arguments.length > 1 ? arguments[1] : undefined;

        _this.setPage(_this.getPage() + 1);

        var mergedRows;
        var paginationStatus;

        if (rows.length === 0) {
          paginationStatus = PaginationStatus.allLoaded;
        } else {
          mergedRows = _this.getRows().concat(rows);
          paginationStatus = PaginationStatus.waiting;
        }

        _this.updateRows(mergedRows, paginationStatus);
      };

      _this.updateRows = function (rows, paginationStatus) {
        if (rows) {
          _this.setRows(rows);

          _this.setState({
            dataSource: rows,
            isRefreshing: false,
            paginationStatus: paginationStatus
          });
        } else {
          _this.setState({
            dataSource: _this.getRows().slice(),
            isRefreshing: false,
            paginationStatus: paginationStatus
          });
        }

        if (_this.props.refreshableMode === 'advanced') {
          _this.endFetch();
        }
      };

      _this.paginationFetchingView = function () {
        if (_this.props.paginationFetchingView) {
          return _this.props.paginationFetchingView();
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.fetchingView
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.paginationViewText
        }, _this.props.waitingSpinnerText));
      };

      _this.paginationAllLoadedView = function () {
        if (_this.props.pagination) {
          if (_this.props.paginationAllLoadedView) {
            return _this.props.paginationAllLoadedView();
          }

          return _react.default.createElement(_reactNative.View, {
            style: styles.paginationView
          }, _react.default.createElement(_reactNative.Text, {
            style: styles.allLoadedText
          }, _this.props.allLoadedText));
        }

        return null;
      };

      _this.paginationWaitingView = function (paginateCallback) {
        if (_this.props.pagination) {
          if (_this.props.autoPagination) {
            if (_this.props.paginationWaitingView) {
              return _this.props.paginationWaitingView(paginateCallback);
            }

            return _react.default.createElement(_reactNative.View, {
              style: styles.paginationView
            }, _react.default.createElement(_reactNative.ActivityIndicator, {
              color: _this.props.spinnerColor,
              size: _this.props.waitingSpinnerSize
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.paginationViewText, {
                marginLeft: 5
              }]
            }, _this.props.waitingSpinnerText));
          }
        }

        return null;
      };

      _this.renderHeader = function () {
        if (_this.props.header) {
          return _this.props.header();
        }

        return null;
      };

      _this.renderItem = function (_ref) {
        var item = _ref.item,
            index = _ref.index,
            separators = _ref.separators;

        if (_this.props.item) {
          return _this.props.item(item, index, separators);
        }

        return null;
      };

      _this.renderSeparator = function () {
        if (_this.props.separator) {
          if (_this.props.numColumns > 1) {
            return null;
          }

          return _this.props.separator();
        }

        return null;
      };

      _this.renderEmptyView = function () {
        if (_this.state.paginationStatus !== PaginationStatus.firstLoad && _this.props.emptyView) {
          return _this.props.emptyView();
        }

        return null;
      };

      _this.renderFooter = function () {
        if (_this.state.paginationStatus === PaginationStatus.firstLoad) {
          return _this.paginationFetchingView();
        } else if (_this.state.paginationStatus === PaginationStatus.waiting && _this.props.autoPagination === false) {
          return _this.paginationWaitingView(_this.onPaginate);
        } else if (_this.state.paginationStatus === PaginationStatus.waiting && _this.props.autoPagination === true) {
          return _this.paginationWaitingView();
        } else if (_this.getRows().length !== 0 && _this.state.paginationStatus === PaginationStatus.allLoaded) {
          return _this.paginationAllLoadedView();
        }

        return null;
      };

      _this.renderScrollComponent = function (props) {
        if (_this.props.refreshable && _this.props.refreshableMode === 'advanced') {
          return _react.default.createElement(_refreshableScrollView.default, (0, _extends2.default)({}, props, {
            insideOfUltimateListView: true,
            onRefresh: _this.onRefresh,
            ref: function ref(_ref2) {
              return _this.scrollView = _ref2;
            }
          }));
        }

        return _react.default.createElement(_reactNative.ScrollView, (0, _extends2.default)({}, props, {
          ref: function ref(_ref3) {
            return _this.scrollView = _ref3;
          }
        }));
      };

      _this.renderRefreshControl = function () {
        if (_this.props.refreshable && _this.props.refreshableMode === 'basic') {
          if (_this.props.customRefreshControl) {
            return _this.props.customRefreshControl(_this.state.isRefreshing, _this.onRefresh);
          }

          return _react.default.createElement(_reactNative.RefreshControl, {
            onRefresh: _this.onRefresh,
            refreshing: _this.state.isRefreshing,
            colors: _this.props.refreshableColors,
            progressBackgroundColor: _this.props.refreshableProgressBackgroundColor,
            size: _this.props.refreshableSize,
            tintColor: _this.props.refreshableTintColor,
            title: _this.props.refreshableTitle
          });
        }

        return null;
      };

      _this.setPage(1);

      _this.setRows([]);

      _this.state = {
        dataSource: [],
        isRefreshing: false,
        paginationStatus: PaginationStatus.firstLoad
      };
      return _this;
    }

    (0, _createClass2.default)(UltimateListView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.mounted = true;

        if (this.props.firstLoader) {
          this.props.onFetch(this.getPage(), this.postRefresh, this.endFetch);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.mounted = false;
      }
    }, {
      key: "updateDataSource",
      value: function updateDataSource() {
        var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        this.setRows(rows);
        this.setState({
          dataSource: rows
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var numColumns = this.props.numColumns;
        return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({
          renderScrollComponent: this.renderScrollComponent,
          key: numColumns,
          onEndReachedThreshold: 0.1
        }, this.props, {
          ref: function ref(_ref4) {
            return _this2._flatList = _ref4;
          },
          data: this.state.dataSource,
          renderItem: this.renderItem,
          ItemSeparatorComponent: this.renderSeparator,
          ListHeaderComponent: this.renderHeader,
          ListFooterComponent: this.renderFooter,
          ListEmptyComponent: this.renderEmptyView,
          onEndReached: this.onEndReached,
          refreshControl: this.renderRefreshControl(),
          numColumns: numColumns
        }));
      }
    }]);
    return UltimateListView;
  }(_react.Component);

  exports.default = UltimateListView;
  UltimateListView.defaultProps = {
    initialNumToRender: 10,
    horizontal: false,
    firstLoader: true,
    scrollEnabled: true,
    onFetch: null,
    enableEmptySections: true,
    header: null,
    item: null,
    paginationFetchingView: null,
    paginationAllLoadedView: null,
    paginationWaitingView: null,
    emptyView: null,
    separator: null,
    refreshable: true,
    refreshableMode: 'basic',
    refreshableTitle: null,
    refreshableColors: ['dimgray', 'tomato', 'limegreen'],
    refreshableProgressBackgroundColor: 'white',
    refreshableSize: undefined,
    refreshableTintColor: 'lightgray',
    customRefreshControl: null,
    refreshableTitlePull: 'Pull to refresh',
    refreshableTitleRefreshing: 'Loading...',
    refreshableTitleRelease: 'Release to load',
    customRefreshView: null,
    displayDate: false,
    dateFormat: 'yyyy-MM-dd hh:mm',
    dateTitle: 'Last updated: ',
    arrowImageSource: _$$_REQUIRE(_dependencyMap[12]),
    arrowImageStyle: undefined,
    refreshViewStyle: undefined,
    dateStyle: undefined,
    refreshViewHeight: 80,
    pagination: true,
    autoPagination: true,
    allLoadedText: 'End of List',
    spinnerColor: undefined,
    fetchingSpinnerSize: 'large',
    waitingSpinnerSize: 'small',
    waitingSpinnerText: 'Loading...',
    paginationBtnText: 'Load more...',
    numColumns: 1
  };
  UltimateListView.propTypes = {
    initialNumToRender: _propTypes.default.number,
    horizontal: _propTypes.default.bool,
    firstLoader: _propTypes.default.bool,
    scrollEnabled: _propTypes.default.bool,
    onFetch: _propTypes.default.func,
    enableEmptySections: _propTypes.default.bool,
    header: _propTypes.default.func,
    item: _propTypes.default.func,
    paginationFetchingView: _propTypes.default.func,
    paginationAllLoadedView: _propTypes.default.func,
    paginationWaitingView: _propTypes.default.func,
    emptyView: _propTypes.default.func,
    separator: _propTypes.default.func,
    refreshable: _propTypes.default.bool,
    refreshableMode: _propTypes.default.string,
    refreshableTitle: _propTypes.default.string,
    refreshableColors: _propTypes.default.array,
    refreshableProgressBackgroundColor: _propTypes.default.string,
    refreshableSize: _propTypes.default.string,
    refreshableTintColor: _propTypes.default.string,
    customRefreshControl: _propTypes.default.func,
    refreshableTitlePull: _propTypes.default.string,
    refreshableTitleRefreshing: _propTypes.default.string,
    refreshableTitleRelease: _propTypes.default.string,
    customRefreshView: _propTypes.default.func,
    displayDate: _propTypes.default.bool,
    dateFormat: _propTypes.default.string,
    dateTitle: _propTypes.default.string,
    arrowImageSource: _propTypes.default.any,
    arrowImageStyle: _propTypes.default.object,
    refreshViewStyle: _propTypes.default.object,
    dateStyle: _propTypes.default.object,
    refreshViewHeight: _propTypes.default.number,
    pagination: _propTypes.default.bool,
    autoPagination: _propTypes.default.bool,
    allLoadedText: _propTypes.default.string,
    spinnerColor: _propTypes.default.string,
    fetchingSpinnerSize: _propTypes.default.any,
    waitingSpinnerSize: _propTypes.default.any,
    waitingSpinnerText: _propTypes.default.string,
    paginationBtnText: _propTypes.default.string,
    numColumns: _propTypes.default.number
  };

  var styles = _reactNative.StyleSheet.create({
    fetchingView: {
      width: width,
      height: height,
      justifyContent: 'center',
      alignItems: 'center'
    },
    paginationView: {
      flex: 0,
      width: width,
      height: 55,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    paginationViewText: {
      fontSize: 16
    },
    paginationViewSpinner: {
      marginRight: 5
    },
    paginationBtn: {
      backgroundColor: 'tomato',
      margin: 10,
      borderRadius: 20,
      flex: 1,
      height: 50,
      justifyContent: 'center',
      alignItems: 'center'
    },
    paginationBtnText: {
      fontSize: 16,
      color: 'white',
      fontWeight: 'bold'
    },
    separator: {
      height: 0.5,
      marginLeft: 15,
      marginRight: 15,
      backgroundColor: 'lightgray'
    },
    emptyView: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    allLoadedText: {
      alignSelf: 'center',
      color: '#bfbfbf'
    },
    gridItem: {
      overflow: 'hidden',
      alignItems: 'center',
      justifyContent: 'center'
    },
    gridView: {
      flexDirection: 'row',
      alignItems: 'flex-start',
      flexWrap: 'wrap'
    }
  });
},667,[362,1,11,22,23,30,33,36,49,61,2,668,670]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _util = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var DATE_KEY = 'ultimateRefreshDate';
  var RefreshStatus = {
    pullToRefresh: 0,
    releaseToRefresh: 1,
    refreshing: 2
  };
  var PaginationStatus = {
    firstLoad: 0,
    waiting: 1,
    allLoaded: 2
  };

  var RefreshableScrollView = function (_ScrollView) {
    (0, _inherits2.default)(RefreshableScrollView, _ScrollView);

    function RefreshableScrollView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RefreshableScrollView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RefreshableScrollView).call(this, props));
      _this._offsetY = 0;
      _this._isRefreshing = false;
      _this._dragFlag = false;

      _this.onScroll = function (event) {
        var y = event.nativeEvent.contentOffset.y;
        var refreshViewHeight = _this.props.refreshViewHeight;

        if (y <= refreshViewHeight) {
          _this._offsetY = y - refreshViewHeight;
        }

        if (_this._dragFlag) {
          if (!_this._isRefreshing) {
            if (y <= 10) {
              if (_this.state.refreshStatus !== RefreshStatus.releaseToRefresh) {
                _this.setState({
                  refreshStatus: RefreshStatus.releaseToRefresh,
                  refreshTitle: _this.props.refreshableTitleRelease
                });

                _reactNative.Animated.timing(_this.state.arrowAngle, {
                  toValue: 1,
                  duration: 50,
                  easing: _reactNative.Easing.inOut(_reactNative.Easing.quad)
                }).start();
              }
            } else if (_this.state.refreshStatus !== RefreshStatus.pullToRefresh) {
              _this.setState({
                refreshStatus: RefreshStatus.pullToRefresh,
                refreshTitle: _this.props.refreshableTitlePull
              });

              _reactNative.Animated.timing(_this.state.arrowAngle, {
                toValue: 0,
                duration: 50,
                easing: _reactNative.Easing.inOut(_reactNative.Easing.quad)
              }).start();
            }
          }
        } else if (y <= 5) {
          setTimeout(function () {
            return _this._scrollview.scrollTo({
              x: 0,
              y: refreshViewHeight,
              animated: false
            });
          }, 100);
        }

        if (_this.props.onScroll) {
          _this.props.onScroll(event);
        }
      };

      _this.onScrollBeginDrag = function (event) {
        _this._dragFlag = true;
        var refreshViewHeight = _this.props.refreshViewHeight;
        _this._offsetY = event.nativeEvent.contentOffset.y - refreshViewHeight;

        if (_this.props.onScrollBeginDrag) {
          _this.props.onScrollBeginDrag(event);
        }
      };

      _this.onScrollEndDrag = function (event) {
        _this._dragFlag = false;
        var y = event.nativeEvent.contentOffset.y;
        var refreshViewHeight = _this.props.refreshViewHeight;
        _this._offsetY = y - refreshViewHeight;

        if (!_this._isRefreshing) {
          if (_this.state.refreshStatus === RefreshStatus.releaseToRefresh) {
            _this._isRefreshing = true;

            _this.setState({
              refreshStatus: RefreshStatus.refreshing,
              refreshTitle: _this.props.refreshableTitleRefreshing
            });

            _this._scrollview.scrollTo({
              x: 0,
              y: 0,
              animated: true
            });

            if (_this.props.insideOfUltimateListView) {
              _this.props.onRefresh();
            } else {
              _this.props.onRefresh(function () {
                _this.onRefreshEnd();
              });
            }
          } else if (y <= refreshViewHeight) {
            _this._scrollview.scrollTo({
              x: 0,
              y: refreshViewHeight,
              animated: true
            });
          }
        } else if (y <= refreshViewHeight) {
          _this._scrollview.scrollTo({
            x: 0,
            y: 0,
            animated: true
          });
        }

        if (_this.props.onScrollEndDrag) {
          _this.props.onScrollEndDrag(event);
        }
      };

      _this.scrollTo = function (option) {
        _this._scrollview.scrollTo(option);
      };

      _this.scrollToEnd = function (option) {
        _this._scrollview.scrollToEnd(option);
      };

      _this.onRefreshEnd = function () {
        if (_this.state.refreshStatus === RefreshStatus.refreshing) {
          _this._isRefreshing = false;
          var now = new Date().getTime();

          _this.setState({
            showRefreshHeader: true
          });

          setTimeout(function () {
            if (_this._scrollview.scrollTo) {
              _this._scrollview.scrollTo({
                x: 0,
                y: _this.props.refreshViewHeight,
                animated: true
              });
            }

            _this.setState({
              refreshStatus: RefreshStatus.pullToRefresh,
              refreshTitle: _this.props.refreshableTitlePull,
              date: (0, _util.default)(now, _this.props.dateFormat)
            });
          }, 1000);

          _reactNative.AsyncStorage.setItem(DATE_KEY, now.toString());

          _reactNative.Animated.timing(_this.state.arrowAngle, {
            toValue: 0,
            duration: 50,
            easing: _reactNative.Easing.inOut(_reactNative.Easing.quad)
          }).start();
        }
      };

      _this.state = {
        arrowAngle: new _reactNative.Animated.Value(0),
        refreshStatus: RefreshStatus.refreshing,
        refreshTitle: _this.props.refreshableTitleRefreshing,
        date: _this.props.date,
        showRefreshHeader: false
      };
      return _this;
    }

    (0, _createClass2.default)(RefreshableScrollView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var result;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                console.warn('The advancedRefreshView is not ready for Android at this moment. \n\nIf the items are less than the height of device screen, the refreshView will not disappear. \n\nPlease consider setting the refreshableMode={Platform.OS === "ios" ? "advanced" : "basic"}, or feel free to send me a PR to resolve this problem. \n\nThanks a lot.');
                _context.prev = 1;
                _context.next = 4;
                return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem(DATE_KEY));

              case 4:
                result = _context.sent;

                if (result) {
                  result = parseInt(result, 10);
                  this.setState({
                    date: (0, _util.default)(new Date(result), this.props.dateFormat)
                  });
                } else {
                  this.setState({
                    date: (0, _util.default)(new Date(), this.props.dateFormat)
                  });
                }

                _context.next = 11;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](1);
                console.log(_context.t0);

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, null, this, [[1, 8]]);
      }
    }, {
      key: "renderRefreshHeader",
      value: function renderRefreshHeader() {
        if (this.props.customRefreshView) {
          return _react.default.createElement(_reactNative.View, {
            style: [defaultHeaderStyles.header, this.props.refreshViewStyle]
          }, this.props.customRefreshView(this.state.refreshStatus, this._offsetY));
        }

        return _react.default.createElement(_reactNative.View, {
          style: [defaultHeaderStyles.header, this.props.refreshViewStyle, {
            height: this.props.refreshViewHeight
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: defaultHeaderStyles.status
        }, this.renderSpinner(), _react.default.createElement(_reactNative.Text, {
          style: defaultHeaderStyles.statusTitle
        }, this.state.refreshTitle)), this.props.displayDate && _react.default.createElement(_reactNative.Text, {
          style: [defaultHeaderStyles.date, this.props.dateStyle]
        }, this.props.dateTitle + this.state.date));
      }
    }, {
      key: "renderSpinner",
      value: function renderSpinner() {
        if (this.state.refreshStatus === RefreshStatus.refreshing) {
          return _react.default.createElement(_reactNative.ActivityIndicator, {
            style: {
              marginRight: 10
            }
          });
        }

        return _react.default.createElement(_reactNative.Animated.Image, {
          source: this.props.arrowImageSource,
          resizeMode: "contain",
          style: [defaultHeaderStyles.arrow, this.props.arrowImageStyle, {
            transform: [{
              rotateX: this.state.arrowAngle.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '-180deg']
              })
            }]
          }]
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.ScrollView, (0, _extends2.default)({
          ref: function ref(c) {
            return _this2._scrollview = c;
          }
        }, this.props, {
          scrollEventThrottle: 16,
          onScroll: this.onScroll,
          contentContainerStyle: {
            minHeight: height
          },
          onScrollEndDrag: this.onScrollEndDrag,
          onScrollBeginDrag: this.onScrollBeginDrag
        }), this.renderRefreshHeader(), this.props.children);
      }
    }]);
    return RefreshableScrollView;
  }(_reactNative.ScrollView);

  exports.default = RefreshableScrollView;
  RefreshableScrollView.defaultProps = {
    horizontal: false,
    scrollEnabled: true,
    header: null,
    refreshable: true,
    refreshableTitlePull: 'Pull to refresh',
    refreshableTitleRefreshing: 'Loading...',
    refreshableTitleRelease: 'Release to load',
    customRefreshView: null,
    displayDate: false,
    dateFormat: 'yyyy-MM-dd hh:mm',
    dateTitle: 'Last updated: ',
    arrowImageSource: _$$_REQUIRE(_dependencyMap[11]),
    arrowImageStyle: undefined,
    refreshViewStyle: undefined,
    dateStyle: undefined,
    refreshViewHeight: 80,
    insideOfUltimateListView: false
  };

  var defaultHeaderStyles = _reactNative.StyleSheet.create({
    header: {
      width: width,
      height: 80,
      alignItems: 'center',
      justifyContent: 'center'
    },
    status: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    arrow: {
      width: 23,
      height: 23,
      marginRight: 10,
      opacity: 0.4
    },
    statusTitle: {
      fontSize: 13,
      color: '#333333'
    },
    date: {
      fontSize: 11,
      color: '#333333',
      marginTop: 5
    }
  });
},668,[1,11,136,22,23,30,33,36,49,2,669,670]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _default = function _default(dateTime, format) {
    var date = new Date(dateTime);
    var fmt = format || 'yyyy-MM-dd';
    var o = {
      'M+': date.getMonth() + 1,
      'd+': date.getDate(),
      'h+': date.getHours(),
      'm+': date.getMinutes(),
      's+': date.getSeconds(),
      'q+': Math.floor((date.getMonth() + 3) / 3),
      S: date.getMilliseconds()
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, ("" + date.getFullYear()).substr(4 - RegExp.$1.length));

    for (var k in o) {
      if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
    }

    return fmt;
  };

  exports.default = _default;
},669,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/@bang88/react-native-ultimate-listview/src",
    "width": 104,
    "height": 104,
    "scales": [1],
    "hash": "59f717d188c836a960b6e0845ac9c9f6",
    "name": "downArrow",
    "type": "png"
  });
},670,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    done: '已加载完',
    loading: '加载中...',
    refreshableTitlePull: '下拉刷新',
    refreshableTitleRelease: '释放加载',
    refreshableTitleRefreshing: '加载中...',
    noData: '暂无数据'
  };
  module.exports = exports['default'];
},671,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _icon = _$$_REQUIRE(_dependencyMap[6]);

  var _icon2 = _interopRequireDefault(_icon);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ImageItem = function (_Component) {
    (0, _inherits3['default'])(ImageItem, _Component);

    function ImageItem(props) {
      (0, _classCallCheck3['default'])(this, ImageItem);
      return (0, _possibleConstructorReturn3['default'])(this, (ImageItem.__proto__ || Object.getPrototypeOf(ImageItem)).call(this, props));
    }

    (0, _createClass3['default'])(ImageItem, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        var _Dimensions$get = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get.width;

        var _props = this.props,
            imageMargin = _props.imageMargin,
            imagesPerRow = _props.imagesPerRow,
            containerWidth = _props.containerWidth;

        if (typeof containerWidth !== 'undefined') {
          width = containerWidth;
        }

        this._imageSize = (width - (imagesPerRow + 1) * imageMargin) / imagesPerRow;
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props2 = this.props,
            item = _props2.item,
            selected = _props2.selected,
            selectedMarker = _props2.selectedMarker,
            imageMargin = _props2.imageMargin;

        if (!item) {
          return null;
        }

        var marker = selectedMarker ? selectedMarker : _react2['default'].createElement(_icon2['default'], {
          name: 'check-circle',
          style: [styles.marker]
        });
        var image = item.node.image;
        return _react2['default'].createElement(_reactNative.TouchableOpacity, {
          style: {
            marginBottom: imageMargin,
            marginRight: imageMargin
          },
          onPress: function onPress() {
            return _this2._handleClick(image);
          }
        }, _react2['default'].createElement(_reactNative.Image, {
          source: {
            uri: image.uri
          },
          style: {
            height: this._imageSize,
            width: this._imageSize
          }
        }), selected ? marker : null);
      }
    }, {
      key: '_handleClick',
      value: function _handleClick(item) {
        if (this.props.onPress) {
          this.props.onPress(item);
        }
      }
    }]);
    return ImageItem;
  }(_react.Component);

  ImageItem.defaultProps = {
    item: {},
    selected: false
  };

  var styles = _reactNative.StyleSheet.create({
    marker: {
      position: 'absolute',
      top: 5,
      right: 5,
      backgroundColor: 'transparent'
    }
  });

  exports['default'] = ImageItem;
  module.exports = exports['default'];
},672,[532,533,537,571,49,2,582]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = _$$_REQUIRE(_dependencyMap[1]);

  var _default2 = _interopRequireDefault(_default);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = function () {
    return _reactNative.StyleSheet.create({
      container: {
        flexWrap: 'wrap',
        flexDirection: 'row'
      },
      size: {
        width: 80,
        height: 80
      },
      item: {
        marginRight: _default2['default'].h_spacing_sm,
        marginBottom: _default2['default'].v_spacing_sm,
        overflow: 'hidden'
      },
      image: {
        overflow: 'hidden',
        borderRadius: _default2['default'].radius_sm
      },
      closeWrap: {
        width: 16,
        height: 16,
        backgroundColor: '#999',
        borderRadius: 8,
        position: 'absolute',
        top: 4,
        right: 4,
        justifyContent: 'center',
        alignItems: 'center',
        overflow: 'hidden'
      },
      closeText: {
        color: _default2['default'].color_text_base_inverse,
        backgroundColor: 'transparent',
        fontSize: 20,
        height: 20,
        marginTop: -8,
        fontWeight: '300'
      },
      plusWrap: {
        borderRadius: _default2['default'].radius_sm,
        borderWidth: 1,
        justifyContent: 'center',
        alignItems: 'center'
      },
      plusWrapNormal: {
        backgroundColor: _default2['default'].fill_base,
        borderColor: _default2['default'].border_color_base
      },
      plusWrapHighlight: {
        backgroundColor: _default2['default'].fill_tap,
        borderColor: _default2['default'].border_color_base
      },
      plusText: {
        fontSize: 64,
        backgroundColor: 'transparent',
        fontWeight: '100',
        color: _default2['default'].color_text_caption
      }
    });
  };

  module.exports = exports['default'];
},673,[2,589]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _icon = _$$_REQUIRE(_dependencyMap[7]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _Input = _$$_REQUIRE(_dependencyMap[9]);

  var _Input2 = _interopRequireDefault(_Input);

  var _index = _$$_REQUIRE(_dependencyMap[10]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var noop = function noop() {};

  function normalizeValue(value) {
    if (typeof value === 'undefined' || value === null) {
      return '';
    }

    return value;
  }

  var InputItem = function (_React$Component) {
    (0, _inherits3['default'])(InputItem, _React$Component);

    function InputItem() {
      (0, _classCallCheck3['default'])(this, InputItem);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (InputItem.__proto__ || Object.getPrototypeOf(InputItem)).apply(this, arguments));

      _this.state = {
        focus: false
      };

      _this.onChange = function (text) {
        var _this$props = _this.props,
            onChange = _this$props.onChange,
            type = _this$props.type;
        var maxLength = _this.props.maxLength;

        switch (type) {
          case 'bankCard':
            text = text.replace(/\D/g, '');

            if (maxLength > 0) {
              text = text.substring(0, maxLength);
            }

            text = text.replace(/\D/g, '').replace(/(....)(?=.)/g, '$1 ');
            break;

          case 'phone':
            text = text.replace(/\D/g, '').substring(0, 11);
            var valueLen = text.length;

            if (valueLen > 3 && valueLen < 8) {
              text = text.substr(0, 3) + ' ' + text.substr(3);
            } else if (valueLen >= 8) {
              text = text.substr(0, 3) + ' ' + text.substr(3, 4) + ' ' + text.substr(7);
            }

            break;

          case 'password':
            break;

          default:
            break;
        }

        if (onChange) {
          onChange(text);
        }
      };

      _this.onInputBlur = function () {
        _this.setState({
          focus: false
        }, function () {
          if (_this.props.onBlur) {
            _this.props.onBlur(_this.props.value);
          }
        });
      };

      _this.onInputFocus = function () {
        _this.setState({
          focus: true
        }, function () {
          if (_this.props.onFocus) {
            _this.props.onFocus(_this.props.value);
          }
        });
      };

      _this.onInputClear = function () {
        if (_this.inputRef) {
          _this.inputRef.clear();
        }

        _this.onChange('');
      };

      _this.focus = function () {
        if (_this.inputRef) {
          _this.inputRef.focus();
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(InputItem, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var android = _reactNative.Platform.OS === 'android';

        var _a = this.props,
            type = _a.type,
            editable = _a.editable,
            clear = _a.clear,
            children = _a.children,
            error = _a.error,
            extra = _a.extra,
            labelNumber = _a.labelNumber,
            last = _a.last,
            onExtraClick = _a.onExtraClick,
            onErrorClick = _a.onErrorClick,
            styles = _a.styles,
            disabled = _a.disabled,
            restProps = __rest(_a, ["type", "editable", "clear", "children", "error", "extra", "labelNumber", "last", "onExtraClick", "onErrorClick", "styles", "disabled"]);

        var focus = this.state.focus;
        var value = restProps.value,
            defaultValue = restProps.defaultValue,
            style = restProps.style;
        var valueProps = undefined;

        if ('value' in this.props) {
          valueProps = {
            value: normalizeValue(value)
          };
        } else {
          valueProps = {
            defaultValue: defaultValue
          };
        }

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _index2['default']
        }, function (s, theme) {
          var containerStyle = {
            borderBottomWidth: last ? 0 : _reactNative.StyleSheet.hairlineWidth
          };
          var textStyle = {
            width: theme.font_size_heading * labelNumber * 1.05
          };
          var extraStyle = {
            width: typeof extra === 'string' && extra.length > 0 ? extra.length * theme.font_size_heading : 0
          };
          var keyboardTypeArray = ['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search'];
          var keyboardType = 'default';

          if (type === 'number') {
            keyboardType = 'numeric';
          } else if (type === 'bankCard') {
            keyboardType = 'number-pad';
          } else if (type === 'phone') {
            keyboardType = 'phone-pad';
          } else if (type && keyboardTypeArray.indexOf(type) > -1) {
            keyboardType = type;
          }

          var disabledStyle = disabled ? s.inputDisabled : {};
          return _react2['default'].createElement(_reactNative.View, {
            style: [s.container, containerStyle]
          }, children ? typeof children === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: [s.text, textStyle]
          }, children) : _react2['default'].createElement(_reactNative.View, {
            style: textStyle
          }, children) : null, _react2['default'].createElement(_Input2['default'], (0, _extends3['default'])({
            editable: !disabled && editable,
            clearButtonMode: clear ? 'while-editing' : 'never',
            underlineColorAndroid: 'transparent',
            ref: function ref(el) {
              return _this2.inputRef = el;
            }
          }, restProps, valueProps, {
            style: [{
              height: !android ? theme.list_item_height_sm : theme.list_item_height
            }, s.input, error ? s.inputErrorColor : null, disabledStyle, style],
            keyboardType: keyboardType,
            onChange: function onChange(event) {
              return _this2.onChange(event.nativeEvent.text);
            },
            secureTextEntry: type === 'password',
            onBlur: _this2.onInputBlur,
            onFocus: _this2.onInputFocus
          })), editable && clear && value && focus && android ? _react2['default'].createElement(_reactNative.TouchableOpacity, {
            style: [s.clear],
            onPress: _this2.onInputClear,
            hitSlop: {
              top: 5,
              left: 5,
              bottom: 5,
              right: 5
            }
          }, _react2['default'].createElement(_icon2['default'], {
            name: 'close',
            color: 'white'
          })) : null, extra ? _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: onExtraClick
          }, _react2['default'].createElement(_reactNative.View, null, typeof extra === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: [s.extra, extraStyle]
          }, extra) : extra)) : null, error && _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: onErrorClick
          }, _react2['default'].createElement(_reactNative.View, {
            style: [s.errorIcon]
          }, _react2['default'].createElement(_icon2['default'], {
            name: 'info-circle',
            style: {
              color: theme.brand_error
            }
          }))));
        });
      }
    }]);
    return InputItem;
  }(_react2['default'].Component);

  exports['default'] = InputItem;
  InputItem.defaultProps = {
    type: 'text',
    editable: true,
    clear: false,
    onChange: noop,
    onBlur: noop,
    onFocus: noop,
    extra: '',
    onExtraClick: noop,
    error: false,
    onErrorClick: noop,
    labelNumber: 4,
    labelPosition: 'left',
    textAlign: 'left',
    last: false
  };
  module.exports = exports['default'];
},674,[493,532,533,537,571,49,2,582,587,675,676]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Input = function (_React$Component) {
    (0, _inherits3['default'])(Input, _React$Component);

    function Input(props) {
      (0, _classCallCheck3['default'])(this, Input);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));

      _this.focus = function () {
        if (_this.inputRef) {
          _this.inputRef.focus();
        }
      };

      _this.clear = function () {
        if (_this.inputRef) {
          _this.inputRef.clear();
        }
      };

      _this.state = {
        focused: props.focused || false
      };
      return _this;
    }

    (0, _createClass3['default'])(Input, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.focused !== this.state.focused) {
          this.setState({
            focused: nextProps.focused
          });
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.inputRef && (this.props.autoFocus || this.props.focused)) {
          this.inputRef.focus();
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        if (this.inputRef && this.props.focused) {
          this.inputRef.focus();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        return _react2['default'].createElement(_reactNative.TextInput, (0, _extends3['default'])({
          ref: function ref(el) {
            return _this2.inputRef = el;
          },
          underlineColorAndroid: 'transparent'
        }, this.props));
      }
    }]);
    return Input;
  }(_react2['default'].Component);

  exports['default'] = Input;
  module.exports = exports['default'];
},675,[493,532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        height: theme.list_item_height + theme.border_width_sm,
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
        borderBottomColor: theme.border_color_base,
        marginLeft: theme.h_spacing_lg,
        paddingRight: theme.h_spacing_lg,
        marginTop: 0,
        marginBottom: 0,
        flexDirection: 'row',
        alignItems: 'center'
      },
      text: {
        marginRight: theme.h_spacing_sm,
        textAlignVertical: 'center',
        fontSize: theme.font_size_heading,
        color: theme.color_text_base
      },
      input: {
        flex: 1,
        backgroundColor: 'transparent',
        fontSize: theme.input_font_size,
        color: theme.color_text_base
      },
      inputDisabled: {
        backgroundColor: theme.fill_disabled,
        color: theme.color_text_disabled
      },
      inputErrorColor: {
        color: '#f50'
      },
      clear: {
        backgroundColor: theme.color_icon_base,
        borderRadius: 15,
        padding: 2
      },
      extra: {
        marginLeft: theme.h_spacing_sm,
        fontSize: theme.font_size_subhead,
        color: theme.color_text_caption
      },
      errorIcon: {
        marginLeft: theme.h_spacing_sm,
        width: theme.icon_size_sm,
        height: theme.icon_size_sm
      }
    });
  };

  module.exports = exports['default'];
},676,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Modal = _$$_REQUIRE(_dependencyMap[0]);

  var _Modal2 = _interopRequireDefault(_Modal);

  var _alert = _$$_REQUIRE(_dependencyMap[1]);

  var _alert2 = _interopRequireDefault(_alert);

  var _prompt = _$$_REQUIRE(_dependencyMap[2]);

  var _prompt2 = _interopRequireDefault(_prompt);

  var _operation = _$$_REQUIRE(_dependencyMap[3]);

  var _operation2 = _interopRequireDefault(_operation);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  _Modal2['default'].alert = _alert2['default'];
  _Modal2['default'].prompt = _prompt2['default'];
  _Modal2['default'].operation = _operation2['default'];
  exports['default'] = _Modal2['default'];
  module.exports = exports['default'];
},677,[678,681,683,686]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[4]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _getLocale = _$$_REQUIRE(_dependencyMap[8]);

  var _zh_CN = _$$_REQUIRE(_dependencyMap[9]);

  var _zh_CN2 = _interopRequireDefault(_zh_CN);

  var _ModalView = _$$_REQUIRE(_dependencyMap[10]);

  var _ModalView2 = _interopRequireDefault(_ModalView);

  var _index = _$$_REQUIRE(_dependencyMap[11]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var maxHeight = _reactNative.StyleSheet.create({
    maxHeight: {
      maxHeight: _reactNative.Dimensions.get('window').height
    }
  }).maxHeight;

  var AntmModal = function (_React$Component) {
    (0, _inherits3['default'])(AntmModal, _React$Component);

    function AntmModal() {
      (0, _classCallCheck3['default'])(this, AntmModal);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (AntmModal.__proto__ || Object.getPrototypeOf(AntmModal)).apply(this, arguments));

      _this.onFooterLayout = function (e) {
        if (_this.root) {
          _this.root.setNativeProps({
            style: [{
              paddingBottom: e.nativeEvent.layout.height
            }, maxHeight]
          });
        }
      };

      _this.saveRoot = function (root) {
        _this.root = root;
      };

      return _this;
    }

    (0, _createClass3['default'])(AntmModal, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            title = _props.title,
            closable = _props.closable,
            footer = _props.footer,
            children = _props.children,
            style = _props.style,
            animateAppear = _props.animateAppear,
            maskClosable = _props.maskClosable,
            popup = _props.popup,
            transparent = _props.transparent,
            visible = _props.visible,
            onClose = _props.onClose,
            bodyStyle = _props.bodyStyle,
            onAnimationEnd = _props.onAnimationEnd;

        var _locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'Modal', function () {
          return _zh_CN2['default'];
        });

        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var btnGroupStyle = styles.buttonGroupV;
          var horizontalFlex = {};

          if (footer && footer.length === 2 && !_this2.props.operation) {
            btnGroupStyle = styles.buttonGroupH;
            horizontalFlex = {
              flex: 1
            };
          }

          var buttonWrapStyle = footer && footer.length === 2 ? styles.buttonWrapH : styles.buttonWrapV;
          var footerDom = undefined;

          if (footer && footer.length) {
            var footerButtons = footer.map(function (button, i) {
              var buttonStyle = {};

              if (_this2.props.operation) {
                buttonStyle = styles.buttonTextOperation;
              }

              if (button.style) {
                buttonStyle = button.style;

                if (typeof buttonStyle === 'string') {
                  var styleMap = {
                    cancel: {},
                    'default': {},
                    destructive: {
                      color: 'red'
                    }
                  };
                  buttonStyle = styleMap[buttonStyle] || {};
                }
              }

              var noneBorder = footer && footer.length === 2 && i === 1 ? {
                borderRightWidth: 0
              } : {};

              var onPressFn = function onPressFn() {
                if (button.onPress) {
                  button.onPress();
                }

                if (onClose) {
                  onClose();
                }
              };

              return _react2['default'].createElement(_reactNative.TouchableHighlight, {
                key: i,
                style: horizontalFlex,
                underlayColor: '#ddd',
                onPress: onPressFn
              }, _react2['default'].createElement(_reactNative.View, {
                style: [buttonWrapStyle, noneBorder]
              }, _react2['default'].createElement(_reactNative.Text, {
                style: [styles.buttonText, buttonStyle]
              }, button.text || '' + _locale.buttonText + i)));
            });
            footerDom = _react2['default'].createElement(_reactNative.View, {
              style: [btnGroupStyle, styles.footer],
              onLayout: _this2.onFooterLayout
            }, footerButtons);
          }

          var animType = _this2.props.animationType;

          if (transparent) {
            if (animType === 'slide') {
              animType = 'slide-up';
            }

            var closableDom = closable ? _react2['default'].createElement(_reactNative.View, {
              style: [styles.closeWrap]
            }, _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
              onPress: onClose
            }, _react2['default'].createElement(_reactNative.View, null, _react2['default'].createElement(_reactNative.Text, {
              style: [styles.close]
            }, '\xD7')))) : null;
            return _react2['default'].createElement(_reactNative.View, {
              style: styles.container
            }, _react2['default'].createElement(_ModalView2['default'], {
              onClose: onClose,
              animationType: animType,
              wrapStyle: transparent ? styles.wrap : undefined,
              style: [styles.innerContainer, style],
              visible: visible,
              onAnimationEnd: onAnimationEnd,
              animateAppear: animateAppear,
              maskClosable: maskClosable
            }, _react2['default'].createElement(_reactNative.View, {
              style: maxHeight,
              ref: _this2.saveRoot
            }, title ? _react2['default'].createElement(_reactNative.Text, {
              style: [styles.header]
            }, title) : null, _react2['default'].createElement(_reactNative.View, {
              style: [styles.body, bodyStyle]
            }, children), footerDom, closableDom)));
          }

          if (popup) {
            var aType = 'SlideDown';

            if (animType === 'slide-up') {
              animType = 'slide-up';
              aType = 'SlideUp';
            } else {
              animType = 'slide-down';
            }

            return _react2['default'].createElement(_reactNative.View, {
              style: styles.container
            }, _react2['default'].createElement(_ModalView2['default'], {
              onClose: onClose,
              animationType: animType,
              style: [styles.popupContainer, styles['popup' + aType], style],
              visible: visible,
              onAnimationEnd: onAnimationEnd,
              animateAppear: animateAppear,
              maskClosable: maskClosable
            }, _react2['default'].createElement(_reactNative.View, {
              ref: _this2.saveRoot,
              style: bodyStyle
            }, children)));
          }

          if (animType === 'slide') {
            animType = undefined;
          }

          return _react2['default'].createElement(_reactNative.View, {
            style: styles.container
          }, _react2['default'].createElement(_ModalView2['default'], {
            visible: visible,
            animationType: animType,
            onClose: onClose
          }, _react2['default'].createElement(_reactNative.View, {
            style: style
          }, children)));
        });
      }
    }]);
    return AntmModal;
  }(_react2['default'].Component);

  AntmModal.defaultProps = {
    visible: false,
    closable: false,
    maskClosable: false,
    style: {},
    bodyStyle: {},
    animationType: 'fade',
    onClose: function onClose() {},
    footer: [],
    transparent: false,
    popup: false,
    animateAppear: true,
    operation: false
  };
  AntmModal.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  exports['default'] = AntmModal;
  module.exports = exports['default'];
},678,[532,533,537,571,61,49,2,587,641,679,608,680]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    okText: '确定',
    cancelText: '取消',
    buttonText: '按钮'
  };
  module.exports = exports['default'];
},679,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        zIndex: theme.modal_zindex
      },
      wrap: {
        justifyContent: 'center',
        alignItems: 'center'
      },
      popupContainer: {},
      popupSlideUp: {
        position: 'absolute',
        left: 0,
        right: 0,
        bottom: 0
      },
      popupSlideDown: {},
      innerContainer: {
        borderRadius: theme.radius_md,
        width: 286,
        paddingTop: theme.v_spacing_xl,
        overflow: 'hidden'
      },
      footer: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        borderBottomLeftRadius: theme.radius_md,
        borderBottomRightRadius: theme.radius_md
      },
      header: {
        fontSize: theme.modal_font_size_heading,
        color: theme.color_text_base,
        textAlign: 'center',
        paddingHorizontal: theme.h_spacing_lg
      },
      body: {
        paddingTop: 0,
        paddingBottom: theme.v_spacing_lg,
        paddingHorizontal: theme.h_spacing_lg
      },
      maskClosable: {
        position: 'absolute',
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        backgroundColor: 'transparent'
      },
      closeWrap: {
        position: 'absolute',
        top: 0,
        left: theme.h_spacing_lg
      },
      close: {
        fontSize: 40,
        fontWeight: '200',
        color: '#bcbcbc',
        lineHeight: 30
      },
      buttonGroupH: {
        flexGrow: 1,
        flexDirection: 'row'
      },
      buttonGroupV: {
        flexGrow: 1,
        flexDirection: 'column'
      },
      buttonWrapH: {
        height: theme.modal_button_height,
        flexGrow: 1,
        justifyContent: 'center',
        borderColor: theme.border_color_base,
        borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
        borderRightWidth: _reactNative.StyleSheet.hairlineWidth,
        paddingVertical: 11
      },
      buttonWrapV: {
        flexGrow: 1,
        borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
        borderColor: theme.border_color_base,
        paddingVertical: 11
      },
      buttonText: {
        textAlign: 'center',
        color: theme.color_link,
        fontSize: theme.modal_button_font_size,
        backgroundColor: 'transparent'
      },
      operationContainer: {
        paddingTop: 0
      },
      operationBody: {
        paddingBottom: 0,
        paddingHorizontal: 0
      },
      buttonTextOperation: {
        color: theme.color_text_base,
        textAlign: 'left',
        paddingHorizontal: 15
      }
    });
  };

  module.exports = exports['default'];
},680,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = a;

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _portal = _$$_REQUIRE(_dependencyMap[1]);

  var _portal2 = _interopRequireDefault(_portal);

  var _AlertContainer = _$$_REQUIRE(_dependencyMap[2]);

  var _AlertContainer2 = _interopRequireDefault(_AlertContainer);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function a(title, content) {
    var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
      text: '确定'
    }];

    var key = _portal2['default'].add(_react2['default'].createElement(_AlertContainer2['default'], {
      title: title,
      content: content,
      actions: actions,
      onAnimationEnd: function onAnimationEnd(visible) {
        if (!visible) {
          _portal2['default'].remove(key);
        }
      }
    }));
  }

  module.exports = exports['default'];
},681,[49,592,682]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _Modal = _$$_REQUIRE(_dependencyMap[6]);

  var _Modal2 = _interopRequireDefault(_Modal);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var AlertContainer = function (_React$Component) {
    (0, _inherits3['default'])(AlertContainer, _React$Component);

    function AlertContainer(props) {
      (0, _classCallCheck3['default'])(this, AlertContainer);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (AlertContainer.__proto__ || Object.getPrototypeOf(AlertContainer)).call(this, props));

      _this.onClose = function () {
        _this.setState({
          visible: false
        });
      };

      _this.state = {
        visible: true
      };
      return _this;
    }

    (0, _createClass3['default'])(AlertContainer, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            title = _props.title,
            actions = _props.actions,
            content = _props.content,
            onAnimationEnd = _props.onAnimationEnd;
        var footer = actions.map(function (button) {
          var orginPress = button.onPress || function () {};

          button.onPress = function () {
            var res = orginPress();

            if (res && res.then) {
              res.then(function () {
                _this2.onClose();
              });
            } else {
              _this2.onClose();
            }
          };

          return button;
        });
        return _react2['default'].createElement(_Modal2['default'], {
          transparent: true,
          title: title,
          visible: this.state.visible,
          footer: footer,
          onAnimationEnd: onAnimationEnd,
          bodyStyle: {
            marginTop: 8,
            alignItems: 'center'
          }
        }, _react2['default'].createElement(_reactNative.ScrollView, null, (0, _react.isValidElement)(content) ? content : _react2['default'].createElement(_reactNative.Text, null, content)));
      }
    }]);
    return AlertContainer;
  }(_react2['default'].Component);

  exports['default'] = AlertContainer;
  module.exports = exports['default'];
},682,[532,533,537,571,49,2,678]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = prompt;

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _portal = _$$_REQUIRE(_dependencyMap[1]);

  var _portal2 = _interopRequireDefault(_portal);

  var _PromptContainer = _$$_REQUIRE(_dependencyMap[2]);

  var _PromptContainer2 = _interopRequireDefault(_PromptContainer);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function prompt(title, message, callbackOrActions) {
    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'default';
    var defaultValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
    var placeholders = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ['', ''];

    if (!callbackOrActions) {
      console.error('Must specify callbackOrActions');
      return;
    }

    var key = _portal2['default'].add(_react2['default'].createElement(_PromptContainer2['default'], {
      title: title,
      message: message,
      actions: callbackOrActions,
      type: type,
      defaultValue: defaultValue,
      onAnimationEnd: function onAnimationEnd(visible) {
        if (!visible) {
          _portal2['default'].remove(key);
        }
      },
      placeholders: placeholders
    }));
  }

  module.exports = exports['default'];
},683,[49,592,684]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _defineProperty2 = _$$_REQUIRE(_dependencyMap[0]);

  var _defineProperty3 = _interopRequireDefault(_defineProperty2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _getLocale = _$$_REQUIRE(_dependencyMap[9]);

  var _zh_CN = _$$_REQUIRE(_dependencyMap[10]);

  var _zh_CN2 = _interopRequireDefault(_zh_CN);

  var _Modal = _$$_REQUIRE(_dependencyMap[11]);

  var _Modal2 = _interopRequireDefault(_Modal);

  var _prompt = _$$_REQUIRE(_dependencyMap[12]);

  var _prompt2 = _interopRequireDefault(_prompt);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PropmptContainer = function (_React$Component) {
    (0, _inherits3['default'])(PropmptContainer, _React$Component);

    function PropmptContainer(props) {
      (0, _classCallCheck3['default'])(this, PropmptContainer);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (PropmptContainer.__proto__ || Object.getPrototypeOf(PropmptContainer)).call(this, props));

      _this.onClose = function () {
        _this.setState({
          visible: false
        });
      };

      _this.state = {
        visible: true,
        text: props.defaultValue,
        password: props.type === 'secure-text' ? props.defaultValue : ''
      };
      return _this;
    }

    (0, _createClass3['default'])(PropmptContainer, [{
      key: 'onChangeText',
      value: function onChangeText(type, value) {
        this.setState((0, _defineProperty3['default'])({}, type, value));
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            title = _props.title,
            onAnimationEnd = _props.onAnimationEnd,
            message = _props.message,
            type = _props.type,
            actions = _props.actions,
            placeholders = _props.placeholders;
        var _state = this.state,
            text = _state.text,
            password = _state.password;

        var getArgs = function getArgs(func) {
          if (type === 'login-password') {
            return func.apply(this, [text, password]);
          } else if (type === 'secure-text') {
            return func.apply(this, [password]);
          }

          return func.apply(this, [text]);
        };

        var _locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'Modal', function () {
          return _zh_CN2['default'];
        });

        var callbacks = undefined;

        if (typeof actions === 'function') {
          callbacks = [{
            text: _locale.cancelText,
            style: 'cancel',
            onPress: function onPress() {}
          }, {
            text: _locale.okText,
            onPress: function onPress() {
              return getArgs(actions);
            }
          }];
        } else {
          callbacks = actions.map(function (item) {
            return {
              text: item.text,
              onPress: function onPress() {
                if (item.onPress) {
                  return getArgs(item.onPress);
                }
              },
              style: item.style || {}
            };
          });
        }

        var footer = callbacks.map(function (button) {
          var orginPress = button.onPress || function () {};

          button.onPress = function () {
            var res = orginPress();

            if (res && res.then) {
              res.then(function () {
                _this2.onClose();
              });
            } else {
              _this2.onClose();
            }
          };

          return button;
        });
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _prompt2['default']
        }, function (styles) {
          var firstStyle = [styles.inputWrapper];
          var lastStyle = [styles.inputWrapper];

          if (type === 'login-password') {
            firstStyle.push(styles.inputFirst);
            lastStyle.push(styles.inputLast);
          } else if (type === 'secure-text') {
            lastStyle.push(styles.inputFirst);
            lastStyle.push(styles.inputLast);
          } else {
            firstStyle.push(styles.inputFirst);
            firstStyle.push(styles.inputLast);
          }

          return _react2['default'].createElement(_Modal2['default'], {
            transparent: true,
            title: title,
            visible: _this2.state.visible,
            footer: footer,
            onAnimationEnd: onAnimationEnd
          }, _react2['default'].createElement(_reactNative.KeyboardAvoidingView, {
            behavior: 'padding'
          }, message ? _react2['default'].createElement(_reactNative.Text, {
            style: styles.message
          }, message) : null, _react2['default'].createElement(_reactNative.View, {
            style: styles.inputGroup
          }, type !== 'secure-text' && _react2['default'].createElement(_reactNative.View, {
            style: firstStyle
          }, _react2['default'].createElement(_reactNative.TextInput, {
            autoFocus: true,
            onChangeText: function onChangeText(value) {
              _this2.onChangeText('text', value);
            },
            value: _this2.state.text,
            style: styles.input,
            underlineColorAndroid: 'transparent',
            placeholder: placeholders[0]
          })), (type === 'secure-text' || type === 'login-password') && _react2['default'].createElement(_reactNative.View, {
            style: lastStyle
          }, _react2['default'].createElement(_reactNative.TextInput, {
            autoFocus: true,
            secureTextEntry: true,
            onChangeText: function onChangeText(value) {
              _this2.onChangeText('password', value);
            },
            value: _this2.state.password,
            style: styles.input,
            underlineColorAndroid: 'transparent',
            placeholder: placeholders[1]
          })))));
        });
      }
    }]);
    return PropmptContainer;
  }(_react2['default'].Component);

  exports['default'] = PropmptContainer;
  PropmptContainer.defaultProps = {
    type: 'default',
    defaultValue: ''
  };
  PropmptContainer.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  module.exports = exports['default'];
},684,[649,532,533,537,571,61,49,2,587,641,679,678,685]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (variables) {
    return _reactNative.StyleSheet.create({
      message: {
        marginTop: variables.v_spacing_lg,
        color: variables.color_text_caption,
        fontSize: variables.font_size_base,
        textAlign: 'center'
      },
      inputGroup: {
        marginTop: variables.v_spacing_md,
        flexDirection: 'column'
      },
      inputWrapper: {
        borderWidth: _reactNative.StyleSheet.hairlineWidth,
        borderTopWidth: 0,
        borderColor: variables.border_color_base
      },
      input: {
        height: 36,
        fontSize: variables.font_size_base,
        paddingHorizontal: variables.h_spacing_sm,
        paddingVertical: 0
      },
      inputFirst: {
        borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
        borderTopLeftRadius: variables.radius_sm,
        borderTopRightRadius: variables.radius_sm
      },
      inputLast: {
        borderBottomLeftRadius: variables.radius_sm,
        borderBottomRightRadius: variables.radius_sm
      }
    });
  };

  module.exports = exports['default'];
},685,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = a;

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _portal = _$$_REQUIRE(_dependencyMap[1]);

  var _portal2 = _interopRequireDefault(_portal);

  var _OperationContainer = _$$_REQUIRE(_dependencyMap[2]);

  var _OperationContainer2 = _interopRequireDefault(_OperationContainer);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function a() {
    var actions = (arguments.length <= 0 ? undefined : arguments[0]) || [{
      text: '确定'
    }];

    var key = _portal2['default'].add(_react2['default'].createElement(_OperationContainer2['default'], {
      actions: actions,
      onAnimationEnd: function onAnimationEnd(visible) {
        if (!visible) {
          _portal2['default'].remove(key);
        }
      }
    }));
  }

  module.exports = exports['default'];
},686,[49,592,687]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _style = _$$_REQUIRE(_dependencyMap[5]);

  var _Modal = _$$_REQUIRE(_dependencyMap[6]);

  var _Modal2 = _interopRequireDefault(_Modal);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var OperationContainer = function (_React$Component) {
    (0, _inherits3['default'])(OperationContainer, _React$Component);

    function OperationContainer(props) {
      (0, _classCallCheck3['default'])(this, OperationContainer);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (OperationContainer.__proto__ || Object.getPrototypeOf(OperationContainer)).call(this, props));

      _this.onClose = function () {
        _this.setState({
          visible: false
        });
      };

      _this.state = {
        visible: true
      };
      return _this;
    }

    (0, _createClass3['default'])(OperationContainer, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            actions = _props.actions,
            onAnimationEnd = _props.onAnimationEnd;
        var footer = actions.map(function (button) {
          var orginPress = button.onPress || function () {};

          button.onPress = function () {
            var res = orginPress();

            if (res && res.then) {
              res.then(function () {
                _this2.onClose();
              });
            } else {
              _this2.onClose();
            }
          };

          return button;
        });
        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_Modal2['default'], {
            operation: true,
            transparent: true,
            maskClosable: true,
            visible: _this2.state.visible,
            onClose: _this2.onClose,
            onAnimationEnd: onAnimationEnd,
            style: styles.operationContainer,
            bodyStyle: styles.operationBody,
            footer: footer
          });
        });
      }
    }]);
    return OperationContainer;
  }(_react2['default'].Component);

  exports['default'] = OperationContainer;
  module.exports = exports['default'];
},687,[532,533,537,571,49,587,678,680]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _icon = _$$_REQUIRE(_dependencyMap[7]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _Marquee = _$$_REQUIRE(_dependencyMap[9]);

  var _Marquee2 = _interopRequireDefault(_Marquee);

  var _index = _$$_REQUIRE(_dependencyMap[10]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var NoticeBar = function (_React$Component) {
    (0, _inherits3['default'])(NoticeBar, _React$Component);

    function NoticeBar(props) {
      (0, _classCallCheck3['default'])(this, NoticeBar);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (NoticeBar.__proto__ || Object.getPrototypeOf(NoticeBar)).call(this, props));

      _this.onPress = function () {
        var _this$props = _this.props,
            mode = _this$props.mode,
            onPress = _this$props.onPress;

        if (onPress) {
          onPress();
        }

        if (mode === 'closable') {
          _this.setState({
            show: false
          });
        }
      };

      _this.state = {
        show: true
      };
      return _this;
    }

    (0, _createClass3['default'])(NoticeBar, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            children = _props.children,
            mode = _props.mode,
            icon = _props.icon,
            style = _props.style,
            action = _props.action,
            marqueeProps = _props.marqueeProps;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles, theme) {
          var operationDom = null;
          icon = typeof icon === 'undefined' ? _react2['default'].createElement(_icon2['default'], {
            name: 'sound',
            color: theme.brand_warning
          }) : icon;

          if (mode === 'closable') {
            operationDom = _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
              onPress: _this2.onPress
            }, _react2['default'].createElement(_reactNative.View, {
              style: styles.actionWrap
            }, action ? action : _react2['default'].createElement(_reactNative.Text, {
              style: [styles.close]
            }, '\xD7')));
          } else if (mode === 'link') {
            operationDom = _react2['default'].createElement(_reactNative.View, {
              style: styles.actionWrap
            }, action ? action : _react2['default'].createElement(_reactNative.Text, {
              style: [styles.link]
            }, "\u221F"));
          }

          var main = _react2['default'].createElement(_reactNative.View, {
            style: [styles.notice, style]
          }, icon && _react2['default'].createElement(_reactNative.View, {
            style: styles.left15
          }, icon), _react2['default'].createElement(_reactNative.View, {
            style: [styles.container, icon ? styles.left6 : styles.left15]
          }, _react2['default'].createElement(_Marquee2['default'], (0, _extends3['default'])({
            style: styles.content,
            text: children
          }, marqueeProps))), operationDom);

          return _this2.state.show ? mode === 'closable' ? main : _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: _this2.onPress
          }, main) : null;
        });
      }
    }]);
    return NoticeBar;
  }(_react2['default'].Component);

  exports['default'] = NoticeBar;
  NoticeBar.defaultProps = {
    mode: '',
    onPress: function onPress() {}
  };
  module.exports = exports['default'];
},688,[493,532,533,537,571,49,2,582,587,689,690]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Marquee = function (_React$PureComponent) {
    (0, _inherits3['default'])(Marquee, _React$PureComponent);

    function Marquee(props) {
      (0, _classCallCheck3['default'])(this, Marquee);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Marquee.__proto__ || Object.getPrototypeOf(Marquee)).call(this, props));

      _this.twidth = 0;
      _this.width = 0;

      _this.onLayout = function (e) {
        if (_this.twidth) {
          return;
        }

        _this.twidth = e.nativeEvent.layout.width;

        _this.tryStart();
      };

      _this.onLayoutContainer = function (e) {
        if (!_this.width) {
          _this.width = e.nativeEvent.layout.width;

          _this.setState({
            left: new _reactNative.Animated.Value(0)
          }, function () {
            _this.tryStart();
          });
        }
      };

      _this.startMove = function () {
        var _this$props = _this.props,
            _this$props$fps = _this$props.fps,
            fps = _this$props$fps === undefined ? 40 : _this$props$fps,
            loop = _this$props.loop;
        var SPPED = 1 / fps * 1000;
        var width = _this.width,
            twidth = _this.twidth,
            props = _this.props;

        _reactNative.Animated.timing(_this.state.left, {
          toValue: -twidth + width,
          duration: twidth * SPPED,
          easing: _reactNative.Easing.linear,
          delay: props.leading,
          isInteraction: false
        }).start(function () {
          if (loop) {
            _this.moveToHeader();
          }
        });
      };

      _this.moveToHeader = function () {
        _reactNative.Animated.timing(_this.state.left, {
          toValue: 0,
          duration: 0,
          delay: _this.props.trailing,
          isInteraction: false
        }).start(function () {
          _this.startMove();
        });
      };

      _this.texts = {};
      _this.state = {
        left: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass3['default'])(Marquee, [{
      key: 'tryStart',
      value: function tryStart() {
        if (this.twidth > this.width && this.width) {
          this.startMove();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            style = _props.style,
            text = _props.text,
            maxWidth = _props.maxWidth;

        var textChildren = _react2['default'].createElement(_reactNative.Text, {
          onLayout: this.onLayout,
          numberOfLines: 1,
          ellipsizeMode: 'tail',
          style: style
        }, text);

        return _react2['default'].createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row',
            alignItems: 'center'
          },
          onLayout: this.onLayoutContainer
        }, _react2['default'].createElement(_reactNative.Animated.View, {
          style: {
            flexDirection: 'row',
            left: this.state.left,
            width: maxWidth
          }
        }, textChildren));
      }
    }]);
    return Marquee;
  }(_react2['default'].PureComponent);

  Marquee.defaultProps = {
    text: '',
    loop: false,
    leading: 500,
    trailing: 800,
    fps: 40,
    maxWidth: 1000
  };
  exports['default'] = Marquee;
  module.exports = exports['default'];
},689,[532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (variables) {
    return _reactNative.StyleSheet.create({
      notice: {
        backgroundColor: variables.notice_bar_fill,
        height: variables.notice_bar_height,
        overflow: 'hidden',
        flexDirection: 'row',
        alignItems: 'center'
      },
      container: {
        flex: 1,
        marginRight: variables.h_spacing_lg,
        overflow: 'hidden',
        width: 0
      },
      content: {
        fontSize: variables.font_size_subhead,
        color: variables.brand_warning
      },
      left6: {
        marginLeft: variables.h_spacing_sm
      },
      left15: {
        marginLeft: variables.h_spacing_lg
      },
      actionWrap: {
        marginRight: variables.h_spacing_lg
      },
      close: {
        color: variables.brand_warning,
        fontSize: 18,
        fontWeight: '200',
        textAlign: 'left'
      },
      link: {
        transform: [{
          rotate: '225deg'
        }],
        color: variables.brand_warning,
        fontSize: variables.font_size_icontext,
        fontWeight: '500',
        textAlign: 'left'
      }
    });
  };

  module.exports = exports['default'];
},690,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[4]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  var _index3 = _$$_REQUIRE(_dependencyMap[8]);

  var _index4 = _interopRequireDefault(_index3);

  var _style = _$$_REQUIRE(_dependencyMap[9]);

  var _getLocale = _$$_REQUIRE(_dependencyMap[10]);

  var _zh_CN = _$$_REQUIRE(_dependencyMap[11]);

  var _zh_CN2 = _interopRequireDefault(_zh_CN);

  var _index5 = _$$_REQUIRE(_dependencyMap[12]);

  var _index6 = _interopRequireDefault(_index5);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Pagination = function (_React$Component) {
    (0, _inherits3['default'])(Pagination, _React$Component);

    function Pagination(props) {
      (0, _classCallCheck3['default'])(this, Pagination);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call(this, props));

      _this.state = {
        current: props.current
      };
      return _this;
    }

    (0, _createClass3['default'])(Pagination, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.current !== this.state.current) {
          this.setState({
            current: nextProps.current
          });
        }
      }
    }, {
      key: 'onChange',
      value: function onChange(p) {
        this.setState({
          current: p
        });

        if (this.props.onChange) {
          this.props.onChange(p);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            mode = _props.mode,
            total = _props.total,
            simple = _props.simple;
        var locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'Pagination', function () {
          return _zh_CN2['default'];
        });
        var prevText = locale.prevText,
            nextText = locale.nextText;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index6['default']
        }, function (styles) {
          var current = _this2.state.current;
          var simpleItem = !simple ? _react2['default'].createElement(_index4['default'].Item, null, _react2['default'].createElement(_reactNative.View, {
            style: [styles.numberStyle]
          }, _react2['default'].createElement(_reactNative.Text, {
            style: [styles.activeTextStyle]
          }, current), _react2['default'].createElement(_reactNative.Text, {
            style: [styles.totalStyle]
          }, '/', total))) : _react2['default'].createElement(_index4['default'].Item, null);

          var markup = _react2['default'].createElement(_index4['default'], null, _react2['default'].createElement(_index4['default'].Item, null, _react2['default'].createElement(_index2['default'], {
            disabled: current <= 1,
            onPress: function onPress() {
              return _this2.onChange(current - 1);
            }
          }, prevText)), simpleItem, _react2['default'].createElement(_index4['default'].Item, null, _react2['default'].createElement(_index2['default'], {
            disabled: current >= total,
            onPress: function onPress() {
              return _this2.onChange(current + 1);
            }
          }, nextText)));

          if (mode === 'number') {
            markup = _react2['default'].createElement(_reactNative.View, {
              style: [styles.numberStyle]
            }, _react2['default'].createElement(_reactNative.Text, {
              style: [styles.activeTextStyle]
            }, current), _react2['default'].createElement(_reactNative.Text, {
              style: [styles.totalStyle]
            }, '/', total));
          } else if (mode === 'pointer') {
            var arr = [];

            for (var i = 0; i < total; i++) {
              arr.push(_react2['default'].createElement(_reactNative.View, {
                key: 'dot-' + i,
                style: [styles.pointStyle, styles.spaceStyle, i + 1 === current && styles.pointActiveStyle]
              }));
            }

            markup = _react2['default'].createElement(_reactNative.View, {
              style: [styles.indicatorStyle, _this2.props.indicatorStyle]
            }, arr);
          }

          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.container, style]
          }, markup);
        });
      }
    }]);
    return Pagination;
  }(_react2['default'].Component);

  exports['default'] = Pagination;
  Pagination.defaultProps = {
    mode: 'button',
    current: 1,
    total: 0,
    simple: false,
    onChange: function onChange() {},
    indicatorStyle: null
  };
  Pagination.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  module.exports = exports['default'];
},691,[532,533,537,571,61,49,2,614,654,587,641,692,693]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    prevText: '上一页',
    nextText: '下一页'
  };
  module.exports = exports['default'];
},692,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        alignItems: 'center',
        justifyContent: 'center'
      },
      numberStyle: {
        flexDirection: 'row',
        justifyContent: 'center'
      },
      totalStyle: {
        fontSize: 18,
        color: theme.color_text_base
      },
      activeTextStyle: {
        fontSize: 18,
        color: theme.color_link
      },
      indicatorStyle: {
        flexDirection: 'row'
      },
      pointStyle: {
        width: 8,
        height: 8,
        borderRadius: 8,
        backgroundColor: theme.input_color_icon
      },
      pointActiveStyle: {
        backgroundColor: '#888'
      },
      spaceStyle: {
        marginHorizontal: theme.h_spacing_sm / 2,
        marginVertical: theme.v_spacing_sm / 2
      }
    });
  };

  module.exports = exports['default'];
},693,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _PickerView = _$$_REQUIRE(_dependencyMap[0]);

  var _PickerView2 = _interopRequireDefault(_PickerView);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = _PickerView2['default'];
  module.exports = exports['default'];
},694,[695]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _cascader = _$$_REQUIRE(_dependencyMap[5]);

  var _cascader2 = _interopRequireDefault(_cascader);

  var _MultiPicker = _$$_REQUIRE(_dependencyMap[6]);

  var _MultiPicker2 = _interopRequireDefault(_MultiPicker);

  var _Picker = _$$_REQUIRE(_dependencyMap[7]);

  var _Picker2 = _interopRequireDefault(_Picker);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function getDefaultProps() {
    return {
      cols: 3,
      cascade: true,
      value: [],
      onChange: function onChange() {}
    };
  }

  var PickerView = function (_React$Component) {
    (0, _inherits3['default'])(PickerView, _React$Component);

    function PickerView() {
      (0, _classCallCheck3['default'])(this, PickerView);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (PickerView.__proto__ || Object.getPrototypeOf(PickerView)).apply(this, arguments));

      _this.getCol = function () {
        var _this$props = _this.props,
            data = _this$props.data,
            indicatorStyle = _this$props.indicatorStyle,
            itemStyle = _this$props.itemStyle;
        return data.map(function (col, index) {
          return _react2['default'].createElement(_Picker2['default'], {
            key: index,
            style: {
              flex: 1
            },
            indicatorStyle: indicatorStyle,
            itemStyle: itemStyle
          }, col.map(function (item) {
            return _react2['default'].createElement(_Picker2['default'].Item, {
              key: item.value,
              value: item.value
            }, item.label);
          }));
        });
      };

      return _this;
    }

    (0, _createClass3['default'])(PickerView, [{
      key: 'render',
      value: function render() {
        var props = this.props;
        var picker = undefined;

        if (props.cascade) {
          picker = _react2['default'].createElement(_cascader2['default'], {
            data: props.data,
            value: props.value,
            onChange: props.onChange,
            onScrollChange: props.onScrollChange,
            cols: props.cols,
            indicatorStyle: props.indicatorStyle,
            pickerItemStyle: props.itemStyle
          });
        } else {
          picker = _react2['default'].createElement(_MultiPicker2['default'], {
            selectedValue: props.value,
            onValueChange: props.onChange,
            onScrollChange: props.onScrollChange,
            style: {
              flexDirection: 'row'
            }
          }, this.getCol());
        }

        return picker;
      }
    }]);
    return PickerView;
  }(_react2['default'].Component);

  exports['default'] = PickerView;
  PickerView.defaultProps = getDefaultProps();
  module.exports = exports['default'];
},695,[532,533,537,571,49,696,635,637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Cascader = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Cascader)['default'];
    }
  });

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  module.exports = exports['default'];
},696,[697]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _arrayTreeFilter = _$$_REQUIRE(_dependencyMap[4]);

  var _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _MultiPicker = _$$_REQUIRE(_dependencyMap[6]);

  var _MultiPicker2 = _interopRequireDefault(_MultiPicker);

  var _Picker = _$$_REQUIRE(_dependencyMap[7]);

  var _Picker2 = _interopRequireDefault(_Picker);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Cascader = function (_React$Component) {
    (0, _inherits3['default'])(Cascader, _React$Component);

    function Cascader() {
      (0, _classCallCheck3['default'])(this, Cascader);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Cascader.__proto__ || Object.getPrototypeOf(Cascader)).apply(this, arguments));

      _this.state = {
        value: _this.getValue(_this.props.data, _this.props.defaultValue || _this.props.value)
      };

      _this.onValueChange = function (value, index) {
        var children = (0, _arrayTreeFilter2['default'])(_this.props.data, function (c, level) {
          return level <= index && c.value === value[level];
        });
        var data = children[index];
        var i = undefined;

        for (i = index + 1; data && data.children && data.children.length && i < _this.props.cols; i++) {
          data = data.children[0];
          value[i] = data.value;
        }

        value.length = i;

        if (!('value' in _this.props)) {
          _this.setState({
            value: value
          });
        }

        if (_this.props.onChange) {
          _this.props.onChange(value);
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(Cascader, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if ('value' in nextProps) {
          this.setState({
            value: this.getValue(nextProps.data, nextProps.value)
          });
        }
      }
    }, {
      key: 'getValue',
      value: function getValue(d, val) {
        var data = d || this.props.data;
        var value = val || this.props.value || this.props.defaultValue;
        var level = 0;
        var nextValue = [];

        if (value && value.length) {
          do {
            var index = data.findIndex(function (item) {
              return item.value === value[level];
            });

            if (index < 0) {
              break;
            }

            nextValue[level] = value[level];
            level += 1;
            data = data[index].children || [];
          } while (data.length > 0);
        }

        for (var i = level; i < this.props.cols; i++) {
          if (data && data.length) {
            nextValue[i] = data[0].value;
            data = data[0].children;
          } else {
            break;
          }
        }

        return nextValue;
      }
    }, {
      key: 'getCols',
      value: function getCols() {
        var _props = this.props,
            data = _props.data,
            cols = _props.cols,
            disabled = _props.disabled,
            pickerItemStyle = _props.pickerItemStyle,
            indicatorStyle = _props.indicatorStyle;
        var value = this.state.value;
        var childrenTree = (0, _arrayTreeFilter2['default'])(data, function (c, level) {
          return c.value === value[level];
        }).map(function (c) {
          return c.children;
        });
        var needPad = cols - childrenTree.length;

        if (needPad > 0) {
          for (var i = 0; i < needPad; i++) {
            childrenTree.push([]);
          }
        }

        childrenTree.length = cols - 1;
        childrenTree.unshift(data);
        return childrenTree.map(function () {
          var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          var level = arguments[1];
          return _react2['default'].createElement(_Picker2['default'], {
            key: level,
            style: {
              flex: 1
            },
            disabled: disabled,
            itemStyle: pickerItemStyle,
            indicatorStyle: indicatorStyle
          }, children.map(function (item) {
            return _react2['default'].createElement(_Picker2['default'].Item, {
              value: item.value,
              key: item.value
            }, item.label);
          }));
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var props = this.props;
        var rootNativeProps = props.rootNativeProps,
            style = props.style;
        var cols = this.getCols();
        return _react2['default'].createElement(_MultiPicker2['default'], {
          style: [{
            flexDirection: 'row',
            alignItems: 'center'
          }, style],
          selectedValue: this.state.value,
          rootNativeProps: rootNativeProps,
          onValueChange: this.onValueChange,
          onScrollChange: props.onScrollChange
        }, cols);
      }
    }]);
    return Cascader;
  }(_react2['default'].Component);

  Cascader.defaultProps = {
    cols: 3,
    data: [],
    disabled: false
  };
  exports['default'] = Cascader;
  module.exports = exports['default'];
},697,[532,533,537,571,698,49,635,637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.arrayTreeFilter = factory();
  })(this, function () {
    'use strict';

    function arrayTreeFilter(data, filterFn, options) {
      options = options || {};
      options.childrenKeyName = options.childrenKeyName || "children";
      var children = data || [];
      var result = [];
      var level = 0;

      do {
        var foundItem = children.filter(function (item) {
          return filterFn(item, level);
        })[0];

        if (!foundItem) {
          break;
        }

        result.push(foundItem);
        children = foundItem[options.childrenKeyName] || [];
        level += 1;
      } while (children.length > 0);

      return result;
    }

    return arrayTreeFilter;
  });
},698,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  exports.getDefaultProps = getDefaultProps;

  var _arrayTreeFilter = _$$_REQUIRE(_dependencyMap[5]);

  var _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);

  var _propTypes = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[7]);

  var _react2 = _interopRequireDefault(_react);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _getLocale = _$$_REQUIRE(_dependencyMap[9]);

  var _cascader = _$$_REQUIRE(_dependencyMap[10]);

  var _cascader2 = _interopRequireDefault(_cascader);

  var _Popup = _$$_REQUIRE(_dependencyMap[11]);

  var _Popup2 = _interopRequireDefault(_Popup);

  var _MultiPicker = _$$_REQUIRE(_dependencyMap[12]);

  var _MultiPicker2 = _interopRequireDefault(_MultiPicker);

  var _Picker = _$$_REQUIRE(_dependencyMap[13]);

  var _Picker2 = _interopRequireDefault(_Picker);

  var _style2 = _$$_REQUIRE(_dependencyMap[14]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  function getDefaultProps() {
    var defaultFormat = function defaultFormat(values) {
      return values.join(',');
    };

    return {
      triggerType: 'onPress',
      prefixCls: 'am-picker',
      pickerPrefixCls: 'am-picker-col',
      popupPrefixCls: 'am-picker-popup',
      format: defaultFormat,
      cols: 3,
      cascade: true,
      title: ''
    };
  }

  var Picker = function (_React$Component) {
    (0, _inherits3['default'])(Picker, _React$Component);

    function Picker() {
      (0, _classCallCheck3['default'])(this, Picker);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));

      _this.getSel = function () {
        var value = _this.props.value || [];
        var treeChildren = undefined;
        var data = _this.props.data;

        if (_this.props.cascade) {
          treeChildren = (0, _arrayTreeFilter2['default'])(data, function (c, level) {
            return c.value === value[level];
          });
        } else {
          treeChildren = value.map(function (v, i) {
            return data[i].filter(function (d) {
              return d.value === v;
            })[0];
          });
        }

        return _this.props.format && _this.props.format(treeChildren.map(function (v) {
          return v.label;
        }));
      };

      _this.getPickerCol = function () {
        var _this$props = _this.props,
            data = _this$props.data,
            itemStyle = _this$props.itemStyle,
            indicatorStyle = _this$props.indicatorStyle;
        return data.map(function (col, index) {
          return _react2['default'].createElement(_Picker2['default'], {
            key: index,
            style: {
              flex: 1
            },
            itemStyle: itemStyle,
            indicatorStyle: indicatorStyle
          }, col.map(function (item) {
            return _react2['default'].createElement(_Picker2['default'].Item, {
              key: item.value,
              value: item.value
            }, item.label);
          }));
        });
      };

      _this.onOk = function (v) {
        if (_this.scrollValue !== undefined) {
          v = _this.scrollValue;
        }

        if (_this.props.onChange) {
          _this.props.onChange(v);
        }

        if (_this.props.onOk) {
          _this.props.onOk(v);
        }
      };

      _this.setScrollValue = function (v) {
        _this.scrollValue = v;
      };

      _this.setCasecadeScrollValue = function (v) {
        if (v && _this.scrollValue) {
          var length = _this.scrollValue.length;

          if (length === v.length && _this.scrollValue[length - 1] === v[length - 1]) {
            return;
          }
        }

        _this.setScrollValue(v);
      };

      _this.fixOnOk = function (cascader) {
        if (cascader && cascader.onOk !== _this.onOk) {
          cascader.onOk = _this.onOk;
          cascader.forceUpdate();
        }
      };

      _this.onPickerChange = function (v) {
        _this.setScrollValue(v);

        if (_this.props.onPickerChange) {
          _this.props.onPickerChange(v);
        }
      };

      _this.onVisibleChange = function (visible) {
        _this.setScrollValue(undefined);

        if (_this.props.onVisibleChange) {
          _this.props.onVisibleChange(visible);
        }
      };

      _this.getCascade = function (cascade, data, cols, itemStyle, indicatorStyle) {
        var cascader = undefined;
        var popupMoreProps = {};

        if (cascade) {
          cascader = _react2['default'].createElement(_cascader2['default'], {
            data: data,
            cols: cols,
            onChange: _this.onPickerChange,
            onScrollChange: _this.setCasecadeScrollValue,
            pickerItemStyle: itemStyle,
            indicatorStyle: indicatorStyle
          });
        } else {
          cascader = _react2['default'].createElement(_MultiPicker2['default'], {
            style: {
              flexDirection: 'row',
              alignItems: 'center'
            },
            onScrollChange: _this.setScrollValue
          }, _this.getPickerCol());
          popupMoreProps = {
            pickerValueProp: 'selectedValue',
            pickerValueChangeProp: 'onValueChange'
          };
        }

        return {
          cascader: cascader,
          popupMoreProps: popupMoreProps
        };
      };

      return _this;
    }

    (0, _createClass3['default'])(Picker, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            children = _a.children,
            _a$value = _a.value,
            value = _a$value === undefined ? [] : _a$value,
            popupPrefixCls = _a.popupPrefixCls,
            itemStyle = _a.itemStyle,
            indicatorStyle = _a.indicatorStyle,
            okText = _a.okText,
            dismissText = _a.dismissText,
            extra = _a.extra,
            cascade = _a.cascade,
            data = _a.data,
            cols = _a.cols,
            onOk = _a.onOk,
            restProps = __rest(_a, ["children", "value", "popupPrefixCls", "itemStyle", "indicatorStyle", "okText", "dismissText", "extra", "cascade", "data", "cols", "onOk"]);

        var _locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'Picker', function () {
          return _$$_REQUIRE(_dependencyMap[15]);
        });

        var _getCascade = this.getCascade(cascade, data, cols, itemStyle, indicatorStyle),
            cascader = _getCascade.cascader,
            popupMoreProps = _getCascade.popupMoreProps;

        return _react2['default'].createElement(_style.WithTheme, {
          styles: restProps.styles,
          themeStyles: _style3['default']
        }, function (styles) {
          return _react2['default'].createElement(_Popup2['default'], (0, _extends3['default'])({
            cascader: cascader
          }, _this2.popupProps, restProps, {
            styles: styles,
            value: value,
            dismissText: dismissText || _locale.dismissText,
            okText: okText || _locale.okText
          }, popupMoreProps, {
            ref: _this2.fixOnOk,
            onVisibleChange: _this2.onVisibleChange
          }), children && typeof children !== 'string' && _react2['default'].isValidElement(children) && _react2['default'].cloneElement(children, {
            extra: _this2.getSel() || extra || _locale.extra
          }));
        });
      }
    }]);
    return Picker;
  }(_react2['default'].Component);

  exports['default'] = Picker;
  Picker.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  Picker.defaultProps = getDefaultProps();
},699,[493,532,533,537,571,698,61,49,587,641,696,700,635,637,645,701]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _Popup = _$$_REQUIRE(_dependencyMap[6]);

  var _Popup2 = _interopRequireDefault(_Popup);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PopupCascader = function (_React$Component) {
    (0, _inherits3['default'])(PopupCascader, _React$Component);

    function PopupCascader() {
      (0, _classCallCheck3['default'])(this, PopupCascader);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (PopupCascader.__proto__ || Object.getPrototypeOf(PopupCascader)).apply(this, arguments));

      _this.onOk = function (v) {
        var _this$props = _this.props,
            onChange = _this$props.onChange,
            onOk = _this$props.onOk;

        if (onChange) {
          onChange(v);
        }

        if (onOk) {
          onOk(v);
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(PopupCascader, [{
      key: 'render',
      value: function render() {
        return _react2['default'].createElement(_Popup2['default'], (0, _extends3['default'])({
          picker: this.props.cascader
        }, this.props, {
          onOk: this.onOk
        }));
      }
    }]);
    return PopupCascader;
  }(_react2['default'].Component);

  PopupCascader.defaultProps = {
    pickerValueProp: 'value',
    pickerValueChangeProp: 'onChange'
  };
  exports['default'] = PopupCascader;
  module.exports = exports['default'];
},700,[493,532,533,537,571,49,647]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    okText: '确定',
    dismissText: '取消',
    extra: '请选择'
  };
  module.exports = exports['default'];
},701,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopoverItem = undefined;

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _reactNativeModalPopover = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _style2 = _$$_REQUIRE(_dependencyMap[8]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var PopoverItem = exports.PopoverItem = function (_React$PureComponent) {
    (0, _inherits3['default'])(PopoverItem, _React$PureComponent);

    function PopoverItem() {
      (0, _classCallCheck3['default'])(this, PopoverItem);
      return (0, _possibleConstructorReturn3['default'])(this, (PopoverItem.__proto__ || Object.getPrototypeOf(PopoverItem)).apply(this, arguments));
    }

    (0, _createClass3['default'])(PopoverItem, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            value = _props.value,
            disabled = _props.disabled,
            children = _props.children,
            onSelect = _props.onSelect,
            style = _props.style;
        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          return _react2['default'].createElement(_reactNative.TouchableOpacity, {
            activeOpacity: 0.75,
            disabled: disabled,
            onPress: function onPress() {
              if (typeof onSelect === 'function') {
                onSelect(value);
              }
            },
            style: [{
              padding: theme.v_spacing_md
            }, style]
          }, children);
        });
      }
    }]);
    return PopoverItem;
  }(_react2['default'].PureComponent);

  var Popover = function (_React$PureComponent2) {
    (0, _inherits3['default'])(Popover, _React$PureComponent2);

    function Popover() {
      (0, _classCallCheck3['default'])(this, Popover);

      var _this2 = (0, _possibleConstructorReturn3['default'])(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).apply(this, arguments));

      _this2.onSelect = function (value, closePopover) {
        var onSelect = _this2.props.onSelect;

        if (onSelect) {
          onSelect(value);
        }

        closePopover();
      };

      _this2.renderOverlay = function (closePopover) {
        var _this2$props = _this2.props,
            overlay = _this2$props.overlay,
            renderOverlayComponent = _this2$props.renderOverlayComponent;

        var items = _react2['default'].Children.map(overlay, function (child) {
          if (!(0, _react.isValidElement)(child)) {
            return child;
          }

          return _react2['default'].cloneElement(child, {
            onSelect: function onSelect(v) {
              return _this2.onSelect(v, closePopover);
            }
          });
        });

        if (typeof renderOverlayComponent === 'function') {
          return renderOverlayComponent(items);
        }

        return _react2['default'].createElement(_reactNative.ScrollView, null, items);
      };

      return _this2;
    }

    (0, _createClass3['default'])(Popover, [{
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _props2 = this.props,
            children = _props2.children,
            disabled = _props2.disabled,
            triggerStyle = _props2.triggerStyle,
            styles = _props2.styles,
            placement = _props2.placement;
        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _style3['default'],
          styles: styles
        }, function (s) {
          return _react2['default'].createElement(_reactNativeModalPopover.PopoverController, null, function (_ref) {
            var openPopover = _ref.openPopover,
                closePopover = _ref.closePopover,
                popoverVisible = _ref.popoverVisible,
                setPopoverAnchor = _ref.setPopoverAnchor,
                popoverAnchorRect = _ref.popoverAnchorRect;
            return _react2['default'].createElement(_reactNative.View, null, _react2['default'].createElement(_reactNative.TouchableOpacity, {
              ref: setPopoverAnchor,
              onPress: openPopover,
              style: triggerStyle,
              disabled: disabled,
              activeOpacity: 0.75
            }, children), _react2['default'].createElement(_reactNativeModalPopover.Popover, {
              contentStyle: s.content,
              arrowStyle: s.arrow,
              backgroundStyle: s.background,
              visible: popoverVisible,
              onClose: closePopover,
              fromRect: popoverAnchorRect,
              supportedOrientations: ['portrait', 'landscape'],
              placement: placement
            }, _this3.renderOverlay(closePopover)));
          });
        });
      }
    }]);
    return Popover;
  }(_react2['default'].PureComponent);

  exports['default'] = Popover;
  Popover.defaultProps = {
    onSelect: function onSelect() {}
  };
  Popover.Item = PopoverItem;
},702,[532,533,537,571,49,2,703,587,709]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var Popover_1 = _$$_REQUIRE(_dependencyMap[0]);

  exports.default = Popover_1.Popover;

  var Popover_2 = _$$_REQUIRE(_dependencyMap[0]);

  exports.Popover = Popover_2.Popover;

  var PopoverController_1 = _$$_REQUIRE(_dependencyMap[1]);

  exports.PopoverController = PopoverController_1.PopoverController;

  var PopoverTouchable_1 = _$$_REQUIRE(_dependencyMap[2]);

  exports.PopoverTouchable = PopoverTouchable_1.PopoverTouchable;
},703,[704,707,708]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __extends = this && this.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (b.hasOwnProperty(p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    return function (d, b) {
      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
  }();

  var __assign = this && this.__assign || function () {
    __assign = Object.assign || function (t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];

        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
      }

      return t;
    };

    return __assign.apply(this, arguments);
  };

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var debounce = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var React = _$$_REQUIRE(_dependencyMap[2]);

  var react_native_1 = _$$_REQUIRE(_dependencyMap[3]);

  var PopoverGeometry_1 = _$$_REQUIRE(_dependencyMap[4]);

  var styles = react_native_1.StyleSheet.create({
    container: __assign({}, react_native_1.StyleSheet.absoluteFillObject, {
      opacity: 0,
      backgroundColor: 'transparent'
    }),
    containerVisible: {
      opacity: 1
    },
    background: __assign({}, react_native_1.StyleSheet.absoluteFillObject, {
      backgroundColor: 'rgba(0,0,0,0.5)'
    }),
    popover: __assign({}, react_native_1.Platform.select({
      ios: {
        shadowColor: 'black',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowRadius: 2,
        shadowOpacity: 0.4,
        backgroundColor: 'transparent'
      }
    }), {
      position: 'absolute'
    }),
    content: {
      flexDirection: 'column',
      position: 'absolute',
      backgroundColor: '#f2f2f2',
      padding: 8
    },
    arrow: {
      position: 'absolute',
      borderTopColor: '#f2f2f2',
      borderRightColor: 'transparent',
      borderBottomColor: 'transparent',
      borderLeftColor: 'transparent'
    }
  });
  var ARROW_DEG = {
    bottom: '-180deg',
    left: '-90deg',
    right: '90deg',
    top: '0deg'
  };

  var Popover = function (_super) {
    __extends(Popover, _super);

    function Popover(props) {
      var _this = _super.call(this, props) || this;

      _this.computeGeometry = function (props, contentSize) {
        return PopoverGeometry_1.computeGeometry(contentSize || _this.state.contentSize, props.placement, props.fromRect, props.displayArea || _this.defaultDisplayArea, props.arrowSize);
      };

      _this.onOrientationChange = function () {
        var dimensions = react_native_1.Dimensions.get('window');
        _this.defaultDisplayArea = {
          x: 10,
          y: 10,
          width: dimensions.width - 20,
          height: dimensions.height - 20
        };
      };

      _this.updateState = debounce(_this.setState, 100);

      _this.measureContent = function (_a) {
        var _b = _a.nativeEvent.layout,
            width = _b.width,
            height = _b.height;

        if (width && height) {
          var contentSize = {
            width: width,
            height: height
          };

          var geom = _this.computeGeometry(_this.props, contentSize);

          var isAwaitingShow_1 = _this.state.isAwaitingShow;

          _this.updateState(__assign({}, geom, {
            contentSize: contentSize
          }), function () {
            if (isAwaitingShow_1) {
              _this.startAnimation(true);
            }
          });
        }
      };

      _this.getTranslateOrigin = function () {
        var _a = _this.state,
            contentSize = _a.contentSize,
            origin = _a.origin,
            anchor = _a.anchor;
        var popoverCenter = {
          x: origin.x + contentSize.width / 2,
          y: origin.y + contentSize.height / 2
        };
        return {
          x: anchor.x - popoverCenter.x,
          y: anchor.y - popoverCenter.y
        };
      };

      _this.startAnimation = function (show) {
        var doneCallback = show ? undefined : _this.onHidden;
        react_native_1.Animated.timing(_this.state.animation, {
          toValue: show ? 1 : 0,
          duration: _this.props.duration,
          easing: _this.props.easing(show),
          useNativeDriver: !!_this.props.useNativeDriver
        }).start(doneCallback);
      };

      _this.onHidden = function () {
        return _this.setState({
          visible: false,
          isAwaitingShow: false
        });
      };

      _this.computeStyles = function () {
        var _a = _this.state,
            animation = _a.animation,
            anchor = _a.anchor,
            origin = _a.origin;

        var translateOrigin = _this.getTranslateOrigin();

        var arrowSize = _this.props.arrowSize;
        var width = arrowSize.width + 2;
        var height = arrowSize.height * 2 + 2;
        return {
          background: [styles.background, _this.props.backgroundStyle, {
            opacity: animation.interpolate({
              inputRange: [0, 1],
              outputRange: [0, 1],
              extrapolate: 'clamp'
            })
          }],
          arrow: [styles.arrow, _this.props.arrowStyle, {
            width: width,
            height: height,
            borderTopWidth: height / 2,
            left: anchor.x - origin.x - width / 2,
            top: anchor.y - origin.y - height / 2,
            borderRightWidth: width / 2,
            borderBottomWidth: height / 2,
            borderLeftWidth: width / 2,
            transform: [{
              rotate: animation.interpolate({
                inputRange: [0, 1],
                outputRange: [ARROW_DEG[_this.state.placement], ARROW_DEG[_this.state.placement]],
                extrapolate: 'clamp'
              })
            }, {
              scale: animation.interpolate({
                inputRange: [0, 1],
                outputRange: [0, 1],
                extrapolate: 'clamp'
              })
            }]
          }],
          popover: [styles.popover, _this.props.popoverStyle, {
            top: origin.y,
            left: origin.x
          }],
          content: [styles.content, _this.props.contentStyle, {
            transform: [{
              translateX: animation.interpolate({
                inputRange: [0, 1],
                outputRange: [translateOrigin.x, 0],
                extrapolate: 'clamp'
              })
            }, {
              translateY: animation.interpolate({
                inputRange: [0, 1],
                outputRange: [translateOrigin.y, 0],
                extrapolate: 'clamp'
              })
            }, {
              scale: animation
            }]
          }]
        };
      };

      _this.state = {
        contentSize: {
          width: 0,
          height: 0
        },
        anchor: {
          x: 0,
          y: 0
        },
        origin: {
          x: 0,
          y: 0
        },
        placement: props.placement === 'auto' ? 'top' : props.placement,
        visible: false,
        isAwaitingShow: false,
        animation: new react_native_1.Animated.Value(0)
      };

      _this.onOrientationChange();

      return _this;
    }

    Popover.prototype.componentDidMount = function () {
      react_native_1.Dimensions.addEventListener('change', this.onOrientationChange);
    };

    Popover.prototype.componentWillUnmount = function () {
      react_native_1.Dimensions.removeEventListener('change', this.onOrientationChange);
    };

    Popover.prototype.componentWillReceiveProps = function (nextProps) {
      var _this = this;

      var willBeVisible = nextProps.visible;
      var _a = this.props,
          visible = _a.visible,
          fromRect = _a.fromRect,
          displayArea = _a.displayArea;

      if (willBeVisible !== visible) {
        if (willBeVisible) {
          this.setState({
            contentSize: {
              width: 0,
              height: 0
            },
            isAwaitingShow: true,
            visible: true
          });
        } else {
          this.startAnimation(false);
        }
      } else if (willBeVisible && (fromRect !== nextProps.fromRect || displayArea !== nextProps.displayArea)) {
        var geom = this.computeGeometry(nextProps, this.state.contentSize);
        var isAwaitingShow_2 = this.state.isAwaitingShow;
        this.setState(__assign({}, geom), function () {
          if (isAwaitingShow_2) {
            _this.startAnimation(true);
          }
        });
      }
    };

    Popover.prototype.render = function () {
      var _a = this.state,
          origin = _a.origin,
          visible = _a.visible;
      var _b = this.props,
          onClose = _b.onClose,
          onDismiss = _b.onDismiss,
          supportedOrientations = _b.supportedOrientations,
          useNativeDriver = _b.useNativeDriver;
      var computedStyles = this.computeStyles();
      var contentSizeAvailable = this.state.contentSize.width;
      return React.createElement(react_native_1.Modal, {
        transparent: true,
        visible: visible,
        onRequestClose: onClose,
        onDismiss: onDismiss,
        supportedOrientations: supportedOrientations,
        onOrientationChange: this.onOrientationChange
      }, React.createElement(react_native_1.View, {
        style: [styles.container, !!contentSizeAvailable && styles.containerVisible]
      }, React.createElement(react_native_1.TouchableWithoutFeedback, {
        onPress: this.props.onClose
      }, React.createElement(react_native_1.Animated.View, {
        style: computedStyles.background,
        useNativeDriver: useNativeDriver
      })), React.createElement(react_native_1.Animated.View, {
        style: computedStyles.popover,
        useNativeDriver: useNativeDriver
      }, React.createElement(react_native_1.Animated.View, {
        onLayout: this.measureContent,
        style: computedStyles.content,
        useNativeDriver: useNativeDriver
      }, this.props.children), React.createElement(react_native_1.Animated.View, {
        style: computedStyles.arrow,
        useNativeDriver: useNativeDriver
      }))));
    };

    Popover.propTypes = {
      visible: PropTypes.bool,
      onClose: PropTypes.func,
      onDismiss: PropTypes.func,
      arrowSize: PropTypes.shape({
        x: PropTypes.number,
        y: PropTypes.number
      }),
      placement: PropTypes.oneOf(['left', 'top', 'right', 'bottom', 'auto']),
      fromRect: PropTypes.shape({
        x: PropTypes.number,
        y: PropTypes.number,
        width: PropTypes.number,
        height: PropTypes.number
      }),
      displayArea: PropTypes.shape({
        x: PropTypes.number,
        y: PropTypes.number,
        width: PropTypes.number,
        height: PropTypes.number
      }),
      backgroundStyle: PropTypes.any,
      arrowStyle: PropTypes.any,
      popoverStyle: PropTypes.any,
      contentStyle: PropTypes.any,
      duration: PropTypes.number,
      easing: PropTypes.func
    };
    Popover.defaultProps = {
      visible: false,
      onClose: function onClose() {},
      onDismiss: function onDismiss() {},
      arrowSize: {
        width: 16,
        height: 8
      },
      placement: 'auto',
      duration: 300,
      easing: function easing(show) {
        return show ? react_native_1.Easing.out(react_native_1.Easing.back(1.70158)) : react_native_1.Easing.inOut(react_native_1.Easing.quad);
      },
      useNativeDriver: false
    };
    Popover.displayName = 'Popover';
    return Popover;
  }(React.PureComponent);

  exports.Popover = Popover;
},704,[705,61,49,2,706]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var FUNC_ERROR_TEXT = 'Expected a function';
  var NAN = 0 / 0;
  var symbolTag = '[object Symbol]';
  var reTrim = /^\s+|\s+$/g;
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
  var reIsBinary = /^0b[01]+$/i;
  var reIsOctal = /^0o[0-7]+$/i;
  var freeParseInt = parseInt;
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function('return this')();
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  var nativeMax = Math.max,
      nativeMin = Math.min;

  var now = function now() {
    return root.Date.now();
  };

  function debounce(func, wait, options) {
    var lastArgs,
        lastThis,
        maxWait,
        result,
        timerId,
        lastCallTime,
        lastInvokeTime = 0,
        leading = false,
        maxing = false,
        trailing = true;

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }

    wait = toNumber(wait) || 0;

    if (isObject(options)) {
      leading = !!options.leading;
      maxing = 'maxWait' in options;
      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
      trailing = 'trailing' in options ? !!options.trailing : trailing;
    }

    function invokeFunc(time) {
      var args = lastArgs,
          thisArg = lastThis;
      lastArgs = lastThis = undefined;
      lastInvokeTime = time;
      result = func.apply(thisArg, args);
      return result;
    }

    function leadingEdge(time) {
      lastInvokeTime = time;
      timerId = setTimeout(timerExpired, wait);
      return leading ? invokeFunc(time) : result;
    }

    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime,
          timeSinceLastInvoke = time - lastInvokeTime,
          result = wait - timeSinceLastCall;
      return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
    }

    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime,
          timeSinceLastInvoke = time - lastInvokeTime;
      return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }

    function timerExpired() {
      var time = now();

      if (shouldInvoke(time)) {
        return trailingEdge(time);
      }

      timerId = setTimeout(timerExpired, remainingWait(time));
    }

    function trailingEdge(time) {
      timerId = undefined;

      if (trailing && lastArgs) {
        return invokeFunc(time);
      }

      lastArgs = lastThis = undefined;
      return result;
    }

    function cancel() {
      if (timerId !== undefined) {
        clearTimeout(timerId);
      }

      lastInvokeTime = 0;
      lastArgs = lastCallTime = lastThis = timerId = undefined;
    }

    function flush() {
      return timerId === undefined ? result : trailingEdge(now());
    }

    function debounced() {
      var time = now(),
          isInvoking = shouldInvoke(time);
      lastArgs = arguments;
      lastThis = this;
      lastCallTime = time;

      if (isInvoking) {
        if (timerId === undefined) {
          return leadingEdge(lastCallTime);
        }

        if (maxing) {
          timerId = setTimeout(timerExpired, wait);
          return invokeFunc(lastCallTime);
        }
      }

      if (timerId === undefined) {
        timerId = setTimeout(timerExpired, wait);
      }

      return result;
    }

    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
  }

  function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }

  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }

  function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
  }

  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }

    if (isSymbol(value)) {
      return NAN;
    }

    if (isObject(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject(other) ? other + '' : other;
    }

    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }

    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
  }

  module.exports = debounce;
},705,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports.computeGeometry = function (contentSize, placement, fromRect, displayArea, arrowSize) {
    var effectiveArrowSize = getArrowSize(arrowSize, placement);

    switch (placement) {
      case 'top':
        return computeTopGeometry(displayArea, fromRect, contentSize, effectiveArrowSize);

      case 'bottom':
        return computeBottomGeometry(displayArea, fromRect, contentSize, effectiveArrowSize);

      case 'left':
        return computeLeftGeometry(displayArea, fromRect, contentSize, effectiveArrowSize);

      case 'right':
        return computeRightGeometry(displayArea, fromRect, contentSize, effectiveArrowSize);

      default:
        return computeAutoGeometry(displayArea, fromRect, contentSize, effectiveArrowSize);
    }
  };

  var getArrowSize = function getArrowSize(size, placement) {
    if (placement === 'left' || placement === 'right') {
      return {
        width: size.height,
        height: size.width
      };
    }

    return size;
  };

  var computeTopGeometry = function computeTopGeometry(displayArea, fromRect, contentSize, arrowSize) {
    var origin = {
      x: Math.min(displayArea.x + displayArea.width - contentSize.width, Math.max(displayArea.x, fromRect.x + (fromRect.width - contentSize.width) / 2)),
      y: fromRect.y - contentSize.height - arrowSize.height
    };
    var anchor = {
      x: fromRect.x + fromRect.width / 2,
      y: fromRect.y
    };
    return {
      origin: origin,
      anchor: anchor,
      placement: 'top'
    };
  };

  var computeBottomGeometry = function computeBottomGeometry(displayArea, fromRect, contentSize, arrowSize) {
    var origin = {
      x: Math.min(displayArea.x + displayArea.width - contentSize.width, Math.max(displayArea.x, fromRect.x + (fromRect.width - contentSize.width) / 2)),
      y: fromRect.y + fromRect.height + arrowSize.height
    };
    var anchor = {
      x: fromRect.x + fromRect.width / 2,
      y: fromRect.y + fromRect.height
    };
    return {
      origin: origin,
      anchor: anchor,
      placement: 'bottom'
    };
  };

  var computeLeftGeometry = function computeLeftGeometry(displayArea, fromRect, contentSize, arrowSize) {
    var origin = {
      x: fromRect.x - contentSize.width - arrowSize.width,
      y: Math.min(displayArea.y + displayArea.height - contentSize.height, Math.max(displayArea.y, fromRect.y + (fromRect.height - contentSize.height) / 2))
    };
    var anchor = {
      x: fromRect.x,
      y: fromRect.y + fromRect.height / 2
    };
    return {
      origin: origin,
      anchor: anchor,
      placement: 'left'
    };
  };

  var computeRightGeometry = function computeRightGeometry(displayArea, fromRect, contentSize, arrowSize) {
    var origin = {
      x: fromRect.x + fromRect.width + arrowSize.width,
      y: Math.min(displayArea.y + displayArea.height - contentSize.height, Math.max(displayArea.y, fromRect.y + (fromRect.height - contentSize.height) / 2))
    };
    var anchor = {
      x: fromRect.x + fromRect.width,
      y: fromRect.y + fromRect.height / 2
    };
    return {
      origin: origin,
      anchor: anchor,
      placement: 'right'
    };
  };

  var computeAutoGeometry = function computeAutoGeometry(displayArea, fromRect, contentSize, arrowSize) {
    var geom = null;
    var placements = ['left', 'top', 'right', 'bottom'];

    for (var i = 0; i < 4; i += 1) {
      var placement = placements[i];
      geom = exports.computeGeometry(contentSize, placement, fromRect, displayArea, arrowSize);
      var origin = geom.origin;

      if (origin.x >= displayArea.x && origin.x <= displayArea.x + displayArea.width - contentSize.width && origin.y >= displayArea.y && origin.y <= displayArea.y + displayArea.height - contentSize.height) {
        break;
      }
    }

    return geom;
  };
},706,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __extends = this && this.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (b.hasOwnProperty(p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    return function (d, b) {
      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
  }();

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var react_native_1 = _$$_REQUIRE(_dependencyMap[2]);

  var PopoverController = function (_super) {
    __extends(PopoverController, _super);

    function PopoverController() {
      var _this = _super !== null && _super.apply(this, arguments) || this;

      _this.state = {
        showPopover: false,
        popoverAnchor: {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        }
      };

      _this.onOrientationChange = function () {
        if (_this.state.showPopover) {
          requestAnimationFrame(_this.openPopover);
        }
      };

      _this.touchable = null;

      _this.setTouchableRef = function (ref) {
        _this.touchable = ref;
      };

      _this.openPopover = function () {
        var handle = react_native_1.findNodeHandle(_this.touchable);

        if (handle) {
          react_native_1.NativeModules.UIManager.measure(handle, _this.onTouchableMeasured);
        }
      };

      _this.onTouchableMeasured = function (x0, y0, width, height, x, y) {
        _this.setState({
          showPopover: true,
          popoverAnchor: {
            x: x,
            y: y,
            width: width,
            height: height
          }
        });
      };

      _this.closePopover = function () {
        return _this.setState({
          showPopover: false
        });
      };

      return _this;
    }

    PopoverController.prototype.componentDidMount = function () {
      react_native_1.Dimensions.addEventListener('change', this.onOrientationChange);
    };

    PopoverController.prototype.componentWillUnmount = function () {
      react_native_1.Dimensions.removeEventListener('change', this.onOrientationChange);
    };

    PopoverController.prototype.render = function () {
      return this.props.children({
        openPopover: this.openPopover,
        closePopover: this.closePopover,
        setPopoverAnchor: this.setTouchableRef,
        popoverVisible: this.state.showPopover,
        popoverAnchorRect: this.state.popoverAnchor
      });
    };

    PopoverController.propTypes = {
      children: PropTypes.func.isRequired
    };
    return PopoverController;
  }(React.PureComponent);

  exports.PopoverController = PopoverController;
},707,[61,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __extends = this && this.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (b.hasOwnProperty(p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    return function (d, b) {
      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
  }();

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var react_native_1 = _$$_REQUIRE(_dependencyMap[2]);

  var PopoverTouchable = function (_super) {
    __extends(PopoverTouchable, _super);

    function PopoverTouchable(props) {
      var _this = _super.call(this, props) || this;

      _this.onOrientationChange = function () {
        if (_this.state.showPopover) {
          requestAnimationFrame(_this.onPress);
        }
      };

      _this.touchable = null;

      _this.setRef = function (ref) {
        _this.touchable = ref;
      };

      _this.onPress = function () {
        var handle = react_native_1.findNodeHandle(_this.touchable);

        if (handle) {
          react_native_1.NativeModules.UIManager.measure(handle, _this.onTouchableMeasured);
        }
      };

      _this.onTouchableMeasured = function (x0, y0, width, height, x, y) {
        _this.setState({
          showPopover: true,
          popoverAnchor: {
            x: x,
            y: y,
            width: width,
            height: height
          }
        }, function () {
          if (_this.props.onPopoverDisplayed) {
            _this.props.onPopoverDisplayed();
          }
        });
      };

      _this.onClosePopover = function () {
        return _this.setState({
          showPopover: false
        });
      };

      _this.state = {
        showPopover: false,
        popoverAnchor: {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        }
      };
      return _this;
    }

    PopoverTouchable.prototype.componentDidMount = function () {
      react_native_1.Dimensions.addEventListener('change', this.onOrientationChange);
    };

    PopoverTouchable.prototype.componentWillUnmount = function () {
      react_native_1.Dimensions.removeEventListener('change', this.onOrientationChange);
    };

    PopoverTouchable.prototype.render = function () {
      var children = React.Children.toArray(this.props.children);

      if (children.length !== 2 || children[1] instanceof Number || children[1] instanceof String || children[1].type.displayName !== 'Popover') {
        throw new Error('Popover touchable must have two children and the second one must be Popover');
      }

      return React.createElement(React.Fragment, null, React.cloneElement(children[0], {
        ref: this.setRef,
        onPress: this.onPress
      }), React.cloneElement(children[1], {
        visible: this.state.showPopover,
        onClose: this.onClosePopover,
        fromRect: this.state.popoverAnchor
      }));
    };

    PopoverTouchable.propTypes = {
      onPopoverDisplayed: PropTypes.func
    };
    return PopoverTouchable;
  }(React.PureComponent);

  exports.PopoverTouchable = PopoverTouchable;
},708,[61,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      content: {
        backgroundColor: theme.fill_base,
        borderRadius: theme.radius_sm,
        padding: 0,
        elevation: 3
      },
      arrow: {
        borderTopColor: 'transparent'
      },
      background: {
        backgroundColor: 'transparent'
      }
    });
  };

  module.exports = exports['default'];
},709,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Progress = function (_React$Component) {
    (0, _inherits3['default'])(Progress, _React$Component);

    function Progress(props) {
      (0, _classCallCheck3['default'])(this, Progress);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).call(this, props));

      _this.onLayout = function (e) {
        _this.setState({
          wrapWidth: e.nativeEvent.layout.width
        });
      };

      _this.normalPercent = function (percent) {
        var widthPercent = 0;

        if (percent !== undefined && percent > 0) {
          widthPercent = percent > 100 ? 100 : percent;
        }

        return widthPercent;
      };

      _this.getWidth = function () {
        var percent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.percent;
        return _this.state.wrapWidth * (_this.normalPercent(percent) / 100);
      };

      _this.state = {
        wrapWidth: props.wrapWidth || _reactNative.Dimensions.get('window').width,
        percentage: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass3['default'])(Progress, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.wrapWidth !== this.props.wrapWidth) {
          this.setState({
            wrapWidth: nextProps.wrapWidth
          });
        }

        if (this.props.appearTransition && nextProps.percent !== this.props.percent) {
          this.setState({
            percentage: new _reactNative.Animated.Value(this.getWidth(nextProps.percent))
          });
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.props.appearTransition) {
          this.state.percentage.setValue(0);

          _reactNative.Animated.timing(this.state.percentage, {
            toValue: this.getWidth(),
            duration: 1000
          }).start();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            position = _props.position,
            unfilled = _props.unfilled,
            style = _props.style,
            barStyle = _props.barStyle;
        var percentStyle = {
          width: this.getWidth(),
          height: 0
        };
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var child = _react2['default'].createElement(_reactNative.View, {
            style: [styles.progressBar, percentStyle, barStyle]
          });

          if (_this2.props.appearTransition) {
            percentStyle.width = _this2.state.percentage;
            child = _react2['default'].createElement(_reactNative.Animated.View, {
              style: [styles.progressBar, percentStyle, barStyle]
            });
          }

          var outerStyle = [styles.progressOuter, position === 'fixed' ? {
            position: 'absolute',
            top: 0
          } : {}, !unfilled ? {
            backgroundColor: 'transparent'
          } : {}, style];
          return _react2['default'].createElement(_reactNative.View, {
            onLayout: _this2.onLayout,
            style: outerStyle
          }, child);
        });
      }
    }]);
    return Progress;
  }(_react2['default'].Component);

  exports['default'] = Progress;
  Progress.defaultProps = {
    percent: 0,
    position: 'normal',
    unfilled: true,
    appearTransition: false
  };
  module.exports = exports['default'];
},710,[532,533,537,571,49,2,587,711]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      progressOuter: {
        backgroundColor: theme.border_color_base,
        flex: 1
      },
      progressBar: {
        borderBottomWidth: 4,
        borderStyle: 'solid',
        borderColor: theme.brand_primary
      }
    });
  };

  module.exports = exports['default'];
},711,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var React = _interopRequireWildcard(_react);

  var _localeProvider = _$$_REQUIRE(_dependencyMap[5]);

  var _localeProvider2 = _interopRequireDefault(_localeProvider);

  var _portal = _$$_REQUIRE(_dependencyMap[6]);

  var _portal2 = _interopRequireDefault(_portal);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj['default'] = obj;
      return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Provider = function (_React$Component) {
    (0, _inherits3['default'])(Provider, _React$Component);

    function Provider() {
      (0, _classCallCheck3['default'])(this, Provider);
      return (0, _possibleConstructorReturn3['default'])(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Provider, [{
      key: 'render',
      value: function render() {
        return React.createElement(_localeProvider2['default'], {
          locale: this.props.locale
        }, React.createElement(_style.ThemeProvider, {
          value: this.props.theme
        }, React.createElement(_portal2['default'].Host, null, this.props.children)));
      }
    }]);
    return Provider;
  }(React.Component);

  exports['default'] = Provider;
  module.exports = exports['default'];
},712,[532,533,537,571,49,713,592,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var LocaleProvider = function (_React$Component) {
    (0, _inherits3['default'])(LocaleProvider, _React$Component);

    function LocaleProvider() {
      (0, _classCallCheck3['default'])(this, LocaleProvider);
      return (0, _possibleConstructorReturn3['default'])(this, (LocaleProvider.__proto__ || Object.getPrototypeOf(LocaleProvider)).apply(this, arguments));
    }

    (0, _createClass3['default'])(LocaleProvider, [{
      key: 'getChildContext',
      value: function getChildContext() {
        return {
          antLocale: (0, _extends3['default'])({}, this.props.locale, {
            exist: true
          })
        };
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2['default'].Children.only(this.props.children);
      }
    }]);
    return LocaleProvider;
  }(_react2['default'].Component);

  exports['default'] = LocaleProvider;
  LocaleProvider.propTypes = {
    locale: _propTypes2['default'].object
  };
  LocaleProvider.childContextTypes = {
    antLocale: _propTypes2['default'].object
  };
  module.exports = exports['default'];
},713,[493,532,533,537,571,61,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Radio = _$$_REQUIRE(_dependencyMap[0]);

  var _Radio2 = _interopRequireDefault(_Radio);

  var _RadioItem = _$$_REQUIRE(_dependencyMap[1]);

  var _RadioItem2 = _interopRequireDefault(_RadioItem);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  _Radio2['default'].RadioItem = _RadioItem2['default'];
  exports['default'] = _Radio2['default'];
  module.exports = exports['default'];
},714,[715,717]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _icon = _$$_REQUIRE(_dependencyMap[6]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _default = _$$_REQUIRE(_dependencyMap[8]);

  var _default2 = _interopRequireDefault(_default);

  var _index = _$$_REQUIRE(_dependencyMap[9]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Radio = function (_React$Component) {
    (0, _inherits3['default'])(Radio, _React$Component);

    function Radio(props, context) {
      (0, _classCallCheck3['default'])(this, Radio);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).call(this, props, context));

      _this.handleClick = function () {
        if (_this.props.disabled) {
          return;
        }

        if (!('checked' in _this.props)) {
          _this.setState({
            checked: true
          });
        }

        if (_this.props.onChange) {
          _this.props.onChange({
            target: {
              checked: true
            }
          });
        }
      };

      _this.state = {
        checked: props.checked || props.defaultChecked || false
      };
      return _this;
    }

    (0, _createClass3['default'])(Radio, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if ('checked' in nextProps) {
          this.setState({
            checked: !!nextProps.checked
          });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            disabled = _props.disabled,
            children = _props.children;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var checked = _this2.state.checked;
          var icon = undefined;

          if (checked) {
            icon = disabled ? _react2['default'].createElement(_icon2['default'], {
              name: 'check',
              style: [styles.icon, style]
            }) : _react2['default'].createElement(_icon2['default'], {
              name: 'check',
              color: _default2['default'].brand_primary,
              style: [styles.icon, style]
            });
          }

          return _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: _this2.handleClick
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.wrapper]
          }, icon, typeof children === 'string' ? _react2['default'].createElement(_reactNative.Text, null, _this2.props.children) : children));
        });
      }
    }]);
    return Radio;
  }(_react2['default'].Component);

  exports['default'] = Radio;
  module.exports = exports['default'];
},715,[532,533,537,571,49,2,582,587,589,716]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      wrapper: {
        flexDirection: 'row',
        alignItems: 'center'
      },
      icon: {},
      radioItem: {
        flexDirection: 'row',
        alignItems: 'center'
      },
      radioItemRadio: {
        marginLeft: theme.h_spacing_lg,
        marginRight: theme.h_spacing_md
      },
      radioItemContent: {
        color: theme.color_text_base,
        fontSize: theme.font_size_heading
      },
      radioItemContentDisable: {
        color: theme.color_text_disabled
      }
    });
  };

  module.exports = exports['default'];
},716,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _index = _$$_REQUIRE(_dependencyMap[6]);

  var _index2 = _interopRequireDefault(_index);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _Radio = _$$_REQUIRE(_dependencyMap[8]);

  var _Radio2 = _interopRequireDefault(_Radio);

  var _index3 = _$$_REQUIRE(_dependencyMap[9]);

  var _index4 = _interopRequireDefault(_index3);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ListItem = _index2['default'].Item;

  var RadioItem = function (_React$Component) {
    (0, _inherits3['default'])(RadioItem, _React$Component);

    function RadioItem() {
      (0, _classCallCheck3['default'])(this, RadioItem);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (RadioItem.__proto__ || Object.getPrototypeOf(RadioItem)).apply(this, arguments));

      _this.handleClick = function () {
        if (_this.radio) {
          _this.radio.handleClick();
        }
      };

      return _this;
    }

    (0, _createClass3['default'])(RadioItem, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            radioStyle = _props.radioStyle,
            defaultChecked = _props.defaultChecked,
            checked = _props.checked,
            disabled = _props.disabled,
            children = _props.children,
            onChange = _props.onChange;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index4['default']
        }, function (styles) {
          var contentDom = null;

          if (children && _react2['default'].isValidElement(children)) {
            contentDom = _react2['default'].createElement(_reactNative.View, {
              style: {
                flex: 1
              }
            }, children);
          } else {
            var contentStyle = [styles.radioItemContent, disabled ? styles.radioItemContentDisable : {}];
            contentDom = _react2['default'].createElement(_reactNative.Text, {
              style: contentStyle,
              numberOfLines: 1
            }, _this2.props.children);
          }

          var radioEl = _react2['default'].createElement(_Radio2['default'], {
            ref: function ref(_ref) {
              return _this2.radio = _ref;
            },
            style: radioStyle,
            defaultChecked: defaultChecked,
            checked: checked,
            onChange: onChange,
            disabled: disabled
          });

          return _react2['default'].createElement(ListItem, {
            style: style,
            onPress: disabled ? undefined : _this2.handleClick,
            extra: radioEl
          }, contentDom);
        });
      }
    }]);
    return RadioItem;
  }(_react2['default'].Component);

  exports['default'] = RadioItem;
  module.exports = exports['default'];
},717,[532,533,537,571,49,2,628,587,715,716]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _index = _$$_REQUIRE(_dependencyMap[6]);

  var _index2 = _interopRequireDefault(_index);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index3 = _$$_REQUIRE(_dependencyMap[8]);

  var _index4 = _interopRequireDefault(_index3);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Result = function (_React$Component) {
    (0, _inherits3['default'])(Result, _React$Component);

    function Result() {
      (0, _classCallCheck3['default'])(this, Result);
      return (0, _possibleConstructorReturn3['default'])(this, (Result.__proto__ || Object.getPrototypeOf(Result)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Result, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            style = _props.style,
            img = _props.img,
            imgUrl = _props.imgUrl,
            title = _props.title,
            message = _props.message,
            buttonText = _props.buttonText,
            onButtonClick = _props.onButtonClick,
            buttonType = _props.buttonType;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index4['default']
        }, function (styles) {
          var imgContent = null;

          if (img) {
            imgContent = _react2['default'].createElement(_reactNative.View, {
              style: styles.imgWrap
            }, img);
          } else if (imgUrl) {
            imgContent = _react2['default'].createElement(_reactNative.View, {
              style: styles.imgWrap
            }, _react2['default'].createElement(_reactNative.Image, {
              source: imgUrl,
              style: styles.img
            }));
          }

          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.result, style]
          }, imgContent, title ? _react2['default'].createElement(_reactNative.View, {
            style: styles.title
          }, typeof title === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: styles.titleText
          }, title) : title) : null, message ? _react2['default'].createElement(_reactNative.View, {
            style: styles.message
          }, typeof message === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: styles.messageText
          }, message) : message) : null, buttonText ? _react2['default'].createElement(_reactNative.View, {
            style: styles.buttonWrap
          }, _react2['default'].createElement(_index2['default'], {
            style: styles.button,
            type: buttonType,
            onPress: onButtonClick
          }, buttonText)) : null);
        });
      }
    }]);
    return Result;
  }(_react2['default'].Component);

  exports['default'] = Result;
  Result.defaultProps = {
    buttonType: ''
  };
  module.exports = exports['default'];
},718,[532,533,537,571,49,2,614,587,719]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      result: {
        alignItems: 'center',
        paddingVertical: theme.v_spacing_xl,
        backgroundColor: theme.fill_base,
        borderBottomColor: theme.border_color_base
      },
      imgWrap: {
        margin: 0
      },
      img: {
        width: 60,
        height: 60
      },
      title: {
        marginTop: theme.v_spacing_lg,
        paddingHorizontal: theme.h_spacing_lg
      },
      titleText: {
        fontSize: 21,
        color: theme.color_text_base
      },
      message: {
        marginTop: theme.v_spacing_lg,
        paddingHorizontal: theme.h_spacing_lg
      },
      messageText: {
        fontSize: theme.font_size_caption,
        color: theme.color_text_caption
      },
      buttonWrap: {
        flexDirection: 'row',
        marginTop: theme.v_spacing_lg,
        paddingHorizontal: theme.h_spacing_lg
      },
      button: {
        flex: 1
      }
    });
  };

  module.exports = exports['default'];
},719,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _icon = _$$_REQUIRE(_dependencyMap[8]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[9]);

  var _getLocale = _$$_REQUIRE(_dependencyMap[10]);

  var _PropsType = _$$_REQUIRE(_dependencyMap[11]);

  var _index = _$$_REQUIRE(_dependencyMap[12]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var SearchBar = function (_React$Component) {
    (0, _inherits3['default'])(SearchBar, _React$Component);

    function SearchBar(props) {
      (0, _classCallCheck3['default'])(this, SearchBar);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (SearchBar.__proto__ || Object.getPrototypeOf(SearchBar)).call(this, props));

      _this.onSubmit = function (_) {
        if (_this.props.onSubmit) {
          _this.props.onSubmit(_this.state.value || '');
        }
      };

      _this.onChangeText = function (value) {
        if (!('value' in _this.props)) {
          _this.setState({
            value: value
          });
        }

        if (_this.props.onChange) {
          _this.props.onChange(value);
        }
      };

      _this.onCancel = function () {
        if (_this.props.onCancel) {
          _this.props.onCancel(_this.state.value || '');
        }
      };

      _this.onFocus = function () {
        _this.setState({
          focus: true
        });

        if (_this.props.onFocus) {
          _this.props.onFocus();
        }
      };

      _this.onBlur = function () {
        _this.setState({
          focus: false
        });

        if (_this.props.onBlur) {
          _this.props.onBlur();
        }
      };

      var value = undefined;

      if ('value' in props) {
        value = props.value;
      } else if ('defaultValue' in props) {
        value = props.defaultValue;
      } else {
        value = '';
      }

      _this.state = {
        value: value,
        focus: false
      };
      return _this;
    }

    (0, _createClass3['default'])(SearchBar, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if ('value' in nextProps) {
          this.setState({
            value: nextProps.value
          });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            showCancelButton = _a.showCancelButton,
            styles = _a.styles,
            propsValue = _a.value,
            cancelText = _a.cancelText,
            onChangeText = _a.onChangeText,
            onChange = _a.onChange,
            disabled = _a.disabled,
            style = _a.style,
            restProps = __rest(_a, ["showCancelButton", "styles", "value", "cancelText", "onChangeText", "onChange", "disabled", "style"]);

        var _locale = (0, _getLocale.getComponentLocale)(this.props, this.context, 'SearchBar', function () {
          return _$$_REQUIRE(_dependencyMap[13]);
        });

        var _state = this.state,
            value = _state.value,
            focus = _state.focus;

        var _showCancelButton = showCancelButton || focus;

        return _react2['default'].createElement(_style.WithTheme, {
          styles: styles,
          themeStyles: _index2['default']
        }, function (_styles) {
          return _react2['default'].createElement(_reactNative.View, {
            style: _styles.wrapper
          }, _react2['default'].createElement(_reactNative.View, {
            style: _styles.inputWrapper
          }, _react2['default'].createElement(_reactNative.TextInput, (0, _extends3['default'])({
            clearButtonMode: 'always',
            underlineColorAndroid: 'transparent',
            editable: !disabled
          }, restProps, {
            style: [_styles.input, style],
            ref: function ref(el) {
              return _this2.inputRef = el;
            },
            value: value,
            onChangeText: _this2.onChangeText,
            onSubmitEditing: _this2.onSubmit,
            onFocus: _this2.onFocus,
            onBlur: _this2.onBlur
          }))), _react2['default'].createElement(_icon2['default'], {
            name: 'search',
            style: _styles.search
          }), _showCancelButton && _react2['default'].createElement(_reactNative.View, {
            style: _styles.cancelTextContainer
          }, _react2['default'].createElement(_reactNative.Text, {
            style: _styles.cancelText,
            onPress: _this2.onCancel
          }, cancelText || _locale.cancelText)));
        });
      }
    }]);
    return SearchBar;
  }(_react2['default'].Component);

  exports['default'] = SearchBar;
  SearchBar.defaultProps = (0, _extends3['default'])({}, _PropsType.defaultProps);
  SearchBar.contextTypes = {
    antLocale: _propTypes2['default'].object
  };
  module.exports = exports['default'];
},720,[493,532,533,537,571,61,49,2,582,587,641,721,722,723]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function noop() {}

  var defaultProps = exports.defaultProps = {
    placeholder: '',
    onSubmit: noop,
    onChange: noop,
    onFocus: noop,
    onBlur: noop,
    onClear: noop,
    showCancelButton: false,
    disabled: false
  };
},721,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      inputWrapper: {
        flex: 1,
        flexDirection: 'row'
      },
      input: {
        borderRadius: theme.radius_md,
        backgroundColor: '#fff',
        borderColor: theme.border_color_base,
        borderWidth: theme.border_width_sm,
        height: theme.search_bar_input_height,
        color: theme.color_text_base,
        fontSize: theme.font_size_base,
        paddingLeft: theme.h_spacing_lg + theme.icon_size_xxs + theme.h_spacing_sm,
        paddingRight: theme.h_spacing_lg + theme.icon_size_xxs + theme.h_spacing_sm,
        flex: 1,
        paddingTop: 0,
        paddingBottom: 0
      },
      wrapper: {
        backgroundColor: theme.search_bar_fill,
        height: theme.search_bar_height,
        paddingLeft: theme.h_spacing_md,
        paddingRight: theme.h_spacing_md,
        flexDirection: 'row',
        alignItems: 'center'
      },
      cancelTextContainer: {
        height: theme.search_bar_input_height,
        justifyContent: 'center',
        alignItems: 'center'
      },
      cancelText: {
        fontSize: theme.link_button_font_size,
        color: theme.color_link,
        paddingLeft: theme.h_spacing_lg
      },
      search: {
        color: theme.input_color_icon,
        position: 'absolute',
        left: theme.h_spacing_md + 8,
        top: (theme.search_bar_height - theme.icon_size_xxs) / 2,
        fontSize: theme.icon_size_xxs
      }
    });
  };

  module.exports = exports['default'];
},722,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = {
    cancelText: '取消'
  };
  module.exports = exports['default'];
},723,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _segmented = _$$_REQUIRE(_dependencyMap[1]);

  var _segmented2 = _interopRequireDefault(_segmented);

  var _segmented3 = _$$_REQUIRE(_dependencyMap[2]);

  var _segmented4 = _interopRequireDefault(_segmented3);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  exports['default'] = _reactNative.Platform.OS === 'ios' ? _segmented4['default'] : _segmented2['default'];
  module.exports = exports['default'];
},724,[2,725,728]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _normalizeCssColor = _$$_REQUIRE(_dependencyMap[4]);

  var _normalizeCssColor2 = _interopRequireDefault(_normalizeCssColor);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function setNormalizedColorAlpha(input, alpha) {
    if (alpha < 0) {
      alpha = 0;
    } else if (alpha > 1) {
      alpha = 1;
    }

    alpha = Math.round(alpha * 255);
    return (input & 0xffffff00 | alpha) >>> 0;
  }

  var SegmentedControl = function (_React$Component) {
    (0, _inherits3['default'])(SegmentedControl, _React$Component);

    function SegmentedControl(props) {
      (0, _classCallCheck3['default'])(this, SegmentedControl);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (SegmentedControl.__proto__ || Object.getPrototypeOf(SegmentedControl)).call(this, props));

      _this.state = {
        selectedIndex: props.selectedIndex
      };
      return _this;
    }

    (0, _createClass3['default'])(SegmentedControl, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.selectedIndex !== this.props.selectedIndex) {
          this.setState({
            selectedIndex: nextProps.selectedIndex
          });
        }
      }
    }, {
      key: 'onPress',
      value: function onPress(e, index, value) {
        var _props = this.props,
            disabled = _props.disabled,
            onChange = _props.onChange,
            onValueChange = _props.onValueChange;

        if (!disabled) {
          e.nativeEvent.selectedSegmentIndex = index;
          e.nativeEvent.value = value;

          if (onChange) {
            onChange(e);
          }

          if (onValueChange) {
            onValueChange(value);
          }

          this.setState({
            selectedIndex: index
          });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props2 = this.props,
            style = _props2.style,
            disabled = _props2.disabled,
            _props2$values = _props2.values,
            values = _props2$values === undefined ? [] : _props2$values;
        var tintColor = this.props.tintColor;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles, theme) {
          var selectedIndex = _this2.state.selectedIndex;
          tintColor = tintColor || theme.segmented_control_color;
          var items = values.map(function (value, idx) {
            var itemRadius = null;

            if (idx === 0) {
              itemRadius = styles.itemLeftRadius;
            } else if (idx === values.length - 1) {
              itemRadius = styles.itemRightRadius;
            }

            var itemStyle = [styles.item, itemRadius, {
              backgroundColor: idx === selectedIndex ? tintColor : 'transparent',
              borderColor: tintColor
            }];
            var underlayColor = idx === selectedIndex ? tintColor : '#' + setNormalizedColorAlpha((0, _normalizeCssColor2['default'])(tintColor), 0.3).toString(16);
            return _react2['default'].createElement(_reactNative.TouchableHighlight, {
              disabled: disabled,
              key: idx,
              onPress: function onPress(e) {
                return _this2.onPress(e, idx, value);
              },
              underlayColor: underlayColor,
              style: itemStyle,
              activeOpacity: 1
            }, _react2['default'].createElement(_reactNative.Text, {
              style: [styles.itemText, {
                color: idx === selectedIndex ? '#fff' : tintColor
              }]
            }, value));
          });
          var enabledOpacity = !disabled ? 1 : 0.5;
          var segmentedStyle = {
            opacity: enabledOpacity,
            borderColor: tintColor
          };
          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.segment, segmentedStyle, style]
          }, items);
        });
      }
    }]);
    return SegmentedControl;
  }(_react2['default'].Component);

  exports['default'] = SegmentedControl;
  SegmentedControl.defaultProps = {
    selectedIndex: 0,
    disabled: false,
    values: [],
    onChange: function onChange() {},
    onValueChange: function onValueChange() {},
    style: {}
  };
  module.exports = exports['default'];
},725,[532,533,537,571,726,49,2,587,727]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function normalizeColor(color) {
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return color;
      }

      return null;
    }

    if (match = matchers.hex6.exec(color)) {
      return parseInt(match[1] + 'ff', 16) >>> 0;
    }

    if (names.hasOwnProperty(color)) {
      return names[color];
    }

    if (match = matchers.rgb.exec(color)) {
      return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
    }

    if (match = matchers.rgba.exec(color)) {
      return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
    }

    if (match = matchers.hex3.exec(color)) {
      return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
    }

    if (match = matchers.hex8.exec(color)) {
      return parseInt(match[1], 16) >>> 0;
    }

    if (match = matchers.hex4.exec(color)) {
      return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
    }

    if (match = matchers.hsl.exec(color)) {
      return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
    }

    if (match = matchers.hsla.exec(color)) {
      return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function toArray(arrayLike) {
    return Array.prototype.slice.call(arrayLike, 0);
  }

  function call() {
    return '\\(\\s*(' + toArray(arguments).join(')\\s*,\\s*(') + ')\\s*\\)';
  }

  var matchers = {
    rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
    rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
    hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
    hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
    hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#([0-9a-fA-F]{6})$/,
    hex8: /^#([0-9a-fA-F]{8})$/
  };

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };

  function rgba(colorInt) {
    var r = Math.round((colorInt & 0xff000000) >>> 24);
    var g = Math.round((colorInt & 0x00ff0000) >>> 16);
    var b = Math.round((colorInt & 0x0000ff00) >>> 8);
    var a = ((colorInt & 0x000000ff) >>> 0) / 255;
    return {
      r: r,
      g: g,
      b: b,
      a: a
    };
  }

  ;
  normalizeColor.rgba = rgba;
  module.exports = normalizeColor;
},726,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      segment: {
        flexDirection: 'row',
        overflow: 'hidden',
        borderWidth: _reactNative.StyleSheet.hairlineWidth,
        borderColor: theme.brand_primary,
        borderRadius: theme.radius_md
      },
      item: {
        flex: 1,
        paddingVertical: theme.h_spacing_sm,
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth,
        borderRightWidth: _reactNative.StyleSheet.hairlineWidth,
        borderStyle: 'solid',
        alignItems: 'center',
        justifyContent: 'center'
      },
      itemLeftRadius: {
        borderTopLeftRadius: theme.radius_md,
        borderBottomLeftRadius: theme.radius_md
      },
      itemRightRadius: {
        borderTopRightRadius: theme.radius_md,
        borderBottomRightRadius: theme.radius_md
      },
      itemText: {
        textAlign: 'center',
        fontSize: theme.font_size_caption_sm
      }
    });
  };

  module.exports = exports['default'];
},727,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var SegmentedControl = function (_React$Component) {
    (0, _inherits3['default'])(SegmentedControl, _React$Component);

    function SegmentedControl() {
      (0, _classCallCheck3['default'])(this, SegmentedControl);
      return (0, _possibleConstructorReturn3['default'])(this, (SegmentedControl.__proto__ || Object.getPrototypeOf(SegmentedControl)).apply(this, arguments));
    }

    (0, _createClass3['default'])(SegmentedControl, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            tintColor = _a.tintColor,
            disabled = _a.disabled,
            selectedIndex = _a.selectedIndex,
            restProps = __rest(_a, ["tintColor", "disabled", "selectedIndex"]);

        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          return _react2['default'].createElement(_reactNative.SegmentedControlIOS, (0, _extends3['default'])({
            tintColor: tintColor || theme.segmented_control_color,
            selectedIndex: selectedIndex
          }, restProps, {
            enabled: !disabled
          }));
        });
      }
    }]);
    return SegmentedControl;
  }(_react2['default'].Component);

  exports['default'] = SegmentedControl;
  SegmentedControl.defaultProps = {
    selectedIndex: 0
  };
  module.exports = exports['default'];
},728,[493,532,533,537,571,49,2,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var SliderAntm = function (_React$Component) {
    (0, _inherits3['default'])(SliderAntm, _React$Component);

    function SliderAntm() {
      (0, _classCallCheck3['default'])(this, SliderAntm);
      return (0, _possibleConstructorReturn3['default'])(this, (SliderAntm.__proto__ || Object.getPrototypeOf(SliderAntm)).apply(this, arguments));
    }

    (0, _createClass3['default'])(SliderAntm, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            defaultValue = _props.defaultValue,
            value = _props.value,
            min = _props.min,
            max = _props.max,
            step = _props.step,
            disabled = _props.disabled,
            onChange = _props.onChange,
            onAfterChange = _props.onAfterChange,
            maximumTrackTintColor = _props.maximumTrackTintColor,
            minimumTrackTintColor = _props.minimumTrackTintColor;
        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          return _react2['default'].createElement(_reactNative.View, null, _react2['default'].createElement(_reactNative.Slider, {
            value: defaultValue || value,
            minimumValue: min,
            maximumValue: max,
            step: step,
            minimumTrackTintColor: minimumTrackTintColor || theme.brand_primary,
            maximumTrackTintColor: maximumTrackTintColor || theme.border_color_base,
            disabled: disabled,
            onValueChange: onChange,
            onSlidingComplete: onAfterChange
          }));
        });
      }
    }]);
    return SliderAntm;
  }(_react2['default'].Component);

  exports['default'] = SliderAntm;
  SliderAntm.defaultProps = {
    onChange: function onChange() {},
    onAfterChange: function onAfterChange() {},
    defaultValue: 0,
    disabled: false
  };
  module.exports = exports['default'];
},729,[532,533,537,571,49,2,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _InputNumber = _$$_REQUIRE(_dependencyMap[8]);

  var _InputNumber2 = _interopRequireDefault(_InputNumber);

  var _style2 = _$$_REQUIRE(_dependencyMap[9]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Stepper = function (_React$Component) {
    (0, _inherits3['default'])(Stepper, _React$Component);

    function Stepper() {
      (0, _classCallCheck3['default'])(this, Stepper);
      return (0, _possibleConstructorReturn3['default'])(this, (Stepper.__proto__ || Object.getPrototypeOf(Stepper)).apply(this, arguments));
    }

    (0, _createClass3['default'])(Stepper, [{
      key: 'render',
      value: function render() {
        var inputAndroidStyle = _reactNative.Platform.OS === 'android' ? {
          top: 6,
          paddingTop: 0,
          height: 26
        } : {};

        var _a = this.props,
            inputStyle = _a.inputStyle,
            restProps = __rest(_a, ["inputStyle"]);

        var keyboardType = _reactNative.Platform.OS === 'android' ? 'numeric' : 'numbers-and-punctuation';
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _style3['default']
        }, function (styles) {
          return _react2['default'].createElement(_InputNumber2['default'], (0, _extends3['default'])({}, restProps, {
            styles: styles,
            keyboardType: keyboardType,
            inputStyle: [inputAndroidStyle, inputStyle]
          }));
        });
      }
    }]);
    return Stepper;
  }(_react2['default'].Component);

  exports['default'] = Stepper;
  Stepper.defaultProps = {
    step: 1,
    readOnly: false,
    disabled: false,
    inputStyle: {}
  };
  module.exports = exports['default'];
},730,[493,532,533,537,571,49,2,587,731,732]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function noop() {}

  function defaultParser(input) {
    return input.replace(/[^\w\.-]+/g, '');
  }

  var SPEED = 200;
  var DELAY = 600;
  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;

  var InputNumber = function (_React$Component) {
    (0, _inherits3['default'])(InputNumber, _React$Component);

    function InputNumber(props) {
      (0, _classCallCheck3['default'])(this, InputNumber);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (InputNumber.__proto__ || Object.getPrototypeOf(InputNumber)).call(this, props));

      _this.onChange = function (e) {
        var _this$props = _this.props,
            parser = _this$props.parser,
            onChange = _this$props.onChange;
        var input = parser && parser(_this.getValueFromEvent(e).trim());

        _this.setState({
          inputValue: input
        });

        onChange && onChange(_this.toNumberWhenUserInput(input));
      };

      _this.onFocus = function () {
        _this.setState({
          focused: true
        });

        var onFocus = _this.props.onFocus;
        onFocus && onFocus.apply(undefined, arguments);
      };

      _this.onBlur = function (e) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        _this.setState({
          focused: false
        });

        var value = _this.getCurrentValidValue(_this.state.inputValue);

        e.persist();

        _this.setValue(value, function () {
          var onBlur = _this.props.onBlur;
          onBlur && onBlur.apply(undefined, [e].concat(args));
        });
      };

      _this.getCurrentValidValue = function (value) {
        var val = value;

        if (val === '') {
          val = '';
        } else if (!_this.isNotCompleteNumber(val)) {
          val = _this.getValidValue(val);
        } else {
          val = _this.state.value;
        }

        return _this.toNumber(val);
      };

      _this.getValidValue = function (value) {
        var val = parseFloat(value);

        if (isNaN(val)) {
          return value;
        }

        if (val < _this.props.min) {
          val = _this.props.min;
        }

        if (val > _this.props.max) {
          val = _this.props.max;
        }

        return val;
      };

      _this.setValue = function (v, callback) {
        var newValue = _this.isNotCompleteNumber(parseFloat(v)) ? undefined : parseFloat(v);
        var changed = newValue !== _this.state.value || '' + newValue !== '' + _this.state.inputValue;

        if (!('value' in _this.props)) {
          _this.setState({
            value: newValue,
            inputValue: _this.toPrecisionAsStep(v)
          }, callback);
        } else {
          _this.setState({
            inputValue: _this.toPrecisionAsStep(_this.state.value)
          }, callback);
        }

        if (changed) {
          var onChange = _this.props.onChange;
          onChange && onChange(newValue);
        }
      };

      _this.getPrecision = function (value) {
        if ('precision' in _this.props) {
          return _this.props.precision;
        }

        var valueString = value.toString();

        if (valueString.indexOf('e-') >= 0) {
          return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);
        }

        var precision = 0;

        if (valueString.indexOf('.') >= 0) {
          precision = valueString.length - valueString.indexOf('.') - 1;
        }

        return precision;
      };

      _this.getMaxPrecision = function (currentValue) {
        var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

        if ('precision' in _this.props) {
          return _this.props.precision;
        }

        var step = _this.props.step;

        var ratioPrecision = _this.getPrecision(ratio);

        var stepPrecision = _this.getPrecision(step);

        var currentValuePrecision = _this.getPrecision(currentValue);

        if (!currentValue) {
          return ratioPrecision + stepPrecision;
        }

        return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);
      };

      _this.getPrecisionFactor = function (currentValue) {
        var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

        var precision = _this.getMaxPrecision(currentValue, ratio);

        return Math.pow(10, precision);
      };

      _this.toPrecisionAsStep = function (num) {
        if (_this.isNotCompleteNumber(num) || num === '') {
          return num;
        }

        var precision = Math.abs(_this.getMaxPrecision(num));

        if (!isNaN(precision)) {
          return Number(num).toFixed(precision);
        }

        return num.toString();
      };

      _this.isNotCompleteNumber = function (num) {
        return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;
      };

      _this.toNumber = function (num) {
        if (_this.isNotCompleteNumber(num)) {
          return num;
        }

        if ('precision' in _this.props) {
          return Number(Number(num).toFixed(_this.props.precision));
        }

        return Number(num);
      };

      _this.toNumberWhenUserInput = function (num) {
        if ((/\.\d*0$/.test(num) || num.length > 16) && _this.state.focused) {
          return num;
        }

        return _this.toNumber(num);
      };

      _this.stepCompute = function (type, val, rat) {
        var _this$props2 = _this.props,
            step = _this$props2.step,
            min = _this$props2.min;

        var precisionFactor = _this.getPrecisionFactor(val, rat);

        var precision = Math.abs(_this.getMaxPrecision(val, rat));
        var result = undefined;
        var direct = type === 'up' ? 1 : -1;

        if (typeof val === 'number') {
          result = ((precisionFactor * val + direct * precisionFactor * +step * rat) / precisionFactor).toFixed(precision);
        } else {
          result = min === -(1 / 0) ? direct * +step : min;
        }

        return _this.toNumber(result);
      };

      _this.step = function (type, e) {
        var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

        if (e) {
          e.preventDefault();
        }

        var props = _this.props;

        if (props.disabled) {
          return false;
        }

        var value = _this.getCurrentValidValue(_this.state.inputValue) || 0;

        if (_this.isNotCompleteNumber(value)) {
          return false;
        }

        var val = _this.stepCompute(type, value, ratio);

        var outOfRange = val > props.max || val < props.min;

        if (val > props.max) {
          val = props.max;
        } else if (val < props.min) {
          val = props.min;
        }

        _this.setValue(val);

        _this.setState({
          focused: true
        });

        return !outOfRange;
      };

      _this.stop = function () {
        if (_this.autoStepTimer) {
          clearTimeout(_this.autoStepTimer);
        }
      };

      _this.action = function (type, e, ratio, recursive) {
        if (e.persist) {
          e.persist();
        }

        _this.stop();

        if (_this.step(type, e, ratio)) {
          _this.autoStepTimer = setTimeout(function () {
            _this.action(type, e, ratio, true);
          }, recursive ? SPEED : DELAY);
        }
      };

      _this.down = function (e, ratio, recursive) {
        _this.action('down', e, ratio, recursive);
      };

      _this.up = function (e, ratio, recursive) {
        _this.action('up', e, ratio, recursive);
      };

      _this.onPressInDown = function (e) {
        _this.onPressIn('_stepDown');

        _this.down(e, true);
      };

      _this.onPressOutDown = function () {
        _this.onPressOut('_stepDown');

        _this.stop();
      };

      _this.onPressInUp = function (e) {
        _this.onPressIn('_stepUp');

        _this.up(e, true);
      };

      _this.onPressOutUp = function () {
        _this.onPressOut('_stepUp');

        _this.stop();
      };

      var value = undefined;

      if ('value' in props) {
        value = props.value;
      } else {
        value = props.defaultValue;
      }

      value = _this.toNumber(value);
      _this.state = {
        inputValue: _this.toPrecisionAsStep(value),
        value: value,
        focused: props.autoFocus
      };
      return _this;
    }

    (0, _createClass3['default'])(InputNumber, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if ('value' in nextProps) {
          var value = this.state.focused ? nextProps.value : this.getValidValue(nextProps.value);
          this.setState({
            value: value,
            inputValue: value
          });
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.stop();
      }
    }, {
      key: 'onPressIn',
      value: function onPressIn(type) {
        if (this.props.disabled) {
          return;
        }

        var styles = this.props.styles;
        this[type].setNativeProps({
          style: [styles.stepWrap, styles.highlightStepBorderColor]
        });
        this[type + 'Text'].setNativeProps({
          style: [styles.stepText, styles.highlightStepTextColor]
        });
      }
    }, {
      key: 'onPressOut',
      value: function onPressOut(type) {
        if (this.props.disabled) {
          return;
        }

        var styles = this.props.styles;
        this[type].setNativeProps({
          style: [styles.stepWrap]
        });
        this[type + 'Text'].setNativeProps({
          style: [styles.stepText]
        });
      }
    }, {
      key: 'getValueFromEvent',
      value: function getValueFromEvent(e) {
        return e.nativeEvent.text;
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var props = this.props,
            state = this.state;
        var _props = this.props,
            style = _props.style,
            upStyle = _props.upStyle,
            downStyle = _props.downStyle,
            inputStyle = _props.inputStyle,
            styles = _props.styles;
        var editable = !this.props.readOnly && !this.props.disabled;
        var upDisabledStyle = null;
        var downDisabledStyle = null;
        var upDisabledTextStyle = null;
        var downDisabledTextStyle = null;
        var value = +state.value;

        if (!isNaN(value)) {
          var val = Number(value);

          if (val >= props.max) {
            upDisabledStyle = styles.stepDisabled;
            upDisabledTextStyle = styles.disabledStepTextColor;
          }

          if (val <= props.min) {
            downDisabledStyle = styles.stepDisabled;
            downDisabledTextStyle = styles.disabledStepTextColor;
          }
        } else {
          upDisabledStyle = styles.stepDisabled;
          downDisabledStyle = styles.stepDisabled;
          upDisabledTextStyle = styles.disabledStepTextColor;
          downDisabledTextStyle = styles.disabledStepTextColor;
        }

        var inputDisabledStyle = null;

        if (props.disabled) {
          upDisabledStyle = styles.stepDisabled;
          downDisabledStyle = styles.stepDisabled;
          upDisabledTextStyle = styles.disabledStepTextColor;
          downDisabledTextStyle = styles.disabledStepTextColor;
          inputDisabledStyle = styles.disabledStepTextColor;
        }

        var inputDisplayValue = undefined;

        if (state.focused) {
          inputDisplayValue = '' + state.inputValue;
        } else {
          inputDisplayValue = '' + state.value;
        }

        if (inputDisplayValue === undefined) {
          inputDisplayValue = '';
        }

        return _react2['default'].createElement(_reactNative.View, {
          style: [styles.container, style]
        }, _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
          onPressIn: editable && !downDisabledStyle ? this.onPressInDown : undefined,
          onPressOut: editable && !downDisabledStyle ? this.onPressOutDown : undefined,
          accessible: true,
          accessibilityLabel: 'Decrease Value',
          accessibilityComponentType: 'button',
          accessibilityTraits: editable && !downDisabledStyle ? 'button' : 'disabled'
        }, _react2['default'].createElement(_reactNative.View, {
          ref: function ref(component) {
            return _this2._stepDown = component;
          },
          style: [styles.stepWrap, downDisabledStyle, downStyle]
        }, _react2['default'].createElement(_reactNative.Text, {
          ref: function ref(component) {
            return _this2._stepDownText = component;
          },
          style: [styles.stepText, downDisabledTextStyle]
        }, '-'))), _react2['default'].createElement(_reactNative.TextInput, {
          style: [styles.input, inputDisabledStyle, inputStyle],
          value: inputDisplayValue,
          autoFocus: props.autoFocus,
          editable: editable,
          onFocus: this.onFocus,
          onEndEditing: this.onBlur,
          onChange: this.onChange,
          underlineColorAndroid: 'transparent',
          keyboardType: props.keyboardType
        }), _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
          onPressIn: editable && !upDisabledStyle ? this.onPressInUp : undefined,
          onPressOut: editable && !upDisabledStyle ? this.onPressOutUp : undefined,
          accessible: true,
          accessibilityLabel: 'Increase Value',
          accessibilityComponentType: 'button',
          accessibilityTraits: editable && !upDisabledStyle ? 'button' : 'disabled'
        }, _react2['default'].createElement(_reactNative.View, {
          ref: function ref(component) {
            return _this2._stepUp = component;
          },
          style: [styles.stepWrap, upDisabledStyle, upStyle]
        }, _react2['default'].createElement(_reactNative.Text, {
          ref: function ref(component) {
            return _this2._stepUpText = component;
          },
          style: [styles.stepText, upDisabledTextStyle]
        }, '+'))));
      }
    }]);
    return InputNumber;
  }(_react2['default'].Component);

  exports['default'] = InputNumber;
  InputNumber.defaultProps = {
    max: MAX_SAFE_INTEGER,
    min: -MAX_SAFE_INTEGER,
    step: 1,
    style: {},
    onChange: noop,
    onFocus: noop,
    onBlur: noop,
    parser: defaultParser
  };
  module.exports = exports['default'];
},731,[532,533,537,571,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center'
      },
      input: {
        flex: 1,
        textAlign: 'center',
        paddingHorizontal: 8,
        fontSize: theme.input_font_size,
        color: theme.color_text_base
      },
      stepWrap: {
        width: 28,
        height: 28,
        borderWidth: theme.border_width_md,
        borderColor: theme.border_color_base,
        borderRadius: theme.radius_md,
        backgroundColor: theme.fill_base
      },
      stepText: {
        textAlign: 'center',
        fontSize: 20,
        color: theme.color_text_placeholder,
        backgroundColor: 'transparent'
      },
      stepDisabled: {
        borderColor: theme.color_text_disabled,
        backgroundColor: theme.fill_disabled
      },
      disabledStepTextColor: {
        color: theme.color_text_disabled
      },
      highlightStepTextColor: {
        color: theme.brand_primary
      },
      highlightStepBorderColor: {
        borderColor: theme.brand_primary
      }
    });
  };

  module.exports = exports['default'];
},732,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _StepsItem = _$$_REQUIRE(_dependencyMap[7]);

  var _StepsItem2 = _interopRequireDefault(_StepsItem);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Steps = function (_React$Component) {
    (0, _inherits3['default'])(Steps, _React$Component);

    function Steps(props) {
      (0, _classCallCheck3['default'])(this, Steps);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Steps.__proto__ || Object.getPrototypeOf(Steps)).call(this, props));

      _this.onLayout = function (e) {
        _this.setState({
          wrapWidth: e.nativeEvent.layout.width
        });
      };

      _this.state = {
        wrapWidth: 0
      };
      return _this;
    }

    (0, _createClass3['default'])(Steps, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var children = this.props.children;
        var direction = this.props.direction === 'horizontal' ? 'row' : 'column';
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_reactNative.View, {
            style: {
              flexDirection: direction
            },
            onLayout: function onLayout(e) {
              _this2.onLayout(e);
            }
          }, _react2['default'].Children.map(children, function (ele, idx) {
            var errorTail = -1;

            if (idx < children.length - 1) {
              var status = children[idx + 1].props.status;

              if (status === 'error') {
                errorTail = idx;
              }
            }

            return _react2['default'].cloneElement(ele, {
              index: idx,
              last: idx === children.length - 1,
              direction: _this2.props.direction,
              current: _this2.props.current,
              width: 1 / (children.length - 1) * _this2.state.wrapWidth,
              size: _this2.props.size,
              finishIcon: _this2.props.finishIcon,
              errorTail: errorTail,
              styles: styles
            });
          }));
        });
      }
    }]);
    return Steps;
  }(_react2['default'].Component);

  exports['default'] = Steps;
  Steps.defaultProps = {
    direction: ''
  };
  Steps.Step = _StepsItem2['default'];
  module.exports = exports['default'];
},733,[532,533,537,571,49,2,587,734,735]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof2 = _$$_REQUIRE(_dependencyMap[0]);

  var _typeof3 = _interopRequireDefault(_typeof2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _icon = _$$_REQUIRE(_dependencyMap[7]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var StepsItem = function (_React$Component) {
    (0, _inherits3['default'])(StepsItem, _React$Component);

    function StepsItem() {
      (0, _classCallCheck3['default'])(this, StepsItem);
      return (0, _possibleConstructorReturn3['default'])(this, (StepsItem.__proto__ || Object.getPrototypeOf(StepsItem)).apply(this, arguments));
    }

    (0, _createClass3['default'])(StepsItem, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            size = _props.size,
            last = _props.last,
            title = _props.title,
            description = _props.description,
            direction = _props.direction,
            status = _props.status,
            icon = _props.icon,
            styles = _props.styles,
            renderIcon = _props.renderIcon;
        var index = this.props.index;
        var current = this.props.current;
        var errorTail = this.props.errorTail;
        var starting = index < current || status === 'finish' || index === current || status === 'process';
        var waiting = index > current || status === 'wait';
        var error = status === 'error';
        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          var headCls = '';
          var tailTopCls = '';
          var tailBottomCls = '';
          var sizeCls = size === 'small' ? '_s' : '_l';

          if (index < current || status === 'finish') {
            headCls = 'head_blue' + sizeCls;
            tailTopCls = 'tail_blue';
            tailBottomCls = 'tail_blue';
          } else if (index === current || status === 'process') {
            headCls = 'head_blue' + sizeCls;
            tailTopCls = 'tail_blue';
            tailBottomCls = 'tail_gray';
          } else if (index > current || status === 'wait') {
            headCls = 'head_gray' + sizeCls;
            tailTopCls = 'tail_gray';
            tailBottomCls = 'tail_gray';
          } else if (status === 'error') {
            headCls = 'head_red' + sizeCls;
            tailTopCls = 'tail_gray';
            tailBottomCls = 'tail_gray';
          }

          if (last) {
            tailTopCls = 'tail_last';
            tailBottomCls = 'tail_last';
          }

          if (errorTail > -1) {
            tailBottomCls = 'tail_error';
          }

          var iconSource = undefined;

          if (renderIcon) {
            iconSource = renderIcon({
              starting: starting,
              waiting: waiting,
              error: error
            });
          } else {
            if (starting) {
              iconSource = _react2['default'].createElement(_icon2['default'], {
                name: 'check',
                color: theme.color_icon_base,
                style: styles['icon' + sizeCls]
              });
            } else if (waiting) {
              iconSource = _react2['default'].createElement(_icon2['default'], {
                name: 'ellipsis',
                color: theme.color_icon_base,
                style: styles['icon' + sizeCls]
              });

              if (!!icon) {
                iconSource = icon;
              }
            } else if (error) {
              iconSource = _react2['default'].createElement(_icon2['default'], {
                name: 'close',
                color: theme.color_icon_base,
                style: styles['icon' + sizeCls]
              });
            }
          }

          var isHorizontal = direction === 'horizontal';
          var parentStyle = isHorizontal ? {
            flexDirection: 'column'
          } : {
            flexDirection: 'row'
          };
          var childStyle = isHorizontal ? {
            flexDirection: 'row',
            flex: 1
          } : {
            flexDirection: 'column'
          };
          var styleSuffix = '';

          if (isHorizontal) {
            styleSuffix = '_h';
          }

          return _react2['default'].createElement(_reactNative.View, {
            style: parentStyle
          }, _react2['default'].createElement(_reactNative.View, {
            style: childStyle
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles['head_default' + sizeCls], styles[headCls]]
          }, _react2['default'].isValidElement(iconSource) ? iconSource : null), _react2['default'].createElement(_reactNative.View, {
            style: [styles['tail_default' + sizeCls + styleSuffix], styles[tailTopCls]]
          }), _react2['default'].createElement(_reactNative.View, {
            style: [styles['tail_default' + sizeCls + styleSuffix], styles[tailBottomCls]]
          })), _react2['default'].createElement(_reactNative.View, {
            style: styles['content' + sizeCls + styleSuffix]
          }, (typeof title === 'undefined' ? 'undefined' : (0, _typeof3['default'])(title)) !== 'object' ? _react2['default'].createElement(_reactNative.Text, {
            style: [styles['title' + sizeCls]]
          }, title) : _react2['default'].createElement(_reactNative.View, null, title), (typeof description === 'undefined' ? 'undefined' : (0, _typeof3['default'])(description)) !== 'object' ? _react2['default'].createElement(_reactNative.Text, {
            style: [styles['description' + sizeCls]]
          }, description) : _react2['default'].createElement(_reactNative.View, null, description)));
        });
      }
    }]);
    return StepsItem;
  }(_react2['default'].Component);

  exports['default'] = StepsItem;
  module.exports = exports['default'];
},734,[538,532,533,537,571,49,2,582,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var grid = 4;

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      head_default_s: {
        width: 18,
        height: 18,
        backgroundColor: theme.fill_base,
        borderRadius: 18,
        borderWidth: theme.border_width_lg,
        borderColor: theme.brand_primary,
        borderStyle: 'solid',
        overflow: 'hidden'
      },
      head_blue_s: {
        borderColor: theme.brand_primary
      },
      head_gray_s: {
        borderColor: theme.color_text_placeholder
      },
      head_red_s: {
        borderColor: theme.brand_error
      },
      icon_s: {
        fontSize: 14
      },
      head_default_l: {
        width: 24,
        height: 24,
        backgroundColor: theme.fill_base,
        borderRadius: 18,
        borderWidth: theme.border_width_lg,
        borderColor: theme.brand_primary,
        borderStyle: 'solid',
        overflow: 'hidden'
      },
      head_blue_l: {
        borderColor: theme.brand_primary,
        backgroundColor: theme.brand_primary
      },
      head_gray_l: {
        borderColor: theme.color_text_placeholder,
        backgroundColor: theme.color_text_placeholder
      },
      head_red_l: {
        borderColor: theme.brand_error,
        backgroundColor: theme.brand_error
      },
      tail_default_l: {
        width: theme.border_width_lg,
        height: 30,
        marginLeft: 11
      },
      icon_l: {
        fontSize: 20
      },
      tail_default_s: {
        width: theme.border_width_lg,
        height: 30,
        marginLeft: 8
      },
      tail_default_s_h: {
        height: theme.border_width_lg,
        width: 50,
        marginTop: 8
      },
      tail_gray: {
        backgroundColor: theme.color_text_placeholder
      },
      tail_blue: {
        backgroundColor: theme.brand_primary
      },
      tail_error: {
        backgroundColor: theme.brand_error
      },
      tail_last: {
        backgroundColor: 'transparent'
      },
      content_s: {
        paddingLeft: theme.h_spacing_md
      },
      content_s_h: {
        paddingTop: theme.v_spacing_md
      },
      content_l: {
        paddingLeft: theme.h_spacing_lg
      },
      title_s: {
        fontWeight: 'bold',
        fontSize: theme.font_size_caption,
        paddingBottom: theme.v_spacing_md,
        color: theme.color_text_base
      },
      description_s: {
        fontSize: theme.font_size_caption_sm,
        color: theme.color_text_base
      },
      title_l: {
        fontWeight: 'bold',
        fontSize: theme.font_size_heading,
        paddingBottom: theme.v_spacing_md,
        color: theme.color_text_base
      },
      description_l: {
        fontSize: theme.font_size_subhead,
        color: theme.color_text_base
      }
    });
  };

  module.exports = exports['default'];
},735,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _reactNativeSwipeout = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeSwipeout2 = _interopRequireDefault(_reactNativeSwipeout);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var SwipeAction = function (_React$Component) {
    (0, _inherits3['default'])(SwipeAction, _React$Component);

    function SwipeAction() {
      (0, _classCallCheck3['default'])(this, SwipeAction);
      return (0, _possibleConstructorReturn3['default'])(this, (SwipeAction.__proto__ || Object.getPrototypeOf(SwipeAction)).apply(this, arguments));
    }

    (0, _createClass3['default'])(SwipeAction, [{
      key: 'renderCustomButton',
      value: function renderCustomButton(button) {
        var buttonStyle = button.style;
        var bgColor = buttonStyle ? buttonStyle.backgroundColor : 'transparent';

        var Component = _react2['default'].createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: bgColor
          }
        }, _react2['default'].isValidElement(button.text) ? button.text : _react2['default'].createElement(_reactNative.Text, {
          style: [buttonStyle, {
            textAlign: 'center'
          }]
        }, button.text));

        return {
          text: button.text || 'Click',
          onPress: button.onPress,
          type: 'default',
          component: Component,
          backgroundColor: 'transparent',
          color: '#999',
          disabled: false
        };
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            disabled = _a.disabled,
            autoClose = _a.autoClose,
            style = _a.style,
            left = _a.left,
            right = _a.right,
            onOpen = _a.onOpen,
            onClose = _a.onClose,
            children = _a.children,
            restProps = __rest(_a, ["disabled", "autoClose", "style", "left", "right", "onOpen", "onClose", "children"]);

        var customLeft = left && left.map(function (btn) {
          return _this2.renderCustomButton(btn);
        });
        var customRight = right && right.map(function (btn) {
          return _this2.renderCustomButton(btn);
        });
        return customLeft || customRight ? _react2['default'].createElement(_reactNativeSwipeout2['default'], (0, _extends3['default'])({
          autoClose: autoClose,
          left: customLeft,
          right: customRight,
          style: style,
          onOpen: onOpen,
          onClose: onClose,
          disabled: disabled
        }, restProps), children) : _react2['default'].createElement(_reactNative.View, (0, _extends3['default'])({
          style: style
        }, restProps), children);
      }
    }]);
    return SwipeAction;
  }(_react2['default'].Component);

  SwipeAction.defaultProps = {
    autoClose: false,
    disabled: false,
    onOpen: function onOpen() {},
    onClose: function onClose() {}
  };
  exports['default'] = SwipeAction;
  module.exports = exports['default'];
},736,[493,532,533,537,571,49,2,737]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _reactTweenState = _$$_REQUIRE(_dependencyMap[0]);

  var _reactTweenState2 = _interopRequireDefault(_reactTweenState);

  var _NativeButton = _$$_REQUIRE(_dependencyMap[1]);

  var _NativeButton2 = _interopRequireDefault(_NativeButton);

  var _styles = _$$_REQUIRE(_dependencyMap[2]);

  var _styles2 = _interopRequireDefault(_styles);

  var _react = _$$_REQUIRE(_dependencyMap[3]);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = _$$_REQUIRE(_dependencyMap[4]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _createReactClass = _$$_REQUIRE(_dependencyMap[5]);

  var _createReactClass2 = _interopRequireDefault(_createReactClass);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var SwipeoutBtn = (0, _createReactClass2.default)({
    displayName: 'SwipeoutBtn',
    propTypes: {
      backgroundColor: _propTypes2.default.string,
      color: _propTypes2.default.string,
      component: _propTypes2.default.node,
      onPress: _propTypes2.default.func,
      text: _propTypes2.default.node,
      type: _propTypes2.default.string,
      underlayColor: _propTypes2.default.string
    },
    getDefaultProps: function getDefaultProps() {
      return {
        backgroundColor: null,
        color: null,
        component: null,
        underlayColor: null,
        height: 0,
        onPress: null,
        disabled: false,
        text: 'Click me',
        type: '',
        width: 0
      };
    },
    render: function render() {
      var btn = this.props;
      var styleSwipeoutBtn = [_styles2.default.swipeoutBtn];
      if (btn.type === 'delete') styleSwipeoutBtn.push(_styles2.default.colorDelete);else if (btn.type === 'primary') styleSwipeoutBtn.push(_styles2.default.colorPrimary);else if (btn.type === 'secondary') styleSwipeoutBtn.push(_styles2.default.colorSecondary);
      if (btn.backgroundColor) styleSwipeoutBtn.push([{
        backgroundColor: btn.backgroundColor
      }]);
      styleSwipeoutBtn.push([{
        height: btn.height,
        width: btn.width
      }]);
      var styleSwipeoutBtnComponent = [];
      styleSwipeoutBtnComponent.push([{
        height: btn.height,
        width: btn.width
      }]);
      var styleSwipeoutBtnText = [_styles2.default.swipeoutBtnText];
      if (btn.color) styleSwipeoutBtnText.push({
        color: btn.color
      });
      return _react2.default.createElement(_NativeButton2.default, {
        onPress: this.props.onPress,
        underlayColor: this.props.underlayColor,
        disabled: this.props.disabled,
        style: [_styles2.default.swipeoutBtnTouchable, styleSwipeoutBtn],
        textStyle: styleSwipeoutBtnText
      }, btn.component ? _react2.default.createElement(_reactNative.View, {
        style: styleSwipeoutBtnComponent
      }, btn.component) : btn.text);
    }
  });
  var Swipeout = (0, _createReactClass2.default)({
    displayName: 'Swipeout',
    mixins: [_reactTweenState2.default.Mixin],
    propTypes: {
      autoClose: _propTypes2.default.bool,
      backgroundColor: _propTypes2.default.string,
      close: _propTypes2.default.bool,
      left: _propTypes2.default.array,
      onOpen: _propTypes2.default.func,
      onClose: _propTypes2.default.func,
      right: _propTypes2.default.array,
      scroll: _propTypes2.default.func,
      style: (_reactNative.ViewPropTypes || _reactNative.View.propTypes).style,
      sensitivity: _propTypes2.default.number,
      buttonWidth: _propTypes2.default.number,
      disabled: _propTypes2.default.bool
    },
    getDefaultProps: function getDefaultProps() {
      return {
        disabled: false,
        rowID: -1,
        sectionID: -1,
        sensitivity: 50
      };
    },
    getInitialState: function getInitialState() {
      return {
        autoClose: this.props.autoClose || false,
        btnWidth: 0,
        btnsLeftWidth: 0,
        btnsRightWidth: 0,
        contentHeight: 0,
        contentPos: 0,
        contentWidth: 0,
        openedRight: false,
        swiping: false,
        tweenDuration: 160,
        timeStart: null
      };
    },
    componentWillMount: function componentWillMount() {
      var _this = this;

      this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(event, gestureState) {
          return _this.state.openedLeft || _this.state.openedRight;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(event, gestureState) {
          return Math.abs(gestureState.dx) > _this.props.sensitivity && Math.abs(gestureState.dy) <= _this.props.sensitivity;
        },
        onPanResponderGrant: this._handlePanResponderGrant,
        onPanResponderMove: this._handlePanResponderMove,
        onPanResponderRelease: this._handlePanResponderEnd,
        onPanResponderTerminate: this._handlePanResponderEnd,
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        }
      });
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      if (nextProps.close) this._close();
      if (nextProps.openRight) this._openRight();
      if (nextProps.openLeft) this._openLeft();
    },
    _handlePanResponderGrant: function _handlePanResponderGrant(e, gestureState) {
      var _this2 = this;

      if (this.props.disabled) return;

      if (!this.state.openedLeft && !this.state.openedRight) {
        this._callOnOpen();
      } else {
        this._callOnClose();
      }

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var buttonWidth = _this2.props.buttonWidth || width / 5;

        _this2.setState({
          btnWidth: buttonWidth,
          btnsLeftWidth: _this2.props.left ? buttonWidth * _this2.props.left.length : 0,
          btnsRightWidth: _this2.props.right ? buttonWidth * _this2.props.right.length : 0,
          swiping: true,
          timeStart: new Date().getTime()
        });
      });
    },
    _handlePanResponderMove: function _handlePanResponderMove(e, gestureState) {
      if (this.props.disabled) return;
      var posX = gestureState.dx;
      var posY = gestureState.dy;
      var leftWidth = this.state.btnsLeftWidth;
      var rightWidth = this.state.btnsRightWidth;
      if (this.state.openedRight) var posX = gestureState.dx - rightWidth;else if (this.state.openedLeft) var posX = gestureState.dx + leftWidth;
      var moveX = Math.abs(posX) > Math.abs(posY);

      if (this.props.scroll) {
        if (moveX) this.props.scroll(false);else this.props.scroll(true);
      }

      if (this.state.swiping) {
        if (posX < 0 && this.props.right) {
          this.setState({
            contentPos: Math.min(posX, 0)
          });
        } else if (posX > 0 && this.props.left) {
          this.setState({
            contentPos: Math.max(posX, 0)
          });
        }

        ;
      }
    },
    _handlePanResponderEnd: function _handlePanResponderEnd(e, gestureState) {
      if (this.props.disabled) return;
      var posX = gestureState.dx;
      var contentPos = this.state.contentPos;
      var contentWidth = this.state.contentWidth;
      var btnsLeftWidth = this.state.btnsLeftWidth;
      var btnsRightWidth = this.state.btnsRightWidth;
      var openX = contentWidth * 0.33;
      var openLeft = posX > openX || posX > btnsLeftWidth / 2;
      var openRight = posX < -openX || posX < -btnsRightWidth / 2;
      if (this.state.openedRight) var openRight = posX - openX < -openX;
      if (this.state.openedLeft) var openLeft = posX + openX > openX;
      var timeDiff = new Date().getTime() - this.state.timeStart < 200;

      if (timeDiff) {
        var openRight = posX < -openX / 10 && !this.state.openedLeft;
        var openLeft = posX > openX / 10 && !this.state.openedRight;
      }

      if (this.state.swiping) {
        if (openRight && contentPos < 0 && posX < 0) {
          this._open(-btnsRightWidth, 'right');
        } else if (openLeft && contentPos > 0 && posX > 0) {
          this._open(btnsLeftWidth, 'left');
        } else {
          this._close();
        }
      }

      if (this.props.scroll) this.props.scroll(true);
    },
    _tweenContent: function _tweenContent(state, endValue) {
      this.tweenState(state, {
        easing: _reactTweenState2.default.easingTypes.easeInOutQuad,
        duration: endValue === 0 ? this.state.tweenDuration * 1.5 : this.state.tweenDuration,
        endValue: endValue
      });
    },
    _rubberBandEasing: function _rubberBandEasing(value, limit) {
      if (value < 0 && value < limit) return limit - Math.pow(limit - value, 0.85);else if (value > 0 && value > limit) return limit + Math.pow(value - limit, 0.85);
      return value;
    },
    _autoClose: function _autoClose(btn) {
      if (this.state.autoClose) this._close();
      var onPress = btn.onPress;
      if (onPress) onPress();
    },
    _open: function _open(contentPos, direction) {
      var left = direction === 'left';
      var _props = this.props,
          sectionID = _props.sectionID,
          rowID = _props.rowID,
          onOpen = _props.onOpen;
      onOpen && onOpen(sectionID, rowID, direction);

      this._tweenContent('contentPos', contentPos);

      this.setState({
        contentPos: contentPos,
        openedLeft: left,
        openedRight: !left,
        swiping: false
      });
    },
    _close: function _close() {
      var _props2 = this.props,
          sectionID = _props2.sectionID,
          rowID = _props2.rowID,
          onClose = _props2.onClose;

      if (onClose && (this.state.openedLeft || this.state.openedRight)) {
        var direction = this.state.openedRight ? 'right' : 'left';
        onClose(sectionID, rowID, direction);
      }

      this._tweenContent('contentPos', 0);

      this._callOnClose();

      this.setState({
        openedRight: false,
        openedLeft: false,
        swiping: false
      });
    },
    _callOnClose: function _callOnClose() {
      if (this.props.onClose) this.props.onClose(this.props.sectionID, this.props.rowID);
    },
    _callOnOpen: function _callOnOpen() {
      if (this.props.onOpen) this.props.onOpen(this.props.sectionID, this.props.rowID);
    },
    _openRight: function _openRight() {
      var _this3 = this;

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var btnWidth = _this3.props.buttonWidth || width / 5;

        _this3.setState({
          btnWidth: btnWidth,
          btnsRightWidth: _this3.props.right ? btnWidth * _this3.props.right.length : 0
        }, function () {
          _this3._tweenContent('contentPos', -_this3.state.btnsRightWidth);

          _this3._callOnOpen();

          _this3.setState({
            contentPos: -_this3.state.btnsRightWidth,
            openedLeft: false,
            openedRight: true,
            swiping: false
          });
        });
      });
    },
    _openLeft: function _openLeft() {
      var _this4 = this;

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var btnWidth = _this4.props.buttonWidth || width / 5;

        _this4.setState({
          btnWidth: btnWidth,
          btnsLeftWidth: _this4.props.left ? btnWidth * _this4.props.left.length : 0
        }, function () {
          _this4._tweenContent('contentPos', _this4.state.btnsLeftWidth);

          _this4._callOnOpen();

          _this4.setState({
            contentPos: _this4.state.btnsLeftWidth,
            openedLeft: true,
            openedRight: false,
            swiping: false
          });
        });
      });
    },
    render: function render() {
      var contentWidth = this.state.contentWidth;
      var posX = this.getTweeningValue('contentPos');
      var styleSwipeout = [_styles2.default.swipeout, this.props.style];

      if (this.props.backgroundColor) {
        styleSwipeout.push([{
          backgroundColor: this.props.backgroundColor
        }]);
      }

      var limit = -this.state.btnsRightWidth;
      if (posX > 0) var limit = this.state.btnsLeftWidth;
      var styleLeftPos = {
        left: {
          left: 0,
          overflow: 'hidden',
          width: Math.min(limit * (posX / limit), limit)
        }
      };
      var styleRightPos = {
        right: {
          left: Math.abs(contentWidth + Math.max(limit, posX)),
          right: 0
        }
      };
      var styleContentPos = {
        content: {
          transform: [{
            translateX: this._rubberBandEasing(posX, limit)
          }]
        }
      };
      var styleContent = [_styles2.default.swipeoutContent];
      styleContent.push(styleContentPos.content);
      var styleRight = [_styles2.default.swipeoutBtns];
      styleRight.push(styleRightPos.right);
      var styleLeft = [_styles2.default.swipeoutBtns];
      styleLeft.push(styleLeftPos.left);
      var isRightVisible = posX < 0;
      var isLeftVisible = posX > 0;
      return _react2.default.createElement(_reactNative.View, {
        style: styleSwipeout
      }, _react2.default.createElement(_reactNative.View, _extends({
        ref: 'swipeoutContent',
        style: styleContent,
        onLayout: this._onLayout
      }, this._panResponder.panHandlers), this.props.children), this._renderButtons(this.props.right, isRightVisible, styleRight), this._renderButtons(this.props.left, isLeftVisible, styleLeft));
    },
    _onLayout: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      this.setState({
        contentWidth: width,
        contentHeight: height
      });
    },
    _renderButtons: function _renderButtons(buttons, isVisible, style) {
      if (buttons && isVisible) {
        return _react2.default.createElement(_reactNative.View, {
          style: style
        }, buttons.map(this._renderButton));
      } else {
        return _react2.default.createElement(_reactNative.View, null);
      }
    },
    _renderButton: function _renderButton(btn, i) {
      var _this5 = this;

      return _react2.default.createElement(SwipeoutBtn, {
        backgroundColor: btn.backgroundColor,
        color: btn.color,
        component: btn.component,
        disabled: btn.disabled,
        height: this.state.contentHeight,
        key: i,
        onPress: function onPress() {
          return _this5._autoClose(btn);
        },
        text: btn.text,
        type: btn.type,
        underlayColor: btn.underlayColor,
        width: this.state.btnWidth
      });
    }
  });
  Swipeout.NativeButton = _NativeButton2.default;
  Swipeout.SwipeoutButton = SwipeoutBtn;
  exports.default = Swipeout;
},737,[738,739,740,49,61,194,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  !function (e, n) {
    "object" == typeof exports && "object" == typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define([], n) : "object" == typeof exports ? exports.tweenState = n() : e.tweenState = n();
  }(this, function () {
    return function (e) {
      function n(r) {
        if (t[r]) return t[r].exports;
        var a = t[r] = {
          exports: {},
          id: r,
          loaded: false
        };
        return e[r].call(a.exports, a, a.exports, n), a.loaded = true, a.exports;
      }

      var t = {};
      return n.m = e, n.c = t, n.p = "", n(0);
    }({
      0: function _(e, n, t) {
        e.exports = t(90);
      },
      1: function _(e, n) {
        function t() {
          c = false, o.length ? s = o.concat(s) : f = -1, s.length && r();
        }

        function r() {
          if (!c) {
            var e = setTimeout(t);
            c = true;

            for (var n = s.length; n;) {
              for (o = s, s = []; ++f < n;) {
                o && o[f].run();
              }

              f = -1, n = s.length;
            }

            o = null, c = false, clearTimeout(e);
          }
        }

        function a(e, n) {
          this.fun = e, this.array = n;
        }

        function u() {}

        var o,
            i = e.exports = {},
            s = [],
            c = false,
            f = -1;
        i.nextTick = function (e) {
          var n = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var t = 1; t < arguments.length; t++) {
            n[t - 1] = arguments[t];
          }
          s.push(new a(e, n)), 1 !== s.length || c || setTimeout(r, 0);
        }, a.prototype.run = function () {
          this.fun.apply(null, this.array);
        }, i.title = "browser", i.browser = true, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = u, i.addListener = u, i.once = u, i.off = u, i.removeListener = u, i.removeAllListeners = u, i.emit = u, i.binding = function (e) {
          throw new Error("process.binding is not supported");
        }, i.cwd = function () {
          return "/";
        }, i.chdir = function (e) {
          throw new Error("process.chdir is not supported");
        }, i.umask = function () {
          return 0;
        };
      },
      90: function _(e, n, t) {
        "use strict";

        function r(e) {
          return e && e.__esModule ? e : {
            "default": e
          };
        }

        Object.defineProperty(n, "__esModule", {
          value: true
        });
        var a = t(165),
            u = r(a),
            o = t(91),
            i = r(o),
            s = "ADDITIVE",
            c = a.easeInOutQuad,
            f = 300,
            l = 0,
            h = {
          ADDITIVE: "ADDITIVE",
          DESTRUCTIVE: "DESTRUCTIVE"
        },
            v = {
          _rafID: null,
          getInitialState: function getInitialState() {
            return {
              tweenQueue: []
            };
          },
          componentWillUnmount: function componentWillUnmount() {
            i["default"].cancel(this._rafID), this._rafID = -1;
          },
          tweenState: function tweenState(e, n) {
            var t = this,
                r = n.easing,
                a = n.duration,
                u = n.delay,
                o = n.beginValue,
                v = n.endValue,
                d = n.onEnd,
                p = n.stackBehavior;
            this.setState(function (n) {
              var I = n,
                  w = undefined,
                  g = undefined;
              if ("string" == typeof e) w = e, g = e;else {
                for (var M = 0; M < e.length - 1; M++) {
                  I = I[e[M]];
                }

                w = e[e.length - 1], g = e.join("|");
              }
              var m = {
                easing: r || c,
                duration: null == a ? f : a,
                delay: null == u ? l : u,
                beginValue: null == o ? I[w] : o,
                endValue: v,
                onEnd: d,
                stackBehavior: p || s
              },
                  x = n.tweenQueue;
              return m.stackBehavior === h.DESTRUCTIVE && (x = n.tweenQueue.filter(function (e) {
                return e.pathHash !== g;
              })), x.push({
                pathHash: g,
                config: m,
                initTime: Date.now() + m.delay
              }), I[w] = m.endValue, 1 === x.length && (t._rafID = (0, i["default"])(t._rafCb)), {
                tweenQueue: x
              };
            });
          },
          getTweeningValue: function getTweeningValue(e) {
            var n = this.state,
                t = undefined,
                r = undefined;
            if ("string" == typeof e) t = n[e], r = e;else {
              t = n;

              for (var a = 0; a < e.length; a++) {
                t = t[e[a]];
              }

              r = e.join("|");
            }

            for (var u = Date.now(), a = 0; a < n.tweenQueue.length; a++) {
              var o = n.tweenQueue[a],
                  i = o.pathHash,
                  s = o.initTime,
                  c = o.config;

              if (i === r) {
                var f = u - s > c.duration ? c.duration : Math.max(0, u - s),
                    l = 0 === c.duration ? c.endValue : c.easing(f, c.beginValue, c.endValue, c.duration),
                    h = l - c.endValue;
                t += h;
              }
            }

            return t;
          },
          _rafCb: function _rafCb() {
            var e = this.state;

            if (0 !== e.tweenQueue.length) {
              for (var n = Date.now(), t = [], r = 0; r < e.tweenQueue.length; r++) {
                var a = e.tweenQueue[r],
                    u = a.initTime,
                    o = a.config;
                n - u < o.duration ? t.push(a) : o.onEnd && o.onEnd();
              }

              -1 !== this._rafID && (this.setState({
                tweenQueue: t
              }), this._rafID = (0, i["default"])(this._rafCb));
            }
          }
        };
        n["default"] = {
          Mixin: v,
          easingTypes: u["default"],
          stackBehavior: h
        }, e.exports = n["default"];
      },
      91: function _(e, n, t) {
        for (var r = t(92), a = "undefined" == typeof window ? {} : window, u = ["moz", "webkit"], o = "AnimationFrame", i = a["requestAnimationFrame"], s = a["cancelAnimationFrame"] || a["cancelRequestAnimationFrame"], c = 0; c < u.length && !i; c++) {
          i = a[u[c] + "Request" + o], s = a[u[c] + "Cancel" + o] || a[u[c] + "CancelRequest" + o];
        }

        if (!i || !s) {
          var f = 0,
              l = 0,
              h = [],
              v = 16.666666666666668;
          i = function i(e) {
            if (0 === h.length) {
              var n = r(),
                  t = Math.max(0, v - (n - f));
              f = t + n, setTimeout(function () {
                var e = h.slice(0);
                h.length = 0;

                for (var n = 0; n < e.length; n++) {
                  if (!e[n].cancelled) try {
                    e[n].callback(f);
                  } catch (t) {
                    setTimeout(function () {
                      throw t;
                    }, 0);
                  }
                }
              }, Math.round(t));
            }

            return h.push({
              handle: ++l,
              callback: e,
              cancelled: false
            }), l;
          }, s = function s(e) {
            for (var n = 0; n < h.length; n++) {
              h[n].handle === e && (h[n].cancelled = true);
            }
          };
        }

        e.exports = function (e) {
          return i.call(a, e);
        }, e.exports.cancel = function () {
          s.apply(a, arguments);
        };
      },
      92: function _(e, n, t) {
        (function (n) {
          (function () {
            var t, r, a;
            "undefined" != typeof performance && null !== performance && performance.now ? e.exports = function () {
              return performance.now();
            } : "undefined" != typeof n && null !== n && n.hrtime ? (e.exports = function () {
              return (t() - a) / 1e6;
            }, r = n.hrtime, t = function t() {
              var e;
              return e = r(), 1e9 * e[0] + e[1];
            }, a = t()) : Date.now ? (e.exports = function () {
              return Date.now() - a;
            }, a = Date.now()) : (e.exports = function () {
              return new Date().getTime() - a;
            }, a = new Date().getTime());
          }).call(this);
        }).call(n, t(1));
      },
      165: function _(e, n) {
        "use strict";

        var t = {
          linear: function linear(e, n, t, r) {
            var a = t - n;
            return a * e / r + n;
          },
          easeInQuad: function easeInQuad(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e + n;
          },
          easeOutQuad: function easeOutQuad(e, n, t, r) {
            var a = t - n;
            return -a * (e /= r) * (e - 2) + n;
          },
          easeInOutQuad: function easeInOutQuad(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e + n : -a / 2 * (--e * (e - 2) - 1) + n;
          },
          easeInCubic: function easeInCubic(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e + n;
          },
          easeOutCubic: function easeOutCubic(e, n, t, r) {
            var a = t - n;
            return a * ((e = e / r - 1) * e * e + 1) + n;
          },
          easeInOutCubic: function easeInOutCubic(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e + n : a / 2 * ((e -= 2) * e * e + 2) + n;
          },
          easeInQuart: function easeInQuart(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e * e + n;
          },
          easeOutQuart: function easeOutQuart(e, n, t, r) {
            var a = t - n;
            return -a * ((e = e / r - 1) * e * e * e - 1) + n;
          },
          easeInOutQuart: function easeInOutQuart(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e * e + n : -a / 2 * ((e -= 2) * e * e * e - 2) + n;
          },
          easeInQuint: function easeInQuint(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e * e * e + n;
          },
          easeOutQuint: function easeOutQuint(e, n, t, r) {
            var a = t - n;
            return a * ((e = e / r - 1) * e * e * e * e + 1) + n;
          },
          easeInOutQuint: function easeInOutQuint(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e * e * e + n : a / 2 * ((e -= 2) * e * e * e * e + 2) + n;
          },
          easeInSine: function easeInSine(e, n, t, r) {
            var a = t - n;
            return -a * Math.cos(e / r * (Math.PI / 2)) + a + n;
          },
          easeOutSine: function easeOutSine(e, n, t, r) {
            var a = t - n;
            return a * Math.sin(e / r * (Math.PI / 2)) + n;
          },
          easeInOutSine: function easeInOutSine(e, n, t, r) {
            var a = t - n;
            return -a / 2 * (Math.cos(Math.PI * e / r) - 1) + n;
          },
          easeInExpo: function easeInExpo(e, n, t, r) {
            var a = t - n;
            return 0 == e ? n : a * Math.pow(2, 10 * (e / r - 1)) + n;
          },
          easeOutExpo: function easeOutExpo(e, n, t, r) {
            var a = t - n;
            return e == r ? n + a : a * (-Math.pow(2, -10 * e / r) + 1) + n;
          },
          easeInOutExpo: function easeInOutExpo(e, n, t, r) {
            var a = t - n;
            return 0 === e ? n : e === r ? n + a : (e /= r / 2) < 1 ? a / 2 * Math.pow(2, 10 * (e - 1)) + n : a / 2 * (-Math.pow(2, -10 * --e) + 2) + n;
          },
          easeInCirc: function easeInCirc(e, n, t, r) {
            var a = t - n;
            return -a * (Math.sqrt(1 - (e /= r) * e) - 1) + n;
          },
          easeOutCirc: function easeOutCirc(e, n, t, r) {
            var a = t - n;
            return a * Math.sqrt(1 - (e = e / r - 1) * e) + n;
          },
          easeInOutCirc: function easeInOutCirc(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? -a / 2 * (Math.sqrt(1 - e * e) - 1) + n : a / 2 * (Math.sqrt(1 - (e -= 2) * e) + 1) + n;
          },
          easeInElastic: function easeInElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 1 === (e /= r) ? n + i : (u || (u = .3 * r), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), -(a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u)) + n);
          },
          easeOutElastic: function easeOutElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 1 === (e /= r) ? n + i : (u || (u = .3 * r), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), a * Math.pow(2, -10 * e) * Math.sin((e * r - o) * (2 * Math.PI) / u) + i + n);
          },
          easeInOutElastic: function easeInOutElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 2 === (e /= r / 2) ? n + i : (u || (u = r * 0.44999999999999996), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), 1 > e ? -0.5 * (a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u)) + n : a * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u) * .5 + i + n);
          },
          easeInBack: function easeInBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), u * (e /= r) * e * ((a + 1) * e - a) + n;
          },
          easeOutBack: function easeOutBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), u * ((e = e / r - 1) * e * ((a + 1) * e + a) + 1) + n;
          },
          easeInOutBack: function easeInOutBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), (e /= r / 2) < 1 ? u / 2 * (e * e * (((a *= 1.525) + 1) * e - a)) + n : u / 2 * ((e -= 2) * e * (((a *= 1.525) + 1) * e + a) + 2) + n;
          },
          easeInBounce: function easeInBounce(e, n, r, a) {
            var u,
                o = r - n;
            return u = t.easeOutBounce(a - e, 0, o, a), o - u + n;
          },
          easeOutBounce: function easeOutBounce(e, n, t, r) {
            var a = t - n;
            return (e /= r) < 0.36363636363636365 ? a * (7.5625 * e * e) + n : 0.7272727272727273 > e ? a * (7.5625 * (e -= 0.5454545454545454) * e + .75) + n : 0.9090909090909091 > e ? a * (7.5625 * (e -= 0.8181818181818182) * e + .9375) + n : a * (7.5625 * (e -= 0.9545454545454546) * e + .984375) + n;
          },
          easeInOutBounce: function easeInOutBounce(e, n, r, a) {
            var u,
                o = r - n;
            return a / 2 > e ? (u = t.easeInBounce(2 * e, 0, o, a), .5 * u + n) : (u = t.easeOutBounce(2 * e - a, 0, o, a), .5 * u + .5 * o + n);
          }
        };
        e.exports = t;
      }
    });
  });
},738,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _react = _$$_REQUIRE(_dependencyMap[1]);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = _$$_REQUIRE(_dependencyMap[2]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _createReactClass2 = _interopRequireDefault(_createReactClass);

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var styles = _reactNative.StyleSheet.create({
    button: {
      flexDirection: 'row',
      alignSelf: 'stretch',
      justifyContent: 'center'
    },
    textButton: {
      fontSize: 14,
      alignSelf: 'center'
    },
    opacity: {
      opacity: 0.8
    }
  });

  var NativeButton = (0, _createReactClass2.default)({
    displayName: 'NativeButton',
    propTypes: _extends({}, _reactNative.TouchableWithoutFeedback.propTypes, {
      textStyle: _propTypes2.default.any,
      disabledStyle: _propTypes2.default.any,
      children: _propTypes2.default.node.isRequired,
      underlayColor: _propTypes2.default.string,
      background: _propTypes2.default.any
    }),
    statics: {
      isAndroid: _reactNative.Platform.OS === 'android'
    },
    getDefaultProps: function getDefaultProps() {
      return {
        textStyle: null,
        disabledStyle: null,
        underlayColor: null
      };
    },
    _renderText: function _renderText() {
      if (typeof this.props.children !== 'string') {
        return this.props.children;
      }

      return _react2.default.createElement(_reactNative.Text, {
        numberOfLines: 1,
        ellipsizeMode: _reactNative.Platform.OS === 'ios' ? 'clip' : 'tail',
        style: [styles.textButton, this.props.textStyle]
      }, this.props.children);
    },
    render: function render() {
      var disabledStyle = this.props.disabled ? this.props.disabledStyle || styles.opacity : {};
      var buttonProps = {
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        accessible: this.props.accessible,
        delayLongPress: this.props.delayLongPress,
        delayPressIn: this.props.delayPressIn,
        delayPressOut: this.props.delayPressOut,
        disabled: this.props.disabled,
        hitSlop: this.props.hitSlop,
        onLayout: this.props.onLayout,
        onPress: this.props.onPress,
        onPressIn: this.props.onPressIn,
        onPressOut: this.props.onPressOut,
        onLongPress: this.props.onLongPress,
        pressRetentionOffset: this.props.pressRetentionOffset
      };

      if (NativeButton.isAndroid) {
        buttonProps = _extends2(buttonProps, {
          background: this.props.background || _reactNative.TouchableNativeFeedback.SelectableBackground()
        });
        return _react2.default.createElement(_reactNative.TouchableNativeFeedback, buttonProps, _react2.default.createElement(_reactNative.View, {
          style: [styles.button, this.props.style, disabledStyle]
        }, this._renderText()));
      }

      return _react2.default.createElement(_reactNative.TouchableHighlight, _extends({}, buttonProps, {
        style: [styles.button, this.props.style, disabledStyle],
        underlayColor: this.props.underlayColor
      }), this._renderText());
    }
  });
  exports.default = NativeButton;
},739,[11,49,61,194,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var styles = _reactNative.StyleSheet.create({
    swipeout: {
      backgroundColor: '#dbddde',
      overflow: 'hidden'
    },
    swipeoutBtnTouchable: {
      flex: 1
    },
    swipeoutBtn: {
      alignItems: 'center',
      backgroundColor: '#b6bec0',
      flex: 1,
      justifyContent: 'center',
      overflow: 'hidden'
    },
    swipeoutBtnText: {
      color: '#fff',
      textAlign: 'center'
    },
    swipeoutBtns: {
      bottom: 0,
      flex: 1,
      flexDirection: 'row',
      position: 'absolute',
      right: 0,
      top: 0
    },
    swipeoutContent: {},
    colorDelete: {
      backgroundColor: '#fb3d38'
    },
    colorPrimary: {
      backgroundColor: '#006fff'
    },
    colorSecondary: {
      backgroundColor: '#fd9427'
    }
  });

  exports.default = styles;
},740,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var AntmSwitch = function AntmSwitch(props) {
    var style = props.style,
        onChange = props.onChange,
        _props$checked = props.checked,
        checked = _props$checked === undefined ? false : _props$checked,
        _props$disabled = props.disabled,
        disabled = _props$disabled === undefined ? false : _props$disabled,
        _props$color = props.color,
        color = _props$color === undefined ? '#4dd865' : _props$color;
    return _react2['default'].createElement(_reactNative.Switch, {
      style: style,
      onValueChange: onChange,
      value: checked,
      disabled: disabled,
      onTintColor: color
    });
  };

  exports['default'] = AntmSwitch;
  module.exports = exports['default'];
},741,[49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _reactNativeSafeAreaView = _$$_REQUIRE(_dependencyMap[6]);

  var _reactNativeSafeAreaView2 = _interopRequireDefault(_reactNativeSafeAreaView);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  var _TabBarItem = _$$_REQUIRE(_dependencyMap[9]);

  var _TabBarItem2 = _interopRequireDefault(_TabBarItem);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var TabBar = function (_React$Component) {
    (0, _inherits3['default'])(TabBar, _React$Component);

    function TabBar() {
      (0, _classCallCheck3['default'])(this, TabBar);
      return (0, _possibleConstructorReturn3['default'])(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).apply(this, arguments));
    }

    (0, _createClass3['default'])(TabBar, [{
      key: 'getPanes',
      value: function getPanes(styles, content) {
        var _props = this.props,
            tintColor = _props.tintColor,
            unselectedTintColor = _props.unselectedTintColor,
            children = _props.children;
        var selectedIndex = 0;
        [].concat(children).forEach(function (child, idx) {
          if (child.props.selected) {
            selectedIndex = idx;
          }
        });
        var newChildren = [];

        _react2['default'].Children.map(children, function (child, idx) {
          if (content && selectedIndex === idx) {
            newChildren.push(_react2['default'].createElement(_reactNative.View, {
              key: idx,
              style: [styles.contentItem, idx === selectedIndex ? styles.contentItemSelected : undefined]
            }, child.props.children));
          } else {
            newChildren.push(_react2['default'].cloneElement(child, {
              key: idx,
              tintColor: tintColor,
              unselectedTintColor: unselectedTintColor,
              styles: styles
            }));
          }
        });

        if (content) {
          return newChildren.filter(function (_, i) {
            return i === selectedIndex;
          });
        }

        return newChildren;
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var style = {
          backgroundColor: this.props.barTintColor
        };
        return _react2['default'].createElement(_reactNativeSafeAreaView2['default'], {
          forceInset: {
            bottom: 'always',
            top: 'never'
          },
          style: [{
            flex: 1
          }, style]
        }, _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          return _react2['default'].createElement(_reactNative.View, {
            style: styles.tabbar
          }, _react2['default'].createElement(_reactNative.View, {
            style: styles.content
          }, _this2.getPanes(styles, true)), _react2['default'].createElement(_reactNative.View, {
            style: [style, styles.tabs]
          }, _this2.getPanes(styles, false)));
        }));
      }
    }]);
    return TabBar;
  }(_react2['default'].Component);

  TabBar.defaultProps = {
    barTintColor: 'white',
    tintColor: '#108ee9',
    unselectedTintColor: '#888'
  };
  TabBar.Item = _TabBarItem2['default'];
  exports['default'] = TabBar;
  module.exports = exports['default'];
},742,[532,533,537,571,49,2,743,587,745,746]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withSafeArea = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _withOrientation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XSMAX_WIDTH = 414;
  var XSMAX_HEIGHT = 896;
  var PAD_WIDTH = 768;
  var PAD_HEIGHT = 1024;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      D_HEIGHT = _Dimensions$get.height,
      D_WIDTH = _Dimensions$get.width;

  var _NativeModules$Platfo = _reactNative.NativeModules.PlatformConstants,
      PlatformConstants = _NativeModules$Platfo === undefined ? {} : _NativeModules$Platfo;

  var _ref = PlatformConstants.reactNativeVersion || {},
      _ref$minor = _ref.minor,
      minor = _ref$minor === undefined ? 0 : _ref$minor;

  var isIPhoneX = function () {
    if (_reactNative.Platform.OS === 'web') return false;
    return _reactNative.Platform.OS === 'ios' && (D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH || D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT) || D_HEIGHT === XSMAX_HEIGHT && D_WIDTH === XSMAX_WIDTH || D_HEIGHT === XSMAX_WIDTH && D_WIDTH === XSMAX_HEIGHT;
  }();

  var isIPad = function () {
    if (_reactNative.Platform.OS !== 'ios' || isIPhoneX) return false;

    if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
      return false;
    }

    if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
      return false;
    }

    return true;
  }();

  var _customStatusBarHeight = null;

  var statusBarHeight = function statusBarHeight(isLandscape) {
    if (_customStatusBarHeight !== null) {
      return _customStatusBarHeight;
    }

    if (_reactNative.Platform.OS === 'android') {
      if (global.Expo) {
        return global.Expo.Constants.statusBarHeight;
      } else {
        return 0;
      }
    }

    if (isIPhoneX) {
      return isLandscape ? 0 : 44;
    }

    if (isIPad) {
      return 20;
    }

    return isLandscape ? 0 : 20;
  };

  var doubleFromPercentString = function doubleFromPercentString(percent) {
    if (!percent.includes('%')) {
      return 0;
    }

    var dbl = parseFloat(percent) / 100;
    if (isNaN(dbl)) return 0;
    return dbl;
  };

  var SafeView = function (_Component) {
    (0, _inherits2.default)(SafeView, _Component);

    function SafeView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SafeView);

      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SafeView)).call.apply(_getPrototypeOf2, [this].concat(_args)));
      _this.state = {
        touchesTop: true,
        touchesBottom: true,
        touchesLeft: true,
        touchesRight: true,
        orientation: null,
        viewWidth: 0,
        viewHeight: 0
      };

      _this._onLayout = function () {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        if (!_this._isMounted) return;
        if (!_this.view) return;
        var isLandscape = _this.props.isLandscape;
        var orientation = _this.state.orientation;
        var newOrientation = isLandscape ? 'landscape' : 'portrait';

        if (orientation && orientation === newOrientation) {
          return;
        }

        var WIDTH = isLandscape ? X_HEIGHT : X_WIDTH;
        var HEIGHT = isLandscape ? X_WIDTH : X_HEIGHT;

        _this.view._component.measureInWindow(function (winX, winY, winWidth, winHeight) {
          var _this$props;

          if (!_this.view) {
            return;
          }

          var realY = winY;
          var realX = winX;

          if (realY >= HEIGHT) {
            realY = realY % HEIGHT;
          } else if (realY < 0) {
            realY = realY % HEIGHT + HEIGHT;
          }

          if (realX >= WIDTH) {
            realX = realX % WIDTH;
          } else if (realX < 0) {
            realX = realX % WIDTH + WIDTH;
          }

          var touchesTop = realY === 0;
          var touchesBottom = realY + winHeight >= HEIGHT;
          var touchesLeft = realX === 0;
          var touchesRight = realX + winWidth >= WIDTH;

          _this.setState({
            touchesTop: touchesTop,
            touchesBottom: touchesBottom,
            touchesLeft: touchesLeft,
            touchesRight: touchesRight,
            orientation: newOrientation,
            viewWidth: winWidth,
            viewHeight: winHeight
          });

          if (_this.props.onLayout) (_this$props = _this.props).onLayout.apply(_this$props, args);
        });
      };

      _this._getSafeAreaStyle = function () {
        var _this$state = _this.state,
            touchesTop = _this$state.touchesTop,
            touchesBottom = _this$state.touchesBottom,
            touchesLeft = _this$state.touchesLeft,
            touchesRight = _this$state.touchesRight;
        var _this$props2 = _this.props,
            forceInset = _this$props2.forceInset,
            isLandscape = _this$props2.isLandscape;

        var _this$_getViewStyles = _this._getViewStyles(),
            paddingTop = _this$_getViewStyles.paddingTop,
            paddingBottom = _this$_getViewStyles.paddingBottom,
            paddingLeft = _this$_getViewStyles.paddingLeft,
            paddingRight = _this$_getViewStyles.paddingRight,
            viewStyle = _this$_getViewStyles.viewStyle;

        var style = (0, _objectSpread2.default)({}, viewStyle, {
          paddingTop: touchesTop ? _this._getInset('top') : 0,
          paddingBottom: touchesBottom ? _this._getInset('bottom') : 0,
          paddingLeft: touchesLeft ? _this._getInset('left') : 0,
          paddingRight: touchesRight ? _this._getInset('right') : 0
        });

        if (forceInset) {
          Object.keys(forceInset).forEach(function (key) {
            var inset = forceInset[key];

            if (inset === 'always') {
              inset = _this._getInset(key);
            }

            if (inset === 'never') {
              inset = 0;
            }

            switch (key) {
              case 'horizontal':
                {
                  style.paddingLeft = inset;
                  style.paddingRight = inset;
                  break;
                }

              case 'vertical':
                {
                  style.paddingTop = inset;
                  style.paddingBottom = inset;
                  break;
                }

              case 'left':
              case 'right':
              case 'top':
              case 'bottom':
                {
                  var padding = "padding" + key[0].toUpperCase() + key.slice(1);
                  style[padding] = inset;
                  break;
                }
            }
          });
        }

        if (style.height && typeof style.height === 'number') {
          style.height += style.paddingTop + style.paddingBottom;
        }

        if (style.width && typeof style.width === 'number') {
          style.width += style.paddingLeft + style.paddingRight;
        }

        style.paddingTop = Math.max(style.paddingTop, paddingTop);
        style.paddingBottom = Math.max(style.paddingBottom, paddingBottom);
        style.paddingLeft = Math.max(style.paddingLeft, paddingLeft);
        style.paddingRight = Math.max(style.paddingRight, paddingRight);
        return style;
      };

      _this._getViewStyles = function () {
        var viewWidth = _this.state.viewWidth;

        var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(_this.props.style || {}),
            _StyleSheet$flatten$p = _StyleSheet$flatten.padding,
            padding = _StyleSheet$flatten$p === undefined ? 0 : _StyleSheet$flatten$p,
            _StyleSheet$flatten$p2 = _StyleSheet$flatten.paddingVertical,
            paddingVertical = _StyleSheet$flatten$p2 === undefined ? padding : _StyleSheet$flatten$p2,
            _StyleSheet$flatten$p3 = _StyleSheet$flatten.paddingHorizontal,
            paddingHorizontal = _StyleSheet$flatten$p3 === undefined ? padding : _StyleSheet$flatten$p3,
            _StyleSheet$flatten$p4 = _StyleSheet$flatten.paddingTop,
            paddingTop = _StyleSheet$flatten$p4 === undefined ? paddingVertical : _StyleSheet$flatten$p4,
            _StyleSheet$flatten$p5 = _StyleSheet$flatten.paddingBottom,
            paddingBottom = _StyleSheet$flatten$p5 === undefined ? paddingVertical : _StyleSheet$flatten$p5,
            _StyleSheet$flatten$p6 = _StyleSheet$flatten.paddingLeft,
            paddingLeft = _StyleSheet$flatten$p6 === undefined ? paddingHorizontal : _StyleSheet$flatten$p6,
            _StyleSheet$flatten$p7 = _StyleSheet$flatten.paddingRight,
            paddingRight = _StyleSheet$flatten$p7 === undefined ? paddingHorizontal : _StyleSheet$flatten$p7,
            viewStyle = (0, _objectWithoutProperties2.default)(_StyleSheet$flatten, ["padding", "paddingVertical", "paddingHorizontal", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight"]);

        if (typeof paddingTop !== 'number') {
          paddingTop = doubleFromPercentString(paddingTop) * viewWidth;
        }

        if (typeof paddingBottom !== 'number') {
          paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;
        }

        if (typeof paddingLeft !== 'number') {
          paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;
        }

        if (typeof paddingRight !== 'number') {
          paddingRight = doubleFromPercentString(paddingRight) * viewWidth;
        }

        return {
          paddingTop: paddingTop,
          paddingBottom: paddingBottom,
          paddingLeft: paddingLeft,
          paddingRight: paddingRight,
          viewStyle: viewStyle
        };
      };

      _this._getInset = function (key) {
        var isLandscape = _this.props.isLandscape;

        switch (key) {
          case 'horizontal':
          case 'right':
          case 'left':
            {
              return isLandscape ? isIPhoneX ? 44 : 0 : 0;
            }

          case 'vertical':
          case 'top':
            {
              return statusBarHeight(isLandscape);
            }

          case 'bottom':
            {
              return isIPhoneX ? isLandscape ? 24 : 34 : 0;
            }
        }
      };

      return _this;
    }

    (0, _createClass2.default)(SafeView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this._isMounted = true;

        _reactNative.InteractionManager.runAfterInteractions(function () {
          _this2._onLayout();
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._isMounted = false;
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps() {
        this._onLayout();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props3 = this.props,
            _this$props3$forceIns = _this$props3.forceInset,
            forceInset = _this$props3$forceIns === undefined ? false : _this$props3$forceIns,
            isLandscape = _this$props3.isLandscape,
            style = _this$props3.style,
            props = (0, _objectWithoutProperties2.default)(_this$props3, ["forceInset", "isLandscape", "style"]);

        var safeAreaStyle = this._getSafeAreaStyle();

        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          ref: function ref(c) {
            return _this3.view = c;
          },
          pointerEvents: "box-none"
        }, props, {
          onLayout: this._onLayout,
          style: safeAreaStyle
        }));
      }
    }]);
    return SafeView;
  }(_react.Component);

  SafeView.setStatusBarHeight = function (height) {
    _customStatusBarHeight = height;
  };

  var SafeAreaView = (0, _withOrientation.default)(SafeView);
  var _default = SafeAreaView;
  exports.default = _default;

  var withSafeArea = function withSafeArea() {
    var forceInset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return function (WrappedComponent) {
      var withSafeArea = function (_Component2) {
        (0, _inherits2.default)(withSafeArea, _Component2);

        function withSafeArea() {
          (0, _classCallCheck2.default)(this, withSafeArea);
          return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(withSafeArea).apply(this, arguments));
        }

        (0, _createClass2.default)(withSafeArea, [{
          key: "render",
          value: function render() {
            return _react.default.createElement(SafeAreaView, {
              style: {
                flex: 1
              },
              forceInset: forceInset
            }, _react.default.createElement(WrappedComponent, this.props));
          }
        }]);
        return withSafeArea;
      }(_react.Component);

      return (0, _hoistNonReactStatics.default)(withSafeArea, WrappedComponent);
    };
  };

  exports.withSafeArea = withSafeArea;
},743,[362,1,11,9,46,22,23,30,33,36,49,2,418,744]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _default;
  exports.isOrientationLandscape = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var isOrientationLandscape = function isOrientationLandscape(_ref) {
    var width = _ref.width,
        height = _ref.height;
    return width > height;
  };

  exports.isOrientationLandscape = isOrientationLandscape;

  function _default(WrappedComponent) {
    var withOrientation = function (_React$Component) {
      (0, _inherits2.default)(withOrientation, _React$Component);

      function withOrientation() {
        var _this;

        (0, _classCallCheck2.default)(this, withOrientation);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(withOrientation).call(this));

        _this.handleOrientationChange = function (_ref2) {
          var window = _ref2.window;
          var isLandscape = isOrientationLandscape(window);

          _this.setState({
            isLandscape: isLandscape
          });
        };

        var _isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));

        _this.state = {
          isLandscape: _isLandscape
        };
        return _this;
      }

      (0, _createClass2.default)(withOrientation, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (typeof _reactNative.Dimensions.addEventListener === 'function') {
            _reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (typeof _reactNative.Dimensions.removeEventListener === 'function') {
            _reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);
          }
        }
      }, {
        key: "render",
        value: function render() {
          return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.state));
        }
      }]);
      return withOrientation;
    }(React.Component);

    return (0, _hoistNonReactStatics.default)(withOrientation, WrappedComponent);
  }
},744,[362,1,11,22,23,30,33,36,49,2,418]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      tabbar: {
        flex: 1
      },
      content: {
        flex: 1
      },
      tabs: {
        height: theme.tab_bar_height,
        borderTopWidth: theme.border_width_md,
        borderColor: theme.border_color_base,
        borderStyle: 'solid',
        flexDirection: 'row'
      },
      barItem: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center'
      },
      barIcon: {
        width: 28,
        height: 28,
        marginTop: 2
      },
      barItemSelected: {},
      barItemTitle: {
        fontSize: theme.font_size_icontext,
        marginTop: 2
      },
      contentItem: {
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: 'white',
        height: 0
      },
      contentItemSelected: {
        height: undefined
      },
      badge: {
        minWidth: 20,
        height: 20,
        borderRadius: 10,
        backgroundColor: theme.brand_important,
        position: 'absolute',
        top: 0,
        left: 20,
        paddingHorizontal: theme.h_spacing_sm
      },
      badgeText: {
        textAlign: 'center',
        color: 'white'
      }
    });
  };

  module.exports = exports['default'];
},745,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _icon = _$$_REQUIRE(_dependencyMap[7]);

  var _icon2 = _interopRequireDefault(_icon);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var TabBarItem = function (_React$Component) {
    (0, _inherits3['default'])(TabBarItem, _React$Component);

    function TabBarItem() {
      (0, _classCallCheck3['default'])(this, TabBarItem);
      return (0, _possibleConstructorReturn3['default'])(this, (TabBarItem.__proto__ || Object.getPrototypeOf(TabBarItem)).apply(this, arguments));
    }

    (0, _createClass3['default'])(TabBarItem, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            title = _props.title,
            selected = _props.selected,
            tintColor = _props.tintColor,
            unselectedTintColor = _props.unselectedTintColor,
            icon = _props.icon,
            selectedIcon = _props.selectedIcon,
            onPress = _props.onPress,
            badge = _props.badge,
            iconStyle = _props.iconStyle;
        var styles = this.props.styles;
        var itemSelectedStyle = selected ? styles.barItemSelected : null;
        var badgeDom = badge ? _react2['default'].createElement(_reactNative.View, {
          style: [styles.badge]
        }, _react2['default'].createElement(_reactNative.Text, {
          style: [styles.badgeText]
        }, badge)) : null;
        var source = selected && selectedIcon !== undefined ? selectedIcon : icon !== undefined ? icon : null;
        var color = selected ? tintColor : unselectedTintColor;
        var isIcon = source && source.type && source.type.displayName === 'Icon';
        return _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: onPress
        }, _react2['default'].createElement(_reactNative.View, {
          style: [styles.barItem, itemSelectedStyle]
        }, _react2['default'].createElement(_reactNative.View, null, source === null ? null : (0, _react.isValidElement)(source) ? isIcon ? _react2['default'].createElement(_icon2['default'], (0, _extends3['default'])({
          color: color
        }, source.props)) : source : _react2['default'].createElement(_reactNative.Image, {
          source: source,
          style: [styles.barIcon, iconStyle]
        }), badgeDom), _react2['default'].createElement(_reactNative.Text, {
          style: [styles.barItemTitle, {
            color: color
          }]
        }, title)));
      }
    }]);
    return TabBarItem;
  }(_react2['default'].Component);

  exports['default'] = TabBarItem;
  TabBarItem.defaultProps = {
    onPress: function onPress() {}
  };
  module.exports = exports['default'];
},746,[493,532,533,537,571,49,2,582]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Tabs = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = _Tabs.Tabs;
  module.exports = exports['default'];
},747,[748]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Tabs = undefined;

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _view = _$$_REQUIRE(_dependencyMap[8]);

  var _view2 = _interopRequireDefault(_view);

  var _DefaultTabBar = _$$_REQUIRE(_dependencyMap[9]);

  var _tabs = _$$_REQUIRE(_dependencyMap[10]);

  var _tabs2 = _interopRequireDefault(_tabs);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var instanceId = 0;

  var Tabs = exports.Tabs = function (_React$PureComponent) {
    (0, _inherits3['default'])(Tabs, _React$PureComponent);

    function Tabs(props) {
      (0, _classCallCheck3['default'])(this, Tabs);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

      _this.tabCache = {};

      _this.setScrollView = function (sv) {
        _this.scrollView = sv;

        _this.scrollTo(_this.state.currentTab);
      };

      _this.renderContent = function () {
        var getSubElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.getSubElements();
        var _this$props = _this.props,
            tabs = _this$props.tabs,
            usePaged = _this$props.usePaged,
            destroyInactiveTab = _this$props.destroyInactiveTab,
            keyboardShouldPersistTaps = _this$props.keyboardShouldPersistTaps;
        var _this$state = _this.state,
            _this$state$currentTa = _this$state.currentTab,
            currentTab = _this$state$currentTa === undefined ? 0 : _this$state$currentTa,
            _this$state$container = _this$state.containerWidth,
            containerWidth = _this$state$container === undefined ? 0 : _this$state$container;
        var content = tabs.map(function (tab, index) {
          var key = tab.key || 'tab_' + index;

          if (_this.shouldRenderTab(index)) {
            _this.tabCache[index] = _this.getSubElement(tab, index, getSubElements);
          } else if (destroyInactiveTab) {
            _this.tabCache[index] = undefined;
          }

          return _react2['default'].createElement(_view2['default'], {
            key: key,
            style: {
              width: containerWidth
            }
          }, _this.tabCache[index]);
        });

        if (_reactNative.Platform.OS === 'android') {
          return _react2['default'].createElement(_reactNative.ViewPagerAndroid, {
            key: '$content',
            keyboardDismissMode: 'on-drag',
            initialPage: currentTab,
            scrollEnabled: _this.props.swipeable || usePaged,
            onPageScroll: function onPageScroll(e) {
              _this.state.scrollX.setValue(e.nativeEvent.position * _this.state.containerWidth);
            },
            style: {
              flex: 1
            },
            onPageSelected: function onPageSelected(e) {
              var index = e.nativeEvent.position;

              _this.setState({
                currentTab: index
              }, function () {
                _this.props.onChange && _this.props.onChange(tabs[index], index);
              });

              _this.nextCurrentTab = index;
            },
            ref: function ref(_ref) {
              return _this.viewPager = _ref;
            }
          }, content);
        }

        return _react2['default'].createElement(_reactNative.Animated.ScrollView, {
          key: '$content',
          horizontal: true,
          pagingEnabled: usePaged,
          automaticallyAdjustContentInsets: false,
          ref: _this.setScrollView,
          onScroll: _reactNative.Animated.event([{
            nativeEvent: {
              contentOffset: {
                x: _this.state.scrollX
              }
            }
          }], {
            useNativeDriver: true
          }),
          onMomentumScrollEnd: _this.onMomentumScrollEnd,
          scrollEventThrottle: 16,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          scrollEnabled: _this.props.swipeable,
          directionalLockEnabled: true,
          alwaysBounceVertical: false,
          keyboardDismissMode: 'on-drag',
          keyboardShouldPersistTaps: keyboardShouldPersistTaps
        }, content);
      };

      _this.onMomentumScrollEnd = function (e) {
        var offsetX = e.nativeEvent.contentOffset.x;

        var page = _this.getOffsetIndex(offsetX, _this.state.containerWidth);

        if (_this.state.currentTab !== page) {
          _this.goToTab(page);
        }
      };

      _this.handleLayout = function (e) {
        var width = e.nativeEvent.layout.width;
        requestAnimationFrame(function () {
          _this.scrollTo(_this.state.currentTab, false);
        });

        if (Math.round(width) !== Math.round(_this.state.containerWidth)) {
          _this.setState({
            containerWidth: width
          });
        }
      };

      _this.scrollTo = function (index) {
        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (_reactNative.Platform.OS === 'android') {
          if (_this.viewPager) {
            if (animated) {
              _this.viewPager.setPage(index);
            } else {
              _this.viewPager.setPageWithoutAnimation(index);
            }

            return;
          }
        }

        var containerWidth = _this.state.containerWidth;

        if (containerWidth) {
          var offset = index * containerWidth;

          if (_this.scrollView && _this.scrollView._component) {
            var scrollTo = _this.scrollView._component.scrollTo;
            scrollTo && scrollTo.call(_this.scrollView._component, {
              x: offset,
              animated: animated
            });
          }
        }
      };

      _this.isTabVertical = function () {
        var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.tabDirection;
        return direction === 'vertical';
      };

      _this.shouldRenderTab = function (idx) {
        var _this$props$prerender = _this.props.prerenderingSiblingsNumber,
            prerenderingSiblingsNumber = _this$props$prerender === undefined ? 0 : _this$props$prerender;
        var _this$state$currentTa2 = _this.state.currentTab,
            currentTab = _this$state$currentTa2 === undefined ? 0 : _this$state$currentTa2;
        return currentTab - prerenderingSiblingsNumber <= idx && idx <= currentTab + prerenderingSiblingsNumber;
      };

      _this.getOffsetIndex = function (current, width) {
        var threshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.props.distanceToChangeTab || 0;
        var ratio = Math.abs(current / width);
        var direction = ratio > _this.state.currentTab ? '<' : '>';
        var index = Math.floor(ratio);

        switch (direction) {
          case '<':
            return ratio - index > threshold ? index + 1 : index;

          case '>':
            return 1 - ratio + index > threshold ? index : index + 1;

          default:
            return Math.round(ratio);
        }
      };

      _this.getSubElements = function () {
        var children = _this.props.children;
        var subElements = {};
        return function () {
          var defaultPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$i$-';
          var allPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$ALL$';

          if (Array.isArray(children)) {
            children.forEach(function (child, index) {
              if (child.key) {
                subElements[child.key] = child;
              }

              subElements['' + defaultPrefix + index] = child;
            });
          } else if (children) {
            subElements[allPrefix] = children;
          }

          return subElements;
        };
      };

      var width = _reactNative.Dimensions.get('window').width;

      var pageIndex = _this.getTabIndex(props);

      _this.state = {
        currentTab: pageIndex,
        scrollX: new _reactNative.Animated.Value(pageIndex * width),
        scrollValue: new _reactNative.Animated.Value(pageIndex),
        containerWidth: width
      };
      _this.nextCurrentTab = _this.state.currentTab;
      _this.instanceId = instanceId++;
      return _this;
    }

    (0, _createClass3['default'])(Tabs, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        this.prevCurrentTab = this.state.currentTab;
        this.state.scrollX.addListener(function (_ref2) {
          var value = _ref2.value;
          var scrollValue = value / _this2.state.containerWidth;

          _this2.state.scrollValue.setValue(scrollValue);
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            tabBarPosition = _props.tabBarPosition,
            noRenderContent = _props.noRenderContent,
            keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps;
        var _state = this.state,
            scrollX = _state.scrollX,
            scrollValue = _state.scrollValue,
            containerWidth = _state.containerWidth;
        var overlayTabs = false;
        var tabBarProps = (0, _extends3['default'])({}, this.getTabBarBaseProps(), {
          keyboardShouldPersistTaps: keyboardShouldPersistTaps,
          scrollX: scrollX,
          scrollValue: scrollValue,
          containerWidth: containerWidth
        });
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _tabs2['default']
        }, function (styles) {
          var content = [_react2['default'].createElement(_view2['default'], {
            key: '$tabbar',
            style: tabBarPosition === 'top' ? styles.topTabBarSplitLine : styles.bottomTabBarSplitLine
          }, _this3.renderTabBar(tabBarProps, _DefaultTabBar.DefaultTabBar)), !noRenderContent && _this3.renderContent()];
          return _react2['default'].createElement(_view2['default'], {
            style: [styles.container, _this3.props.style],
            onLayout: _this3.handleLayout
          }, tabBarPosition === 'top' ? content : content.reverse());
        });
      }
    }, {
      key: 'getTabIndex',
      value: function getTabIndex(props) {
        var page = props.page,
            initialPage = props.initialPage,
            tabs = props.tabs;
        var param = (page !== undefined ? page : initialPage) || 0;
        var index = 0;

        if (typeof param === 'string') {
          tabs.forEach(function (t, i) {
            if (t.key === param) {
              index = i;
            }
          });
        } else {
          index = param || 0;
        }

        return index < 0 ? 0 : index;
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (this.props.page !== nextProps.page && nextProps.page !== undefined) {
          this.goToTab(this.getTabIndex(nextProps), true);
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.prevCurrentTab = this.state.currentTab;
      }
    }, {
      key: 'goToTab',
      value: function goToTab(index) {
        var _this4 = this;

        var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var newState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        if (!force && this.nextCurrentTab === index) {
          return false;
        }

        this.nextCurrentTab = index;
        var _props2 = this.props,
            tabs = _props2.tabs,
            onChange = _props2.onChange;

        if (index >= 0 && index < tabs.length) {
          if (!force) {
            onChange && onChange(tabs[index], index);
          }

          this.setState((0, _extends3['default'])({
            currentTab: index
          }, newState), function () {
            requestAnimationFrame(function () {
              _this4.scrollTo(_this4.state.currentTab, _this4.props.animated);
            });
          });
        }

        return true;
      }
    }, {
      key: 'tabClickGoToTab',
      value: function tabClickGoToTab(index) {
        this.goToTab(index);
      }
    }, {
      key: 'getTabBarBaseProps',
      value: function getTabBarBaseProps() {
        var currentTab = this.state.currentTab;
        var _props3 = this.props,
            animated = _props3.animated,
            onTabClick = _props3.onTabClick,
            tabBarActiveTextColor = _props3.tabBarActiveTextColor,
            tabBarBackgroundColor = _props3.tabBarBackgroundColor,
            tabBarInactiveTextColor = _props3.tabBarInactiveTextColor,
            tabBarPosition = _props3.tabBarPosition,
            tabBarTextStyle = _props3.tabBarTextStyle,
            tabBarUnderlineStyle = _props3.tabBarUnderlineStyle,
            renderTab = _props3.renderTab,
            renderUnderline = _props3.renderUnderline,
            tabs = _props3.tabs;
        return {
          activeTab: currentTab,
          animated: !!animated,
          goToTab: this.tabClickGoToTab.bind(this),
          onTabClick: onTabClick,
          tabBarActiveTextColor: tabBarActiveTextColor,
          tabBarBackgroundColor: tabBarBackgroundColor,
          tabBarInactiveTextColor: tabBarInactiveTextColor,
          tabBarPosition: tabBarPosition,
          tabBarTextStyle: tabBarTextStyle,
          tabBarUnderlineStyle: tabBarUnderlineStyle,
          renderTab: renderTab,
          renderUnderline: renderUnderline,
          tabs: tabs,
          instanceId: this.instanceId
        };
      }
    }, {
      key: 'renderTabBar',
      value: function renderTabBar(tabBarProps, DefaultTabBar) {
        var renderTabBar = this.props.renderTabBar;

        if (renderTabBar === false) {
          return null;
        } else if (renderTabBar) {
          return renderTabBar(tabBarProps);
        } else {
          return _react2['default'].createElement(DefaultTabBar, tabBarProps);
        }
      }
    }, {
      key: 'getSubElement',
      value: function getSubElement(tab, index, subElements) {
        var defaultPrefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '$i$-';
        var allPrefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '$ALL$';
        var key = tab.key || '' + defaultPrefix + index;
        var elements = subElements(defaultPrefix, allPrefix);
        var component = elements[key] || elements[allPrefix];

        if (component instanceof Function) {
          component = component(tab, index);
        }

        return component || null;
      }
    }]);
    return Tabs;
  }(_react2['default'].PureComponent);

  Tabs.defaultProps = {
    tabBarPosition: 'top',
    initialPage: 0,
    swipeable: true,
    animated: true,
    prerenderingSiblingsNumber: 1,
    tabs: [],
    destroyInactiveTab: false,
    usePaged: true,
    tabDirection: 'horizontal',
    distanceToChangeTab: 0.3,
    style: {}
  };
  Tabs.DefaultTabBar = _DefaultTabBar.DefaultTabBar;
},748,[493,532,533,537,571,49,2,587,749,750,752]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _reactNative.View;
    }
  });
  module.exports = exports['default'];
},749,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DefaultTabBar = undefined;

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _style2 = _$$_REQUIRE(_dependencyMap[8]);

  var _style3 = _interopRequireDefault(_style2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var WINDOW_WIDTH = _reactNative.Dimensions.get('window').width;

  var DefaultTabBar = exports.DefaultTabBar = function (_React$PureComponent) {
    (0, _inherits3['default'])(DefaultTabBar, _React$PureComponent);

    function DefaultTabBar(props) {
      (0, _classCallCheck3['default'])(this, DefaultTabBar);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (DefaultTabBar.__proto__ || Object.getPrototypeOf(DefaultTabBar)).call(this, props));

      _this._tabsMeasurements = [];

      _this.updateView = function (offset) {
        var position = Math.floor(offset.value);
        var pageOffset = offset.value % 1;
        var tabCount = _this.props.tabs.length;
        var lastTabPosition = tabCount - 1;

        if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {
          return;
        }

        if (_this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {
          _this.updateTabPanel(position, pageOffset);

          _this.updateTabUnderline(position, pageOffset, tabCount);
        }
      };

      _this.onPress = function (index) {
        var _this$props = _this.props,
            goToTab = _this$props.goToTab,
            onTabClick = _this$props.onTabClick,
            tabs = _this$props.tabs;
        onTabClick && onTabClick(tabs[index], index);
        goToTab && goToTab(index);
      };

      _this.renderTab = function (tab, index, width, onLayoutHandler, styles, theme) {
        var _this$props2 = _this.props,
            activeTextColor = _this$props2.tabBarActiveTextColor,
            inactiveTextColor = _this$props2.tabBarInactiveTextColor,
            textStyle = _this$props2.tabBarTextStyle,
            activeTab = _this$props2.activeTab,
            renderTab = _this$props2.renderTab;
        var isTabActive = activeTab === index;
        var textColor = isTabActive ? activeTextColor || theme.activeTextColor : inactiveTextColor || theme.inactiveTextColor;
        return _react2['default'].createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          key: tab.title + '_' + index,
          accessible: true,
          accessibilityTraits: 'button',
          onPress: function onPress() {
            return _this.onPress(index);
          },
          onLayout: onLayoutHandler
        }, _react2['default'].createElement(_reactNative.View, {
          style: (0, _extends3['default'])({}, _reactNative.StyleSheet.flatten(styles.tab), _this.props.tabStyle, {
            width: width
          })
        }, renderTab ? renderTab(tab) : (0, _react.isValidElement)(tab.title) ? tab.title : _react2['default'].createElement(_reactNative.Text, {
          style: [(0, _extends3['default'])({
            color: textColor
          }, _reactNative.StyleSheet.flatten(styles.textStyle)), textStyle]
        }, tab.title)));
      };

      _this.measureTab = function (page, event) {
        var _event$nativeEvent$la = event.nativeEvent.layout,
            x = _event$nativeEvent$la.x,
            width = _event$nativeEvent$la.width,
            height = _event$nativeEvent$la.height;
        _this._tabsMeasurements[page] = {
          left: x,
          right: x + width,
          width: width,
          height: height
        };

        _this.updateView({
          value: _this.props.scrollValue._value
        });
      };

      _this.onTabContainerLayout = function (e) {
        _this._tabContainerMeasurements = e.nativeEvent.layout;
        var width = _this._tabContainerMeasurements.width;

        _this.setState({
          _tabContainerWidth: width
        });

        if (!_this.props.dynamicTabUnderlineWidth) {
          _this.state._widthTabUnderline.setValue(width / _this.props.tabs.length);
        }

        _this.updateView({
          value: _this.props.scrollValue._value
        });
      };

      _this.onContainerLayout = function (e) {
        _this._containerMeasurements = e.nativeEvent.layout;

        _this.setState({
          _containerWidth: _this._containerMeasurements.width
        });

        _this.updateView({
          value: _this.props.scrollValue._value
        });
      };

      _this.state = {
        _leftTabUnderline: new _reactNative.Animated.Value(0),
        _widthTabUnderline: new _reactNative.Animated.Value(0),
        _containerWidth: WINDOW_WIDTH,
        _tabContainerWidth: WINDOW_WIDTH
      };
      return _this;
    }

    (0, _createClass3['default'])(DefaultTabBar, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.props.scrollValue.addListener(this.updateView);
      }
    }, {
      key: 'necessarilyMeasurementsCompleted',
      value: function necessarilyMeasurementsCompleted(position, isLastTab) {
        return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;
      }
    }, {
      key: 'updateTabPanel',
      value: function updateTabPanel(position, pageOffset) {
        var containerWidth = this._containerMeasurements.width;
        var tabWidth = this._tabsMeasurements[position].width;
        var nextTabMeasurements = this._tabsMeasurements[position + 1];
        var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;
        var tabOffset = this._tabsMeasurements[position].left;
        var absolutePageOffset = pageOffset * tabWidth;
        var newScrollX = tabOffset + absolutePageOffset;
        newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;
        newScrollX = newScrollX >= 0 ? newScrollX : 0;

        if (_reactNative.Platform.OS === 'android') {
          this._scrollView.scrollTo({
            x: newScrollX,
            y: 0,
            animated: false
          });
        } else {
          var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;
          newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;

          this._scrollView.scrollTo({
            x: newScrollX,
            y: 0,
            animated: false
          });
        }
      }
    }, {
      key: 'updateTabUnderline',
      value: function updateTabUnderline(position, pageOffset, tabCount) {
        var dynamicTabUnderlineWidth = this.props.dynamicTabUnderlineWidth;

        if (0 <= position && position <= tabCount - 1) {
          if (dynamicTabUnderlineWidth) {
            var nowLeft = this._tabsMeasurements[position].left;
            var nowRight = this._tabsMeasurements[position].right;
            var nextTabLeft = this._tabsMeasurements[position + 1].left;
            var nextTabRight = this._tabsMeasurements[position + 1].right;
            var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * nowLeft;
            var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * nowRight;

            this.state._leftTabUnderline.setValue(newLineLeft);

            this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);
          } else {
            var _nowLeft = position * this.state._tabContainerWidth / tabCount;

            var _nextTabLeft = (position + 1) * this.state._tabContainerWidth / tabCount;

            var _newLineLeft = pageOffset * _nextTabLeft + (1 - pageOffset) * _nowLeft;

            this.state._leftTabUnderline.setValue(_newLineLeft);
          }
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            tabs = _props.tabs,
            _props$page = _props.page,
            page = _props$page === undefined ? 0 : _props$page,
            tabBarUnderlineStyle = _props.tabBarUnderlineStyle,
            tabBarBackgroundColor = _props.tabBarBackgroundColor,
            tabsContainerStyle = _props.tabsContainerStyle,
            renderUnderline = _props.renderUnderline,
            keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _style3['default']
        }, function (styles, theme) {
          var tabUnderlineStyle = (0, _extends3['default'])({
            position: 'absolute',
            bottom: 0
          }, _reactNative.StyleSheet.flatten(styles.underline), _reactNative.StyleSheet.flatten(tabBarUnderlineStyle));
          var dynamicTabUnderline = {
            left: _this2.state._leftTabUnderline,
            width: _this2.state._widthTabUnderline
          };
          var tabWidth = _this2.state._containerWidth / Math.min(page, tabs.length);
          var underlineProps = {
            style: (0, _extends3['default'])({}, dynamicTabUnderline, tabUnderlineStyle)
          };
          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.container, {
              backgroundColor: tabBarBackgroundColor
            }],
            onLayout: _this2.onContainerLayout
          }, _react2['default'].createElement(_reactNative.ScrollView, {
            ref: function ref(scrollView) {
              _this2._scrollView = scrollView;
            },
            horizontal: true,
            showsHorizontalScrollIndicator: false,
            showsVerticalScrollIndicator: false,
            directionalLockEnabled: true,
            bounces: false,
            scrollsToTop: false,
            scrollEnabled: tabs.length > page,
            keyboardShouldPersistTaps: keyboardShouldPersistTaps,
            renderToHardwareTextureAndroid: true
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.tabs, (0, _extends3['default'])({}, tabsContainerStyle, {
              backgroundColor: tabBarBackgroundColor
            })],
            onLayout: _this2.onTabContainerLayout
          }, tabs.map(function (name, index) {
            var tab = {
              title: name
            };

            if (tabs.length - 1 >= index) {
              tab = tabs[index];
            }

            return _this2.renderTab(tab, index, tabWidth, _this2.measureTab.bind(_this2, index), styles, theme);
          }), renderUnderline ? renderUnderline(underlineProps.style) : _react2['default'].createElement(_reactNative.Animated.View, underlineProps))));
        });
      }
    }]);
    return DefaultTabBar;
  }(_react2['default'].PureComponent);

  DefaultTabBar.defaultProps = {
    animated: true,
    tabs: [],
    goToTab: function goToTab() {},
    activeTab: 0,
    page: 5,
    tabBarUnderlineStyle: {},
    tabBarBackgroundColor: '#fff',
    tabBarActiveTextColor: '',
    tabBarInactiveTextColor: '',
    tabBarTextStyle: {},
    dynamicTabUnderlineWidth: false
  };
},750,[493,532,533,537,571,49,2,587,751]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {},
      tabs: {
        flex: 1,
        flexDirection: 'row',
        backgroundColor: theme.fill_base,
        justifyContent: 'space-around',
        shadowRadius: 0,
        shadowOpacity: 0,
        elevation: 0
      },
      tab: {
        height: theme.tabs_height,
        alignItems: 'center',
        justifyContent: 'center',
        padding: 0,
        flexDirection: 'row'
      },
      underline: {
        height: 2,
        backgroundColor: theme.tabs_color
      },
      textStyle: {
        fontSize: 15
      }
    });
  };

  module.exports = exports['default'];
},751,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        flex: 1
      },
      topTabBarSplitLine: {
        borderBottomColor: theme.border_color_base,
        borderBottomWidth: 1
      },
      bottomTabBarSplitLine: {
        borderTopColor: theme.border_color_base,
        borderTopWidth: 1
      }
    });
  };

  module.exports = exports['default'];
},752,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  var _index = _$$_REQUIRE(_dependencyMap[7]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var Tag = function (_React$Component) {
    (0, _inherits3['default'])(Tag, _React$Component);

    function Tag(props) {
      (0, _classCallCheck3['default'])(this, Tag);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (Tag.__proto__ || Object.getPrototypeOf(Tag)).call(this, props));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onChange = _this$props.onChange;

        if (disabled) {
          return;
        }

        var isSelect = _this.state.selected;

        _this.setState({
          selected: !isSelect
        }, function () {
          if (onChange) {
            onChange(!isSelect);
          }
        });
      };

      _this.handleLongPress = function () {
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            onLongPress = _this$props2.onLongPress;

        if (disabled) {
          return;
        }

        if (onLongPress) {
          onLongPress();
        }
      };

      _this.onTagClose = function () {
        if (_this.props.onClose) {
          _this.props.onClose();
        }

        _this.setState({
          closed: true
        }, _this.props.afterClose);
      };

      _this.onPressIn = function (styles) {
        return function () {
          if (_this.closeDom) {
            _this.closeDom.setNativeProps({
              style: [styles.close, _reactNative.Platform.OS === 'ios' ? styles.closeIOS : styles.closeAndroid, {
                backgroundColor: '#888'
              }]
            });
          }
        };
      };

      _this.onPressOut = function (styles) {
        return function () {
          if (_this.closeDom) {
            _this.closeDom.setNativeProps({
              style: [styles.close, _reactNative.Platform.OS === 'ios' ? styles.closeIOS : styles.closeAndroid]
            });
          }
        };
      };

      _this.state = {
        selected: props.selected,
        closed: false
      };
      return _this;
    }

    (0, _createClass3['default'])(Tag, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (this.props.selected !== nextProps.selected) {
          this.setState({
            selected: nextProps.selected
          });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            children = _props.children,
            disabled = _props.disabled,
            small = _props.small,
            closable = _props.closable,
            style = _props.style;
        var selected = this.state.selected;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var wrapStyle = undefined;
          var textStyle = undefined;

          if (!selected && !disabled) {
            wrapStyle = styles.normalWrap;
            textStyle = styles.normalText;
          }

          if (selected && !disabled) {
            wrapStyle = styles.activeWrap;
            textStyle = styles.activeText;
          }

          if (disabled) {
            wrapStyle = styles.disabledWrap;
            textStyle = styles.disabledText;
          }

          var sizeWrapStyle = small ? styles.wrapSmall : {};
          var sizeTextStyle = small ? styles.textSmall : {};
          var closableDom = closable && !small && !disabled ? _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPressIn: _this2.onPressIn(styles),
            onPressOut: _this2.onPressOut(styles),
            onPress: _this2.onTagClose
          }, _react2['default'].createElement(_reactNative.View, {
            ref: function ref(component) {
              return _this2.closeDom = component;
            },
            style: [styles.close, _reactNative.Platform.OS === 'ios' ? styles.closeIOS : styles.closeAndroid]
          }, _react2['default'].createElement(_reactNative.Text, {
            style: [styles.closeText, _reactNative.Platform.OS === 'android' ? styles.closeTransform : {}]
          }, '\xD7'))) : null;
          return !_this2.state.closed ? _react2['default'].createElement(_reactNative.View, {
            style: [styles.tag, style]
          }, _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: _this2.onPress,
            onLongPress: _this2.handleLongPress
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.wrap, sizeWrapStyle, wrapStyle]
          }, _react2['default'].createElement(_reactNative.Text, {
            style: [styles.text, sizeTextStyle, textStyle]
          }, children, ' '))), closableDom) : null;
        });
      }
    }]);
    return Tag;
  }(_react2['default'].Component);

  exports['default'] = Tag;
  Tag.defaultProps = {
    disabled: false,
    small: false,
    selected: false,
    closable: false,
    onClose: function onClose() {},
    afterClose: function afterClose() {},
    onChange: function onChange() {},
    onLongPress: function onLongPress() {}
  };
  module.exports = exports['default'];
},753,[532,533,537,571,49,2,587,754]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      tag: {
        borderRadius: theme.radius_sm,
        backgroundColor: 'transparent',
        flexDirection: 'row',
        overflow: 'visible'
      },
      wrap: {
        overflow: 'hidden',
        borderRadius: theme.radius_sm,
        borderWidth: theme.border_width_sm,
        borderStyle: 'solid',
        paddingVertical: theme.v_spacing_sm,
        paddingHorizontal: theme.h_spacing_lg
      },
      wrapSmall: {
        paddingVertical: 1.5,
        paddingHorizontal: theme.h_spacing_sm
      },
      text: {
        fontSize: theme.button_font_size_sm,
        textAlign: 'center'
      },
      textSmall: {
        fontSize: theme.font_size_icontext
      },
      normalWrap: {
        backgroundColor: theme.fill_base,
        borderColor: theme.border_color_base
      },
      normalText: {
        color: theme.color_text_caption
      },
      activeWrap: {
        backgroundColor: theme.fill_base,
        borderColor: theme.brand_primary
      },
      activeText: {
        color: theme.color_link
      },
      disabledWrap: {
        backgroundColor: theme.fill_disabled,
        borderWidth: 0
      },
      disabledText: {
        color: theme.color_text_disabled
      },
      close: {
        position: 'absolute',
        backgroundColor: theme.color_text_placeholder
      },
      closeIOS: {
        borderRadius: 8,
        width: 16,
        height: 16,
        left: -5,
        top: -4,
        overflow: 'hidden'
      },
      closeAndroid: {
        width: 16,
        height: 32,
        left: -2,
        top: -10,
        transform: [{
          rotate: '45deg'
        }]
      },
      closeText: {
        color: theme.color_text_base_inverse,
        textAlign: 'center',
        fontSize: 20,
        lineHeight: 18
      },
      closeTransform: {
        transform: [{
          rotate: '-45deg'
        }]
      }
    });
  };

  module.exports = exports['default'];
},754,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[2]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[3]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[5]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _icon = _$$_REQUIRE(_dependencyMap[7]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _index = _$$_REQUIRE(_dependencyMap[9]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var __rest = function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  function fixControlledValue(value) {
    if (typeof value === 'undefined' || value === null) {
      return '';
    }

    return value;
  }

  var TextAreaItem = function (_React$Component) {
    (0, _inherits3['default'])(TextAreaItem, _React$Component);

    function TextAreaItem(props) {
      (0, _classCallCheck3['default'])(this, TextAreaItem);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (TextAreaItem.__proto__ || Object.getPrototypeOf(TextAreaItem)).call(this, props));

      _this.onChange = function (event) {
        var text = event.nativeEvent.text;
        var onChange = _this.props.onChange;

        _this.setState({
          inputCount: text.length
        });

        if (onChange) {
          onChange(text);
        }
      };

      _this.onContentSizeChange = function (theme) {
        return function (event) {
          var height = undefined;
          var _this$props = _this.props,
              autoHeight = _this$props.autoHeight,
              onContentSizeChange = _this$props.onContentSizeChange;
          var rows = _this.props.rows;

          if (autoHeight) {
            height = event.nativeEvent.contentSize.height;
          } else if (rows > 1) {
            height = 6 * rows * 4;
          } else {
            height = theme.list_item_height;
          }

          _this.setState({
            height: height
          });

          if (onContentSizeChange) {
            onContentSizeChange(event);
          }
        };
      };

      _this.getHeight = function (theme) {
        var rows = _this.props.rows;

        if (_this.state.height) {
          return _this.state.height;
        }

        return rows !== undefined && rows > 1 ? 6 * rows * 4 : theme.list_item_height;
      };

      _this.state = {
        inputCount: 0
      };
      return _this;
    }

    (0, _createClass3['default'])(TextAreaItem, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _a = this.props,
            rows = _a.rows,
            error = _a.error,
            clear = _a.clear,
            count = _a.count,
            autoHeight = _a.autoHeight,
            last = _a.last,
            onErrorClick = _a.onErrorClick,
            styles = _a.styles,
            style = _a.style,
            restProps = __rest(_a, ["rows", "error", "clear", "count", "autoHeight", "last", "onErrorClick", "styles", "style"]);

        var value = restProps.value,
            defaultValue = restProps.defaultValue;
        var inputCount = this.state.inputCount;
        return _react2['default'].createElement(_style.WithTheme, {
          themeStyles: _index2['default'],
          styles: styles
        }, function (s, theme) {
          var valueProps = undefined;

          if ('value' in _this2.props) {
            valueProps = {
              value: fixControlledValue(value)
            };
          } else {
            valueProps = {
              defaultValue: defaultValue
            };
          }

          var containerStyle = {
            borderBottomWidth: last ? 0 : theme.border_width_sm
          };
          var textareaStyle = {
            color: error ? '#f50' : theme.color_text_base,
            paddingRight: error ? 2 * theme.h_spacing_lg : 0
          };
          var maxLength = count > 0 ? count : undefined;
          return _react2['default'].createElement(_reactNative.View, {
            style: [s.container, containerStyle, {
              position: 'relative'
            }]
          }, _react2['default'].createElement(_reactNative.TextInput, (0, _extends3['default'])({
            clearButtonMode: clear ? 'while-editing' : 'never',
            underlineColorAndroid: 'transparent',
            style: [s.input, textareaStyle, {
              height: Math.max(45, _this2.getHeight(theme))
            }, style]
          }, restProps, valueProps, {
            onChange: function onChange(event) {
              return _this2.onChange(event);
            },
            onContentSizeChange: _this2.onContentSizeChange(theme),
            multiline: rows > 1 || autoHeight,
            numberOfLines: rows,
            maxLength: maxLength,
            ref: function ref(_ref) {
              return _this2.textAreaRef = _ref;
            }
          })), error ? _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
            onPress: onErrorClick
          }, _react2['default'].createElement(_reactNative.View, {
            style: [s.errorIcon]
          }, _react2['default'].createElement(_icon2['default'], {
            name: 'info-circle',
            style: {
              color: theme.brand_error
            }
          }))) : null, rows > 1 && count > 0 ? _react2['default'].createElement(_reactNative.View, {
            style: [s.count]
          }, _react2['default'].createElement(_reactNative.Text, null, inputCount, ' / ', count)) : null);
        });
      }
    }]);
    return TextAreaItem;
  }(_react2['default'].Component);

  exports['default'] = TextAreaItem;
  TextAreaItem.defaultProps = {
    onChange: function onChange() {},
    onFocus: function onFocus() {},
    onBlur: function onBlur() {},
    onErrorClick: function onErrorClick() {},
    clear: true,
    error: false,
    editable: true,
    rows: 1,
    count: 0,
    keyboardType: 'default',
    autoHeight: false,
    last: false
  };
  module.exports = exports['default'];
},755,[493,532,533,537,571,49,2,582,587,756]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        borderBottomWidth: theme.border_width_sm,
        borderBottomColor: theme.border_color_base
      },
      input: {
        paddingHorizontal: theme.h_spacing_md,
        backgroundColor: theme.fill_base,
        fontSize: theme.font_size_heading,
        lineHeight: Math.round(1.3 * theme.font_size_heading),
        textAlignVertical: 'top'
      },
      icon: {
        position: 'absolute',
        top: 8,
        width: theme.icon_size_xs,
        height: theme.icon_size_xs
      },
      errorIcon: {
        position: 'absolute',
        right: 18,
        top: 12
      },
      count: {
        position: 'absolute',
        right: theme.h_spacing_md,
        bottom: theme.h_spacing_md
      }
    });
  };

  module.exports = exports['default'];
},756,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _portal = _$$_REQUIRE(_dependencyMap[1]);

  var _portal2 = _interopRequireDefault(_portal);

  var _ToastContainer = _$$_REQUIRE(_dependencyMap[2]);

  var _ToastContainer2 = _interopRequireDefault(_ToastContainer);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  function notice(content, type) {
    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
    var onClose = arguments[3];
    var mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

    var key = _portal2['default'].add(_react2['default'].createElement(_ToastContainer2['default'], {
      content: content,
      duration: duration,
      onClose: onClose,
      type: type,
      mask: mask,
      onAnimationEnd: function onAnimationEnd() {
        return _portal2['default'].remove(key);
      }
    }));

    return key;
  }

  exports['default'] = {
    SHORT: 3,
    LONG: 8,
    show: function show(content, duration, mask) {
      return notice(content, 'info', duration, function () {}, mask);
    },
    info: function info(content, duration, onClose, mask) {
      return notice(content, 'info', duration, onClose, mask);
    },
    success: function success(content, duration, onClose, mask) {
      return notice(content, 'success', duration, onClose, mask);
    },
    fail: function fail(content, duration, onClose, mask) {
      return notice(content, 'fail', duration, onClose, mask);
    },
    offline: function offline(content, duration, onClose, mask) {
      return notice(content, 'offline', duration, onClose, mask);
    },
    loading: function loading(content, duration, onClose, mask) {
      return notice(content, 'loading', duration, onClose, mask);
    }
  };
  module.exports = exports['default'];
},757,[49,592,758]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _icon = _$$_REQUIRE(_dependencyMap[6]);

  var _icon2 = _interopRequireDefault(_icon);

  var _style = _$$_REQUIRE(_dependencyMap[7]);

  var _index = _$$_REQUIRE(_dependencyMap[8]);

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var ToastContainer = function (_React$Component) {
    (0, _inherits3['default'])(ToastContainer, _React$Component);

    function ToastContainer(props) {
      (0, _classCallCheck3['default'])(this, ToastContainer);

      var _this = (0, _possibleConstructorReturn3['default'])(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));

      _this.state = {
        fadeAnim: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass3['default'])(ToastContainer, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        var _props = this.props,
            onClose = _props.onClose,
            onAnimationEnd = _props.onAnimationEnd;
        var duration = this.props.duration;
        var timing = _reactNative.Animated.timing;

        if (this.anim) {
          this.anim = null;
        }

        var animArr = [timing(this.state.fadeAnim, {
          toValue: 1,
          duration: 200,
          useNativeDriver: true
        }), _reactNative.Animated.delay(duration * 1000)];

        if (duration > 0) {
          animArr.push(timing(this.state.fadeAnim, {
            toValue: 0,
            duration: 200,
            useNativeDriver: true
          }));
        }

        this.anim = _reactNative.Animated.sequence(animArr);
        this.anim.start(function () {
          if (duration > 0) {
            _this2.anim = null;

            if (onClose) {
              onClose();
            }

            if (onAnimationEnd) {
              onAnimationEnd();
            }
          }
        });
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.anim) {
          this.anim.stop();
          this.anim = null;
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _props2 = this.props,
            _props2$type = _props2.type,
            type = _props2$type === undefined ? '' : _props2$type,
            content = _props2.content,
            mask = _props2.mask;
        return _react2['default'].createElement(_style.WithTheme, {
          styles: this.props.styles,
          themeStyles: _index2['default']
        }, function (styles) {
          var iconType = {
            success: 'check-circle',
            fail: 'close-circle',
            offline: 'frown'
          };
          var iconDom = null;

          if (type === 'loading') {
            iconDom = _react2['default'].createElement(_reactNative.ActivityIndicator, {
              animating: true,
              style: [styles.centering],
              color: 'white',
              size: 'large'
            });
          } else if (type === 'info') {
            iconDom = null;
          } else {
            iconDom = _react2['default'].createElement(_icon2['default'], {
              name: iconType[type],
              style: styles.image,
              color: 'white',
              size: 36
            });
          }

          return _react2['default'].createElement(_reactNative.View, {
            style: [styles.container],
            pointerEvents: mask ? undefined : 'box-none'
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.innerContainer]
          }, _react2['default'].createElement(_reactNative.Animated.View, {
            style: {
              opacity: _this3.state.fadeAnim
            }
          }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.innerWrap, iconDom ? styles.iconToast : styles.textToast]
          }, iconDom, _react2['default'].createElement(_reactNative.Text, {
            style: styles.content
          }, content)))));
        });
      }
    }]);
    return ToastContainer;
  }(_react2['default'].Component);

  exports['default'] = ToastContainer;
  ToastContainer.defaultProps = {
    duration: 3,
    mask: true,
    onClose: function onClose() {}
  };
  module.exports = exports['default'];
},758,[532,533,537,571,49,2,582,587,759]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  exports['default'] = function (theme) {
    return _reactNative.StyleSheet.create({
      container: {
        position: 'absolute',
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        zIndex: theme.toast_zindex
      },
      innerContainer: {
        backgroundColor: 'transparent'
      },
      innerWrap: {
        alignItems: 'center',
        backgroundColor: theme.toast_fill,
        minWidth: 100
      },
      iconToast: {
        borderRadius: theme.radius_lg,
        padding: theme.v_spacing_lg
      },
      textToast: {
        borderRadius: theme.radius_sm,
        paddingVertical: theme.v_spacing_md,
        paddingHorizontal: theme.v_spacing_lg
      },
      content: {
        color: theme.color_text_base_inverse,
        fontSize: theme.font_size_subhead
      },
      image: {
        marginBottom: theme.v_spacing_xs
      },
      centering: {
        alignItems: 'center',
        justifyContent: 'center',
        padding: theme.v_spacing_md
      }
    });
  };

  module.exports = exports['default'];
},759,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var WhiteSpace = function (_React$Component) {
    (0, _inherits3['default'])(WhiteSpace, _React$Component);

    function WhiteSpace() {
      (0, _classCallCheck3['default'])(this, WhiteSpace);
      return (0, _possibleConstructorReturn3['default'])(this, (WhiteSpace.__proto__ || Object.getPrototypeOf(WhiteSpace)).apply(this, arguments));
    }

    (0, _createClass3['default'])(WhiteSpace, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            size = _props.size,
            style = _props.style;
        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          return _react2['default'].createElement(_reactNative.View, {
            style: [{
              height: theme['v_spacing_' + size]
            }, style]
          });
        });
      }
    }]);
    return WhiteSpace;
  }(_react2['default'].Component);

  WhiteSpace.defaultProps = {
    size: 'md'
  };
  exports['default'] = WhiteSpace;
  module.exports = exports['default'];
},760,[532,533,537,571,49,2,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[2]);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = _$$_REQUIRE(_dependencyMap[4]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _style = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var WingBlank = function (_React$Component) {
    (0, _inherits3['default'])(WingBlank, _React$Component);

    function WingBlank() {
      (0, _classCallCheck3['default'])(this, WingBlank);
      return (0, _possibleConstructorReturn3['default'])(this, (WingBlank.__proto__ || Object.getPrototypeOf(WingBlank)).apply(this, arguments));
    }

    (0, _createClass3['default'])(WingBlank, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            size = _props.size,
            style = _props.style,
            children = _props.children;
        return _react2['default'].createElement(_style.WithTheme, null, function (_, theme) {
          var margin = theme['h_spacing_' + size];
          return _react2['default'].createElement(_reactNative.View, {
            style: [{
              marginLeft: margin,
              marginRight: margin
            }, style]
          }, children);
        });
      }
    }]);
    return WingBlank;
  }(_react2['default'].Component);

  WingBlank.defaultProps = {
    size: 'lg'
  };
  exports['default'] = WingBlank;
  module.exports = exports['default'];
},761,[532,533,537,571,49,2,587]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LKCMTitleBar = exports.LuckinBackView = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var LuckinBackView = function (_React$Component) {
    (0, _inherits2.default)(LuckinBackView, _React$Component);

    function LuckinBackView() {
      (0, _classCallCheck2.default)(this, LuckinBackView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LuckinBackView).apply(this, arguments));
    }

    (0, _createClass2.default)(LuckinBackView, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Image, {
          style: {
            width: '86%',
            height: 25,
            marginLeft: 18
          },
          source: _$$_REQUIRE(_dependencyMap[8]),
          onClick: this.props.onClick
        });
      }
    }]);
    return LuckinBackView;
  }(_react.default.Component);

  exports.LuckinBackView = LuckinBackView;

  var LKCMTitleBar = function (_React$Component2) {
    (0, _inherits2.default)(LKCMTitleBar, _React$Component2);

    function LKCMTitleBar() {
      (0, _classCallCheck2.default)(this, LKCMTitleBar);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LKCMTitleBar).apply(this, arguments));
    }

    (0, _createClass2.default)(LKCMTitleBar, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row',
            justifyContent: "center"
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 18,
            color: '#333333'
          }
        }, this.props.titleName));
      }
    }]);
    return LKCMTitleBar;
  }(_react.default.Component);

  exports.LKCMTitleBar = LKCMTitleBar;
},762,[1,22,23,30,33,36,49,2,763]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/rn_component/source/img",
    "width": 36,
    "height": 36,
    "scales": [1],
    "hash": "059cca9c5e2c8a587e31f972b8b9676d",
    "name": "baseline_arrow_back_black",
    "type": "png"
  });
},763,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[8]);

  var _BottomTab = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _CoffeeTicketList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _MonitorData = _$$_REQUIRE(_dependencyMap[11]);

  var CoffeeWallet = function (_React$Component) {
    (0, _inherits2.default)(CoffeeWallet, _React$Component);

    function CoffeeWallet(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CoffeeWallet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CoffeeWallet).call(this, props));

      _this.onInvalidLuckinTicketClick = function () {
        _this.props.navigation.navigate('InvalidLuckinTickets');
      };

      _this.state = {
        willExpiredTicketNum: 15,
        luckinTickInfoList: 1
      };
      return _this;
    }

    (0, _createClass2.default)(CoffeeWallet, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.props.navigation.setParams({
          naviKey: this.onInvalidLuckinTicketClick
        });
        this.getWillExpiredTicketNum();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.showWillExpiredTicketTip(), this.showLuckinTicketList(), _react.default.createElement(_BottomTab.default, {
          onTableClicked: function onTableClicked(itemId) {
            return _this2.onTabItemClicked(itemId);
          }
        }));
      }
    }, {
      key: "showWillExpiredTicketTip",
      value: function showWillExpiredTicketTip() {
        var _this3 = this;

        if (this.state.willExpiredTicketNum === 0) {
          return null;
        } else {
          var numberString = '您有' + this.state.willExpiredTicketNum + '杯咖啡券即将过期，点击查看>';
          return _react.default.createElement(_reactNative.TouchableHighlight, {
            onPress: function onPress() {
              return _this3.onWillExpiredTicketTipClicked();
            },
            style: {
              padding: 10,
              backgroundColor: '#FFE4B5'
            },
            underlayColor: '#FFB5C5'
          }, _react.default.createElement(_reactNative.Text, {
            style: {
              marginLeft: 10
            }
          }, " ", numberString));
        }
      }
    }, {
      key: "showLuckinTicketList",
      value: function showLuckinTicketList() {
        if (this.state.luckinTickInfoList === 0) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center'
            }
          }, _react.default.createElement(_reactNative.Text, null, "\u60A8\u7684\u5496\u5561\u94B1\u5305\u6709\u70B9\u5BC2\u5BDE"));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: {
              flex: 1
            }
          }, _react.default.createElement(_CoffeeTicketList.default, {
            dataSource: _MonitorData.coffeeTicketData.coffeeTicketList
          }));
        }
      }
    }, {
      key: "onTabItemClicked",
      value: function onTabItemClicked(itemId) {
        console.log('CoffeeWallet onTabItemClicked itemId=' + itemId);
      }
    }, {
      key: "getWillExpiredTicketNum",
      value: function getWillExpiredTicketNum() {
        var number = Math.floor(Math.random() * 5);
        console.log('CoffeeWallet getWillExpiredTicketNum number=' + number);
        this.setState(function (prevState, props) {
          return {
            willExpiredTicketNum: number
          };
        });
      }
    }, {
      key: "onWillExpiredTicketTipClicked",
      value: function onWillExpiredTicketTipClicked() {
        console.log('CoffeeWallet onWillExpiredTicketTipClicked');
        this.props.navigation.navigate('CoffeeWillExpiredWallet');
      }
    }]);
    return CoffeeWallet;
  }(_react.default.Component);

  exports.default = CoffeeWallet;

  CoffeeWallet.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "咖啡钱包"
      }),
      headerRight: _react.default.createElement(_reactNative.Text, {
        style: {
          fontSize: 15,
          marginRight: 10
        },
        onPress: navigation.getParam("naviKey")
      }, "\u65E0\u6548\u5496\u5561\u5238")
    };
  };
},764,[1,22,23,30,33,36,49,2,762,765,770,772]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _badge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var BottomTab = function (_React$Component) {
    (0, _inherits2.default)(BottomTab, _React$Component);

    function BottomTab() {
      (0, _classCallCheck2.default)(this, BottomTab);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BottomTab).apply(this, arguments));
    }

    (0, _createClass2.default)(BottomTab, [{
      key: "render",
      value: function render() {
        var _this = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          onPress: function onPress() {
            return _this.onTableClick(1);
          },
          style: styles.tableStyle1,
          underlayColor: '#FFB5C5'
        }, _react.default.createElement(_reactNative.Text, null, "\u5E78\u8FD0\u9001")), _react.default.createElement(_reactNative.TouchableHighlight, {
          onPress: function onPress() {
            return _this.onTableClick(2);
          },
          style: styles.tableStyle1,
          underlayColor: '#FFB5C5'
        }, _react.default.createElement(_reactNative.Text, null, "\u53D1\u7EA2\u5305")), _react.default.createElement(_badge.default, {
          text: this.props.badgeValue,
          size: "small"
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          onPress: function onPress() {
            return _this.onTableClick(3);
          },
          style: styles.tableStyle2,
          underlayColor: '#FFB5C5'
        }, _react.default.createElement(_reactNative.Text, null, "\u5145\u503C\u94B1\u5305"))));
      }
    }, {
      key: "onTableClick",
      value: function onTableClick(tableId) {
        console.log('BottomTab onTableClick tableId=' + tableId);

        if (this.props.onTableClicked != null) {
          this.props.onTableClicked(tableId);
        }
      }
    }]);
    return BottomTab;
  }(_react.default.Component);

  exports.default = BottomTab;
  BottomTab.propTypes = {
    badgeValue: _propTypes.default.string,
    onTableClicked: _propTypes.default.func
  };
  BottomTab.defaultProps = {
    badgeValue: '充5送5',
    onTableClicked: null
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      justifyContent: "space-between",
      alignItems: 'center',
      padding: 15
    },
    tableStyle1: {
      paddingRight: 20,
      paddingBottom: 10,
      paddingLeft: 20,
      paddingTop: 10,
      borderColor: '#FF34B3',
      borderWidth: 1,
      borderRadius: 5
    },
    tableStyle2: {
      paddingRight: 25,
      paddingBottom: 10,
      paddingLeft: 25,
      paddingTop: 10,
      borderColor: '#FFBBFF',
      borderWidth: 1,
      borderRadius: 5,
      backgroundColor: '#FFBBFF'
    }
  });
},765,[1,22,23,30,33,36,49,2,766,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _style = _$$_REQUIRE(_dependencyMap[8]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var __rest = this && this.__rest || function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var Badge = function (_React$Component) {
    (0, _inherits2.default)(Badge, _React$Component);

    function Badge() {
      (0, _classCallCheck2.default)(this, Badge);
      return (0, _possibleConstructorReturn2.default)(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).apply(this, arguments));
    }

    (0, _createClass2.default)(Badge, [{
      key: 'render',
      value: function render() {
        var _a = this.props,
            styles = _a.styles,
            style = _a.style,
            children = _a.children,
            text = _a.text,
            size = _a.size,
            overflowCount = _a.overflowCount,
            dot = _a.dot,
            corner = _a.corner,
            restProps = __rest(_a, ["styles", "style", "children", "text", "size", "overflowCount", "dot", "corner"]);

        return _react.default.createElement(_style.WithTheme, {
          themeStyles: _index.default,
          styles: this.props.styles
        }, function (s) {
          text = typeof text === 'number' && text > overflowCount ? overflowCount + '+' : text;

          if (dot) {
            text = '';
          }

          var fakeStyles = s;
          var badgeCls = corner ? 'textCorner' : 'textDom';
          var contentDom = !dot ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, restProps, {
            style: [s[badgeCls], fakeStyles['' + badgeCls + size]]
          }), _react.default.createElement(_reactNative.Text, {
            style: [s.text]
          }, text)) : _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, restProps, {
            style: [s.dot, fakeStyles['dotSize' + size]]
          }));
          return _react.default.createElement(_reactNative.View, {
            style: [s.wrap, style]
          }, _react.default.createElement(_reactNative.View, {
            style: [fakeStyles[badgeCls + 'Wrap']]
          }, children, text || dot ? contentDom : null));
        });
      }
    }]);
    return Badge;
  }(_react.default.Component);

  var _default = Badge;
  exports.default = _default;
  Badge.defaultProps = {
    size: 'small',
    overflowCount: 99,
    dot: false,
    corner: false
  };
},766,[1,493,532,533,537,571,49,2,767,769]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WithTheme = exports.useTheme = exports.ThemeProvider = exports.ThemeContext = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _deepmerge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var ThemeContext = _react.default.createContext(_default.default);

  exports.ThemeContext = ThemeContext;

  var ThemeProvider = function ThemeProvider(props) {
    var theme = (0, _extends2.default)({}, _default.default, props.value);
    return _react.default.createElement(ThemeContext.Provider, {
      value: theme
    }, props.children);
  };

  exports.ThemeProvider = ThemeProvider;

  var useTheme = function useTheme() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var theme = (0, _react.useContext)(ThemeContext);
    return (0, _extends2.default)({}, theme, props.theme);
  };

  exports.useTheme = useTheme;

  var WithTheme = function (_React$Component) {
    (0, _inherits2.default)(WithTheme, _React$Component);

    function WithTheme() {
      (0, _classCallCheck2.default)(this, WithTheme);

      var _this = (0, _possibleConstructorReturn2.default)(this, (WithTheme.__proto__ || Object.getPrototypeOf(WithTheme)).apply(this, arguments));

      _this.getStyles = function (theme) {
        var _this$props = _this.props,
            themeStyles = _this$props.themeStyles,
            styles = _this$props.styles;
        var defaultThemeStyles = themeStyles(theme);

        if (styles) {
          return (0, _deepmerge.default)(defaultThemeStyles, styles);
        }

        return defaultThemeStyles;
      };

      return _this;
    }

    (0, _createClass2.default)(WithTheme, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(ThemeContext.Consumer, null, function (theme) {
          return _this2.props.children(_this2.getStyles(theme), theme);
        });
      }
    }]);
    return WithTheme;
  }(_react.default.Component);

  exports.WithTheme = WithTheme;
  WithTheme.defaultProps = {
    themeStyles: function themeStyles() {}
  };
},767,[362,1,532,533,537,571,493,588,49,768]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var brandPrimary = '#108ee9';
  var brandPrimaryTap = '#1284d6';
  var _default = {
    color_text_base: '#000000',
    color_text_base_inverse: '#ffffff',
    color_text_secondary: '#a4a9b0',
    color_text_placeholder: '#bbbbbb',
    color_text_disabled: '#bbbbbb',
    color_text_caption: '#888888',
    color_text_paragraph: '#333333',
    color_link: brandPrimary,
    fill_base: '#ffffff',
    fill_body: '#f5f5f9',
    fill_tap: '#dddddd',
    fill_disabled: '#dddddd',
    fill_mask: 'rgba(0, 0, 0, .4)',
    color_icon_base: '#cccccc',
    fill_grey: '#f7f7f7',
    opacity_disabled: '0.3',
    brand_primary: brandPrimary,
    brand_primary_tap: brandPrimaryTap,
    brand_success: '#6abf47',
    brand_warning: '#f4333c',
    brand_error: '#f4333c',
    brand_important: '#ff5b05',
    brand_wait: '#108ee9',
    border_color_base: '#dddddd',
    font_size_icontext: 10,
    font_size_caption_sm: 12,
    font_size_base: 14,
    font_size_subhead: 15,
    font_size_caption: 16,
    font_size_heading: 17,
    radius_xs: 2,
    radius_sm: 3,
    radius_md: 5,
    radius_lg: 7,
    border_width_sm: 0.5,
    border_width_md: 1,
    border_width_lg: 2,
    h_spacing_sm: 5,
    h_spacing_md: 8,
    h_spacing_lg: 15,
    v_spacing_xs: 3,
    v_spacing_sm: 6,
    v_spacing_md: 9,
    v_spacing_lg: 15,
    v_spacing_xl: 21,
    line_height_base: 1,
    line_height_paragraph: 1.5,
    icon_size_xxs: 15,
    icon_size_xs: 18,
    icon_size_sm: 21,
    icon_size_md: 22,
    icon_size_lg: 36,
    ease_in_out_quint: 'cubic_bezier(0.86, 0, 0.07, 1)',
    actionsheet_item_height: 50,
    actionsheet_item_font_size: 18,
    button_height: 47,
    button_font_size: 18,
    button_height_sm: 23,
    button_font_size_sm: 12,
    primary_button_fill: brandPrimary,
    primary_button_fill_tap: '#0e80d2',
    ghost_button_color: brandPrimary,
    ghost_button_fill_tap: "#108ee999",
    warning_button_fill: '#e94f4f',
    warning_button_fill_tap: '#d24747',
    link_button_fill_tap: '#dddddd',
    link_button_font_size: 16,
    modal_font_size_heading: 18,
    modal_button_font_size: 18,
    modal_button_height: 50,
    list_title_height: 30,
    list_item_height_sm: 35,
    list_item_height: 44,
    input_label_width: 17,
    input_font_size: 17,
    input_color_icon: '#cccccc',
    input_color_icon_tap: brandPrimary,
    tabs_color: brandPrimary,
    tabs_height: 42,
    tabs_font_size_heading: 15,
    segmented_control_color: brandPrimary,
    segmented_control_height: 27,
    segmented_control_fill_tap: "#108ee910",
    tab_bar_fill: '#ebeeef',
    tab_bar_height: 50,
    toast_fill: 'rgba(0, 0, 0, .8)',
    search_bar_fill: '#efeff4',
    search_bar_height: 44,
    search_bar_input_height: 28,
    search_bar_font_size: 15,
    search_color_icon: '#bbbbbb',
    notice_bar_fill: '#fffada',
    notice_bar_height: 36,
    switch_fill: '#4dd865',
    tag_height: 25,
    tag_small_height: 15,
    option_height: 42,
    toast_zindex: 1999,
    action_sheet_zindex: 1000,
    popup_zindex: 999,
    modal_zindex: 999
  };
  exports.default = _default;
},768,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var grid = 4;

  var _default = function _default(theme) {
    return _reactNative.StyleSheet.create({
      wrap: {
        flexDirection: 'row'
      },
      textCornerWrap: {
        overflow: 'hidden'
      },
      dot: {
        width: 8,
        height: 8,
        borderRadius: grid,
        backgroundColor: theme.brand_important,
        position: 'absolute',
        top: -4,
        right: -4
      },
      dotSizelarge: {
        width: 16,
        height: 16,
        borderRadius: 8
      },
      textDom: {
        paddingVertical: 2,
        paddingHorizontal: (_reactNative.Platform.OS === 'ios' ? 1.5 : 2) * grid,
        backgroundColor: theme.brand_important,
        borderRadius: 4 * theme.radius_sm,
        borderStyle: 'solid',
        position: 'absolute',
        top: -10,
        right: -15
      },
      textCorner: {
        width: 72,
        backgroundColor: theme.brand_important,
        transform: [{
          rotate: '45deg'
        }],
        position: 'absolute',
        top: 8
      },
      textCornerlarge: {
        width: 104,
        top: 12
      },
      text: {
        color: theme.color_text_base_inverse,
        textAlign: 'center'
      }
    });
  };

  exports.default = _default;
},769,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var CoffeeTicketList = function (_React$Component) {
    (0, _inherits2.default)(CoffeeTicketList, _React$Component);

    function CoffeeTicketList(props) {
      (0, _classCallCheck2.default)(this, CoffeeTicketList);
      console.log('CoffeeTicketList constructor start');
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CoffeeTicketList).call(this, props));
    }

    (0, _createClass2.default)(CoffeeTicketList, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        console.log('CoffeeTicketList componentWillReceiveProps ');
      }
    }, {
      key: "render",
      value: function render() {
        var _this = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.FlatList, {
          data: this.props.dataSource,
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return _this.renderItem({
              item: item,
              index: index
            });
          },
          horizontal: false,
          numColumns: 2
        }));
      }
    }, {
      key: "renderItem",
      value: function renderItem(_ref2) {
        var item = _ref2.item,
            index = _ref2.index;
        console.log('CoffeeTicketList componentWillReceiveProps item=' + item + ',index=' + index);
        return _react.default.createElement(CoffeeTicketItem, {
          data: item
        });
      }
    }]);
    return CoffeeTicketList;
  }(_react.default.Component);

  exports.default = CoffeeTicketList;

  var CoffeeTicketItem = function (_React$Component2) {
    (0, _inherits2.default)(CoffeeTicketItem, _React$Component2);

    function CoffeeTicketItem() {
      (0, _classCallCheck2.default)(this, CoffeeTicketItem);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CoffeeTicketItem).apply(this, arguments));
    }

    (0, _createClass2.default)(CoffeeTicketItem, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.coffeeItem
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            justifyContent: 'flex-start',
            alignItems: 'flex-start'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            marginLeft: 5,
            marginTop: 5,
            fontSize: 20,
            fontWeight: 'bold'
          },
          numberOfLines: 1
        }, this.props.data.ticketLevel), _react.default.createElement(_reactNative.Text, {
          style: {
            marginTop: 10,
            marginLeft: 7
          },
          numberOfLines: 1
        }, this.props.data.ticketType)), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            justifyContent: 'flex-start'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            marginLeft: 5,
            marginTop: 5,
            fontSize: 20,
            fontWeight: 'bold'
          },
          numberOfLines: 1
        }, '¥' + this.props.data.ticketPrice), _react.default.createElement(_reactNative.Text, {
          style: {
            marginLeft: 5,
            marginTop: 5
          },
          numberOfLines: 1
        }, '尚余杯量为' + this.props.data.remainCups)), _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[8]),
          style: {
            width: 50,
            height: 50,
            marginLeft: 10
          }
        })));
      }
    }]);
    return CoffeeTicketItem;
  }(_react.default.Component);

  var ScreenW = _reactNative.Dimensions.get('window').width;

  var CoffeeItemPadding = 15;
  var itemW = (ScreenW - 45) / 2;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingVertical: 15
    },
    coffeeItem: {
      width: itemW,
      marginTop: 10,
      backgroundColor: 'white',
      marginLeft: CoffeeItemPadding,
      alignItems: 'flex-start',
      borderWidth: 1,
      borderRadius: 5
    }
  });
},770,[1,22,23,30,33,36,49,2,771]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/rn_component/source/img",
    "width": 395,
    "height": 316,
    "scales": [1],
    "hash": "a7b5add597e22557ea20660053aeecc1",
    "name": "coffeeCup",
    "type": "png"
  });
},771,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.coffeeTicketData = undefined;
  var coffeeTicketData = {
    'coffeeTicketList': [{
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }, {
      ticketLevel: 'A',
      ticketPrice: 30,
      ticketType: '摩卡',
      remainCups: 2
    }, {
      ticketLevel: 'B',
      ticketPrice: 25,
      ticketType: '卡布其诺',
      remainCups: 12
    }, {
      ticketLevel: 'C',
      ticketPrice: 20,
      ticketType: '焦糖',
      remainCups: 3
    }]
  };
  exports.coffeeTicketData = coffeeTicketData;
},772,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var InvalidLuckinTickets = function (_React$Component) {
    (0, _inherits2.default)(InvalidLuckinTickets, _React$Component);

    function InvalidLuckinTickets() {
      (0, _classCallCheck2.default)(this, InvalidLuckinTickets);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InvalidLuckinTickets).apply(this, arguments));
    }

    (0, _createClass2.default)(InvalidLuckinTickets, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, null, "\u8FD9\u662F\u65E0\u6548\u5496\u5561\u5238\u9875\u9762"));
      }
    }]);
    return InvalidLuckinTickets;
  }(_react.default.Component);

  exports.default = InvalidLuckinTickets;

  InvalidLuckinTickets.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "无效咖啡券"
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };
},773,[1,22,23,30,33,36,49,762,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[9]);

  var DiscountResultData = {
    buyStateLabel: "购买失败",
    promptLabel: "非常抱歉,请再次尝试",
    buyAggain: "重试购买"
  };

  var LKDiscountResult = function (_Component) {
    (0, _inherits2.default)(LKDiscountResult, _Component);

    function LKDiscountResult() {
      (0, _classCallCheck2.default)(this, LKDiscountResult);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LKDiscountResult).apply(this, arguments));
    }

    (0, _createClass2.default)(LKDiscountResult, [{
      key: "_onPressButton",
      value: function _onPressButton() {
        _reactNative.Alert.alert('Plese retry to buy!');
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[10]),
          style: styles.thumbnail
        }), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.buyStateLabel
        }, DiscountResultData.buyStateLabel)), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.promptLabel
        }, DiscountResultData.promptLabel)), _react.default.createElement(_reactNative.View, {
          style: styles.buttonContainer
        }, _react.default.createElement(_reactNative.Button, {
          onPress: this._onPressButton,
          title: "\u91CD\u8BD5\u8D2D\u4E70",
          color: "#FFFFFF"
        })));
      }
    }]);
    return LKDiscountResult;
  }(_react.Component);

  exports.default = LKDiscountResult;

  LKDiscountResult.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerBackImage: _react.default.createElement(_reactNative.Image, {
        source: _$$_REQUIRE(_dependencyMap[11]),
        style: {
          width: 25,
          height: 25
        }
      }),
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "购买失败"
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      alignItems: "center",
      backgroundColor: "#F5FCFF"
    },
    thumbnail: {
      marginTop: 150,
      width: 75,
      height: 75
    },
    buyStateLabel: {
      marginTop: 50,
      fontSize: 28
    },
    promptLabel: {
      marginTop: 30,
      fontSize: 16
    },
    buttonContainer: {
      marginTop: 80,
      backgroundColor: "#7ca7d2",
      fontSize: 16,
      borderRadius: 5,
      justifyContent: 'center',
      width: 152,
      height: 50
    }
  });
},774,[362,1,22,23,30,33,36,49,2,762,775,776]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/rn_component/source/img",
    "width": 80,
    "height": 80,
    "scales": [2, 3],
    "hash": "b205470b0a31312203826320afc91392",
    "name": "fail_icon",
    "type": "png"
  });
},775,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/rn_component/source/img",
    "width": 36,
    "height": 36,
    "scales": [1],
    "hash": "9c191d4da9ca38b8f10ccaa4b60e857a",
    "name": "baseline_clear_black",
    "type": "png"
  });
},776,[162]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var CoffeeWillExpiredWallet = function (_React$Component) {
    (0, _inherits2.default)(CoffeeWillExpiredWallet, _React$Component);

    function CoffeeWillExpiredWallet() {
      (0, _classCallCheck2.default)(this, CoffeeWillExpiredWallet);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CoffeeWillExpiredWallet).apply(this, arguments));
    }

    (0, _createClass2.default)(CoffeeWillExpiredWallet, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, null, "\u8FD9\u662F\u5C06\u8981\u8FC7\u671F\u5496\u5561\u5238\u9875\u9762"));
      }
    }]);
    return CoffeeWillExpiredWallet;
  }(_react.default.Component);

  exports.default = CoffeeWillExpiredWallet;

  CoffeeWillExpiredWallet.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: '将要过期咖啡券'
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };
},777,[1,22,23,30,33,36,49,762,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _People2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var Man = function (_People) {
    (0, _inherits2.default)(Man, _People);

    function Man(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Man);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Man).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(Man, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        console.log("test props");
        console.log(this.props.age);
        console.log("test field");
        console.log(this.weight);
      }
    }]);
    return Man;
  }(_People2.default);

  exports.default = Man;
  Man.propTypes = {
    sex: _propTypes.default.string
  };
  Man.defaultProps = (0, _objectSpread2.default)({}, _People2.default.defaultProps, {
    sex: 'man'
  });
},778,[1,46,22,23,30,33,36,779,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _badge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var People = function (_React$Component) {
    (0, _inherits2.default)(People, _React$Component);

    function People(props) {
      var _this;

      (0, _classCallCheck2.default)(this, People);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(People).call(this, props));
      _this.weight = 100;
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(People, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, null, " -\u4F60\u597D\u554A\uFF0Cthis is a people-,\u4ED6\u662F "), _react.default.createElement(_reactNative.Text, null, " ", this.props.sex, " "));
      }
    }]);
    return People;
  }(_react.default.Component);

  exports.default = People;
  People.propTypes = {
    age: _propTypes.default.number,
    height: _propTypes.default.number
  };
  People.defaultProps = {
    age: 18,
    height: 170,
    sex: 'woman'
  };
},779,[1,22,23,30,33,36,49,2,766,61]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeScrollableTabView = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var TestScrollTabPage = function (_React$Component) {
    (0, _inherits2.default)(TestScrollTabPage, _React$Component);

    function TestScrollTabPage() {
      (0, _classCallCheck2.default)(this, TestScrollTabPage);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TestScrollTabPage).apply(this, arguments));
    }

    (0, _createClass2.default)(TestScrollTabPage, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNativeScrollableTabView.default, null, _react.default.createElement(_reactNative.Text, {
          tabLabel: "Tab 1"
        }, "Tab 1"), _react.default.createElement(_reactNative.Text, {
          tabLabel: "Tab 2"
        }, "Tab 2"), _react.default.createElement(_reactNative.Text, {
          tabLabel: "Tab 3"
        }, "Tab 3"));
      }
    }]);
    return TestScrollTabPage;
  }(_react.default.Component);

  exports.default = TestScrollTabPage;

  TestScrollTabPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "测试滚动Tab"
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };
},780,[362,1,22,23,30,33,36,49,2,762,781]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var React = _$$_REQUIRE(_dependencyMap[2]);

  var Component = React.Component;

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[3]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var createReactClass = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _ReactNative2 = ReactNative,
      Dimensions = _ReactNative2.Dimensions,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated,
      ScrollView = _ReactNative2.ScrollView,
      Platform = _ReactNative2.Platform,
      StyleSheet = _ReactNative2.StyleSheet,
      ViewPagerAndroid = _ReactNative2.ViewPagerAndroid,
      InteractionManager = _ReactNative2.InteractionManager;

  var TimerMixin = _$$_REQUIRE(_dependencyMap[6]);

  var SceneComponent = _$$_REQUIRE(_dependencyMap[7]);

  var DefaultTabBar = _$$_REQUIRE(_dependencyMap[8]);

  var ScrollableTabBar = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedViewPagerAndroid = Animated.createAnimatedComponent(ViewPagerAndroid);
  var ScrollableTabView = createReactClass({
    displayName: "ScrollableTabView",
    mixins: [TimerMixin],
    statics: {
      DefaultTabBar: DefaultTabBar,
      ScrollableTabBar: ScrollableTabBar
    },
    scrollOnMountCalled: false,
    propTypes: {
      tabBarPosition: PropTypes.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom']),
      initialPage: PropTypes.number,
      page: PropTypes.number,
      onChangeTab: PropTypes.func,
      onScroll: PropTypes.func,
      renderTabBar: PropTypes.any,
      style: ViewPropTypes.style,
      contentProps: PropTypes.object,
      scrollWithoutAnimation: PropTypes.bool,
      locked: PropTypes.bool,
      prerenderingSiblingsNumber: PropTypes.number
    },
    getDefaultProps: function getDefaultProps() {
      return {
        tabBarPosition: 'top',
        initialPage: 0,
        page: -1,
        onChangeTab: function onChangeTab() {},
        onScroll: function onScroll() {},
        contentProps: {},
        scrollWithoutAnimation: false,
        locked: false,
        prerenderingSiblingsNumber: 0
      };
    },
    getInitialState: function getInitialState() {
      var _this = this;

      var containerWidth = Dimensions.get('window').width;
      var scrollValue;
      var scrollXIOS;
      var positionAndroid;
      var offsetAndroid;
      {
        positionAndroid = new Animated.Value(this.props.initialPage);
        offsetAndroid = new Animated.Value(0);
        scrollValue = Animated.add(positionAndroid, offsetAndroid);

        var _callListeners = this._polyfillAnimatedValue(scrollValue);

        var positionAndroidValue = this.props.initialPage;
        var offsetAndroidValue = 0;
        positionAndroid.addListener(function (_ref2) {
          var value = _ref2.value;
          positionAndroidValue = value;

          _callListeners(positionAndroidValue + offsetAndroidValue);
        });
        offsetAndroid.addListener(function (_ref3) {
          var value = _ref3.value;
          offsetAndroidValue = value;

          _callListeners(positionAndroidValue + offsetAndroidValue);
        });
      }
      return {
        currentPage: this.props.initialPage,
        scrollValue: scrollValue,
        scrollXIOS: scrollXIOS,
        positionAndroid: positionAndroid,
        offsetAndroid: offsetAndroid,
        containerWidth: containerWidth,
        sceneKeys: this.newSceneKeys({
          currentPage: this.props.initialPage
        })
      };
    },
    componentWillReceiveProps: function componentWillReceiveProps(props) {
      if (props.children !== this.props.children) {
        this.updateSceneKeys({
          page: this.state.currentPage,
          children: props.children
        });
      }

      if (props.page >= 0 && props.page !== this.state.currentPage) {
        this.goToPage(props.page);
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      {
        this.state.positionAndroid.removeAllListeners();
        this.state.offsetAndroid.removeAllListeners();
      }
    },
    goToPage: function goToPage(pageNumber) {
      {
        if (this.scrollView) {
          if (this.props.scrollWithoutAnimation) {
            this.scrollView.getNode().setPageWithoutAnimation(pageNumber);
          } else {
            this.scrollView.getNode().setPage(pageNumber);
          }
        }
      }
      var currentPage = this.state.currentPage;
      this.updateSceneKeys({
        page: pageNumber,
        callback: this._onChangeTab.bind(this, currentPage, pageNumber)
      });
    },
    renderTabBar: function renderTabBar(props) {
      if (this.props.renderTabBar === false) {
        return null;
      } else if (this.props.renderTabBar) {
        return React.cloneElement(this.props.renderTabBar(props), props);
      } else {
        return React.createElement(DefaultTabBar, props);
      }
    },
    updateSceneKeys: function updateSceneKeys(_ref4) {
      var page = _ref4.page,
          _ref4$children = _ref4.children,
          children = _ref4$children === undefined ? this.props.children : _ref4$children,
          _ref4$callback = _ref4.callback,
          callback = _ref4$callback === undefined ? function () {} : _ref4$callback;
      var newKeys = this.newSceneKeys({
        previousKeys: this.state.sceneKeys,
        currentPage: page,
        children: children
      });
      this.setState({
        currentPage: page,
        sceneKeys: newKeys
      }, callback);
    },
    newSceneKeys: function newSceneKeys(_ref5) {
      var _this2 = this;

      var _ref5$previousKeys = _ref5.previousKeys,
          previousKeys = _ref5$previousKeys === undefined ? [] : _ref5$previousKeys,
          _ref5$currentPage = _ref5.currentPage,
          currentPage = _ref5$currentPage === undefined ? 0 : _ref5$currentPage,
          _ref5$children = _ref5.children,
          children = _ref5$children === undefined ? this.props.children : _ref5$children;
      var newKeys = [];

      this._children(children).forEach(function (child, idx) {
        var key = _this2._makeSceneKey(child, idx);

        if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {
          newKeys.push(key);
        }
      });

      return newKeys;
    },
    _polyfillAnimatedValue: function _polyfillAnimatedValue(animatedValue) {
      var listeners = new Set();

      var addListener = function addListener(listener) {
        listeners.add(listener);
      };

      var removeListener = function removeListener(listener) {
        listeners.delete(listener);
      };

      var removeAllListeners = function removeAllListeners() {
        listeners.clear();
      };

      animatedValue.addListener = addListener;
      animatedValue.removeListener = removeListener;
      animatedValue.removeAllListeners = removeAllListeners;
      return function (value) {
        return listeners.forEach(function (listener) {
          return listener({
            value: value
          });
        });
      };
    },
    _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {
      var numOfSibling = this.props.prerenderingSiblingsNumber;
      return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;
    },
    _keyExists: function _keyExists(sceneKeys, key) {
      return sceneKeys.find(function (sceneKey) {
        return key === sceneKey;
      });
    },
    _makeSceneKey: function _makeSceneKey(child, idx) {
      return child.props.tabLabel + '_' + idx;
    },
    renderScrollableContent: function renderScrollableContent() {
      var _this3 = this;

      {
        var _scenes = this._composeScenes();

        return React.createElement(AnimatedViewPagerAndroid, _extends({
          key: this._children().length,
          style: styles.scrollableContentAndroid,
          initialPage: this.props.initialPage,
          onPageSelected: this._updateSelectedPage,
          keyboardDismissMode: "on-drag",
          scrollEnabled: !this.props.locked,
          onPageScroll: Animated.event([{
            nativeEvent: {
              position: this.state.positionAndroid,
              offset: this.state.offsetAndroid
            }
          }], {
            useNativeDriver: true,
            listener: this._onScroll
          }),
          ref: function ref(scrollView) {
            _this3.scrollView = scrollView;
          }
        }, this.props.contentProps), _scenes);
      }
    },
    _composeScenes: function _composeScenes() {
      var _this4 = this;

      return this._children().map(function (child, idx) {
        var key = _this4._makeSceneKey(child, idx);

        return React.createElement(SceneComponent, {
          key: child.key,
          shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),
          style: {
            width: _this4.state.containerWidth
          }
        }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {
          tabLabel: child.props.tabLabel
        }));
      });
    },
    _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {
      var offsetX = e.nativeEvent.contentOffset.x;
      var page = Math.round(offsetX / this.state.containerWidth);

      if (this.state.currentPage !== page) {
        this._updateSelectedPage(page);
      }
    },
    _updateSelectedPage: function _updateSelectedPage(nextPage) {
      var localNextPage = nextPage;

      if (typeof localNextPage === 'object') {
        localNextPage = nextPage.nativeEvent.position;
      }

      var currentPage = this.state.currentPage;
      this.updateSceneKeys({
        page: localNextPage,
        callback: this._onChangeTab.bind(this, currentPage, localNextPage)
      });
    },
    _onChangeTab: function _onChangeTab(prevPage, currentPage) {
      this.props.onChangeTab({
        i: currentPage,
        ref: this._children()[currentPage],
        from: prevPage
      });
    },
    _onScroll: function _onScroll(e) {
      {
        var _e$nativeEvent = e.nativeEvent,
            position = _e$nativeEvent.position,
            offset = _e$nativeEvent.offset;
        this.props.onScroll(position + offset);
      }
    },
    _handleLayout: function _handleLayout(e) {
      var _this5 = this;

      var width = e.nativeEvent.layout.width;

      if (!width || width <= 0 || Math.round(width) === Math.round(this.state.containerWidth)) {
        return;
      }

      {
        this.setState({
          containerWidth: width
        });
      }
      this.requestAnimationFrame(function () {
        _this5.goToPage(_this5.state.currentPage);
      });
    },
    _children: function _children() {
      var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;
      return React.Children.map(children, function (child) {
        return child;
      });
    },
    render: function render() {
      var overlayTabs = this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom';
      var tabBarProps = {
        goToPage: this.goToPage,
        tabs: this._children().map(function (child) {
          return child.props.tabLabel;
        }),
        activeTab: this.state.currentPage,
        scrollValue: this.state.scrollValue,
        containerWidth: this.state.containerWidth
      };

      if (this.props.tabBarBackgroundColor) {
        tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;
      }

      if (this.props.tabBarActiveTextColor) {
        tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;
      }

      if (this.props.tabBarInactiveTextColor) {
        tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;
      }

      if (this.props.tabBarTextStyle) {
        tabBarProps.textStyle = this.props.tabBarTextStyle;
      }

      if (this.props.tabBarUnderlineStyle) {
        tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;
      }

      if (overlayTabs) {
        tabBarProps.style = _defineProperty({
          position: 'absolute',
          left: 0,
          right: 0
        }, this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom', 0);
      }

      return React.createElement(View, {
        style: [styles.container, this.props.style],
        onLayout: this._handleLayout
      }, this.props.tabBarPosition === 'top' && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === 'bottom' || overlayTabs) && this.renderTabBar(tabBarProps));
    }
  });
  module.exports = ScrollableTabView;
  var styles = StyleSheet.create({
    container: {
      flex: 1
    },
    scrollableContentAndroid: {
      flex: 1
    }
  });
},781,[47,11,49,2,194,61,782,783,785,787]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var GLOBAL = typeof window === 'undefined' ? global : window;

  var setter = function setter(_setter, _clearer, array) {
    return function (callback, delta) {
      var id = _setter(function () {
        _clearer.call(this, id);

        callback.apply(this, arguments);
      }.bind(this), delta);

      if (!this[array]) {
        this[array] = [id];
      } else {
        this[array].push(id);
      }

      return id;
    };
  };

  var clearer = function clearer(_clearer, array) {
    return function (id) {
      if (this[array]) {
        var index = this[array].indexOf(id);

        if (index !== -1) {
          this[array].splice(index, 1);
        }
      }

      _clearer(id);
    };
  };

  var _timeouts = 'TimerMixin_timeouts';

  var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);

  var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

  var _intervals = 'TimerMixin_intervals';

  var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);

  var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

  var _immediates = 'TimerMixin_immediates';

  var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);

  var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

  var _rafs = 'TimerMixin_rafs';

  var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);

  var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

  var TimerMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this[_timeouts] && this[_timeouts].forEach(function (id) {
        GLOBAL.clearTimeout(id);
      });
      this[_timeouts] = null;
      this[_intervals] && this[_intervals].forEach(function (id) {
        GLOBAL.clearInterval(id);
      });
      this[_intervals] = null;
      this[_immediates] && this[_immediates].forEach(function (id) {
        GLOBAL.clearImmediate(id);
      });
      this[_immediates] = null;
      this[_rafs] && this[_rafs].forEach(function (id) {
        GLOBAL.cancelAnimationFrame(id);
      });
      this[_rafs] = null;
    },
    setTimeout: _setTimeout,
    clearTimeout: _clearTimeout,
    setInterval: _setInterval,
    clearInterval: _clearInterval,
    setImmediate: _setImmediate,
    clearImmediate: _clearImmediate,
    requestAnimationFrame: _requestAnimationFrame,
    cancelAnimationFrame: _cancelAnimationFrame
  };
  module.exports = TimerMixin;
},782,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[2]);

  var Component = React.Component;
  var View = ReactNative.View,
      StyleSheet = ReactNative.StyleSheet;

  var StaticContainer = _$$_REQUIRE(_dependencyMap[3]);

  var SceneComponent = function SceneComponent(Props) {
    var shouldUpdated = Props.shouldUpdated,
        props = _objectWithoutProperties(Props, ["shouldUpdated"]);

    return React.createElement(View, props, React.createElement(StaticContainer, {
      shouldUpdate: shouldUpdated
    }, props.children));
  };

  module.exports = SceneComponent;
},783,[9,49,2,784]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StaticContainer = function (_React$Component) {
    "use strict";

    _inherits(StaticContainer, _React$Component);

    function StaticContainer() {
      _classCallCheck(this, StaticContainer);

      return _possibleConstructorReturn(this, _getPrototypeOf(StaticContainer).apply(this, arguments));
    }

    _createClass(StaticContainer, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return !!nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;

        if (child === null || child === false) {
          return null;
        }

        return React.Children.only(child);
      }
    }]);

    return StaticContainer;
  }(React.Component);

  module.exports = StaticContainer;
},784,[22,23,30,33,36,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var React = _$$_REQUIRE(_dependencyMap[0]);

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[1]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _ReactNative2 = ReactNative,
      StyleSheet = _ReactNative2.StyleSheet,
      Text = _ReactNative2.Text,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated;

  var Button = _$$_REQUIRE(_dependencyMap[4]);

  var DefaultTabBar = createReactClass({
    displayName: "DefaultTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      textStyle: Text.propTypes.style,
      tabStyle: ViewPropTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style
    },
    getDefaultProps: function getDefaultProps() {
      return {
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null
      };
    },
    renderTabOption: function renderTabOption(name, page) {},
    renderTab: function renderTab(name, page, isTabActive, onPressHandler) {
      var _this$props = this.props,
          activeTextColor = _this$props.activeTextColor,
          inactiveTextColor = _this$props.inactiveTextColor,
          textStyle = _this$props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(Button, {
        style: {
          flex: 1
        },
        key: name,
        accessible: true,
        accessibilityLabel: name,
        accessibilityTraits: "button",
        onPress: function onPress() {
          return onPressHandler(page);
        }
      }, React.createElement(View, {
        style: [styles.tab, this.props.tabStyle]
      }, React.createElement(Text, {
        style: [{
          color: textColor,
          fontWeight: fontWeight
        }, textStyle]
      }, name)));
    },
    render: function render() {
      var _this = this;

      var containerWidth = this.props.containerWidth;
      var numberOfTabs = this.props.tabs.length;
      var tabUnderlineStyle = {
        position: 'absolute',
        width: containerWidth / numberOfTabs,
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var translateX = this.props.scrollValue.interpolate({
        inputRange: [0, 1],
        outputRange: [0, containerWidth / numberOfTabs]
      });
      return React.createElement(View, {
        style: [styles.tabs, {
          backgroundColor: this.props.backgroundColor
        }, this.props.style]
      }, this.props.tabs.map(function (name, page) {
        var isTabActive = _this.props.activeTab === page;
        var renderTab = _this.props.renderTab || _this.renderTab;
        return renderTab(name, page, isTabActive, _this.props.goToPage);
      }), React.createElement(Animated.View, {
        style: [tabUnderlineStyle, {
          transform: [{
            translateX: translateX
          }]
        }, this.props.underlineStyle]
      }));
    }
  });
  var styles = StyleSheet.create({
    tab: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      paddingBottom: 10
    },
    tabs: {
      height: 50,
      flexDirection: 'row',
      justifyContent: 'space-around',
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    }
  });
  module.exports = DefaultTabBar;
},785,[49,2,61,194,786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[2]);

  var TouchableNativeFeedback = ReactNative.TouchableNativeFeedback,
      View = ReactNative.View;

  var Button = function Button(props) {
    return React.createElement(TouchableNativeFeedback, _extends({
      delayPressIn: 0,
      background: TouchableNativeFeedback.SelectableBackground()
    }, props), props.children);
  };

  module.exports = Button;
},786,[11,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var React = _$$_REQUIRE(_dependencyMap[0]);

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[1]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _ReactNative2 = ReactNative,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated,
      StyleSheet = _ReactNative2.StyleSheet,
      ScrollView = _ReactNative2.ScrollView,
      Text = _ReactNative2.Text,
      Platform = _ReactNative2.Platform,
      Dimensions = _ReactNative2.Dimensions;

  var Button = _$$_REQUIRE(_dependencyMap[4]);

  var WINDOW_WIDTH = Dimensions.get('window').width;
  var ScrollableTabBar = createReactClass({
    displayName: "ScrollableTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      scrollOffset: PropTypes.number,
      style: ViewPropTypes.style,
      tabStyle: ViewPropTypes.style,
      tabsContainerStyle: ViewPropTypes.style,
      textStyle: Text.propTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style,
      onScroll: PropTypes.func
    },
    getDefaultProps: function getDefaultProps() {
      return {
        scrollOffset: 52,
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null,
        style: {},
        tabStyle: {},
        tabsContainerStyle: {},
        underlineStyle: {}
      };
    },
    getInitialState: function getInitialState() {
      this._tabsMeasurements = [];
      return {
        _leftTabUnderline: new Animated.Value(0),
        _widthTabUnderline: new Animated.Value(0),
        _containerWidth: null
      };
    },
    componentDidMount: function componentDidMount() {
      this.props.scrollValue.addListener(this.updateView);
    },
    updateView: function updateView(offset) {
      var position = Math.floor(offset.value);
      var pageOffset = offset.value % 1;
      var tabCount = this.props.tabs.length;
      var lastTabPosition = tabCount - 1;

      if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {
        return;
      }

      if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {
        this.updateTabPanel(position, pageOffset);
        this.updateTabUnderline(position, pageOffset, tabCount);
      }
    },
    necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {
      return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;
    },
    updateTabPanel: function updateTabPanel(position, pageOffset) {
      var containerWidth = this._containerMeasurements.width;
      var tabWidth = this._tabsMeasurements[position].width;
      var nextTabMeasurements = this._tabsMeasurements[position + 1];
      var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;
      var tabOffset = this._tabsMeasurements[position].left;
      var absolutePageOffset = pageOffset * tabWidth;
      var newScrollX = tabOffset + absolutePageOffset;
      newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;
      newScrollX = newScrollX >= 0 ? newScrollX : 0;
      {
        this._scrollView.scrollTo({
          x: newScrollX,
          y: 0,
          animated: false
        });
      }
    },
    updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {
      var lineLeft = this._tabsMeasurements[position].left;
      var lineRight = this._tabsMeasurements[position].right;

      if (position < tabCount - 1) {
        var nextTabLeft = this._tabsMeasurements[position + 1].left;
        var nextTabRight = this._tabsMeasurements[position + 1].right;
        var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;
        var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;

        this.state._leftTabUnderline.setValue(newLineLeft);

        this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);
      } else {
        this.state._leftTabUnderline.setValue(lineLeft);

        this.state._widthTabUnderline.setValue(lineRight - lineLeft);
      }
    },
    renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {
      var _this$props = this.props,
          activeTextColor = _this$props.activeTextColor,
          inactiveTextColor = _this$props.inactiveTextColor,
          textStyle = _this$props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(Button, {
        key: name + "_" + page,
        accessible: true,
        accessibilityLabel: name,
        accessibilityTraits: "button",
        onPress: function onPress() {
          return onPressHandler(page);
        },
        onLayout: onLayoutHandler
      }, React.createElement(View, {
        style: [styles.tab, this.props.tabStyle]
      }, React.createElement(Text, {
        style: [{
          color: textColor,
          fontWeight: fontWeight
        }, textStyle]
      }, name)));
    },
    measureTab: function measureTab(page, event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          x = _event$nativeEvent$la.x,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      this._tabsMeasurements[page] = {
        left: x,
        right: x + width,
        width: width,
        height: height
      };
      this.updateView({
        value: this.props.scrollValue.__getValue()
      });
    },
    render: function render() {
      var _this = this;

      var tabUnderlineStyle = {
        position: 'absolute',
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var dynamicTabUnderline = {
        left: this.state._leftTabUnderline,
        width: this.state._widthTabUnderline
      };
      return React.createElement(View, {
        style: [styles.container, {
          backgroundColor: this.props.backgroundColor
        }, this.props.style],
        onLayout: this.onContainerLayout
      }, React.createElement(ScrollView, {
        ref: function ref(scrollView) {
          _this._scrollView = scrollView;
        },
        horizontal: true,
        showsHorizontalScrollIndicator: false,
        showsVerticalScrollIndicator: false,
        directionalLockEnabled: true,
        bounces: false,
        scrollsToTop: false
      }, React.createElement(View, {
        style: [styles.tabs, {
          width: this.state._containerWidth
        }, this.props.tabsContainerStyle],
        ref: 'tabContainer',
        onLayout: this.onTabContainerLayout
      }, this.props.tabs.map(function (name, page) {
        var isTabActive = _this.props.activeTab === page;
        var renderTab = _this.props.renderTab || _this.renderTab;
        return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page));
      }), React.createElement(Animated.View, {
        style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle]
      }))));
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      if (JSON.stringify(this.props.tabs) !== JSON.stringify(nextProps.tabs) && this.state._containerWidth) {
        this.setState({
          _containerWidth: null
        });
      }
    },
    onTabContainerLayout: function onTabContainerLayout(e) {
      this._tabContainerMeasurements = e.nativeEvent.layout;
      var width = this._tabContainerMeasurements.width;

      if (width < WINDOW_WIDTH) {
        width = WINDOW_WIDTH;
      }

      this.setState({
        _containerWidth: width
      });
      this.updateView({
        value: this.props.scrollValue.__getValue()
      });
    },
    onContainerLayout: function onContainerLayout(e) {
      this._containerMeasurements = e.nativeEvent.layout;
      this.updateView({
        value: this.props.scrollValue.__getValue()
      });
    }
  });
  module.exports = ScrollableTabBar;
  var styles = StyleSheet.create({
    tab: {
      height: 49,
      alignItems: 'center',
      justifyContent: 'center',
      paddingLeft: 20,
      paddingRight: 20
    },
    container: {
      height: 50,
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    },
    tabs: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    }
  });
},787,[49,2,61,194,786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNativeSvg = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[10]);

  var SvgShow = function (_React$Component) {
    (0, _inherits2.default)(SvgShow, _React$Component);

    function SvgShow() {
      (0, _classCallCheck2.default)(this, SvgShow);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SvgShow).apply(this, arguments));
    }

    (0, _createClass2.default)(SvgShow, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNativeSvg.default, {
          width: "200",
          height: "100"
        }, _react.default.createElement(_reactNativeSvg.Rect, {
          x: "25",
          y: "5",
          width: "150",
          height: "50",
          fill: "rgb(0,0,255)",
          strokeWidth: "3",
          stroke: "rgb(0,0,0)"
        })), _react.default.createElement(_reactNativeSvg.default, {
          width: "200",
          height: "100"
        }, _react.default.createElement(_reactNativeSvg.Rect, {
          x: "25",
          y: "5",
          width: "150",
          height: "50",
          fill: "rgb(0,0,255)",
          strokeWidth: "3",
          stroke: "rgb(0,0,0)"
        })));
      }
    }]);
    return SvgShow;
  }(_react.default.Component);

  exports.default = SvgShow;

  SvgShow.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "svg"
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };
},788,[362,1,22,23,30,33,36,49,2,789,762]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function get() {
      return _ReactNativeSVG.default;
    }
  });

  var _ReactNativeSVG = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  Object.keys(_ReactNativeSVG).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _ReactNativeSVG[key];
      }
    });
  });
},789,[362,790]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Shape", {
    enumerable: true,
    get: function get() {
      return _Shape.default;
    }
  });
  Object.defineProperty(exports, "Rect", {
    enumerable: true,
    get: function get() {
      return _Rect.default;
    }
  });
  Object.defineProperty(exports, "RNSVGRect", {
    enumerable: true,
    get: function get() {
      return _Rect.RNSVGRect;
    }
  });
  Object.defineProperty(exports, "Circle", {
    enumerable: true,
    get: function get() {
      return _Circle.default;
    }
  });
  Object.defineProperty(exports, "RNSVGCircle", {
    enumerable: true,
    get: function get() {
      return _Circle.RNSVGCircle;
    }
  });
  Object.defineProperty(exports, "Ellipse", {
    enumerable: true,
    get: function get() {
      return _Ellipse.default;
    }
  });
  Object.defineProperty(exports, "RNSVGEllipse", {
    enumerable: true,
    get: function get() {
      return _Ellipse.RNSVGEllipse;
    }
  });
  Object.defineProperty(exports, "Polygon", {
    enumerable: true,
    get: function get() {
      return _Polygon.default;
    }
  });
  Object.defineProperty(exports, "Polyline", {
    enumerable: true,
    get: function get() {
      return _Polyline.default;
    }
  });
  Object.defineProperty(exports, "Line", {
    enumerable: true,
    get: function get() {
      return _Line.default;
    }
  });
  Object.defineProperty(exports, "RNSVGLine", {
    enumerable: true,
    get: function get() {
      return _Line.RNSVGLine;
    }
  });
  Object.defineProperty(exports, "Svg", {
    enumerable: true,
    get: function get() {
      return _Svg.default;
    }
  });
  Object.defineProperty(exports, "RNSVGSvg", {
    enumerable: true,
    get: function get() {
      return _Svg.RNSVGSvg;
    }
  });
  Object.defineProperty(exports, "Path", {
    enumerable: true,
    get: function get() {
      return _Path.default;
    }
  });
  Object.defineProperty(exports, "RNSVGPath", {
    enumerable: true,
    get: function get() {
      return _Path.RNSVGPath;
    }
  });
  Object.defineProperty(exports, "G", {
    enumerable: true,
    get: function get() {
      return _G.default;
    }
  });
  Object.defineProperty(exports, "RNSVGGroup", {
    enumerable: true,
    get: function get() {
      return _G.RNSVGGroup;
    }
  });
  Object.defineProperty(exports, "Text", {
    enumerable: true,
    get: function get() {
      return _Text.default;
    }
  });
  Object.defineProperty(exports, "RNSVGText", {
    enumerable: true,
    get: function get() {
      return _Text.RNSVGText;
    }
  });
  Object.defineProperty(exports, "TSpan", {
    enumerable: true,
    get: function get() {
      return _TSpan.default;
    }
  });
  Object.defineProperty(exports, "RNSVGTSpan", {
    enumerable: true,
    get: function get() {
      return _TSpan.RNSVGTSpan;
    }
  });
  Object.defineProperty(exports, "TextPath", {
    enumerable: true,
    get: function get() {
      return _TextPath.default;
    }
  });
  Object.defineProperty(exports, "RNSVGTextPath", {
    enumerable: true,
    get: function get() {
      return _TextPath.RNSVGTextPath;
    }
  });
  Object.defineProperty(exports, "Use", {
    enumerable: true,
    get: function get() {
      return _Use.default;
    }
  });
  Object.defineProperty(exports, "RNSVGUse", {
    enumerable: true,
    get: function get() {
      return _Use.RNSVGUse;
    }
  });
  Object.defineProperty(exports, "Image", {
    enumerable: true,
    get: function get() {
      return _Image.default;
    }
  });
  Object.defineProperty(exports, "RNSVGImage", {
    enumerable: true,
    get: function get() {
      return _Image.RNSVGImage;
    }
  });
  Object.defineProperty(exports, "Symbol", {
    enumerable: true,
    get: function get() {
      return _Symbol.default;
    }
  });
  Object.defineProperty(exports, "RNSVGSymbol", {
    enumerable: true,
    get: function get() {
      return _Symbol.RNSVGSymbol;
    }
  });
  Object.defineProperty(exports, "Defs", {
    enumerable: true,
    get: function get() {
      return _Defs.default;
    }
  });
  Object.defineProperty(exports, "RNSVGDefs", {
    enumerable: true,
    get: function get() {
      return _Defs.RNSVGDefs;
    }
  });
  Object.defineProperty(exports, "LinearGradient", {
    enumerable: true,
    get: function get() {
      return _LinearGradient.default;
    }
  });
  Object.defineProperty(exports, "RNSVGLinearGradient", {
    enumerable: true,
    get: function get() {
      return _LinearGradient.RNSVGLinearGradient;
    }
  });
  Object.defineProperty(exports, "RadialGradient", {
    enumerable: true,
    get: function get() {
      return _RadialGradient.default;
    }
  });
  Object.defineProperty(exports, "RNSVGRadialGradient", {
    enumerable: true,
    get: function get() {
      return _RadialGradient.RNSVGRadialGradient;
    }
  });
  Object.defineProperty(exports, "Stop", {
    enumerable: true,
    get: function get() {
      return _Stop.default;
    }
  });
  Object.defineProperty(exports, "ClipPath", {
    enumerable: true,
    get: function get() {
      return _ClipPath.default;
    }
  });
  Object.defineProperty(exports, "RNSVGClipPath", {
    enumerable: true,
    get: function get() {
      return _ClipPath.RNSVGClipPath;
    }
  });
  Object.defineProperty(exports, "Pattern", {
    enumerable: true,
    get: function get() {
      return _Pattern.default;
    }
  });
  Object.defineProperty(exports, "RNSVGPattern", {
    enumerable: true,
    get: function get() {
      return _Pattern.RNSVGPattern;
    }
  });
  Object.defineProperty(exports, "Mask", {
    enumerable: true,
    get: function get() {
      return _Mask.default;
    }
  });
  Object.defineProperty(exports, "RNSVGMask", {
    enumerable: true,
    get: function get() {
      return _Mask.RNSVGMask;
    }
  });
  Object.defineProperty(exports, "Marker", {
    enumerable: true,
    get: function get() {
      return _Marker.default;
    }
  });
  Object.defineProperty(exports, "RNSVGMarker", {
    enumerable: true,
    get: function get() {
      return _Marker.RNSVGMarker;
    }
  });
  Object.defineProperty(exports, "parse", {
    enumerable: true,
    get: function get() {
      return _xml.parse;
    }
  });
  Object.defineProperty(exports, "SvgAst", {
    enumerable: true,
    get: function get() {
      return _xml.SvgAst;
    }
  });
  Object.defineProperty(exports, "SvgFromUri", {
    enumerable: true,
    get: function get() {
      return _xml.SvgFromUri;
    }
  });
  Object.defineProperty(exports, "SvgFromXml", {
    enumerable: true,
    get: function get() {
      return _xml.SvgFromXml;
    }
  });
  Object.defineProperty(exports, "SvgUri", {
    enumerable: true,
    get: function get() {
      return _xml.SvgUri;
    }
  });
  Object.defineProperty(exports, "SvgXml", {
    enumerable: true,
    get: function get() {
      return _xml.SvgXml;
    }
  });
  Object.defineProperty(exports, "SvgCss", {
    enumerable: true,
    get: function get() {
      return _css.SvgCss;
    }
  });
  Object.defineProperty(exports, "SvgCssUri", {
    enumerable: true,
    get: function get() {
      return _css.SvgCssUri;
    }
  });
  Object.defineProperty(exports, "SvgWithCss", {
    enumerable: true,
    get: function get() {
      return _css.SvgWithCss;
    }
  });
  Object.defineProperty(exports, "SvgWithCssUri", {
    enumerable: true,
    get: function get() {
      return _css.SvgWithCssUri;
    }
  });
  Object.defineProperty(exports, "inlineStyles", {
    enumerable: true,
    get: function get() {
      return _css.inlineStyles;
    }
  });
  exports.default = undefined;

  var _Shape = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _Rect = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _Circle = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _Ellipse = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _Polygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Polyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Line = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _Svg = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _Path = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _G = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _Text = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _TSpan = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13]));

  var _TextPath = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14]));

  var _Use = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15]));

  var _Image = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16]));

  var _Symbol = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[17]));

  var _Defs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[18]));

  var _LinearGradient = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[19]));

  var _RadialGradient = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[20]));

  var _Stop = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _ClipPath = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[22]));

  var _Pattern = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[23]));

  var _Mask = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[24]));

  var _Marker = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[25]));

  var _xml = _$$_REQUIRE(_dependencyMap[26]);

  var _css = _$$_REQUIRE(_dependencyMap[27]);

  var _default = _Svg.default;
  exports.default = _default;
},790,[362,1,791,793,806,807,808,811,812,813,809,815,817,818,819,820,821,822,823,824,827,828,829,830,831,832,833,834]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.multiply_matrices = multiply_matrices;
  exports.invert = invert;
  exports.matrixTransform = _matrixTransform;
  exports.default = exports.ownerSVGElement = exports.SVGPoint = exports.SVGMatrix = undefined;

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _$$_REQUIRE(_dependencyMap[7]);

  var _SvgTouchableMixin = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var RNSVGRenderableManager = _reactNative.NativeModules.RNSVGRenderableManager;
  var touchableGetInitialState = _SvgTouchableMixin.default.touchableGetInitialState;
  var touchKeys = Object.keys(_SvgTouchableMixin.default);
  var touchVals = touchKeys.map(function (key) {
    return _SvgTouchableMixin.default[key];
  });
  var numTouchKeys = touchKeys.length;

  function multiply_matrices(l, r) {
    var al = l.a,
        bl = l.b,
        cl = l.c,
        dl = l.d,
        el = l.e,
        fl = l.f;
    var ar = r.a,
        br = r.b,
        cr = r.c,
        dr = r.d,
        er = r.e,
        fr = r.f;
    var a = al * ar + cl * br;
    var c = al * cr + cl * dr;
    var e = al * er + cl * fr + el;
    var b = bl * ar + dl * br;
    var d = bl * cr + dl * dr;
    var f = bl * er + dl * fr + fl;
    return {
      a: a,
      c: c,
      e: e,
      b: b,
      d: d,
      f: f
    };
  }

  function invert(_ref) {
    var a = _ref.a,
        b = _ref.b,
        c = _ref.c,
        d = _ref.d,
        e = _ref.e,
        f = _ref.f;
    var n = a * d - b * c;
    return {
      a: d / n,
      b: -b / n,
      c: -c / n,
      d: a / n,
      e: (c * f - d * e) / n,
      f: -(a * f - b * e) / n
    };
  }

  var deg2rad = Math.PI / 180;

  var SVGMatrix = function () {
    function SVGMatrix(matrix) {
      (0, _classCallCheck2.default)(this, SVGMatrix);

      if (matrix) {
        var a = matrix.a,
            b = matrix.b,
            c = matrix.c,
            d = matrix.d,
            e = matrix.e,
            f = matrix.f;
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.e = e;
        this.f = f;
      } else {
        this.a = 1;
        this.b = 0;
        this.c = 0;
        this.d = 1;
        this.e = 0;
        this.f = 0;
      }
    }

    (0, _createClass2.default)(SVGMatrix, [{
      key: "multiply",
      value: function multiply(secondMatrix) {
        return new SVGMatrix(multiply_matrices(this, secondMatrix));
      }
    }, {
      key: "inverse",
      value: function inverse() {
        return new SVGMatrix(invert(this));
      }
    }, {
      key: "translate",
      value: function translate(x, y) {
        return new SVGMatrix(multiply_matrices(this, {
          a: 1,
          b: 0,
          c: 0,
          d: 1,
          e: x,
          f: y
        }));
      }
    }, {
      key: "scale",
      value: function scale(scaleFactor) {
        return new SVGMatrix(multiply_matrices(this, {
          a: scaleFactor,
          b: 0,
          c: 0,
          d: scaleFactor,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "scaleNonUniform",
      value: function scaleNonUniform(scaleFactorX, scaleFactorY) {
        return new SVGMatrix(multiply_matrices(this, {
          a: scaleFactorX,
          b: 0,
          c: 0,
          d: scaleFactorY,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "rotate",
      value: function rotate(angle) {
        var cos = Math.cos(deg2rad * angle);
        var sin = Math.sin(deg2rad * angle);
        return new SVGMatrix(multiply_matrices(this, {
          a: cos,
          b: sin,
          c: -sin,
          d: cos,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "rotateFromVector",
      value: function rotateFromVector(x, y) {
        var angle = Math.atan2(y, x);
        var cos = Math.cos(deg2rad * angle);
        var sin = Math.sin(deg2rad * angle);
        return new SVGMatrix(multiply_matrices(this, {
          a: cos,
          b: sin,
          c: -sin,
          d: cos,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "flipX",
      value: function flipX() {
        return new SVGMatrix(multiply_matrices(this, {
          a: -1,
          b: 0,
          c: 0,
          d: 1,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "flipY",
      value: function flipY() {
        return new SVGMatrix(multiply_matrices(this, {
          a: 1,
          b: 0,
          c: 0,
          d: -1,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "skewX",
      value: function skewX(angle) {
        return new SVGMatrix(multiply_matrices(this, {
          a: 1,
          b: 0,
          c: Math.tan(deg2rad * angle),
          d: 1,
          e: 0,
          f: 0
        }));
      }
    }, {
      key: "skewY",
      value: function skewY(angle) {
        return new SVGMatrix(multiply_matrices(this, {
          a: 1,
          b: Math.tan(deg2rad * angle),
          c: 0,
          d: 1,
          e: 0,
          f: 0
        }));
      }
    }]);
    return SVGMatrix;
  }();

  exports.SVGMatrix = SVGMatrix;

  function _matrixTransform(matrix, point) {
    var a = matrix.a,
        b = matrix.b,
        c = matrix.c,
        d = matrix.d,
        e = matrix.e,
        f = matrix.f;
    var x = point.x,
        y = point.y;
    return {
      x: a * x + c * y + e,
      y: b * x + d * y + f
    };
  }

  var SVGPoint = function () {
    function SVGPoint(point) {
      (0, _classCallCheck2.default)(this, SVGPoint);

      if (point) {
        var _x = point.x,
            _y = point.y;
        this.x = _x;
        this.y = _y;
      } else {
        this.x = 0;
        this.y = 0;
      }
    }

    (0, _createClass2.default)(SVGPoint, [{
      key: "matrixTransform",
      value: function matrixTransform(matrix) {
        return new SVGPoint(_matrixTransform(matrix, this));
      }
    }]);
    return SVGPoint;
  }();

  exports.SVGPoint = SVGPoint;
  var ownerSVGElement = {
    createSVGPoint: function createSVGPoint() {
      return new SVGPoint();
    },
    createSVGMatrix: function createSVGMatrix() {
      return new SVGMatrix();
    }
  };
  exports.ownerSVGElement = ownerSVGElement;

  var Shape = function (_Component) {
    (0, _inherits2.default)(Shape, _Component);

    function Shape(_props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Shape);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Shape).call(this, _props, context));
      _this.root = null;

      _this.refMethod = function (instance) {
        _this.root = instance;
      };

      _this.setNativeProps = function (props) {
        _this.root && _this.root.setNativeProps(props);
      };

      _this.getBBox = function (options) {
        var _ref2 = options || {},
            _ref2$fill = _ref2.fill,
            fill = _ref2$fill === undefined ? true : _ref2$fill,
            _ref2$stroke = _ref2.stroke,
            stroke = _ref2$stroke === undefined ? true : _ref2$stroke,
            _ref2$markers = _ref2.markers,
            markers = _ref2$markers === undefined ? true : _ref2$markers,
            _ref2$clipped = _ref2.clipped,
            clipped = _ref2$clipped === undefined ? true : _ref2$clipped;

        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return RNSVGRenderableManager.getBBox(handle, {
          fill: fill,
          stroke: stroke,
          markers: markers,
          clipped: clipped
        });
      };

      _this.getCTM = function () {
        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return new SVGMatrix(RNSVGRenderableManager.getCTM(handle));
      };

      _this.getScreenCTM = function () {
        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return new SVGMatrix(RNSVGRenderableManager.getScreenCTM(handle));
      };

      _this.isPointInFill = function (options) {
        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return RNSVGRenderableManager.isPointInFill(handle, options);
      };

      _this.isPointInStroke = function (options) {
        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return RNSVGRenderableManager.isPointInStroke(handle, options);
      };

      _this.getTotalLength = function () {
        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return RNSVGRenderableManager.getTotalLength(handle);
      };

      _this.getPointAtLength = function (length) {
        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        return new SVGPoint(RNSVGRenderableManager.getPointAtLength(handle, {
          length: length
        }));
      };

      for (var i = 0; i < numTouchKeys; i++) {
        var key = touchKeys[i];
        var val = touchVals[i];

        if (typeof val === 'function') {
          _this[key] = val.bind((0, _assertThisInitialized2.default)(_this));
        } else {
          _this[key] = val;
        }
      }

      _this.state = touchableGetInitialState();
      return _this;
    }

    return Shape;
  }(_react.Component);

  exports.default = Shape;
  Shape.prototype.ownerSVGElement = ownerSVGElement;
},791,[1,30,33,32,36,22,23,49,792,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var PRESS_RETENTION_OFFSET = {
    top: 20,
    left: 20,
    right: 20,
    bottom: 30
  };
  var Mixin = _reactNative.Touchable.Mixin;
  var _touchableHandleStartShouldSetResponder = Mixin.touchableHandleStartShouldSetResponder,
      _touchableHandleResponderTerminationRequest = Mixin.touchableHandleResponderTerminationRequest,
      _touchableHandleResponderGrant = Mixin.touchableHandleResponderGrant,
      _touchableHandleResponderMove = Mixin.touchableHandleResponderMove,
      _touchableHandleResponderRelease = Mixin.touchableHandleResponderRelease,
      _touchableHandleResponderTerminate = Mixin.touchableHandleResponderTerminate;

  var _default = (0, _objectSpread2.default)({}, Mixin, {
    touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder(e) {
      var onStartShouldSetResponder = this.props.onStartShouldSetResponder;

      if (onStartShouldSetResponder) {
        return onStartShouldSetResponder(e);
      } else {
        return _touchableHandleStartShouldSetResponder.call(this, e);
      }
    },
    touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest(e) {
      var onResponderTerminationRequest = this.props.onResponderTerminationRequest;

      if (onResponderTerminationRequest) {
        return onResponderTerminationRequest(e);
      } else {
        return _touchableHandleResponderTerminationRequest.call(this, e);
      }
    },
    touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
      var onResponderGrant = this.props.onResponderGrant;

      if (onResponderGrant) {
        return onResponderGrant(e);
      } else {
        return _touchableHandleResponderGrant.call(this, e);
      }
    },
    touchableHandleResponderMove: function touchableHandleResponderMove(e) {
      var onResponderMove = this.props.onResponderMove;

      if (onResponderMove) {
        return onResponderMove(e);
      } else {
        return _touchableHandleResponderMove.call(this, e);
      }
    },
    touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
      var onResponderRelease = this.props.onResponderRelease;

      if (onResponderRelease) {
        return onResponderRelease(e);
      } else {
        return _touchableHandleResponderRelease.call(this, e);
      }
    },
    touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
      var onResponderTerminate = this.props.onResponderTerminate;

      if (onResponderTerminate) {
        return onResponderTerminate(e);
      } else {
        return _touchableHandleResponderTerminate.call(this, e);
      }
    },
    touchableHandlePress: function touchableHandlePress(e) {
      var onPress = this.props.onPress;
      onPress && onPress(e);
    },
    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
      var onPressIn = this.props.onPressIn;
      onPressIn && onPressIn(e);
    },
    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
      var onPressOut = this.props.onPressOut;
      onPressOut && onPressOut(e);
    },
    touchableHandleLongPress: function touchableHandleLongPress(e) {
      var onLongPress = this.props.onLongPress;
      onLongPress && onLongPress(e);
    },
    touchableGetPressRectOffset: function touchableGetPressRectOffset() {
      var pressRetentionOffset = this.props.pressRetentionOffset;
      return pressRetentionOffset || PRESS_RETENTION_OFFSET;
    },
    touchableGetHitSlop: function touchableGetHitSlop() {
      var hitSlop = this.props.hitSlop;
      return hitSlop;
    },
    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
      var delayPressIn = this.props.delayPressIn;
      return delayPressIn || 0;
    },
    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
      var delayLongPress = this.props.delayLongPress;
      return delayLongPress === 0 ? 0 : delayLongPress || 500;
    },
    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
      var delayPressOut = this.props.delayPressOut;
      return delayPressOut || 0;
    }
  });

  exports.default = _default;
},792,[1,46,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGRect = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Rect = function (_Shape) {
    (0, _inherits2.default)(Rect, _Shape);

    function Rect() {
      (0, _classCallCheck2.default)(this, Rect);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rect).apply(this, arguments));
    }

    (0, _createClass2.default)(Rect, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            rx = props.rx,
            ry = props.ry;
        return _react.default.createElement(RNSVGRect, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.withoutXY)(this, props), {
          x: x,
          y: y,
          width: width,
          height: height,
          rx: rx,
          ry: ry
        }));
      }
    }]);
    return Rect;
  }(_Shape2.default);

  exports.default = Rect;
  Rect.displayName = 'Rect';
  Rect.defaultProps = {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  };
  var RNSVGRect = (0, _reactNative.requireNativeComponent)('RNSVGRect');
  exports.RNSVGRect = RNSVGRect;
},793,[1,11,22,23,30,33,36,49,2,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.propsAndStyles = propsAndStyles;
  exports.default = extractProps;
  exports.extract = extract;
  exports.withoutXY = withoutXY;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extractFill = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extractStroke = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _extractTransform = _$$_REQUIRE(_dependencyMap[5]);

  var _extractResponder = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _util = _$$_REQUIRE(_dependencyMap[8]);

  var clipRules = {
    evenodd: 0,
    nonzero: 1
  };

  function propsAndStyles(props) {
    var style = props.style;
    return !style ? props : (0, _objectSpread2.default)({}, Array.isArray(style) ? Object.assign.apply(Object, [{}].concat((0, _toConsumableArray2.default)(style))) : style, props);
  }

  function getMarker(marker) {
    if (!marker) {
      return undefined;
    }

    var matched = marker.match(_util.idPattern);
    return matched ? matched[1] : undefined;
  }

  function extractProps(props, ref) {
    var opacity = props.opacity,
        onLayout = props.onLayout,
        id = props.id,
        clipPath = props.clipPath,
        clipRule = props.clipRule,
        mask = props.mask,
        marker = props.marker,
        _props$markerStart = props.markerStart,
        markerStart = _props$markerStart === undefined ? marker : _props$markerStart,
        _props$markerMid = props.markerMid,
        markerMid = _props$markerMid === undefined ? marker : _props$markerMid,
        _props$markerEnd = props.markerEnd,
        markerEnd = _props$markerEnd === undefined ? marker : _props$markerEnd,
        transform = props.transform;
    var styleProperties = [];
    var transformProps = (0, _extractTransform.props2transform)(props);
    var matrix = (0, _extractTransform.transformToMatrix)(transformProps, transform);
    var extracted = (0, _objectSpread2.default)({
      matrix: matrix
    }, transformProps, {
      propList: styleProperties,
      opacity: (0, _extractOpacity.default)(opacity)
    }, (0, _extractResponder.default)(props, ref), (0, _extractFill.default)(props, styleProperties), (0, _extractStroke.default)(props, styleProperties));

    if (onLayout) {
      extracted.onLayout = onLayout;
    }

    if (markerStart) {
      extracted.markerStart = getMarker(markerStart);
    }

    if (markerMid) {
      extracted.markerMid = getMarker(markerMid);
    }

    if (markerEnd) {
      extracted.markerEnd = getMarker(markerEnd);
    }

    if (id) {
      extracted.name = String(id);
    }

    if (clipPath) {
      if (clipRule) {
        extracted.clipRule = clipRules[clipRule] === 0 ? 0 : 1;
      }

      if (clipPath) {
        var matched = clipPath.match(_util.idPattern);

        if (matched) {
          extracted.clipPath = matched[1];
        } else {
          console.warn('Invalid `clipPath` prop, expected a clipPath like "#id", but got: "' + clipPath + '"');
        }
      }
    }

    if (mask) {
      var _matched = mask.match(_util.idPattern);

      if (_matched) {
        extracted.mask = _matched[1];
      } else {
        console.warn('Invalid `mask` prop, expected a mask like "#id", but got: "' + mask + '"');
      }
    }

    return extracted;
  }

  function extract(instance, props) {
    return extractProps(propsAndStyles(props), instance);
  }

  function withoutXY(instance, props) {
    return extractProps((0, _objectSpread2.default)({}, propsAndStyles(props), {
      x: null,
      y: null
    }), instance);
  }
},794,[1,18,46,795,799,801,804,798,805]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractFill;

  var _extractBrush = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extractColor = _$$_REQUIRE(_dependencyMap[3]);

  var fillRules = {
    evenodd: 0,
    nonzero: 1
  };
  var black = _extractColor.colorNames.black;
  var defaultFill = [0, (0, _extractColor.integerColor)(black)];

  function extractFill(props, styleProperties) {
    var fill = props.fill,
        fillRule = props.fillRule,
        fillOpacity = props.fillOpacity;

    if (fill != null) {
      styleProperties.push('fill');
    }

    if (fillOpacity != null) {
      styleProperties.push('fillOpacity');
    }

    if (fillRule != null) {
      styleProperties.push('fillRule');
    }

    return {
      fill: !fill && typeof fill !== 'number' ? defaultFill : (0, _extractBrush.default)(fill),
      fillRule: fillRule && fillRules[fillRule] === 0 ? 0 : 1,
      fillOpacity: (0, _extractOpacity.default)(fillOpacity)
    };
  }
},795,[1,796,798,797]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractBrush;

  var _extractColor = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var urlIdPattern = /^url\(#(.+)\)$/;
  var currentColorBrush = [2];
  var contextFillBrush = [3];
  var contextStrokeBrush = [4];

  function extractBrush(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return [0, (0, _extractColor.integerColor)(color)];
      }
    }

    if (!color || color === 'none') {
      return null;
    }

    if (color === 'currentColor') {
      return currentColorBrush;
    }

    if (color === 'context-fill') {
      return contextFillBrush;
    }

    if (color === 'context-stroke') {
      return contextStrokeBrush;
    }

    var brush = typeof color === 'string' && color.match(urlIdPattern);

    if (brush) {
      return [1, brush[1]];
    }

    var int32ARGBColor = (0, _extractColor.default)(color);

    if (typeof int32ARGBColor === 'number') {
      return [0, int32ARGBColor];
    }

    console.warn("\"" + color + "\" is not a valid color or brush");
    return null;
  }
},796,[362,797]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = exports.colors = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colors = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colors = colors;
  var colorNames = {};
  exports.colorNames = colorNames;

  for (var name in colors) {
    if (colors.hasOwnProperty(name)) {
      var color = colors[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(_h, _s, _l, a) {
    var h = _h / 360;
    var s = _s / 100;
    var l = _l / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l;
      return [val, val, val, a];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0, a];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(_h, _w, _b, a) {
    var h = _h / 360;
    var wh = _w / 100;
    var bl = _b / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b, a];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      var _color = colorNames[match[1]];

      if (!(typeof _color === 'number')) {
        return null;
      }

      return integerColor(_color);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = isNaN(alpha) ? 1 : clamp(alpha, 0, 1);
    return hslToRgb(h, s, l, a);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = isNaN(alpha) ? 1 : clamp(alpha, 0, 1);
    return hwbToRgb(h, w, b, a);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},797,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractOpacity;

  function extractOpacity(opacity) {
    var value = +opacity;
    return isNaN(value) ? 1 : value;
  }
},798,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractStroke;

  var _extractBrush = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var caps = {
    butt: 0,
    square: 2,
    round: 1
  };
  var joins = {
    miter: 0,
    bevel: 2,
    round: 1
  };
  var vectorEffects = {
    none: 0,
    default: 0,
    nonScalingStroke: 1,
    'non-scaling-stroke': 1,
    inherit: 2,
    uri: 3
  };

  function extractStroke(props, styleProperties) {
    var stroke = props.stroke,
        strokeOpacity = props.strokeOpacity,
        strokeLinecap = props.strokeLinecap,
        strokeLinejoin = props.strokeLinejoin,
        strokeDasharray = props.strokeDasharray,
        strokeWidth = props.strokeWidth,
        strokeDashoffset = props.strokeDashoffset,
        strokeMiterlimit = props.strokeMiterlimit,
        vectorEffect = props.vectorEffect;

    if (stroke != null) {
      styleProperties.push('stroke');
    }

    if (strokeWidth != null) {
      styleProperties.push('strokeWidth');
    }

    if (strokeOpacity != null) {
      styleProperties.push('strokeOpacity');
    }

    if (strokeDasharray != null) {
      styleProperties.push('strokeDasharray');
    }

    if (strokeDashoffset != null) {
      styleProperties.push('strokeDashoffset');
    }

    if (strokeLinecap != null) {
      styleProperties.push('strokeLinecap');
    }

    if (strokeLinejoin != null) {
      styleProperties.push('strokeLinejoin');
    }

    if (strokeMiterlimit != null) {
      styleProperties.push('strokeMiterlimit');
    }

    var strokeDash = !strokeDasharray || strokeDasharray === 'none' ? null : (0, _extractLengthList.default)(strokeDasharray);
    return {
      stroke: (0, _extractBrush.default)(stroke),
      strokeOpacity: (0, _extractOpacity.default)(strokeOpacity),
      strokeLinecap: strokeLinecap && caps[strokeLinecap] || 0,
      strokeLinejoin: strokeLinejoin && joins[strokeLinejoin] || 0,
      strokeDasharray: strokeDash && strokeDash.length % 2 === 1 ? strokeDash.concat(strokeDash) : strokeDash,
      strokeWidth: strokeWidth != null ? strokeWidth : 1,
      strokeDashoffset: strokeDasharray && strokeDashoffset ? +strokeDashoffset || 0 : null,
      strokeMiterlimit: (strokeMiterlimit && typeof strokeMiterlimit !== 'number' ? parseFloat(strokeMiterlimit) : strokeMiterlimit) || 4,
      vectorEffect: vectorEffect && vectorEffects[vectorEffect] || 0
    };
  }
},799,[1,796,798,800]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractLengthList;
  var spaceReg = /\s+/;
  var commaReg = /,/g;

  function extractLengthList(lengthList) {
    if (Array.isArray(lengthList)) {
      return lengthList;
    } else if (typeof lengthList === 'number') {
      return [lengthList];
    } else if (typeof lengthList === 'string') {
      return lengthList.trim().replace(commaReg, ' ').split(spaceReg);
    } else {
      return [];
    }
  }
},800,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.props2transform = props2transform;
  exports.transformToMatrix = transformToMatrix;
  exports.default = extractTransform;

  var _Matrix2D = _$$_REQUIRE(_dependencyMap[0]);

  var _transform = _$$_REQUIRE(_dependencyMap[1]);

  function appendTransformProps(props) {
    var x = props.x,
        y = props.y,
        originX = props.originX,
        originY = props.originY,
        scaleX = props.scaleX,
        scaleY = props.scaleY,
        rotation = props.rotation,
        skewX = props.skewX,
        skewY = props.skewY;
    (0, _Matrix2D.appendTransform)(x + originX, y + originY, scaleX, scaleY, rotation, skewX, skewY, originX, originY);
  }

  function universal2axis(universal, axisX, axisY, defaultValue) {
    var x;
    var y;

    if (typeof universal === 'number') {
      x = y = universal;
    } else if (typeof universal === 'string') {
      var coords = universal.split(/\s*,\s*/);

      if (coords.length === 2) {
        x = +coords[0];
        y = +coords[1];
      } else if (coords.length === 1) {
        x = y = +coords[0];
      }
    } else if (Array.isArray(universal)) {
      if (universal.length === 2) {
        x = +universal[0];
        y = +universal[1];
      } else if (universal.length === 1) {
        x = y = +universal[0];
      }
    }

    axisX = +axisX;

    if (!isNaN(axisX)) {
      x = axisX;
    }

    axisY = +axisY;

    if (!isNaN(axisY)) {
      y = axisY;
    }

    return [x || defaultValue || 0, y || defaultValue || 0];
  }

  function props2transform(props) {
    var _props$rotation = props.rotation,
        rotation = _props$rotation === undefined ? 0 : _props$rotation,
        translate = props.translate,
        translateX = props.translateX,
        translateY = props.translateY,
        origin = props.origin,
        originX = props.originX,
        originY = props.originY,
        scale = props.scale,
        scaleX = props.scaleX,
        scaleY = props.scaleY,
        skew = props.skew,
        skewX = props.skewX,
        skewY = props.skewY,
        x = props.x,
        y = props.y;

    if (Array.isArray(x) || Array.isArray(y)) {
      console.warn('Passing SvgLengthList to x or y attribute where SvgLength expected');
    }

    var tr = universal2axis(translate, translateX || (Array.isArray(x) ? x[0] : x), translateY || (Array.isArray(y) ? y[0] : y));
    var or = universal2axis(origin, originX, originY);
    var sc = universal2axis(scale, scaleX, scaleY, 1);
    var sk = universal2axis(skew, skewX, skewY);
    return {
      rotation: +rotation || 0,
      originX: or[0],
      originY: or[1],
      scaleX: sc[0],
      scaleY: sc[1],
      skewX: sk[0],
      skewY: sk[1],
      x: tr[0],
      y: tr[1]
    };
  }

  function transformToMatrix(props, transform) {
    (0, _Matrix2D.reset)();
    appendTransformProps(props);

    if (transform) {
      if (Array.isArray(transform)) {
        if (typeof transform[0] === 'number') {
          (0, _Matrix2D.append)(transform[0], transform[1], transform[2], transform[3], transform[4], transform[5]);
        }
      } else if (typeof transform === 'string') {
        try {
          var t = (0, _transform.parse)(transform);
          (0, _Matrix2D.append)(t[0], t[3], t[1], t[4], t[2], t[5]);
        } catch (e) {
          console.error(e);
        }
      } else {
        appendTransformProps(props2transform(transform));
      }
    }

    return (0, _Matrix2D.toArray)();
  }

  function extractTransform(props) {
    if (Array.isArray(props)) {
      return props;
    }

    if (typeof props === 'string') {
      try {
        var t = (0, _transform.parse)(props);
        return [t[0], t[3], t[1], t[4], t[2], t[5]];
      } catch (e) {
        console.error(e);
        return _Matrix2D.identity;
      }
    }

    return transformToMatrix(props2transform(props), props.transform);
  }
},801,[802,803]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.reset = reset;
  exports.toArray = toArray;
  exports.append = append;
  exports.appendTransform = appendTransform;
  exports.identity = undefined;
  var DEG_TO_RAD = Math.PI / 180;
  var identity = [1, 0, 0, 1, 0, 0];
  exports.identity = identity;
  var a = 1;
  var b = 0;
  var c = 0;
  var d = 1;
  var tx = 0;
  var ty = 0;
  var hasInitialState = true;

  function reset() {
    if (hasInitialState) {
      return;
    }

    a = d = 1;
    b = c = tx = ty = 0;
    hasInitialState = true;
  }

  function toArray() {
    if (hasInitialState) {
      return identity;
    }

    return [a, b, c, d, tx, ty];
  }

  function append(a2, b2, c2, d2, tx2, ty2) {
    var change = a2 !== 1 || b2 !== 0 || c2 !== 0 || d2 !== 1;
    var translate = tx2 !== 0 || ty2 !== 0;

    if (!change && !translate) {
      return;
    }

    if (hasInitialState) {
      hasInitialState = false;
      a = a2;
      b = b2;
      c = c2;
      d = d2;
      tx = tx2;
      ty = ty2;
      return;
    }

    var a1 = a;
    var b1 = b;
    var c1 = c;
    var d1 = d;

    if (change) {
      a = a1 * a2 + c1 * b2;
      b = b1 * a2 + d1 * b2;
      c = a1 * c2 + c1 * d2;
      d = b1 * c2 + d1 * d2;
    }

    if (translate) {
      tx = a1 * tx2 + c1 * ty2 + tx;
      ty = b1 * tx2 + d1 * ty2 + ty;
    }
  }

  function appendTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {
    if (x === 0 && y === 0 && scaleX === 1 && scaleY === 1 && rotation === 0 && skewX === 0 && skewY === 0 && regX === 0 && regY === 0) {
      return;
    }

    var cos, sin;

    if (rotation % 360) {
      var r = rotation * DEG_TO_RAD;
      cos = Math.cos(r);
      sin = Math.sin(r);
    } else {
      cos = 1;
      sin = 0;
    }

    var a2 = cos * scaleX;
    var b2 = sin * scaleX;
    var c2 = -sin * scaleY;
    var d2 = cos * scaleY;

    if (skewX || skewY) {
      var b1 = Math.tan(skewY * DEG_TO_RAD);
      var c1 = Math.tan(skewX * DEG_TO_RAD);
      append(a2 + c1 * b2, b1 * a2 + b2, c2 + c1 * d2, b1 * c2 + d2, x, y);
    } else {
      append(a2, b2, c2, d2, x, y);
    }

    if (regX || regY) {
      tx -= regX * a + regY * c;
      ty -= regX * b + regY * d;
      hasInitialState = false;
    }
  }
},802,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},803,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractResponder;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var responderKeys = Object.keys(_reactNative.PanResponder.create({}).panHandlers);
  var numResponderKeys = responderKeys.length;

  function extractResponder(props, ref) {
    var onPress = props.onPress,
        disabled = props.disabled,
        onPressIn = props.onPressIn,
        onPressOut = props.onPressOut,
        onLongPress = props.onLongPress,
        delayPressIn = props.delayPressIn,
        delayPressOut = props.delayPressOut,
        delayLongPress = props.delayLongPress,
        pointerEvents = props.pointerEvents;
    var o = {};
    var responsible = false;

    for (var i = 0; i < numResponderKeys; i++) {
      var key = responderKeys[i];
      var value = props[key];

      if (value) {
        responsible = true;
        o[key] = value;
      }
    }

    if (pointerEvents) {
      o.pointerEvents = pointerEvents;
    }

    var hasTouchableProperty = disabled != null || onPress || onPressIn || onPressOut || onLongPress || delayPressIn || delayPressOut || delayLongPress;

    if (hasTouchableProperty) {
      responsible = true;
      o.onResponderMove = ref.touchableHandleResponderMove;
      o.onResponderGrant = ref.touchableHandleResponderGrant;
      o.onResponderRelease = ref.touchableHandleResponderRelease;
      o.onResponderTerminate = ref.touchableHandleResponderTerminate;
      o.onStartShouldSetResponder = ref.touchableHandleStartShouldSetResponder;
      o.onResponderTerminationRequest = ref.touchableHandleResponderTerminationRequest;
    }

    if (responsible) {
      o.responsible = true;
    }

    return o;
  }
},804,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},805,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGCircle = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Circle = function (_Shape) {
    (0, _inherits2.default)(Circle, _Shape);

    function Circle() {
      (0, _classCallCheck2.default)(this, Circle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Circle).apply(this, arguments));
    }

    (0, _createClass2.default)(Circle, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var cx = props.cx,
            cy = props.cy,
            r = props.r;
        return _react.default.createElement(RNSVGCircle, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.extract)(this, props), {
          cx: cx,
          cy: cy,
          r: r
        }));
      }
    }]);
    return Circle;
  }(_Shape2.default);

  exports.default = Circle;
  Circle.displayName = 'Circle';
  Circle.defaultProps = {
    cx: 0,
    cy: 0,
    r: 0
  };
  var RNSVGCircle = (0, _reactNative.requireNativeComponent)('RNSVGCircle');
  exports.RNSVGCircle = RNSVGCircle;
},806,[1,11,22,23,30,33,36,49,2,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGEllipse = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Ellipse = function (_Shape) {
    (0, _inherits2.default)(Ellipse, _Shape);

    function Ellipse() {
      (0, _classCallCheck2.default)(this, Ellipse);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Ellipse).apply(this, arguments));
    }

    (0, _createClass2.default)(Ellipse, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var cx = props.cx,
            cy = props.cy,
            rx = props.rx,
            ry = props.ry;
        return _react.default.createElement(RNSVGEllipse, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.extract)(this, props), {
          cx: cx,
          cy: cy,
          rx: rx,
          ry: ry
        }));
      }
    }]);
    return Ellipse;
  }(_Shape2.default);

  exports.default = Ellipse;
  Ellipse.displayName = 'Ellipse';
  Ellipse.defaultProps = {
    cx: 0,
    cy: 0,
    rx: 0,
    ry: 0
  };
  var RNSVGEllipse = (0, _reactNative.requireNativeComponent)('RNSVGEllipse');
  exports.RNSVGEllipse = RNSVGEllipse;
},807,[1,11,22,23,30,33,36,49,2,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractPolyPoints = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Polygon = function (_Shape) {
    (0, _inherits2.default)(Polygon, _Shape);

    function Polygon() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Polygon);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Polygon)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function (props) {
        var points = props.points;

        if (points) {
          props.d = "M" + (0, _extractPolyPoints.default)(points) + "z";
        }

        _this.root && _this.root.setNativeProps(props);
      };

      return _this;
    }

    (0, _createClass2.default)(Polygon, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var points = props.points;
        return _react.default.createElement(_Path.default, (0, _extends2.default)({
          ref: this.refMethod,
          d: points && "M" + (0, _extractPolyPoints.default)(points) + "z"
        }, props));
      }
    }]);
    return Polygon;
  }(_Shape2.default);

  exports.default = Polygon;
  Polygon.displayName = 'Polygon';
  Polygon.defaultProps = {
    points: ''
  };
},808,[1,11,22,23,30,33,36,49,809,791,810]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGPath = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Path = function (_Shape) {
    (0, _inherits2.default)(Path, _Shape);

    function Path() {
      (0, _classCallCheck2.default)(this, Path);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Path).apply(this, arguments));
    }

    (0, _createClass2.default)(Path, [{
      key: "render",
      value: function render() {
        var props = this.props;
        return _react.default.createElement(RNSVGPath, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.extract)(this, props), {
          d: props.d
        }));
      }
    }]);
    return Path;
  }(_Shape2.default);

  exports.default = Path;
  Path.displayName = 'Path';
  var RNSVGPath = (0, _reactNative.requireNativeComponent)('RNSVGPath');
  exports.RNSVGPath = RNSVGPath;
},809,[1,11,22,23,30,33,36,49,2,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractPolyPoints;

  function extractPolyPoints(points) {
    var polyPoints = Array.isArray(points) ? points.join(',') : points;
    return polyPoints.replace(/[^e]-/, ' -').split(/(?:\s+|\s*,\s*)/g).join(' ');
  }
},810,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractPolyPoints = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Polyline = function (_Shape) {
    (0, _inherits2.default)(Polyline, _Shape);

    function Polyline() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Polyline);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Polyline)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function (props) {
        var points = props.points;

        if (points) {
          props.d = "M" + (0, _extractPolyPoints.default)(points);
        }

        _this.root && _this.root.setNativeProps(props);
      };

      return _this;
    }

    (0, _createClass2.default)(Polyline, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var points = props.points;
        return _react.default.createElement(_Path.default, (0, _extends2.default)({
          ref: this.refMethod,
          d: points && "M" + (0, _extractPolyPoints.default)(points)
        }, props));
      }
    }]);
    return Polyline;
  }(_Shape2.default);

  exports.default = Polyline;
  Polyline.displayName = 'Polyline';
  Polyline.defaultProps = {
    points: ''
  };
},811,[1,11,22,23,30,33,36,49,809,791,810]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGLine = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Line = function (_Shape) {
    (0, _inherits2.default)(Line, _Shape);

    function Line() {
      (0, _classCallCheck2.default)(this, Line);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Line).apply(this, arguments));
    }

    (0, _createClass2.default)(Line, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var x1 = props.x1,
            y1 = props.y1,
            x2 = props.x2,
            y2 = props.y2;
        return _react.default.createElement(RNSVGLine, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.extract)(this, props), {
          x1: x1,
          y1: y1,
          x2: x2,
          y2: y2
        }));
      }
    }]);
    return Line;
  }(_Shape2.default);

  exports.default = Line;
  Line.displayName = 'Line';
  Line.defaultProps = {
    x1: 0,
    y1: 0,
    x2: 0,
    y2: 0
  };
  var RNSVGLine = (0, _reactNative.requireNativeComponent)('RNSVGLine');
  exports.RNSVGLine = RNSVGLine;
},812,[1,11,22,23,30,33,36,49,2,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGSvg = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _extractResponder = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _extractColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _G = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var RNSVGSvgViewManager = _reactNative.NativeModules.RNSVGSvgViewManager;

  var styles = _reactNative.StyleSheet.create({
    svg: {
      backgroundColor: 'transparent',
      borderWidth: 0
    }
  });

  var Svg = function (_Shape) {
    (0, _inherits2.default)(Svg, _Shape);

    function Svg() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Svg);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Svg)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.measureInWindow = function (callback) {
        _this.root && _this.root.measureInWindow(callback);
      };

      _this.measure = function (callback) {
        _this.root && _this.root.measure(callback);
      };

      _this.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        _this.root && _this.root.measureLayout(relativeToNativeNode, onSuccess, onFail);
      };

      _this.setNativeProps = function (props) {
        var width = props.width,
            height = props.height;

        if (width) {
          props.bbWidth = width;
        }

        if (height) {
          props.bbHeight = height;
        }

        _this.root && _this.root.setNativeProps(props);
      };

      _this.toDataURL = function (callback, options) {
        if (!callback) {
          return;
        }

        var handle = (0, _reactNative.findNodeHandle)(_this.root);
        RNSVGSvgViewManager.toDataURL(handle, options, callback);
      };

      return _this;
    }

    (0, _createClass2.default)(Svg, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$opacity = _this$props.opacity,
            opacity = _this$props$opacity === undefined ? 1 : _this$props$opacity,
            viewBox = _this$props.viewBox,
            preserveAspectRatio = _this$props.preserveAspectRatio,
            style = _this$props.style,
            children = _this$props.children,
            onLayout = _this$props.onLayout,
            props = (0, _objectWithoutProperties2.default)(_this$props, ["opacity", "viewBox", "preserveAspectRatio", "style", "children", "onLayout"]);
        var stylesAndProps = (0, _objectSpread2.default)({}, Array.isArray(style) ? Object.assign.apply(Object, [{}].concat((0, _toConsumableArray2.default)(style))) : style, props);
        var color = stylesAndProps.color,
            width = stylesAndProps.width,
            height = stylesAndProps.height,
            focusable = stylesAndProps.focusable,
            font = stylesAndProps.font,
            transform = stylesAndProps.transform,
            fill = stylesAndProps.fill,
            fillOpacity = stylesAndProps.fillOpacity,
            fillRule = stylesAndProps.fillRule,
            stroke = stylesAndProps.stroke,
            strokeWidth = stylesAndProps.strokeWidth,
            strokeOpacity = stylesAndProps.strokeOpacity,
            strokeDasharray = stylesAndProps.strokeDasharray,
            strokeDashoffset = stylesAndProps.strokeDashoffset,
            strokeLinecap = stylesAndProps.strokeLinecap,
            strokeLinejoin = stylesAndProps.strokeLinejoin,
            strokeMiterlimit = stylesAndProps.strokeMiterlimit;
        var w = parseInt(width, 10);
        var h = parseInt(height, 10);
        var doNotParseWidth = isNaN(w) || width[width.length - 1] === '%';
        var doNotParseHeight = isNaN(h) || height[height.length - 1] === '%';
        var dimensions = width && height ? {
          width: doNotParseWidth ? width : w,
          height: doNotParseHeight ? height : h,
          flex: 0
        } : null;
        var o = +opacity;
        var opacityStyle = !isNaN(o) ? {
          opacity: o
        } : null;
        var tint = (0, _extractColor.default)(color);
        return _react.default.createElement(RNSVGSvg, (0, _extends2.default)({}, props, {
          bbWidth: width,
          bbHeight: height,
          color: tint,
          tintColor: tint,
          onLayout: onLayout,
          ref: this.refMethod,
          style: [styles.svg, style, opacityStyle, dimensions],
          focusable: Boolean(focusable) && focusable !== 'false'
        }, (0, _extractResponder.default)(props, this), (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), _react.default.createElement(_G.default, {
          children: children,
          style: style,
          font: font,
          transform: transform,
          fill: fill,
          fillOpacity: fillOpacity,
          fillRule: fillRule,
          stroke: stroke,
          strokeWidth: strokeWidth,
          strokeOpacity: strokeOpacity,
          strokeDasharray: strokeDasharray,
          strokeDashoffset: strokeDashoffset,
          strokeLinecap: strokeLinecap,
          strokeLinejoin: strokeLinejoin,
          strokeMiterlimit: strokeMiterlimit
        }));
      }
    }]);
    return Svg;
  }(_Shape2.default);

  exports.default = Svg;
  Svg.displayName = 'Svg';
  Svg.defaultProps = {
    preserveAspectRatio: 'xMidYMid meet'
  };
  var RNSVGSvg = (0, _reactNative.requireNativeComponent)('RNSVGSvgView');
  exports.RNSVGSvg = RNSVGSvg;
},813,[1,11,18,46,9,22,23,30,33,36,49,2,804,814,797,791,815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractViewBox;
  exports.alignEnum = exports.meetOrSliceTypes = undefined;
  var meetOrSliceTypes = {
    meet: 0,
    slice: 1,
    none: 2
  };
  exports.meetOrSliceTypes = meetOrSliceTypes;
  var alignEnum = ['xMinYMin', 'xMidYMin', 'xMaxYMin', 'xMinYMid', 'xMidYMid', 'xMaxYMid', 'xMinYMax', 'xMidYMax', 'xMaxYMax', 'none'].reduce(function (prev, name) {
    prev[name] = name;
    return prev;
  }, {});
  exports.alignEnum = alignEnum;
  var spacesRegExp = /\s+/;

  function extractViewBox(props) {
    var viewBox = props.viewBox,
        preserveAspectRatio = props.preserveAspectRatio;

    if (!viewBox) {
      return null;
    }

    var params = (Array.isArray(viewBox) ? viewBox : viewBox.trim().split(spacesRegExp)).map(Number);

    if (params.length !== 4 || params.some(isNaN)) {
      console.warn('Invalid `viewBox` prop:' + viewBox);
      return null;
    }

    var modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];
    var align = modes[0];
    var meetOrSlice = modes[1];
    return {
      minX: params[0],
      minY: params[1],
      vbWidth: params[2],
      vbHeight: params[3],
      align: alignEnum[align] || 'xMidYMid',
      meetOrSlice: meetOrSliceTypes[meetOrSlice] || 0
    };
  }
},814,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGGroup = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _extractText = _$$_REQUIRE(_dependencyMap[11]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var G = function (_Shape) {
    (0, _inherits2.default)(G, _Shape);

    function G() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, G);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(G)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function (props) {
        var matrix = !props.matrix && (0, _extractTransform.default)(props);

        if (matrix) {
          props.matrix = matrix;
        }

        _this.root && _this.root.setNativeProps(props);
      };

      return _this;
    }

    (0, _createClass2.default)(G, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var prop = (0, _extractProps.propsAndStyles)(props);
        return _react.default.createElement(RNSVGGroup, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)(prop, this), {
          font: (0, _extractText.extractFont)(prop)
        }), props.children);
      }
    }]);
    return G;
  }(_Shape2.default);

  exports.default = G;
  G.displayName = 'G';
  var RNSVGGroup = (0, _reactNative.requireNativeComponent)('RNSVGGroup');
  exports.RNSVGGroup = RNSVGGroup;
},815,[362,1,11,22,23,30,33,36,49,2,794,816,801,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.extractFont = extractFont;
  exports.setTSpan = setTSpan;
  exports.default = extractText;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _util = _$$_REQUIRE(_dependencyMap[5]);

  var fontRegExp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?(?:%|px|em|pt|pc|mm|cm|in]))*(?:\s*\/.*?)?\s+)?\s*"?([^"]*)/i;
  var fontFamilyPrefix = /^[\s"']*/;
  var fontFamilySuffix = /[\s"']*$/;
  var commaReg = /\s*,\s*/g;
  var cachedFontObjectsFromString = {};

  function extractSingleFontFamily(fontFamilyString) {
    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '') : null;
  }

  function parseFontString(font) {
    if (cachedFontObjectsFromString.hasOwnProperty(font)) {
      return cachedFontObjectsFromString[font];
    }

    var match = fontRegExp.exec(font);

    if (!match) {
      cachedFontObjectsFromString[font] = null;
      return null;
    }

    var isBold = /bold/.exec(match[1]);
    var isItalic = /italic/.exec(match[1]);
    cachedFontObjectsFromString[font] = {
      fontSize: match[2] || 12,
      fontWeight: isBold ? 'bold' : 'normal',
      fontStyle: isItalic ? 'italic' : 'normal',
      fontFamily: extractSingleFontFamily(match[3])
    };
    return cachedFontObjectsFromString[font];
  }

  function extractFont(props) {
    var fontData = props.fontData,
        fontStyle = props.fontStyle,
        fontVariant = props.fontVariant,
        fontWeight = props.fontWeight,
        fontStretch = props.fontStretch,
        fontSize = props.fontSize,
        fontFamily = props.fontFamily,
        textAnchor = props.textAnchor,
        textDecoration = props.textDecoration,
        letterSpacing = props.letterSpacing,
        wordSpacing = props.wordSpacing,
        kerning = props.kerning,
        fontFeatureSettings = props.fontFeatureSettings,
        fontVariantLigatures = props.fontVariantLigatures,
        fontVariationSettings = props.fontVariationSettings,
        font = props.font;
    var ownedFont = (0, _util.pickNotNil)({
      fontData: fontData,
      fontStyle: fontStyle,
      fontVariant: fontVariant,
      fontWeight: fontWeight,
      fontStretch: fontStretch,
      fontSize: fontSize,
      fontFamily: extractSingleFontFamily(fontFamily),
      textAnchor: textAnchor,
      textDecoration: textDecoration,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      kerning: kerning,
      fontFeatureSettings: fontFeatureSettings,
      fontVariantLigatures: fontVariantLigatures,
      fontVariationSettings: fontVariationSettings
    });
    var baseFont = typeof font === 'string' ? parseFontString(font) : font;
    return (0, _objectSpread2.default)({}, baseFont, ownedFont);
  }

  var TSpan;

  function setTSpan(TSpanImplementation) {
    TSpan = TSpanImplementation;
  }

  function getChild(child) {
    if (typeof child === 'string' || typeof child === 'number') {
      return _react.default.createElement(TSpan, null, String(child));
    } else {
      return child;
    }
  }

  function extractText(props, container) {
    var x = props.x,
        y = props.y,
        dx = props.dx,
        dy = props.dy,
        rotate = props.rotate,
        children = props.children,
        inlineSize = props.inlineSize,
        baselineShift = props.baselineShift,
        verticalAlign = props.verticalAlign,
        alignmentBaseline = props.alignmentBaseline;
    var textChildren = typeof children === 'string' || typeof children === 'number' ? container ? _react.default.createElement(TSpan, null, String(children)) : null : _react.Children.count(children) > 1 || Array.isArray(children) ? _react.Children.map(children, getChild) : children;
    return {
      content: textChildren === null ? String(children) : null,
      children: textChildren,
      inlineSize: inlineSize,
      baselineShift: baselineShift,
      verticalAlign: verticalAlign,
      alignmentBaseline: alignmentBaseline,
      font: extractFont(props),
      x: (0, _extractLengthList.default)(x),
      y: (0, _extractLengthList.default)(y),
      dx: (0, _extractLengthList.default)(dx),
      dy: (0, _extractLengthList.default)(dy),
      rotate: (0, _extractLengthList.default)(rotate)
    };
  }
},816,[362,1,46,49,800,805]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGText = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _util = _$$_REQUIRE(_dependencyMap[14]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  _$$_REQUIRE(_dependencyMap[16]);

  var Text = function (_Shape) {
    (0, _inherits2.default)(Text, _Shape);

    function Text() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Text);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Text)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function (props) {
        var matrix = props && !props.matrix && (0, _extractTransform.default)(props);

        if (matrix) {
          props.matrix = matrix;
        }

        var prop = (0, _extractProps.propsAndStyles)(props);
        (0, _extends2.default)(prop, (0, _util.pickNotNil)((0, _extractText.default)(prop, true)));
        _this.root && _this.root.setNativeProps(prop);
      };

      return _this;
    }

    (0, _createClass2.default)(Text, [{
      key: "render",
      value: function render() {
        var prop = (0, _extractProps.propsAndStyles)(this.props);
        var props = (0, _extractProps.default)((0, _objectSpread2.default)({}, prop, {
          x: null,
          y: null
        }), this);
        (0, _extends2.default)(props, (0, _extractText.default)(prop, true));
        props.ref = this.refMethod;
        return _react.default.createElement(RNSVGText, props);
      }
    }]);
    return Text;
  }(_Shape2.default);

  exports.default = Text;
  Text.displayName = 'Text';
  var RNSVGText = (0, _reactNative.requireNativeComponent)('RNSVGText');
  exports.RNSVGText = RNSVGText;
},817,[362,1,46,11,22,23,30,33,36,49,2,816,794,801,805,791,818]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGTSpan = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _extractText = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13]));

  var _util = _$$_REQUIRE(_dependencyMap[14]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var TSpan = function (_Shape) {
    (0, _inherits2.default)(TSpan, _Shape);

    function TSpan() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TSpan);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TSpan)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function (props) {
        var matrix = !props.matrix && (0, _extractTransform.default)(props);

        if (matrix) {
          props.matrix = matrix;
        }

        var prop = (0, _extractProps.propsAndStyles)(props);
        (0, _extends2.default)(prop, (0, _util.pickNotNil)((0, _extractText.default)(prop, false)));
        _this.root && _this.root.setNativeProps(prop);
      };

      return _this;
    }

    (0, _createClass2.default)(TSpan, [{
      key: "render",
      value: function render() {
        var prop = (0, _extractProps.propsAndStyles)(this.props);
        var props = (0, _extractProps.default)((0, _objectSpread2.default)({}, prop, {
          x: null,
          y: null
        }), this);
        (0, _extends2.default)(props, (0, _extractText.default)(prop, false));
        props.ref = this.refMethod;
        return _react.default.createElement(RNSVGTSpan, props);
      }
    }]);
    return TSpan;
  }(_Shape2.default);

  exports.default = TSpan;
  TSpan.displayName = 'TSpan';
  (0, _extractText.setTSpan)(TSpan);
  var RNSVGTSpan = (0, _reactNative.requireNativeComponent)('RNSVGTSpan');
  exports.RNSVGTSpan = RNSVGTSpan;
},818,[362,1,46,11,22,23,30,33,36,49,2,794,801,816,805,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGTextPath = exports.default = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _extractProps = _$$_REQUIRE(_dependencyMap[11]);

  var _extractText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _util = _$$_REQUIRE(_dependencyMap[13]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _TSpan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var TextPath = function (_Shape) {
    (0, _inherits2.default)(TextPath, _Shape);

    function TextPath() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TextPath);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TextPath)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function (props) {
        var matrix = !props.matrix && (0, _extractTransform.default)(props);

        if (matrix) {
          props.matrix = matrix;
        }

        (0, _extends2.default)(props, (0, _util.pickNotNil)((0, _extractText.default)(props, true)));
        _this.root && _this.root.setNativeProps(props);
      };

      return _this;
    }

    (0, _createClass2.default)(TextPath, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            xlinkHref = _this$props.xlinkHref,
            _this$props$href = _this$props.href,
            href = _this$props$href === undefined ? xlinkHref : _this$props$href,
            _this$props$startOffs = _this$props.startOffset,
            startOffset = _this$props$startOffs === undefined ? 0 : _this$props$startOffs,
            method = _this$props.method,
            spacing = _this$props.spacing,
            side = _this$props.side,
            alignmentBaseline = _this$props.alignmentBaseline,
            midLine = _this$props.midLine,
            prop = (0, _objectWithoutProperties2.default)(_this$props, ["children", "xlinkHref", "href", "startOffset", "method", "spacing", "side", "alignmentBaseline", "midLine"]);
        var matched = href && href.match(_util.idPattern);
        var match = matched && matched[1];

        if (match) {
          var props = (0, _extractProps.withoutXY)(this, prop);
          (0, _extends2.default)(props, (0, _extractText.default)({
            children: children
          }, true), {
            href: match,
            startOffset: startOffset,
            method: method,
            spacing: spacing,
            side: side,
            alignmentBaseline: alignmentBaseline,
            midLine: midLine
          });
          props.ref = this.refMethod;
          return _react.default.createElement(RNSVGTextPath, props);
        }

        console.warn('Invalid `href` prop for `TextPath` element, expected a href like "#id", but got: "' + href + '"');
        return _react.default.createElement(_TSpan.default, {
          ref: this.refMethod
        }, children);
      }
    }]);
    return TextPath;
  }(_Shape2.default);

  exports.default = TextPath;
  TextPath.displayName = 'TextPath';
  var RNSVGTextPath = (0, _reactNative.requireNativeComponent)('RNSVGTextPath');
  exports.RNSVGTextPath = RNSVGTextPath;
},819,[1,9,11,22,23,30,33,36,49,2,801,794,816,805,791,818]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGUse = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _util = _$$_REQUIRE(_dependencyMap[10]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var Use = function (_Shape) {
    (0, _inherits2.default)(Use, _Shape);

    function Use() {
      (0, _classCallCheck2.default)(this, Use);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Use).apply(this, arguments));
    }

    (0, _createClass2.default)(Use, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var children = props.children,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            xlinkHref = props.xlinkHref,
            _props$href = props.href,
            href = _props$href === undefined ? xlinkHref : _props$href;
        var matched = href && href.match(_util.idPattern);
        var match = matched && matched[1];

        if (!match) {
          console.warn('Invalid `href` prop for `Use` element, expected a href like "#id", but got: "' + href + '"');
        }

        return _react.default.createElement(RNSVGUse, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.withoutXY)(this, props), {
          href: match,
          x: x,
          y: y,
          width: width,
          height: height
        }), children);
      }
    }]);
    return Use;
  }(_Shape2.default);

  exports.default = Use;
  Use.displayName = 'Use';
  Use.defaultProps = {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  };
  var RNSVGUse = (0, _reactNative.requireNativeComponent)('RNSVGUse');
  exports.RNSVGUse = RNSVGUse;
},820,[1,11,22,23,30,33,36,49,2,794,805,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGImage = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractViewBox = _$$_REQUIRE(_dependencyMap[9]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[10]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var spacesRegExp = /\s+/;

  var SvgImage = function (_Shape) {
    (0, _inherits2.default)(SvgImage, _Shape);

    function SvgImage() {
      (0, _classCallCheck2.default)(this, SvgImage);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SvgImage).apply(this, arguments));
    }

    (0, _createClass2.default)(SvgImage, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var preserveAspectRatio = props.preserveAspectRatio,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            xlinkHref = props.xlinkHref,
            _props$href = props.href,
            href = _props$href === undefined ? xlinkHref : _props$href;
        var modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];
        var align = modes[0];
        var meetOrSlice = modes[1];
        return _react.default.createElement(RNSVGImage, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.withoutXY)(this, props), {
          x: x,
          y: y,
          width: width,
          height: height,
          meetOrSlice: _extractViewBox.meetOrSliceTypes[meetOrSlice] || 0,
          align: _extractViewBox.alignEnum[align] || 'xMidYMid',
          src: !href ? null : _reactNative.Image.resolveAssetSource(typeof href === 'string' ? {
            uri: href
          } : href)
        }));
      }
    }]);
    return SvgImage;
  }(_Shape2.default);

  exports.default = SvgImage;
  SvgImage.displayName = 'Image';
  SvgImage.defaultProps = {
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    preserveAspectRatio: 'xMidYMid meet'
  };
  var RNSVGImage = (0, _reactNative.requireNativeComponent)('RNSVGImage');
  exports.RNSVGImage = RNSVGImage;
},821,[1,11,22,23,30,33,36,49,2,814,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGSymbol = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Symbol = function (_Shape) {
    (0, _inherits2.default)(Symbol, _Shape);

    function Symbol() {
      (0, _classCallCheck2.default)(this, Symbol);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Symbol).apply(this, arguments));
    }

    (0, _createClass2.default)(Symbol, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var id = props.id,
            children = props.children;
        return _react.default.createElement(RNSVGSymbol, (0, _extends2.default)({
          ref: this.refMethod,
          name: id
        }, (0, _extractViewBox.default)(props)), children);
      }
    }]);
    return Symbol;
  }(_Shape2.default);

  exports.default = Symbol;
  Symbol.displayName = 'Symbol';
  var RNSVGSymbol = (0, _reactNative.requireNativeComponent)('RNSVGSymbol');
  exports.RNSVGSymbol = RNSVGSymbol;
},822,[1,11,22,23,30,33,36,49,2,814,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGDefs = exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var Defs = function (_Component) {
    (0, _inherits2.default)(Defs, _Component);

    function Defs() {
      (0, _classCallCheck2.default)(this, Defs);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Defs).apply(this, arguments));
    }

    (0, _createClass2.default)(Defs, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(RNSVGDefs, null, this.props.children);
      }
    }]);
    return Defs;
  }(_react.Component);

  exports.default = Defs;
  Defs.displayName = 'Defs';
  var RNSVGDefs = (0, _reactNative.requireNativeComponent)('RNSVGDefs');
  exports.RNSVGDefs = RNSVGDefs;
},823,[362,1,22,23,30,33,36,49,2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGLinearGradient = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var LinearGradient = function (_Shape) {
    (0, _inherits2.default)(LinearGradient, _Shape);

    function LinearGradient() {
      (0, _classCallCheck2.default)(this, LinearGradient);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinearGradient).apply(this, arguments));
    }

    (0, _createClass2.default)(LinearGradient, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var x1 = props.x1,
            y1 = props.y1,
            x2 = props.x2,
            y2 = props.y2;
        return _react.default.createElement(RNSVGLinearGradient, (0, _extends2.default)({
          ref: this.refMethod,
          x1: x1,
          y1: y1,
          x2: x2,
          y2: y2
        }, (0, _extractGradient.default)(props, this)));
      }
    }]);
    return LinearGradient;
  }(_Shape2.default);

  exports.default = LinearGradient;
  LinearGradient.displayName = 'LinearGradient';
  LinearGradient.defaultProps = {
    x1: '0%',
    y1: '0%',
    x2: '100%',
    y2: '0%'
  };
  var RNSVGLinearGradient = (0, _reactNative.requireNativeComponent)('RNSVGLinearGradient');
  exports.RNSVGLinearGradient = RNSVGLinearGradient;
},824,[1,11,22,23,30,33,36,49,2,825,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractGradient;

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _extractColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var percentReg = /^([+\-]?\d+(?:\.\d+)?(?:[eE][+\-]?\d+)?)(%?)$/;

  function percentToFloat(percent) {
    if (typeof percent === 'number') {
      return percent;
    }

    if (typeof percent === 'object' && typeof percent.__getAnimatedValue === 'function') {
      return percent.__getAnimatedValue();
    }

    var matched = typeof percent === 'string' && percent.match(percentReg);

    if (!matched) {
      console.warn("\"" + percent + "\" is not a valid number or percentage string.");
      return 0;
    }

    return matched[2] ? +matched[1] / 100 : +matched[1];
  }

  var offsetComparator = function offsetComparator(object, other) {
    return object[0] - other[0];
  };

  function extractGradient(props, parent) {
    var id = props.id,
        children = props.children,
        gradientTransform = props.gradientTransform,
        transform = props.transform,
        gradientUnits = props.gradientUnits;

    if (!id) {
      return null;
    }

    var stops = [];
    var childArray = children ? _react.Children.map(children, function (child) {
      return _react.default.cloneElement(child, {
        parent: parent
      });
    }) : [];
    var l = childArray.length;

    for (var i = 0; i < l; i++) {
      var _childArray$i$props = childArray[i].props,
          style = _childArray$i$props.style,
          _childArray$i$props$o = _childArray$i$props.offset,
          offset = _childArray$i$props$o === undefined ? style && style.offset : _childArray$i$props$o,
          _childArray$i$props$s = _childArray$i$props.stopColor,
          stopColor = _childArray$i$props$s === undefined ? style && style.stopColor || '#000' : _childArray$i$props$s,
          _childArray$i$props$s2 = _childArray$i$props.stopOpacity,
          stopOpacity = _childArray$i$props$s2 === undefined ? style && style.stopOpacity : _childArray$i$props$s2;
      var offsetNumber = percentToFloat(offset || 0);
      var color = stopColor && (0, _extractColor.default)(stopColor);

      if (typeof color !== 'number' || isNaN(offsetNumber)) {
        console.warn("\"" + stopColor + "\" is not a valid color or \"" + offset + "\" is not a valid offset");
        continue;
      }

      var alpha = Math.round((0, _extractOpacity.default)(stopOpacity) * 255);
      stops.push([offsetNumber, color & 0x00ffffff | alpha << 24]);
    }

    stops.sort(offsetComparator);
    var gradient = [];
    var k = stops.length;

    for (var j = 0; j < k; j++) {
      var s = stops[j];
      gradient.push(s[0], s[1]);
    }

    return {
      name: id,
      gradient: gradient,
      children: childArray,
      gradientUnits: gradientUnits && _units.default[gradientUnits] || 0,
      gradientTransform: (0, _extractTransform.default)(gradientTransform || transform || props)
    };
  }
},825,[1,362,49,797,798,801,826]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.units = undefined;
  var units = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.units = units;
  var _default = units;
  exports.default = _default;
},826,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGRadialGradient = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var RadialGradient = function (_Shape) {
    (0, _inherits2.default)(RadialGradient, _Shape);

    function RadialGradient() {
      (0, _classCallCheck2.default)(this, RadialGradient);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RadialGradient).apply(this, arguments));
    }

    (0, _createClass2.default)(RadialGradient, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var rx = props.rx,
            ry = props.ry,
            r = props.r,
            cx = props.cx,
            cy = props.cy,
            _props$fx = props.fx,
            fx = _props$fx === undefined ? cx : _props$fx,
            _props$fy = props.fy,
            fy = _props$fy === undefined ? cy : _props$fy;
        return _react.default.createElement(RNSVGRadialGradient, (0, _extends2.default)({
          ref: this.refMethod,
          fx: fx,
          fy: fy,
          rx: rx || r,
          ry: ry || r,
          cx: cx,
          cy: cy
        }, (0, _extractGradient.default)(props, this)));
      }
    }]);
    return RadialGradient;
  }(_Shape2.default);

  exports.default = RadialGradient;
  RadialGradient.displayName = 'RadialGradient';
  RadialGradient.defaultProps = {
    cx: '50%',
    cy: '50%',
    r: '50%'
  };
  var RNSVGRadialGradient = (0, _reactNative.requireNativeComponent)('RNSVGRadialGradient');
  exports.RNSVGRadialGradient = RNSVGRadialGradient;
},827,[1,11,22,23,30,33,36,49,2,825,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var Stop = function (_Component) {
    (0, _inherits2.default)(Stop, _Component);

    function Stop() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Stop);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Stop)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.setNativeProps = function () {
        var parent = _this.props.parent;

        if (parent) {
          parent.forceUpdate();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(Stop, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Stop;
  }(_react.Component);

  exports.default = Stop;
  Stop.displayName = 'Stop';
},828,[1,22,23,30,33,36,49]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGClipPath = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractProps = _$$_REQUIRE(_dependencyMap[9]);

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var ClipPath = function (_Shape) {
    (0, _inherits2.default)(ClipPath, _Shape);

    function ClipPath() {
      (0, _classCallCheck2.default)(this, ClipPath);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ClipPath).apply(this, arguments));
    }

    (0, _createClass2.default)(ClipPath, [{
      key: "render",
      value: function render() {
        var props = this.props;
        return _react.default.createElement(RNSVGClipPath, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.extract)(this, props)), props.children);
      }
    }]);
    return ClipPath;
  }(_Shape2.default);

  exports.default = ClipPath;
  ClipPath.displayName = 'ClipPath';
  var RNSVGClipPath = (0, _reactNative.requireNativeComponent)('RNSVGClipPath');
  exports.RNSVGClipPath = RNSVGClipPath;
},829,[1,11,22,23,30,33,36,49,2,794,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGPattern = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: patternUnits && _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
  exports.RNSVGPattern = RNSVGPattern;
},830,[1,11,22,23,30,33,36,49,2,801,814,826,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGMask = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractProps = _$$_REQUIRE(_dependencyMap[10]);

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.withoutXY)(this, props), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
  exports.RNSVGMask = RNSVGMask;
},831,[1,11,22,23,30,33,36,49,2,801,794,826,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RNSVGMarker = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Marker = function (_Shape) {
    (0, _inherits2.default)(Marker, _Shape);

    function Marker() {
      (0, _classCallCheck2.default)(this, Marker);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Marker).apply(this, arguments));
    }

    (0, _createClass2.default)(Marker, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var id = props.id,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio,
            refX = props.refX,
            refY = props.refY,
            markerUnits = props.markerUnits,
            orient = props.orient,
            markerWidth = props.markerWidth,
            markerHeight = props.markerHeight,
            children = props.children;
        return _react.default.createElement(RNSVGMarker, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          refX: refX,
          refY: refY,
          orient: String(orient),
          markerUnits: markerUnits,
          markerWidth: markerWidth,
          markerHeight: markerHeight
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Marker;
  }(_Shape2.default);

  exports.default = Marker;
  Marker.displayName = 'Marker';
  Marker.defaultProps = {
    refX: 0,
    refY: 0,
    orient: '0',
    markerWidth: 3,
    markerHeight: 3,
    markerUnits: 'strokeWidth'
  };
  var RNSVGMarker = (0, _reactNative.requireNativeComponent)('RNSVGMarker');
  exports.RNSVGMarker = RNSVGMarker;
},832,[1,11,22,23,30,33,36,49,2,814,791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SvgAst = SvgAst;
  exports.SvgXml = SvgXml;
  exports.fetchText = fetchText;
  exports.SvgUri = SvgUri;
  exports.getStyle = getStyle;
  exports.astToReact = astToReact;
  exports.parse = _parse;
  exports.camelCase = exports.SvgFromUri = exports.SvgFromXml = exports.err = exports.tags = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _Rect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Circle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Ellipse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Polygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Polyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Line = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Svg = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _G = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _TSpan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _TextPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _Use = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _Symbol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _Defs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _LinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _RadialGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _Stop = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _ClipPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _Pattern = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _Mask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _Marker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var tags = {
    svg: _Svg.default,
    circle: _Circle.default,
    ellipse: _Ellipse.default,
    g: _G.default,
    text: _Text.default,
    tspan: _TSpan.default,
    textPath: _TextPath.default,
    path: _Path.default,
    polygon: _Polygon.default,
    polyline: _Polyline.default,
    line: _Line.default,
    rect: _Rect.default,
    use: _Use.default,
    image: _Image.default,
    symbol: _Symbol.default,
    defs: _Defs.default,
    linearGradient: _LinearGradient.default,
    radialGradient: _RadialGradient.default,
    stop: _Stop.default,
    clipPath: _ClipPath.default,
    pattern: _Pattern.default,
    mask: _Mask.default,
    marker: _Marker.default
  };
  exports.tags = tags;

  function missingTag() {
    return null;
  }

  function SvgAst(_ref) {
    var ast = _ref.ast,
        override = _ref.override;

    if (!ast) {
      return null;
    }

    var props = ast.props,
        children = ast.children;
    return _react.default.createElement(_Svg.default, (0, _extends2.default)({}, props, override), children);
  }

  function SvgXml(props) {
    var xml = props.xml,
        override = props.override;
    var ast = (0, _react.useMemo)(function () {
      return xml !== null ? _parse(xml) : null;
    }, [xml]);
    return _react.default.createElement(SvgAst, {
      ast: ast,
      override: override || props
    });
  }

  function fetchText(uri) {
    var response;
    return _regenerator.default.async(function fetchText$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap(fetch(uri));

          case 2:
            response = _context.sent;
            _context.next = 5;
            return _regenerator.default.awrap(response.text());

          case 5:
            return _context.abrupt("return", _context.sent);

          case 6:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  var err = console.error.bind(console);
  exports.err = err;

  function SvgUri(props) {
    var uri = props.uri;

    var _useState = (0, _react.useState)(null),
        _useState2 = (0, _slicedToArray2.default)(_useState, 2),
        xml = _useState2[0],
        setXml = _useState2[1];

    (0, _react.useEffect)(function () {
      uri ? fetchText(uri).then(setXml).catch(err) : setXml(null);
    }, [uri]);
    return _react.default.createElement(SvgXml, {
      xml: xml,
      override: props
    });
  }

  var SvgFromXml = function (_Component) {
    (0, _inherits2.default)(SvgFromXml, _Component);

    function SvgFromXml() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SvgFromXml);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf4.default)(SvgFromXml)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        ast: null
      };
      return _this;
    }

    (0, _createClass2.default)(SvgFromXml, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.parse(this.props.xml);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var xml = this.props.xml;

        if (xml !== prevProps.xml) {
          this.parse(xml);
        }
      }
    }, {
      key: "parse",
      value: function parse(xml) {
        try {
          this.setState({
            ast: xml ? _parse(xml) : null
          });
        } catch (e) {
          console.error(e);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props,
            ast = this.state.ast;
        return _react.default.createElement(SvgAst, {
          ast: ast,
          override: props.override || props
        });
      }
    }]);
    return SvgFromXml;
  }(_react.Component);

  exports.SvgFromXml = SvgFromXml;

  var SvgFromUri = function (_Component2) {
    (0, _inherits2.default)(SvgFromUri, _Component2);

    function SvgFromUri() {
      var _getPrototypeOf3;

      var _this2;

      (0, _classCallCheck2.default)(this, SvgFromUri);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this2 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf3 = (0, _getPrototypeOf4.default)(SvgFromUri)).call.apply(_getPrototypeOf3, [this].concat(args)));
      _this2.state = {
        xml: null
      };
      return _this2;
    }

    (0, _createClass2.default)(SvgFromUri, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.fetch(this.props.uri);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var uri = this.props.uri;

        if (uri !== prevProps.uri) {
          this.fetch(uri);
        }
      }
    }, {
      key: "fetch",
      value: function fetch(uri) {
        return _regenerator.default.async(function fetch$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                _context2.t0 = this;

                if (!uri) {
                  _context2.next = 8;
                  break;
                }

                _context2.next = 5;
                return _regenerator.default.awrap(fetchText(uri));

              case 5:
                _context2.t1 = _context2.sent;
                _context2.next = 9;
                break;

              case 8:
                _context2.t1 = null;

              case 9:
                _context2.t2 = _context2.t1;
                _context2.t3 = {
                  xml: _context2.t2
                };

                _context2.t0.setState.call(_context2.t0, _context2.t3);

                _context2.next = 17;
                break;

              case 14:
                _context2.prev = 14;
                _context2.t4 = _context2["catch"](0);
                console.error(_context2.t4);

              case 17:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this, [[0, 14]]);
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props,
            xml = this.state.xml;
        return _react.default.createElement(SvgFromXml, {
          xml: xml,
          override: props
        });
      }
    }]);
    return SvgFromUri;
  }(_react.Component);

  exports.SvgFromUri = SvgFromUri;

  var upperCase = function upperCase(_match, letter) {
    return letter.toUpperCase();
  };

  var camelCase = function camelCase(phrase) {
    return phrase.replace(/[:\-]([a-z])/g, upperCase);
  };

  exports.camelCase = camelCase;

  function getStyle(string) {
    var style = {};
    var declarations = string.split(';');
    var length = declarations.length;

    for (var i = 0; i < length; i++) {
      var declaration = declarations[i];

      if (declaration.length !== 0) {
        var split = declaration.split(':');
        var _property = split[0];
        var value = split[1];
        style[camelCase(_property.trim())] = value.trim();
      }
    }

    return style;
  }

  function astToReact(value, index) {
    if (typeof value === 'object') {
      var Tag = value.Tag,
          props = value.props,
          children = value.children;
      return _react.default.createElement(Tag, (0, _extends2.default)({
        key: index
      }, props), children.map(astToReact));
    }

    return value;
  }

  function repeat(str, i) {
    var result = '';

    while (i--) {
      result += str;
    }

    return result;
  }

  var toSpaces = function toSpaces(tabs) {
    return repeat('  ', tabs.length);
  };

  function locate(source, i) {
    var lines = source.split('\n');
    var nLines = lines.length;
    var column = i;
    var line = 0;

    for (; line < nLines; line++) {
      var length = lines[line].length;

      if (column >= length) {
        column -= length;
      } else {
        break;
      }
    }

    var before = source.slice(0, i).replace(/^\t+/, toSpaces);
    var beforeExec = /(^|\n).*$/.exec(before);
    var beforeLine = beforeExec && beforeExec[0] || '';
    var after = source.slice(i);
    var afterExec = /.*(\n|$)/.exec(after);
    var afterLine = afterExec && afterExec[0];
    var pad = repeat(' ', beforeLine.length);
    var snippet = "" + beforeLine + afterLine + "\n" + pad + "^";
    return {
      line: line,
      column: column,
      snippet: snippet
    };
  }

  var validNameCharacters = /[a-zA-Z0-9:_-]/;
  var whitespace = /[\s\t\r\n]/;
  var quotemarks = /['"]/;

  function _parse(source, middleware) {
    var length = source.length;
    var currentElement = null;
    var state = metadata;
    var children = null;
    var root;
    var stack = [];

    function error(message) {
      var _locate = locate(source, i),
          line = _locate.line,
          column = _locate.column,
          snippet = _locate.snippet;

      throw new Error(message + " (" + line + ":" + column + "). If this is valid SVG, it's probably a bug. Please raise an issue\n\n" + snippet);
    }

    function metadata() {
      while (i + 1 < length && (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))) {
        i++;
      }

      return neutral();
    }

    function neutral() {
      var text = '';
      var char;

      while (i < length && (char = source[i]) !== '<') {
        text += char;
        i += 1;
      }

      if (/\S/.test(text)) {
        children.push(text);
      }

      if (source[i] === '<') {
        return openingTag;
      }

      return neutral;
    }

    function openingTag() {
      var char = source[i];

      if (char === '?') {
        return neutral;
      }

      if (char === '!') {
        var start = i + 1;

        if (source.slice(start, i + 3) === '--') {
          return comment;
        }

        var end = i + 8;

        if (source.slice(start, end) === '[CDATA[') {
          return cdata;
        }

        if (/doctype/i.test(source.slice(start, end))) {
          return neutral;
        }
      }

      if (char === '/') {
        return closingTag;
      }

      var tag = getName();
      var props = {};
      var element = {
        tag: tag,
        props: props,
        children: [],
        parent: currentElement,
        Tag: tags[tag] || missingTag
      };

      if (currentElement) {
        children.push(element);
      } else {
        root = element;
      }

      getAttributes(props);
      var style = props.style;

      if (typeof style === 'string') {
        element.styles = style;
        props.style = getStyle(style);
      }

      var selfClosing = false;

      if (source[i] === '/') {
        i += 1;
        selfClosing = true;
      }

      if (source[i] !== '>') {
        error('Expected >');
      }

      if (!selfClosing) {
        currentElement = element;
        children = element.children;
        stack.push(element);
      }

      return neutral;
    }

    function comment() {
      var index = source.indexOf('-->', i);

      if (!~index) {
        error('expected -->');
      }

      i = index + 2;
      return neutral;
    }

    function cdata() {
      var index = source.indexOf(']]>', i);

      if (!~index) {
        error('expected ]]>');
      }

      children.push(source.slice(i + 7, index));
      i = index + 2;
      return neutral;
    }

    function closingTag() {
      var tag = getName();

      if (!tag) {
        error('Expected tag name');
      }

      if (currentElement && tag !== currentElement.tag) {
        error("Expected closing tag </" + tag + "> to match opening tag <" + currentElement.tag + ">");
      }

      if (source[i] !== '>') {
        error('Expected >');
      }

      stack.pop();
      currentElement = stack[stack.length - 1];

      if (currentElement) {
        var _currentElement = currentElement;
        children = _currentElement.children;
      }

      return neutral;
    }

    function getName() {
      var name = '';
      var char;

      while (i < length && validNameCharacters.test(char = source[i])) {
        name += char;
        i += 1;
      }

      return name;
    }

    function getAttributes(props) {
      while (i < length) {
        if (!whitespace.test(source[i])) {
          return;
        }

        allowSpaces();
        var name = getName();

        if (!name) {
          return;
        }

        var value = true;
        allowSpaces();

        if (source[i] === '=') {
          i += 1;
          allowSpaces();
          value = getAttributeValue();

          if (!isNaN(+value) && value.trim() !== '') {
            value = +value;
          }
        }

        props[camelCase(name)] = value;
      }
    }

    function getAttributeValue() {
      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();
    }

    function getUnquotedAttributeValue() {
      var value = '';

      do {
        var char = source[i];

        if (char === ' ' || char === '>' || char === '/') {
          return value;
        }

        value += char;
        i += 1;
      } while (i < length);

      return value;
    }

    function getQuotedAttributeValue() {
      var quotemark = source[i++];
      var value = '';
      var escaped = false;

      while (i < length) {
        var char = source[i++];

        if (char === quotemark && !escaped) {
          return value;
        }

        if (char === '\\' && !escaped) {
          escaped = true;
        }

        value += escaped ? "\\" + char : char;
        escaped = false;
      }

      return value;
    }

    function allowSpaces() {
      while (i < length && whitespace.test(source[i])) {
        i += 1;
      }
    }

    var i = 0;

    while (i < length) {
      if (!state) {
        error('Unexpected character');
      }

      state = state();
      i += 1;
    }

    if (state !== neutral) {
      error('Unexpected end of input');
    }

    if (root) {
      var xml = (middleware ? middleware(root) : root) || root;

      var _ast = xml.children.map(astToReact);

      var jsx = xml;
      jsx.children = _ast;
      return jsx;
    }

    return null;
  }
},833,[362,1,22,23,30,33,36,12,136,11,49,793,806,807,808,811,812,813,809,815,817,818,819,820,821,822,823,824,827,828,829,830,831,832]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SvgCss = SvgCss;
  exports.SvgCssUri = SvgCssUri;
  exports.SvgWithCssUri = exports.SvgWithCss = exports.inlineStyles = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _xml = _$$_REQUIRE(_dependencyMap[10]);

  var _cssTree = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _cssSelect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  function isTag(node) {
    return typeof node === 'object';
  }

  function getParent(node) {
    return typeof node === 'object' && node.parent || null;
  }

  function getChildren(node) {
    return typeof node === 'object' && node.children || [];
  }

  function getName(elem) {
    return elem.tag;
  }

  function getText(_node) {
    return '';
  }

  function getAttributeValue(elem, name) {
    return elem.props[name] || null;
  }

  function removeSubsets(nodes) {
    var idx = nodes.length,
        node,
        ancestor,
        replace;

    while (--idx > -1) {
      node = ancestor = nodes[idx];
      delete nodes[idx];
      replace = true;

      while (ancestor) {
        if (nodes.includes(ancestor)) {
          replace = false;
          nodes.splice(idx, 1);
          break;
        }

        ancestor = typeof ancestor === 'object' && ancestor.parent || null;
      }

      if (replace) {
        nodes[idx] = node;
      }
    }

    return nodes;
  }

  function existsOne(predicate, elems) {
    return elems.some(function (elem) {
      return typeof elem === 'object' && (predicate(elem) || existsOne(predicate, elem.children));
    });
  }

  function getSiblings(node) {
    var parent = typeof node === 'object' && node.parent;
    return parent && parent.children || [];
  }

  function hasAttrib(elem, name) {
    return elem.props.hasOwnProperty(name);
  }

  function findOne(predicate, elems) {
    var elem;

    for (var i = 0, l = elems.length; i < l && !elem; i++) {
      var node = elems[i];

      if (typeof node === 'string') {} else if (predicate(node)) {
        elem = node;
      } else {
        var children = node.children;

        if (children.length !== 0) {
          elem = findOne(predicate, children);
        }
      }
    }

    return elem;
  }

  function findAll(predicate, nodes) {
    var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    for (var i = 0, j = nodes.length; i < j; i++) {
      var node = nodes[i];

      if (typeof node !== 'object') {
        continue;
      }

      if (predicate(node)) {
        result.push(node);
      }

      var children = node.children;

      if (children.length !== 0) {
        findAll(predicate, children, result);
      }
    }

    return result;
  }

  var adapter = {
    removeSubsets: removeSubsets,
    existsOne: existsOne,
    getSiblings: getSiblings,
    hasAttrib: hasAttrib,
    findOne: findOne,
    findAll: findAll,
    isTag: isTag,
    getParent: getParent,
    getChildren: getChildren,
    getName: getName,
    getText: getText,
    getAttributeValue: getAttributeValue
  };
  var cssSelectOpts = {
    xmlMode: true,
    adapter: adapter
  };

  function querySelectorAll(query, elems) {
    return (0, _cssSelect.default)(query, elems, cssSelectOpts);
  }

  function flattenToSelectors(cssAst, selectors) {
    _cssTree.default.walk(cssAst, {
      visit: 'Rule',
      enter: function enter(rule) {
        var _ref = rule,
            type = _ref.type,
            prelude = _ref.prelude;

        if (type !== 'Rule') {
          return;
        }

        var atrule = this.atrule;
        prelude.children.each(function (node, item) {
          var _ref2 = node,
              children = _ref2.children;
          var pseudos = [];
          selectors.push({
            item: item,
            atrule: atrule,
            rule: rule,
            pseudos: pseudos
          });
          children.each(function (_ref3, pseudoItem, list) {
            var childType = _ref3.type;

            if (childType === 'PseudoClassSelector' || childType === 'PseudoElementSelector') {
              pseudos.push({
                item: pseudoItem,
                list: list
              });
            }
          });
        });
      }
    });
  }

  function filterByMqs(selectors) {
    return selectors.filter(function (_ref4) {
      var atrule = _ref4.atrule;

      if (atrule === null) {
        return true;
      }

      var name = atrule.name,
          prelude = atrule.prelude;
      var atPrelude = prelude;
      var first = atPrelude && atPrelude.children.first();
      var mq = first && first.type === 'MediaQueryList';
      var query = mq ? _cssTree.default.generate(atPrelude) : name;
      return useMqs.includes(query);
    });
  }

  var useMqs = ['', 'screen'];

  function filterByPseudos(selectors) {
    return selectors.filter(function (_ref5) {
      var pseudos = _ref5.pseudos;
      return usePseudos.includes(_cssTree.default.generate({
        type: 'Selector',
        children: new _cssTree.List().fromArray(pseudos.map(function (pseudo) {
          return pseudo.item.data;
        }))
      }));
    });
  }

  var usePseudos = [''];

  function cleanPseudos(selectors) {
    selectors.forEach(function (_ref6) {
      var pseudos = _ref6.pseudos;
      return pseudos.forEach(function (pseudo) {
        return pseudo.list.remove(pseudo.item);
      });
    });
  }

  function specificity(selector) {
    var A = 0;
    var B = 0;
    var C = 0;
    selector.children.each(function walk(node) {
      switch (node.type) {
        case 'SelectorList':
        case 'Selector':
          node.children.each(walk);
          break;

        case 'IdSelector':
          A++;
          break;

        case 'ClassSelector':
        case 'AttributeSelector':
          B++;
          break;

        case 'PseudoClassSelector':
          switch (node.name.toLowerCase()) {
            case 'not':
              var children = node.children;
              children && children.each(walk);
              break;

            case 'before':
            case 'after':
            case 'first-line':
            case 'first-letter':
              C++;
              break;

            default:
              B++;
          }

          break;

        case 'PseudoElementSelector':
          C++;
          break;

        case 'TypeSelector':
          var name = node.name;

          if (name.charAt(name.length - 1) !== '*') {
            C++;
          }

          break;
      }
    });
    return [A, B, C];
  }

  function compareSpecificity(aSpecificity, bSpecificity) {
    for (var i = 0; i < 4; i += 1) {
      if (aSpecificity[i] < bSpecificity[i]) {
        return -1;
      } else if (aSpecificity[i] > bSpecificity[i]) {
        return 1;
      }
    }

    return 0;
  }

  function selectorWithSpecificity(selector) {
    return {
      selector: selector,
      specificity: specificity(selector.item.data)
    };
  }

  function bySelectorSpecificity(a, b) {
    return compareSpecificity(a.specificity, b.specificity);
  }

  function pass(arr, len, chk, result) {
    var dbl = chk * 2;
    var l, r, e;
    var li, ri;
    var i = 0;

    for (l = 0; l < len; l += dbl) {
      r = l + chk;
      e = r + chk;

      if (r > len) {
        r = len;
      }

      if (e > len) {
        e = len;
      }

      li = l;
      ri = r;

      while (true) {
        if (li < r && ri < e) {
          if (bySelectorSpecificity(arr[li], arr[ri]) <= 0) {
            result[i++] = arr[li++];
          } else {
            result[i++] = arr[ri++];
          }
        } else if (li < r) {
            result[i++] = arr[li++];
          } else if (ri < e) {
            result[i++] = arr[ri++];
          } else {
              break;
            }
      }
    }
  }

  function exec(arr, len) {
    var buffer = new Array(len);

    for (var chk = 1; chk < len; chk *= 2) {
      pass(arr, len, chk, buffer);
      var tmp = arr;
      arr = buffer;
      buffer = tmp;
    }

    return arr;
  }

  function sortSelectors(selectors) {
    var len = selectors.length;

    if (len <= 1) {
      return selectors;
    }

    var specs = selectors.map(selectorWithSpecificity);
    return exec(specs, len).map(function (s) {
      return s.selector;
    });
  }

  var declarationParseProps = {
    context: 'declarationList',
    parseValue: false
  };

  function CSSStyleDeclaration(ast) {
    var props = ast.props,
        styles = ast.styles;

    if (!props.style) {
      props.style = {};
    }

    var style = props.style;
    var priority = new Map();
    ast.style = style;
    ast.priority = priority;

    if (!styles || styles.length === 0) {
      return;
    }

    try {
      var declarations = _cssTree.default.parse(styles, declarationParseProps);

      declarations.children.each(function (node) {
        try {
          var _ref7 = node,
              property = _ref7.property,
              value = _ref7.value,
              important = _ref7.important;
          var name = property.trim();
          priority.set(name, important);
          style[(0, _xml.camelCase)(name)] = _cssTree.default.generate(value).trim();
        } catch (styleError) {
          if (styleError.message !== 'Unknown node type: undefined') {
            console.warn("Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr('style').value. Error details: " + styleError);
          }
        }
      });
    } catch (parseError) {
      console.warn("Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr('style').value. Error details: " + parseError);
    }
  }

  function initStyle(selectedEl) {
    if (!selectedEl.style) {
      CSSStyleDeclaration(selectedEl);
    }

    return selectedEl;
  }

  function closestElem(node, elemName) {
    var elem = node;

    while ((elem = elem.parent) && elem.tag !== elemName) {}

    return elem;
  }

  var parseProps = {
    parseValue: false,
    parseCustomProperty: false
  };

  var inlineStyles = function inlineStyles(document) {
    var styleElements = querySelectorAll('style', document);

    if (styleElements.length === 0) {
      return document;
    }

    var selectors = [];

    for (var _iterator = styleElements, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
      var _ref8;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref8 = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref8 = _i.value;
      }

      var _element = _ref8;
      var children = _element.children;

      if (!children.length || closestElem(_element, 'foreignObject')) {
        continue;
      }

      try {
        var styleString = children.join('');
        flattenToSelectors(_cssTree.default.parse(styleString, parseProps), selectors);
      } catch (parseError) {
        console.warn('Warning: Parse error of styles of <style/> element, skipped. Error details: ' + parseError);
      }
    }

    var selectorsMq = filterByMqs(selectors);
    var selectorsPseudo = filterByPseudos(selectorsMq);
    cleanPseudos(selectorsPseudo);
    var sortedSelectors = sortSelectors(selectorsPseudo).reverse();

    for (var _iterator2 = sortedSelectors, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
      var _ref10;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref10 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref10 = _i2.value;
      }

      var _ref11 = _ref10;
      var _rule = _ref11.rule;
      var _item = _ref11.item;

      if (_rule === null) {
        continue;
      }

      var selectorStr = _cssTree.default.generate(_item.data);

      try {
        var _ret = function () {
          var matched = querySelectorAll(selectorStr, document).map(initStyle);

          if (matched.length === 0) {
            return "continue";
          }

          _cssTree.default.walk(_rule, {
            visit: 'Declaration',
            enter: function enter(node) {
              var _ref12 = node,
                  property = _ref12.property,
                  value = _ref12.value,
                  important = _ref12.important;
              var name = property.trim();
              var camel = (0, _xml.camelCase)(name);

              var val = _cssTree.default.generate(value).trim();

              for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
                var _ref13;

                if (_isArray3) {
                  if (_i3 >= _iterator3.length) break;
                  _ref13 = _iterator3[_i3++];
                } else {
                  _i3 = _iterator3.next();
                  if (_i3.done) break;
                  _ref13 = _i3.value;
                }

                var _element3 = _ref13;
                var style = _element3.style,
                    priority = _element3.priority;
                var current = priority.get(name);

                if (current === undefined || current < important) {
                  priority.set(name, important);
                  style[camel] = val;
                }
              }
            }
          });
        }();

        if (_ret === "continue") continue;
      } catch (selectError) {
        if (selectError.constructor === SyntaxError) {
          console.warn('Warning: Syntax error when trying to select \n\n' + selectorStr + '\n\n, skipped. Error details: ' + selectError);
          continue;
        }

        throw selectError;
      }
    }

    return document;
  };

  exports.inlineStyles = inlineStyles;

  function SvgCss(props) {
    var xml = props.xml,
        override = props.override;
    var ast = (0, _react.useMemo)(function () {
      return xml !== null ? (0, _xml.parse)(xml, inlineStyles) : null;
    }, [xml]);
    return _react.default.createElement(_xml.SvgAst, {
      ast: ast,
      override: override || props
    });
  }

  function SvgCssUri(props) {
    var uri = props.uri;

    var _useState = (0, _react.useState)(null),
        _useState2 = (0, _slicedToArray2.default)(_useState, 2),
        xml = _useState2[0],
        setXml = _useState2[1];

    (0, _react.useEffect)(function () {
      uri ? (0, _xml.fetchText)(uri).then(setXml).catch(_xml.err) : setXml(null);
    }, [uri]);
    return _react.default.createElement(SvgCss, {
      xml: xml,
      override: props
    });
  }

  var SvgWithCss = function (_Component) {
    (0, _inherits2.default)(SvgWithCss, _Component);

    function SvgWithCss() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SvgWithCss);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf4.default)(SvgWithCss)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        ast: null
      };
      return _this;
    }

    (0, _createClass2.default)(SvgWithCss, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.parse(this.props.xml);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var xml = this.props.xml;

        if (xml !== prevProps.xml) {
          this.parse(xml);
        }
      }
    }, {
      key: "parse",
      value: function parse(xml) {
        try {
          this.setState({
            ast: xml ? (0, _xml.parse)(xml, inlineStyles) : null
          });
        } catch (e) {
          console.error(e);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props,
            ast = this.state.ast;
        return _react.default.createElement(_xml.SvgAst, {
          ast: ast,
          override: props.override || props
        });
      }
    }]);
    return SvgWithCss;
  }(_react.Component);

  exports.SvgWithCss = SvgWithCss;

  var SvgWithCssUri = function (_Component2) {
    (0, _inherits2.default)(SvgWithCssUri, _Component2);

    function SvgWithCssUri() {
      var _getPrototypeOf3;

      var _this2;

      (0, _classCallCheck2.default)(this, SvgWithCssUri);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this2 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf3 = (0, _getPrototypeOf4.default)(SvgWithCssUri)).call.apply(_getPrototypeOf3, [this].concat(args)));
      _this2.state = {
        xml: null
      };
      return _this2;
    }

    (0, _createClass2.default)(SvgWithCssUri, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.fetch(this.props.uri);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var uri = this.props.uri;

        if (uri !== prevProps.uri) {
          this.fetch(uri);
        }
      }
    }, {
      key: "fetch",
      value: function fetch(uri) {
        return _regenerator.default.async(function fetch$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.t0 = this;

                if (!uri) {
                  _context.next = 8;
                  break;
                }

                _context.next = 5;
                return _regenerator.default.awrap((0, _xml.fetchText)(uri));

              case 5:
                _context.t1 = _context.sent;
                _context.next = 9;
                break;

              case 8:
                _context.t1 = null;

              case 9:
                _context.t2 = _context.t1;
                _context.t3 = {
                  xml: _context.t2
                };

                _context.t0.setState.call(_context.t0, _context.t3);

                _context.next = 17;
                break;

              case 14:
                _context.prev = 14;
                _context.t4 = _context["catch"](0);
                console.error(_context.t4);

              case 17:
              case "end":
                return _context.stop();
            }
          }
        }, null, this, [[0, 14]]);
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props,
            xml = this.state.xml;
        return _react.default.createElement(SvgWithCss, {
          xml: xml,
          override: props
        });
      }
    }]);
    return SvgWithCssUri;
  }(_react.Component);

  exports.SvgWithCssUri = SvgWithCssUri;
},834,[362,1,136,22,23,30,33,36,12,49,833,835,957]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},835,[836]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function merge() {
    var dest = {};

    for (var i = 0; i < arguments.length; i++) {
      var src = arguments[i];

      for (var key in src) {
        dest[key] = src[key];
      }
    }

    return dest;
  }

  module.exports = _$$_REQUIRE(_dependencyMap[0]).create(merge(_$$_REQUIRE(_dependencyMap[1]), _$$_REQUIRE(_dependencyMap[2]), _$$_REQUIRE(_dependencyMap[3])));
  module.exports.version = _$$_REQUIRE(_dependencyMap[4]).version;
},836,[837,880,927,955,956]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var List = _$$_REQUIRE(_dependencyMap[0]);

  var SyntaxError = _$$_REQUIRE(_dependencyMap[1]);

  var TokenStream = _$$_REQUIRE(_dependencyMap[2]);

  var Lexer = _$$_REQUIRE(_dependencyMap[3]);

  var definitionSyntax = _$$_REQUIRE(_dependencyMap[4]);

  var tokenize = _$$_REQUIRE(_dependencyMap[5]);

  var createParser = _$$_REQUIRE(_dependencyMap[6]);

  var createGenerator = _$$_REQUIRE(_dependencyMap[7]);

  var createConvertor = _$$_REQUIRE(_dependencyMap[8]);

  var createWalker = _$$_REQUIRE(_dependencyMap[9]);

  var clone = _$$_REQUIRE(_dependencyMap[10]);

  var names = _$$_REQUIRE(_dependencyMap[11]);

  var mix = _$$_REQUIRE(_dependencyMap[12]);

  function _createSyntax(config) {
    var parse = createParser(config);
    var walk = createWalker(config);
    var generate = createGenerator(config);
    var convert = createConvertor(walk);
    var syntax = {
      List: List,
      SyntaxError: SyntaxError,
      TokenStream: TokenStream,
      Lexer: Lexer,
      vendorPrefix: names.vendorPrefix,
      keyword: names.keyword,
      property: names.property,
      isCustomProperty: names.isCustomProperty,
      definitionSyntax: definitionSyntax,
      lexer: null,
      createLexer: function createLexer(config) {
        return new Lexer(config, syntax, syntax.lexer.structure);
      },
      tokenize: tokenize,
      parse: parse,
      walk: walk,
      generate: generate,
      find: walk.find,
      findLast: walk.findLast,
      findAll: walk.findAll,
      clone: clone,
      fromPlainObject: convert.fromPlainObject,
      toPlainObject: convert.toPlainObject,
      createSyntax: function createSyntax(config) {
        return _createSyntax(mix({}, config));
      },
      fork: function fork(extension) {
        var base = mix({}, config);
        return _createSyntax(typeof extension === 'function' ? extension(base, Object.assign) : mix(base, extension));
      }
    };
    syntax.lexer = new Lexer({
      generic: true,
      types: config.types,
      atrules: config.atrules,
      properties: config.properties,
      node: config.node
    }, syntax);
    return syntax;
  }

  ;

  exports.create = function (config) {
    return _createSyntax(mix({}, config));
  };
},837,[838,839,841,845,864,850,865,868,876,877,878,848,879]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function createItem(data) {
    return {
      prev: null,
      next: null,
      data: data
    };
  }

  function allocateCursor(node, prev, next) {
    var cursor;

    if (cursors !== null) {
      cursor = cursors;
      cursors = cursors.cursor;
      cursor.prev = prev;
      cursor.next = next;
      cursor.cursor = node.cursor;
    } else {
      cursor = {
        prev: prev,
        next: next,
        cursor: node.cursor
      };
    }

    node.cursor = cursor;
    return cursor;
  }

  function releaseCursor(node) {
    var cursor = node.cursor;
    node.cursor = cursor.cursor;
    cursor.prev = null;
    cursor.next = null;
    cursor.cursor = cursors;
    cursors = cursor;
  }

  var cursors = null;

  var List = function List() {
    this.cursor = null;
    this.head = null;
    this.tail = null;
  };

  List.createItem = createItem;
  List.prototype.createItem = createItem;

  List.prototype.updateCursors = function (prevOld, prevNew, nextOld, nextNew) {
    var cursor = this.cursor;

    while (cursor !== null) {
      if (cursor.prev === prevOld) {
        cursor.prev = prevNew;
      }

      if (cursor.next === nextOld) {
        cursor.next = nextNew;
      }

      cursor = cursor.cursor;
    }
  };

  List.prototype.getSize = function () {
    var size = 0;
    var cursor = this.head;

    while (cursor) {
      size++;
      cursor = cursor.next;
    }

    return size;
  };

  List.prototype.fromArray = function (array) {
    var cursor = null;
    this.head = null;

    for (var i = 0; i < array.length; i++) {
      var item = createItem(array[i]);

      if (cursor !== null) {
        cursor.next = item;
      } else {
        this.head = item;
      }

      item.prev = cursor;
      cursor = item;
    }

    this.tail = cursor;
    return this;
  };

  List.prototype.toArray = function () {
    var cursor = this.head;
    var result = [];

    while (cursor) {
      result.push(cursor.data);
      cursor = cursor.next;
    }

    return result;
  };

  List.prototype.toJSON = List.prototype.toArray;

  List.prototype.isEmpty = function () {
    return this.head === null;
  };

  List.prototype.first = function () {
    return this.head && this.head.data;
  };

  List.prototype.last = function () {
    return this.tail && this.tail.data;
  };

  List.prototype.each = function (fn, context) {
    var item;

    if (context === undefined) {
      context = this;
    }

    var cursor = allocateCursor(this, null, this.head);

    while (cursor.next !== null) {
      item = cursor.next;
      cursor.next = item.next;
      fn.call(context, item.data, item, this);
    }

    releaseCursor(this);
  };

  List.prototype.forEach = List.prototype.each;

  List.prototype.eachRight = function (fn, context) {
    var item;

    if (context === undefined) {
      context = this;
    }

    var cursor = allocateCursor(this, this.tail, null);

    while (cursor.prev !== null) {
      item = cursor.prev;
      cursor.prev = item.prev;
      fn.call(context, item.data, item, this);
    }

    releaseCursor(this);
  };

  List.prototype.forEachRight = List.prototype.eachRight;

  List.prototype.reduce = function (fn, initialValue, context) {
    var item;

    if (context === undefined) {
      context = this;
    }

    var cursor = allocateCursor(this, null, this.head);
    var acc = initialValue;

    while (cursor.next !== null) {
      item = cursor.next;
      cursor.next = item.next;
      acc = fn.call(context, acc, item.data, item, this);
    }

    releaseCursor(this);
    return acc;
  };

  List.prototype.reduceRight = function (fn, initialValue, context) {
    var item;

    if (context === undefined) {
      context = this;
    }

    var cursor = allocateCursor(this, this.tail, null);
    var acc = initialValue;

    while (cursor.prev !== null) {
      item = cursor.prev;
      cursor.prev = item.prev;
      acc = fn.call(context, acc, item.data, item, this);
    }

    releaseCursor(this);
    return acc;
  };

  List.prototype.nextUntil = function (start, fn, context) {
    if (start === null) {
      return;
    }

    var item;

    if (context === undefined) {
      context = this;
    }

    var cursor = allocateCursor(this, null, start);

    while (cursor.next !== null) {
      item = cursor.next;
      cursor.next = item.next;

      if (fn.call(context, item.data, item, this)) {
        break;
      }
    }

    releaseCursor(this);
  };

  List.prototype.prevUntil = function (start, fn, context) {
    if (start === null) {
      return;
    }

    var item;

    if (context === undefined) {
      context = this;
    }

    var cursor = allocateCursor(this, start, null);

    while (cursor.prev !== null) {
      item = cursor.prev;
      cursor.prev = item.prev;

      if (fn.call(context, item.data, item, this)) {
        break;
      }
    }

    releaseCursor(this);
  };

  List.prototype.some = function (fn, context) {
    var cursor = this.head;

    if (context === undefined) {
      context = this;
    }

    while (cursor !== null) {
      if (fn.call(context, cursor.data, cursor, this)) {
        return true;
      }

      cursor = cursor.next;
    }

    return false;
  };

  List.prototype.map = function (fn, context) {
    var result = new List();
    var cursor = this.head;

    if (context === undefined) {
      context = this;
    }

    while (cursor !== null) {
      result.appendData(fn.call(context, cursor.data, cursor, this));
      cursor = cursor.next;
    }

    return result;
  };

  List.prototype.filter = function (fn, context) {
    var result = new List();
    var cursor = this.head;

    if (context === undefined) {
      context = this;
    }

    while (cursor !== null) {
      if (fn.call(context, cursor.data, cursor, this)) {
        result.appendData(cursor.data);
      }

      cursor = cursor.next;
    }

    return result;
  };

  List.prototype.clear = function () {
    this.head = null;
    this.tail = null;
  };

  List.prototype.copy = function () {
    var result = new List();
    var cursor = this.head;

    while (cursor !== null) {
      result.insert(createItem(cursor.data));
      cursor = cursor.next;
    }

    return result;
  };

  List.prototype.prepend = function (item) {
    this.updateCursors(null, item, this.head, item);

    if (this.head !== null) {
      this.head.prev = item;
      item.next = this.head;
    } else {
      this.tail = item;
    }

    this.head = item;
    return this;
  };

  List.prototype.prependData = function (data) {
    return this.prepend(createItem(data));
  };

  List.prototype.append = function (item) {
    return this.insert(item);
  };

  List.prototype.appendData = function (data) {
    return this.insert(createItem(data));
  };

  List.prototype.insert = function (item, before) {
    if (before !== undefined && before !== null) {
      this.updateCursors(before.prev, item, before, item);

      if (before.prev === null) {
        if (this.head !== before) {
          throw new Error('before doesn\'t belong to list');
        }

        this.head = item;
        before.prev = item;
        item.next = before;
        this.updateCursors(null, item);
      } else {
        before.prev.next = item;
        item.prev = before.prev;
        before.prev = item;
        item.next = before;
      }
    } else {
      this.updateCursors(this.tail, item, null, item);

      if (this.tail !== null) {
        this.tail.next = item;
        item.prev = this.tail;
      } else {
        this.head = item;
      }

      this.tail = item;
    }

    return this;
  };

  List.prototype.insertData = function (data, before) {
    return this.insert(createItem(data), before);
  };

  List.prototype.remove = function (item) {
    this.updateCursors(item, item.prev, item, item.next);

    if (item.prev !== null) {
      item.prev.next = item.next;
    } else {
      if (this.head !== item) {
        throw new Error('item doesn\'t belong to list');
      }

      this.head = item.next;
    }

    if (item.next !== null) {
      item.next.prev = item.prev;
    } else {
      if (this.tail !== item) {
        throw new Error('item doesn\'t belong to list');
      }

      this.tail = item.prev;
    }

    item.prev = null;
    item.next = null;
    return item;
  };

  List.prototype.push = function (data) {
    this.insert(createItem(data));
  };

  List.prototype.pop = function () {
    if (this.tail !== null) {
      return this.remove(this.tail);
    }
  };

  List.prototype.unshift = function (data) {
    this.prepend(createItem(data));
  };

  List.prototype.shift = function () {
    if (this.head !== null) {
      return this.remove(this.head);
    }
  };

  List.prototype.prependList = function (list) {
    return this.insertList(list, this.head);
  };

  List.prototype.appendList = function (list) {
    return this.insertList(list);
  };

  List.prototype.insertList = function (list, before) {
    if (list.head === null) {
      return this;
    }

    if (before !== undefined && before !== null) {
      this.updateCursors(before.prev, list.tail, before, list.head);

      if (before.prev !== null) {
        before.prev.next = list.head;
        list.head.prev = before.prev;
      } else {
        this.head = list.head;
      }

      before.prev = list.tail;
      list.tail.next = before;
    } else {
      this.updateCursors(this.tail, list.tail, null, list.head);

      if (this.tail !== null) {
        this.tail.next = list.head;
        list.head.prev = this.tail;
      } else {
        this.head = list.head;
      }

      this.tail = list.tail;
    }

    list.head = null;
    list.tail = null;
    return this;
  };

  List.prototype.replace = function (oldItem, newItemOrList) {
    if ('head' in newItemOrList) {
      this.insertList(newItemOrList, oldItem);
    } else {
      this.insert(newItemOrList, oldItem);
    }

    this.remove(oldItem);
  };

  module.exports = List;
},838,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var createCustomError = _$$_REQUIRE(_dependencyMap[0]);

  var MAX_LINE_LENGTH = 100;
  var OFFSET_CORRECTION = 60;
  var TAB_REPLACEMENT = '    ';

  function sourceFragment(error, extraLines) {
    function processLines(start, end) {
      return lines.slice(start, end).map(function (line, idx) {
        var num = String(start + idx + 1);

        while (num.length < maxNumLength) {
          num = ' ' + num;
        }

        return num + ' |' + line;
      }).join('\n');
    }

    var lines = error.source.split(/\r\n?|\n|\f/);
    var line = error.line;
    var column = error.column;
    var startLine = Math.max(1, line - extraLines) - 1;
    var endLine = Math.min(line + extraLines, lines.length + 1);
    var maxNumLength = Math.max(4, String(endLine).length) + 1;
    var cutLeft = 0;
    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\t/g) || []).length;

    if (column > MAX_LINE_LENGTH) {
      cutLeft = column - OFFSET_CORRECTION + 3;
      column = 58;
    }

    for (var i = startLine; i <= endLine; i++) {
      if (i >= 0 && i < lines.length) {
        lines[i] = lines[i].replace(/\t/g, TAB_REPLACEMENT);
        lines[i] = (cutLeft > 0 && lines[i].length > cutLeft ? "\u2026" : '') + lines[i].substr(cutLeft, 98) + (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? "\u2026" : '');
      }
    }

    return [processLines(startLine, line), new Array(column + maxNumLength + 2).join('-') + '^', processLines(line, endLine)].filter(Boolean).join('\n');
  }

  var SyntaxError = function SyntaxError(message, source, offset, line, column) {
    var error = createCustomError('SyntaxError', message);
    error.source = source;
    error.offset = offset;
    error.line = line;
    error.column = column;

    error.sourceFragment = function (extraLines) {
      return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);
    };

    Object.defineProperty(error, 'formattedMessage', {
      get: function get() {
        return 'Parse error: ' + error.message + '\n' + sourceFragment(error, 2);
      }
    });
    error.parseError = {
      offset: offset,
      line: line,
      column: column
    };
    return error;
  };

  module.exports = SyntaxError;
},839,[840]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function createCustomError(name, message) {
    var error = Object.create(SyntaxError.prototype);
    var errorStack = new Error();
    error.name = name;
    error.message = message;
    Object.defineProperty(error, 'stack', {
      get: function get() {
        return (errorStack.stack || '').replace(/^(.+\n){1,3}/, name + ': ' + message + '\n');
      }
    });
    return error;
  };
},840,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var constants = _$$_REQUIRE(_dependencyMap[0]);

  var TYPE = constants.TYPE;
  var NAME = constants.NAME;

  var utils = _$$_REQUIRE(_dependencyMap[1]);

  var cmpStr = utils.cmpStr;
  var EOF = TYPE.EOF;
  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var OFFSET_MASK = 0x00FFFFFF;
  var TYPE_SHIFT = 24;

  var TokenStream = function TokenStream() {
    this.offsetAndType = null;
    this.balance = null;
    this.reset();
  };

  TokenStream.prototype = {
    reset: function reset() {
      this.eof = false;
      this.tokenIndex = -1;
      this.tokenType = 0;
      this.tokenStart = this.firstCharOffset;
      this.tokenEnd = this.firstCharOffset;
    },
    lookupType: function lookupType(offset) {
      offset += this.tokenIndex;

      if (offset < this.tokenCount) {
        return this.offsetAndType[offset] >> TYPE_SHIFT;
      }

      return EOF;
    },
    lookupOffset: function lookupOffset(offset) {
      offset += this.tokenIndex;

      if (offset < this.tokenCount) {
        return this.offsetAndType[offset - 1] & OFFSET_MASK;
      }

      return this.source.length;
    },
    lookupValue: function lookupValue(offset, referenceStr) {
      offset += this.tokenIndex;

      if (offset < this.tokenCount) {
        return cmpStr(this.source, this.offsetAndType[offset - 1] & OFFSET_MASK, this.offsetAndType[offset] & OFFSET_MASK, referenceStr);
      }

      return false;
    },
    getTokenStart: function getTokenStart(tokenIndex) {
      if (tokenIndex === this.tokenIndex) {
        return this.tokenStart;
      }

      if (tokenIndex > 0) {
        return tokenIndex < this.tokenCount ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK : this.offsetAndType[this.tokenCount] & OFFSET_MASK;
      }

      return this.firstCharOffset;
    },
    getRawLength: function getRawLength(startToken, mode) {
      var cursor = startToken;
      var balanceEnd;
      var offset = this.offsetAndType[Math.max(cursor - 1, 0)] & OFFSET_MASK;
      var type;

      loop: for (; cursor < this.tokenCount; cursor++) {
        balanceEnd = this.balance[cursor];

        if (balanceEnd < startToken) {
          break loop;
        }

        type = this.offsetAndType[cursor] >> TYPE_SHIFT;

        switch (mode(type, this.source, offset)) {
          case 1:
            break loop;

          case 2:
            cursor++;
            break loop;

          default:
            if (this.balance[balanceEnd] === cursor) {
              cursor = balanceEnd;
            }

            offset = this.offsetAndType[cursor] & OFFSET_MASK;
        }
      }

      return cursor - this.tokenIndex;
    },
    isBalanceEdge: function isBalanceEdge(pos) {
      return this.balance[this.tokenIndex] < pos;
    },
    isDelim: function isDelim(code, offset) {
      if (offset) {
        return this.lookupType(offset) === TYPE.Delim && this.source.charCodeAt(this.lookupOffset(offset)) === code;
      }

      return this.tokenType === TYPE.Delim && this.source.charCodeAt(this.tokenStart) === code;
    },
    getTokenValue: function getTokenValue() {
      return this.source.substring(this.tokenStart, this.tokenEnd);
    },
    getTokenLength: function getTokenLength() {
      return this.tokenEnd - this.tokenStart;
    },
    substrToCursor: function substrToCursor(start) {
      return this.source.substring(start, this.tokenStart);
    },
    skipWS: function skipWS() {
      for (var i = this.tokenIndex, skipTokenCount = 0; i < this.tokenCount; i++, skipTokenCount++) {
        if (this.offsetAndType[i] >> TYPE_SHIFT !== WHITESPACE) {
          break;
        }
      }

      if (skipTokenCount > 0) {
        this.skip(skipTokenCount);
      }
    },
    skipSC: function skipSC() {
      while (this.tokenType === WHITESPACE || this.tokenType === COMMENT) {
        this.next();
      }
    },
    skip: function skip(tokenCount) {
      var next = this.tokenIndex + tokenCount;

      if (next < this.tokenCount) {
        this.tokenIndex = next;
        this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;
        next = this.offsetAndType[next];
        this.tokenType = next >> TYPE_SHIFT;
        this.tokenEnd = next & OFFSET_MASK;
      } else {
        this.tokenIndex = this.tokenCount;
        this.next();
      }
    },
    next: function next() {
      var next = this.tokenIndex + 1;

      if (next < this.tokenCount) {
        this.tokenIndex = next;
        this.tokenStart = this.tokenEnd;
        next = this.offsetAndType[next];
        this.tokenType = next >> TYPE_SHIFT;
        this.tokenEnd = next & OFFSET_MASK;
      } else {
        this.tokenIndex = this.tokenCount;
        this.eof = true;
        this.tokenType = EOF;
        this.tokenStart = this.tokenEnd = this.source.length;
      }
    },
    forEachToken: function forEachToken(fn) {
      for (var i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {
        var start = offset;
        var item = this.offsetAndType[i];
        var end = item & OFFSET_MASK;
        var type = item >> TYPE_SHIFT;
        offset = end;
        fn(type, start, end, i);
      }
    },
    dump: function dump() {
      var _this = this;

      var tokens = new Array(this.tokenCount);
      this.forEachToken(function (type, start, end, index) {
        tokens[index] = {
          idx: index,
          type: NAME[type],
          chunk: _this.source.substring(start, end),
          balance: _this.balance[index]
        };
      });
      return tokens;
    }
  };
  module.exports = TokenStream;
},841,[842,843]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = {
    EOF: 0,
    Ident: 1,
    Function: 2,
    AtKeyword: 3,
    Hash: 4,
    String: 5,
    BadString: 6,
    Url: 7,
    BadUrl: 8,
    Delim: 9,
    Number: 10,
    Percentage: 11,
    Dimension: 12,
    WhiteSpace: 13,
    CDO: 14,
    CDC: 15,
    Colon: 16,
    Semicolon: 17,
    Comma: 18,
    LeftSquareBracket: 19,
    RightSquareBracket: 20,
    LeftParenthesis: 21,
    RightParenthesis: 22,
    LeftCurlyBracket: 23,
    RightCurlyBracket: 24,
    Comment: 25
  };
  var NAME = Object.keys(TYPE).reduce(function (result, key) {
    result[TYPE[key]] = key;
    return result;
  }, {});
  module.exports = {
    TYPE: TYPE,
    NAME: NAME
  };
},842,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var charCodeDef = _$$_REQUIRE(_dependencyMap[0]);

  var isDigit = charCodeDef.isDigit;
  var isHexDigit = charCodeDef.isHexDigit;
  var isUppercaseLetter = charCodeDef.isUppercaseLetter;
  var isName = charCodeDef.isName;
  var isWhiteSpace = charCodeDef.isWhiteSpace;
  var isValidEscape = charCodeDef.isValidEscape;

  function getCharCode(source, offset) {
    return offset < source.length ? source.charCodeAt(offset) : 0;
  }

  function getNewlineLength(source, offset, code) {
    if (code === 13 && getCharCode(source, offset + 1) === 10) {
        return 2;
      }

    return 1;
  }

  function cmpChar(testStr, offset, referenceCode) {
    var code = testStr.charCodeAt(offset);

    if (isUppercaseLetter(code)) {
      code = code | 32;
    }

    return code === referenceCode;
  }

  function cmpStr(testStr, start, end, referenceStr) {
    if (end - start !== referenceStr.length) {
      return false;
    }

    if (start < 0 || end > testStr.length) {
      return false;
    }

    for (var i = start; i < end; i++) {
      var testCode = testStr.charCodeAt(i);
      var referenceCode = referenceStr.charCodeAt(i - start);

      if (isUppercaseLetter(testCode)) {
        testCode = testCode | 32;
      }

      if (testCode !== referenceCode) {
        return false;
      }
    }

    return true;
  }

  function findWhiteSpaceStart(source, offset) {
    for (; offset >= 0; offset--) {
      if (!isWhiteSpace(source.charCodeAt(offset))) {
        break;
      }
    }

    return offset + 1;
  }

  function findWhiteSpaceEnd(source, offset) {
    for (; offset < source.length; offset++) {
      if (!isWhiteSpace(source.charCodeAt(offset))) {
        break;
      }
    }

    return offset;
  }

  function findDecimalNumberEnd(source, offset) {
    for (; offset < source.length; offset++) {
      if (!isDigit(source.charCodeAt(offset))) {
        break;
      }
    }

    return offset;
  }

  function consumeEscaped(source, offset) {
    offset += 2;

    if (isHexDigit(getCharCode(source, offset - 1))) {
      for (var maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {
        if (!isHexDigit(getCharCode(source, offset))) {
          break;
        }
      }

      var code = getCharCode(source, offset);

      if (isWhiteSpace(code)) {
        offset += getNewlineLength(source, offset, code);
      }
    }

    return offset;
  }

  function consumeName(source, offset) {
    for (; offset < source.length; offset++) {
      var code = source.charCodeAt(offset);

      if (isName(code)) {
        continue;
      }

      if (isValidEscape(code, getCharCode(source, offset + 1))) {
        offset = consumeEscaped(source, offset) - 1;
        continue;
      }

      break;
    }

    return offset;
  }

  function consumeNumber(source, offset) {
    var code = source.charCodeAt(offset);

    if (code === 0x002B || code === 0x002D) {
      code = source.charCodeAt(offset += 1);
    }

    if (isDigit(code)) {
      offset = findDecimalNumberEnd(source, offset + 1);
      code = source.charCodeAt(offset);
    }

    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {
      code = source.charCodeAt(offset += 2);
      offset = findDecimalNumberEnd(source, offset);
    }

    if (cmpChar(source, offset, 101)) {
      var sign = 0;
      code = source.charCodeAt(offset + 1);

      if (code === 0x002D || code === 0x002B) {
        sign = 1;
        code = source.charCodeAt(offset + 2);
      }

      if (isDigit(code)) {
        offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);
      }
    }

    return offset;
  }

  function consumeBadUrlRemnants(source, offset) {
    for (; offset < source.length; offset++) {
      var code = source.charCodeAt(offset);

      if (code === 0x0029) {
        offset++;
        break;
      }

      if (isValidEscape(code, getCharCode(source, offset + 1))) {
        offset = consumeEscaped(source, offset);
      }
    }

    return offset;
  }

  module.exports = {
    consumeEscaped: consumeEscaped,
    consumeName: consumeName,
    consumeNumber: consumeNumber,
    consumeBadUrlRemnants: consumeBadUrlRemnants,
    cmpChar: cmpChar,
    cmpStr: cmpStr,
    getNewlineLength: getNewlineLength,
    findWhiteSpaceStart: findWhiteSpaceStart,
    findWhiteSpaceEnd: findWhiteSpaceEnd
  };
},843,[844]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var EOF = 0;

  function isDigit(code) {
    return code >= 0x0030 && code <= 0x0039;
  }

  function isHexDigit(code) {
    return isDigit(code) || code >= 0x0041 && code <= 0x0046 || code >= 0x0061 && code <= 0x0066;
  }

  function isUppercaseLetter(code) {
    return code >= 0x0041 && code <= 0x005A;
  }

  function isLowercaseLetter(code) {
    return code >= 0x0061 && code <= 0x007A;
  }

  function isLetter(code) {
    return isUppercaseLetter(code) || isLowercaseLetter(code);
  }

  function isNonAscii(code) {
    return code >= 0x0080;
  }

  function isNameStart(code) {
    return isLetter(code) || isNonAscii(code) || code === 0x005F;
  }

  function isName(code) {
    return isNameStart(code) || isDigit(code) || code === 0x002D;
  }

  function isNonPrintable(code) {
    return code >= 0x0000 && code <= 0x0008 || code === 0x000B || code >= 0x000E && code <= 0x001F || code === 0x007F;
  }

  function isNewline(code) {
    return code === 0x000A || code === 0x000D || code === 0x000C;
  }

  function isWhiteSpace(code) {
    return isNewline(code) || code === 0x0020 || code === 0x0009;
  }

  function isValidEscape(first, second) {
    if (first !== 0x005C) {
      return false;
    }

    if (isNewline(second) || second === EOF) {
      return false;
    }

    return true;
  }

  function isIdentifierStart(first, second, third) {
    if (first === 0x002D) {
      return isNameStart(second) || second === 0x002D || isValidEscape(second, third);
    }

    if (isNameStart(first)) {
      return true;
    }

    if (first === 0x005C) {
      return isValidEscape(first, second);
    }

    return false;
  }

  function isNumberStart(first, second, third) {
    if (first === 0x002B || first === 0x002D) {
      if (isDigit(second)) {
        return 2;
      }

      return second === 0x002E && isDigit(third) ? 3 : 0;
    }

    if (first === 0x002E) {
      return isDigit(second) ? 2 : 0;
    }

    if (isDigit(first)) {
      return 1;
    }

    return 0;
  }

  function isBOM(code) {
    if (code === 0xFEFF) {
      return 1;
    }

    if (code === 0xFFFE) {
      return 1;
    }

    return 0;
  }

  var CATEGORY = new Array(0x80);
  charCodeCategory.Eof = 0x80;
  charCodeCategory.WhiteSpace = 0x82;
  charCodeCategory.Digit = 0x83;
  charCodeCategory.NameStart = 0x84;
  charCodeCategory.NonPrintable = 0x85;

  for (var i = 0; i < CATEGORY.length; i++) {
    switch (true) {
      case isWhiteSpace(i):
        CATEGORY[i] = charCodeCategory.WhiteSpace;
        break;

      case isDigit(i):
        CATEGORY[i] = charCodeCategory.Digit;
        break;

      case isNameStart(i):
        CATEGORY[i] = charCodeCategory.NameStart;
        break;

      case isNonPrintable(i):
        CATEGORY[i] = charCodeCategory.NonPrintable;
        break;

      default:
        CATEGORY[i] = i || charCodeCategory.Eof;
    }
  }

  function charCodeCategory(code) {
    return code < 0x80 ? CATEGORY[code] : charCodeCategory.NameStart;
  }

  ;
  module.exports = {
    isDigit: isDigit,
    isHexDigit: isHexDigit,
    isUppercaseLetter: isUppercaseLetter,
    isLowercaseLetter: isLowercaseLetter,
    isLetter: isLetter,
    isNonAscii: isNonAscii,
    isNameStart: isNameStart,
    isName: isName,
    isNonPrintable: isNonPrintable,
    isNewline: isNewline,
    isWhiteSpace: isWhiteSpace,
    isValidEscape: isValidEscape,
    isIdentifierStart: isIdentifierStart,
    isNumberStart: isNumberStart,
    isBOM: isBOM,
    charCodeCategory: charCodeCategory
  };
},844,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var SyntaxReferenceError = _$$_REQUIRE(_dependencyMap[1]).SyntaxReferenceError;

  var SyntaxMatchError = _$$_REQUIRE(_dependencyMap[1]).SyntaxMatchError;

  var names = _$$_REQUIRE(_dependencyMap[2]);

  var generic = _$$_REQUIRE(_dependencyMap[3]);

  var parse = _$$_REQUIRE(_dependencyMap[4]);

  var generate = _$$_REQUIRE(_dependencyMap[5]);

  var walk = _$$_REQUIRE(_dependencyMap[6]);

  var prepareTokens = _$$_REQUIRE(_dependencyMap[7]);

  var buildMatchGraph = _$$_REQUIRE(_dependencyMap[8]).buildMatchGraph;

  var matchAsTree = _$$_REQUIRE(_dependencyMap[9]).matchAsTree;

  var trace = _$$_REQUIRE(_dependencyMap[10]);

  var search = _$$_REQUIRE(_dependencyMap[11]);

  var getStructureFromConfig = _$$_REQUIRE(_dependencyMap[12]).getStructureFromConfig;

  var cssWideKeywords = buildMatchGraph('inherit | initial | unset');
  var cssWideKeywordsWithExpression = buildMatchGraph('inherit | initial | unset | <-ms-legacy-expression>');

  function dumpMapSyntax(map, compact, syntaxAsAst) {
    var result = {};

    for (var name in map) {
      if (map[name].syntax) {
        result[name] = syntaxAsAst ? map[name].syntax : generate(map[name].syntax, {
          compact: compact
        });
      }
    }

    return result;
  }

  function dumpAtruleMapSyntax(map, compact, syntaxAsAst) {
    var result = {};

    for (var _i = 0, _Object$entries = Object.entries(map); _i < _Object$entries.length; _i++) {
      var _ref = _Object$entries[_i];

      var _ref2 = _slicedToArray(_ref, 2);

      var name = _ref2[0];
      var atrule = _ref2[1];
      result[name] = {
        prelude: atrule.prelude && (syntaxAsAst ? atrule.prelude.syntax : generate(atrule.prelude.syntax, {
          compact: compact
        })),
        descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)
      };
    }

    return result;
  }

  function valueHasVar(tokens) {
    for (var i = 0; i < tokens.length; i++) {
      if (tokens[i].value.toLowerCase() === 'var(') {
        return true;
      }
    }

    return false;
  }

  function buildMatchResult(match, error, iterations) {
    return {
      matched: match,
      iterations: iterations,
      error: error,
      getTrace: trace.getTrace,
      isType: trace.isType,
      isProperty: trace.isProperty,
      isKeyword: trace.isKeyword
    };
  }

  function matchSyntax(lexer, syntax, value, useCommon) {
    var tokens = prepareTokens(value, lexer.syntax);
    var result;

    if (valueHasVar(tokens)) {
      return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));
    }

    if (useCommon) {
      result = matchAsTree(tokens, lexer.valueCommonSyntax, lexer);
    }

    if (!useCommon || !result.match) {
      result = matchAsTree(tokens, syntax.match, lexer);

      if (!result.match) {
        return buildMatchResult(null, new SyntaxMatchError(result.reason, syntax.syntax, value, result), result.iterations);
      }
    }

    return buildMatchResult(result.match, null, result.iterations);
  }

  var Lexer = function Lexer(config, syntax, structure) {
    this.valueCommonSyntax = cssWideKeywords;
    this.syntax = syntax;
    this.generic = false;
    this.atrules = {};
    this.properties = {};
    this.types = {};
    this.structure = structure || getStructureFromConfig(config);

    if (config) {
      if (config.types) {
        for (var name in config.types) {
          this.addType_(name, config.types[name]);
        }
      }

      if (config.generic) {
        this.generic = true;

        for (var name in generic) {
          this.addType_(name, generic[name]);
        }
      }

      if (config.atrules) {
        for (var name in config.atrules) {
          this.addAtrule_(name, config.atrules[name]);
        }
      }

      if (config.properties) {
        for (var name in config.properties) {
          this.addProperty_(name, config.properties[name]);
        }
      }
    }
  };

  Lexer.prototype = {
    structure: {},
    checkStructure: function checkStructure(ast) {
      function collectWarning(node, message) {
        warns.push({
          node: node,
          message: message
        });
      }

      var structure = this.structure;
      var warns = [];
      this.syntax.walk(ast, function (node) {
        if (structure.hasOwnProperty(node.type)) {
          structure[node.type].check(node, collectWarning);
        } else {
          collectWarning(node, 'Unknown node type `' + node.type + '`');
        }
      });
      return warns.length ? warns : false;
    },
    createDescriptor: function createDescriptor(syntax, type, name) {
      var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
      var ref = {
        type: type,
        name: name
      };
      var descriptor = {
        type: type,
        name: name,
        parent: parent,
        syntax: null,
        match: null
      };

      if (typeof syntax === 'function') {
        descriptor.match = buildMatchGraph(syntax, ref);
      } else {
        if (typeof syntax === 'string') {
          Object.defineProperty(descriptor, 'syntax', {
            get: function get() {
              Object.defineProperty(descriptor, 'syntax', {
                value: parse(syntax)
              });
              return descriptor.syntax;
            }
          });
        } else {
          descriptor.syntax = syntax;
        }

        Object.defineProperty(descriptor, 'match', {
          get: function get() {
            Object.defineProperty(descriptor, 'match', {
              value: buildMatchGraph(descriptor.syntax, ref)
            });
            return descriptor.match;
          }
        });
      }

      return descriptor;
    },
    addAtrule_: function addAtrule_(name, syntax) {
      var _this = this;

      if (!syntax) {
        return;
      }

      this.atrules[name] = {
        type: 'Atrule',
        name: name,
        prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,
        descriptors: syntax.descriptors ? Object.keys(syntax.descriptors).reduce(function (res, descName) {
          res[descName] = _this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);
          return res;
        }, {}) : null
      };
    },
    addProperty_: function addProperty_(name, syntax) {
      if (!syntax) {
        return;
      }

      this.properties[name] = this.createDescriptor(syntax, 'Property', name);
    },
    addType_: function addType_(name, syntax) {
      if (!syntax) {
        return;
      }

      this.types[name] = this.createDescriptor(syntax, 'Type', name);

      if (syntax === generic['-ms-legacy-expression']) {
        this.valueCommonSyntax = cssWideKeywordsWithExpression;
      }
    },
    checkAtruleName: function checkAtruleName(atruleName) {
      if (!this.getAtrule(atruleName)) {
        return new SyntaxReferenceError('Unknown at-rule', '@' + atruleName);
      }
    },
    checkAtrulePrelude: function checkAtrulePrelude(atruleName, prelude) {
      var error = this.checkAtruleName(atruleName);

      if (error) {
        return error;
      }

      var atrule = this.getAtrule(atruleName);

      if (!atrule.prelude && prelude) {
        return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');
      }

      if (atrule.prelude && !prelude) {
        return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');
      }
    },
    checkAtruleDescriptorName: function checkAtruleDescriptorName(atruleName, descriptorName) {
      var error = this.checkAtruleName(atruleName);

      if (error) {
        return error;
      }

      var atrule = this.getAtrule(atruleName);
      var descriptor = names.keyword(descriptorName);

      if (!atrule.descriptors) {
        return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');
      }

      if (!atrule.descriptors[descriptor.name] && !atrule.descriptors[descriptor.basename]) {
        return new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);
      }
    },
    checkPropertyName: function checkPropertyName(propertyName) {
      var property = names.property(propertyName);

      if (property.custom) {
        return new Error('Lexer matching doesn\'t applicable for custom properties');
      }

      if (!this.getProperty(propertyName)) {
        return new SyntaxReferenceError('Unknown property', propertyName);
      }
    },
    matchAtrulePrelude: function matchAtrulePrelude(atruleName, prelude) {
      var error = this.checkAtrulePrelude(atruleName, prelude);

      if (error) {
        return buildMatchResult(null, error);
      }

      if (!prelude) {
        return buildMatchResult(null, null);
      }

      return matchSyntax(this, this.getAtrule(atruleName).prelude, prelude, false);
    },
    matchAtruleDescriptor: function matchAtruleDescriptor(atruleName, descriptorName, value) {
      var error = this.checkAtruleDescriptorName(atruleName, descriptorName);

      if (error) {
        return buildMatchResult(null, error);
      }

      var atrule = this.getAtrule(atruleName);
      var descriptor = names.keyword(descriptorName);
      return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);
    },
    matchDeclaration: function matchDeclaration(node) {
      if (node.type !== 'Declaration') {
        return buildMatchResult(null, new Error('Not a Declaration node'));
      }

      return this.matchProperty(node.property, node.value);
    },
    matchProperty: function matchProperty(propertyName, value) {
      var error = this.checkPropertyName(propertyName);

      if (error) {
        return buildMatchResult(null, error);
      }

      return matchSyntax(this, this.getProperty(propertyName), value, true);
    },
    matchType: function matchType(typeName, value) {
      var typeSyntax = this.getType(typeName);

      if (!typeSyntax) {
        return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));
      }

      return matchSyntax(this, typeSyntax, value, false);
    },
    match: function match(syntax, value) {
      if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {
        return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));
      }

      if (typeof syntax === 'string' || !syntax.match) {
        syntax = this.createDescriptor(syntax, 'Type', 'anonymous');
      }

      return matchSyntax(this, syntax, value, false);
    },
    findValueFragments: function findValueFragments(propertyName, value, type, name) {
      return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);
    },
    findDeclarationValueFragments: function findDeclarationValueFragments(declaration, type, name) {
      return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);
    },
    findAllFragments: function findAllFragments(ast, type, name) {
      var result = [];
      this.syntax.walk(ast, {
        visit: 'Declaration',
        enter: function (declaration) {
          result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));
        }.bind(this)
      });
      return result;
    },
    getAtrule: function getAtrule(atruleName) {
      var fallbackBasename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var atrule = names.keyword(atruleName);
      var atruleEntry = atrule.vendor && fallbackBasename ? this.atrules[atrule.name] || this.atrules[atrule.basename] : this.atrules[atrule.name];
      return atruleEntry || null;
    },
    getAtrulePrelude: function getAtrulePrelude(atruleName) {
      var fallbackBasename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var atrule = this.getAtrule(atruleName, fallbackBasename);
      return atrule && atrule.prelude || null;
    },
    getAtruleDescriptor: function getAtruleDescriptor(atruleName, name) {
      return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators ? this.atrules[atruleName].declarators[name] || null : null;
    },
    getProperty: function getProperty(propertyName) {
      var fallbackBasename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var property = names.property(propertyName);
      var propertyEntry = property.vendor && fallbackBasename ? this.properties[property.name] || this.properties[property.basename] : this.properties[property.name];
      return propertyEntry || null;
    },
    getType: function getType(name) {
      return this.types.hasOwnProperty(name) ? this.types[name] : null;
    },
    validate: function validate() {
      function validate(syntax, name, broken, descriptor) {
        if (broken.hasOwnProperty(name)) {
          return broken[name];
        }

        broken[name] = false;

        if (descriptor.syntax !== null) {
          walk(descriptor.syntax, function (node) {
            if (node.type !== 'Type' && node.type !== 'Property') {
              return;
            }

            var map = node.type === 'Type' ? syntax.types : syntax.properties;
            var brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;

            if (!map.hasOwnProperty(node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {
              broken[name] = true;
            }
          }, this);
        }
      }

      var brokenTypes = {};
      var brokenProperties = {};

      for (var key in this.types) {
        validate(this, key, brokenTypes, this.types[key]);
      }

      for (var key in this.properties) {
        validate(this, key, brokenProperties, this.properties[key]);
      }

      brokenTypes = Object.keys(brokenTypes).filter(function (name) {
        return brokenTypes[name];
      });
      brokenProperties = Object.keys(brokenProperties).filter(function (name) {
        return brokenProperties[name];
      });

      if (brokenTypes.length || brokenProperties.length) {
        return {
          types: brokenTypes,
          properties: brokenProperties
        };
      }

      return null;
    },
    dump: function dump(syntaxAsAst, pretty) {
      return {
        generic: this.generic,
        types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),
        properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),
        atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)
      };
    },
    toString: function toString() {
      return JSON.stringify(this.dump());
    }
  };
  module.exports = Lexer;
},845,[12,846,848,849,854,847,857,858,859,860,861,862,863]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var createCustomError = _$$_REQUIRE(_dependencyMap[1]);

  var generate = _$$_REQUIRE(_dependencyMap[2]);

  var defaultLoc = {
    offset: 0,
    line: 1,
    column: 1
  };

  function locateMismatch(matchResult, node) {
    var tokens = matchResult.tokens;
    var longestMatch = matchResult.longestMatch;
    var mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;
    var badNode = mismatchNode !== node ? mismatchNode : null;
    var mismatchOffset = 0;
    var mismatchLength = 0;
    var entries = 0;
    var css = '';
    var start;
    var end;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i].value;

      if (i === longestMatch) {
        mismatchLength = token.length;
        mismatchOffset = css.length;
      }

      if (badNode !== null && tokens[i].node === badNode) {
        if (i <= longestMatch) {
          entries++;
        } else {
          entries = 0;
        }
      }

      css += token;
    }

    if (longestMatch === tokens.length || entries > 1) {
      start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);
      end = buildLoc(start);
    } else {
      start = fromLoc(badNode, 'start') || buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));
      end = fromLoc(badNode, 'end') || buildLoc(start, css.substr(mismatchOffset, mismatchLength));
    }

    return {
      css: css,
      mismatchOffset: mismatchOffset,
      mismatchLength: mismatchLength,
      start: start,
      end: end
    };
  }

  function fromLoc(node, point) {
    var value = node && node.loc && node.loc[point];

    if (value) {
      return 'line' in value ? buildLoc(value) : value;
    }

    return null;
  }

  function buildLoc(_ref, extra) {
    var offset = _ref.offset,
        line = _ref.line,
        column = _ref.column;
    var loc = {
      offset: offset,
      line: line,
      column: column
    };

    if (extra) {
      var lines = extra.split(/\n|\r\n?|\f/);
      loc.offset += extra.length;
      loc.line += lines.length - 1;
      loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;
    }

    return loc;
  }

  var SyntaxReferenceError = function SyntaxReferenceError(type, referenceName) {
    var error = createCustomError('SyntaxReferenceError', type + (referenceName ? ' `' + referenceName + '`' : ''));
    error.reference = referenceName;
    return error;
  };

  var SyntaxMatchError = function SyntaxMatchError(message, syntax, node, matchResult) {
    var error = createCustomError('SyntaxMatchError', message);

    var _locateMismatch = locateMismatch(matchResult, node),
        css = _locateMismatch.css,
        mismatchOffset = _locateMismatch.mismatchOffset,
        mismatchLength = _locateMismatch.mismatchLength,
        start = _locateMismatch.start,
        end = _locateMismatch.end;

    error.rawMessage = message;
    error.syntax = syntax ? generate(syntax) : '<generic>';
    error.css = css;
    error.mismatchOffset = mismatchOffset;
    error.mismatchLength = mismatchLength;
    error.message = message + '\n' + '  syntax: ' + error.syntax + '\n' + '   value: ' + (css || '<empty string>') + '\n' + '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';

    _extends(error, start);

    error.loc = {
      source: node && node.loc && node.loc.source || '<unknown>',
      start: start,
      end: end
    };
    return error;
  };

  module.exports = {
    SyntaxReferenceError: SyntaxReferenceError,
    SyntaxMatchError: SyntaxMatchError
  };
},846,[11,840,847]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function noop(value) {
    return value;
  }

  function generateMultiplier(multiplier) {
    if (multiplier.min === 0 && multiplier.max === 0) {
      return '*';
    }

    if (multiplier.min === 0 && multiplier.max === 1) {
      return '?';
    }

    if (multiplier.min === 1 && multiplier.max === 0) {
      return multiplier.comma ? '#' : '+';
    }

    if (multiplier.min === 1 && multiplier.max === 1) {
      return '';
    }

    return (multiplier.comma ? '#' : '') + (multiplier.min === multiplier.max ? '{' + multiplier.min + '}' : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}');
  }

  function generateTypeOpts(node) {
    switch (node.type) {
      case 'Range':
        return ' [' + (node.min === null ? '-∞' : node.min) + ',' + (node.max === null ? '∞' : node.max) + ']';

      default:
        throw new Error('Unknown node type `' + node.type + '`');
    }
  }

  function generateSequence(node, decorate, forceBraces, compact) {
    var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';
    var result = node.terms.map(function (term) {
      return generate(term, decorate, forceBraces, compact);
    }).join(combinator);

    if (node.explicit || forceBraces) {
      result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');
    }

    return result;
  }

  function generate(node, decorate, forceBraces, compact) {
    var result;

    switch (node.type) {
      case 'Group':
        result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? '!' : '');
        break;

      case 'Multiplier':
        return generate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node);

      case 'Type':
        result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';
        break;

      case 'Property':
        result = '<\'' + node.name + '\'>';
        break;

      case 'Keyword':
        result = node.name;
        break;

      case 'AtKeyword':
        result = '@' + node.name;
        break;

      case 'Function':
        result = node.name + '(';
        break;

      case 'String':
      case 'Token':
        result = node.value;
        break;

      case 'Comma':
        result = ',';
        break;

      default:
        throw new Error('Unknown node type `' + node.type + '`');
    }

    return decorate(result, node);
  }

  module.exports = function (node, options) {
    var decorate = noop;
    var forceBraces = false;
    var compact = false;

    if (typeof options === 'function') {
      decorate = options;
    } else if (options) {
      forceBraces = Boolean(options.forceBraces);
      compact = Boolean(options.compact);

      if (typeof options.decorate === 'function') {
        decorate = options.decorate;
      }
    }

    return generate(node, decorate, forceBraces, compact);
  };
},847,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var keywords = Object.create(null);
  var properties = Object.create(null);
  var HYPHENMINUS = 45;

  function isCustomProperty(str, offset) {
    offset = offset || 0;
    return str.length - offset >= 2 && str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) === HYPHENMINUS;
  }

  function getVendorPrefix(str, offset) {
    offset = offset || 0;

    if (str.length - offset >= 3) {
      if (str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) !== HYPHENMINUS) {
        var secondDashIndex = str.indexOf('-', offset + 2);

        if (secondDashIndex !== -1) {
          return str.substring(offset, secondDashIndex + 1);
        }
      }
    }

    return '';
  }

  function getKeywordDescriptor(keyword) {
    if (hasOwnProperty.call(keywords, keyword)) {
      return keywords[keyword];
    }

    var name = keyword.toLowerCase();

    if (hasOwnProperty.call(keywords, name)) {
      return keywords[keyword] = keywords[name];
    }

    var custom = isCustomProperty(name, 0);
    var vendor = !custom ? getVendorPrefix(name, 0) : '';
    return keywords[keyword] = Object.freeze({
      basename: name.substr(vendor.length),
      name: name,
      vendor: vendor,
      prefix: vendor,
      custom: custom
    });
  }

  function getPropertyDescriptor(property) {
    if (hasOwnProperty.call(properties, property)) {
      return properties[property];
    }

    var name = property;
    var hack = property[0];

    if (hack === '/') {
      hack = property[1] === '/' ? '//' : '/';
    } else if (hack !== '_' && hack !== '*' && hack !== '$' && hack !== '#' && hack !== '+' && hack !== '&') {
      hack = '';
    }

    var custom = isCustomProperty(name, hack.length);

    if (!custom) {
      name = name.toLowerCase();

      if (hasOwnProperty.call(properties, name)) {
        return properties[property] = properties[name];
      }
    }

    var vendor = !custom ? getVendorPrefix(name, hack.length) : '';
    var prefix = name.substr(0, hack.length + vendor.length);
    return properties[property] = Object.freeze({
      basename: name.substr(prefix.length),
      name: name.substr(hack.length),
      hack: hack,
      vendor: vendor,
      prefix: prefix,
      custom: custom
    });
  }

  module.exports = {
    keyword: getKeywordDescriptor,
    property: getPropertyDescriptor,
    isCustomProperty: isCustomProperty,
    vendorPrefix: getVendorPrefix
  };
},848,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var tokenizer = _$$_REQUIRE(_dependencyMap[0]);

  var isIdentifierStart = tokenizer.isIdentifierStart;
  var isHexDigit = tokenizer.isHexDigit;
  var isDigit = tokenizer.isDigit;
  var cmpStr = tokenizer.cmpStr;
  var consumeNumber = tokenizer.consumeNumber;
  var TYPE = tokenizer.TYPE;

  var anPlusB = _$$_REQUIRE(_dependencyMap[1]);

  var urange = _$$_REQUIRE(_dependencyMap[2]);

  var cssWideKeywords = ['unset', 'initial', 'inherit'];
  var calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];
  var LENGTH = {
    'px': true,
    'mm': true,
    'cm': true,
    'in': true,
    'pt': true,
    'pc': true,
    'q': true,
    'em': true,
    'ex': true,
    'ch': true,
    'rem': true,
    'vh': true,
    'vw': true,
    'vmin': true,
    'vmax': true,
    'vm': true
  };
  var ANGLE = {
    'deg': true,
    'grad': true,
    'rad': true,
    'turn': true
  };
  var TIME = {
    's': true,
    'ms': true
  };
  var FREQUENCY = {
    'hz': true,
    'khz': true
  };
  var RESOLUTION = {
    'dpi': true,
    'dpcm': true,
    'dppx': true,
    'x': true
  };
  var FLEX = {
    'fr': true
  };
  var DECIBEL = {
    'db': true
  };
  var SEMITONES = {
    'st': true
  };

  function charCode(str, index) {
    return index < str.length ? str.charCodeAt(index) : 0;
  }

  function eqStr(actual, expected) {
    return cmpStr(actual, 0, actual.length, expected);
  }

  function eqStrAny(actual, expected) {
    for (var i = 0; i < expected.length; i++) {
      if (eqStr(actual, expected[i])) {
        return true;
      }
    }

    return false;
  }

  function isPostfixIeHack(str, offset) {
    if (offset !== str.length - 2) {
      return false;
    }

    return str.charCodeAt(offset) === 0x005C && isDigit(str.charCodeAt(offset + 1));
  }

  function outOfRange(opts, value, numEnd) {
    if (opts && opts.type === 'Range') {
      var num = Number(numEnd !== undefined && numEnd !== value.length ? value.substr(0, numEnd) : value);

      if (isNaN(num)) {
        return true;
      }

      if (opts.min !== null && num < opts.min) {
        return true;
      }

      if (opts.max !== null && num > opts.max) {
        return true;
      }
    }

    return false;
  }

  function consumeFunction(token, getNextToken) {
    var startIdx = token.index;
    var length = 0;

    do {
      length++;

      if (token.balance <= startIdx) {
        break;
      }
    } while (token = getNextToken(length));

    return length;
  }

  function calc(next) {
    return function (token, getNextToken, opts) {
      if (token === null) {
        return 0;
      }

      if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {
        return consumeFunction(token, getNextToken);
      }

      return next(token, getNextToken, opts);
    };
  }

  function tokenType(expectedTokenType) {
    return function (token) {
      if (token === null || token.type !== expectedTokenType) {
        return 0;
      }

      return 1;
    };
  }

  function func(name) {
    name = name + '(';
    return function (token, getNextToken) {
      if (token !== null && eqStr(token.value, name)) {
        return consumeFunction(token, getNextToken);
      }

      return 0;
    };
  }

  function customIdent(token) {
    if (token === null || token.type !== TYPE.Ident) {
      return 0;
    }

    var name = token.value.toLowerCase();

    if (eqStrAny(name, cssWideKeywords)) {
      return 0;
    }

    if (eqStr(name, 'default')) {
      return 0;
    }

    return 1;
  }

  function customPropertyName(token) {
    if (token === null || token.type !== TYPE.Ident) {
      return 0;
    }

    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {
      return 0;
    }

    return 1;
  }

  function hexColor(token) {
    if (token === null || token.type !== TYPE.Hash) {
      return 0;
    }

    var length = token.value.length;

    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {
      return 0;
    }

    for (var i = 1; i < length; i++) {
      if (!isHexDigit(token.value.charCodeAt(i))) {
        return 0;
      }
    }

    return 1;
  }

  function idSelector(token) {
    if (token === null || token.type !== TYPE.Hash) {
      return 0;
    }

    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {
      return 0;
    }

    return 1;
  }

  function declarationValue(token, getNextToken) {
    if (!token) {
      return 0;
    }

    var length = 0;
    var level = 0;
    var startIdx = token.index;

    scan: do {
      switch (token.type) {
        case TYPE.BadString:
        case TYPE.BadUrl:
          break scan;

        case TYPE.RightCurlyBracket:
        case TYPE.RightParenthesis:
        case TYPE.RightSquareBracket:
          if (token.balance > token.index || token.balance < startIdx) {
            break scan;
          }

          level--;
          break;

        case TYPE.Semicolon:
          if (level === 0) {
            break scan;
          }

          break;

        case TYPE.Delim:
          if (token.value === '!' && level === 0) {
            break scan;
          }

          break;

        case TYPE.Function:
        case TYPE.LeftParenthesis:
        case TYPE.LeftSquareBracket:
        case TYPE.LeftCurlyBracket:
          level++;
          break;
      }

      length++;

      if (token.balance <= startIdx) {
        break;
      }
    } while (token = getNextToken(length));

    return length;
  }

  function anyValue(token, getNextToken) {
    if (!token) {
      return 0;
    }

    var startIdx = token.index;
    var length = 0;

    scan: do {
      switch (token.type) {
        case TYPE.BadString:
        case TYPE.BadUrl:
          break scan;

        case TYPE.RightCurlyBracket:
        case TYPE.RightParenthesis:
        case TYPE.RightSquareBracket:
          if (token.balance > token.index || token.balance < startIdx) {
            break scan;
          }

          break;
      }

      length++;

      if (token.balance <= startIdx) {
        break;
      }
    } while (token = getNextToken(length));

    return length;
  }

  function dimension(type) {
    return function (token, getNextToken, opts) {
      if (token === null || token.type !== TYPE.Dimension) {
        return 0;
      }

      var numberEnd = consumeNumber(token.value, 0);

      if (type !== null) {
        var reverseSolidusOffset = token.value.indexOf('\\', numberEnd);
        var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset) ? token.value.substr(numberEnd) : token.value.substring(numberEnd, reverseSolidusOffset);

        if (type.hasOwnProperty(unit.toLowerCase()) === false) {
          return 0;
        }
      }

      if (outOfRange(opts, token.value, numberEnd)) {
        return 0;
      }

      return 1;
    };
  }

  function percentage(token, getNextToken, opts) {
    if (token === null || token.type !== TYPE.Percentage) {
      return 0;
    }

    if (outOfRange(opts, token.value, token.value.length - 1)) {
      return 0;
    }

    return 1;
  }

  function zero(next) {
    if (typeof next !== 'function') {
      next = function next() {
        return 0;
      };
    }

    return function (token, getNextToken, opts) {
      if (token !== null && token.type === TYPE.Number) {
        if (Number(token.value) === 0) {
          return 1;
        }
      }

      return next(token, getNextToken, opts);
    };
  }

  function number(token, getNextToken, opts) {
    if (token === null) {
      return 0;
    }

    var numberEnd = consumeNumber(token.value, 0);
    var isNumber = numberEnd === token.value.length;

    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {
      return 0;
    }

    if (outOfRange(opts, token.value, numberEnd)) {
      return 0;
    }

    return 1;
  }

  function integer(token, getNextToken, opts) {
    if (token === null || token.type !== TYPE.Number) {
      return 0;
    }

    var i = token.value.charCodeAt(0) === 0x002B || token.value.charCodeAt(0) === 0x002D ? 1 : 0;

    for (; i < token.value.length; i++) {
      if (!isDigit(token.value.charCodeAt(i))) {
        return 0;
      }
    }

    if (outOfRange(opts, token.value, i)) {
      return 0;
    }

    return 1;
  }

  module.exports = {
    'ident-token': tokenType(TYPE.Ident),
    'function-token': tokenType(TYPE.Function),
    'at-keyword-token': tokenType(TYPE.AtKeyword),
    'hash-token': tokenType(TYPE.Hash),
    'string-token': tokenType(TYPE.String),
    'bad-string-token': tokenType(TYPE.BadString),
    'url-token': tokenType(TYPE.Url),
    'bad-url-token': tokenType(TYPE.BadUrl),
    'delim-token': tokenType(TYPE.Delim),
    'number-token': tokenType(TYPE.Number),
    'percentage-token': tokenType(TYPE.Percentage),
    'dimension-token': tokenType(TYPE.Dimension),
    'whitespace-token': tokenType(TYPE.WhiteSpace),
    'CDO-token': tokenType(TYPE.CDO),
    'CDC-token': tokenType(TYPE.CDC),
    'colon-token': tokenType(TYPE.Colon),
    'semicolon-token': tokenType(TYPE.Semicolon),
    'comma-token': tokenType(TYPE.Comma),
    '[-token': tokenType(TYPE.LeftSquareBracket),
    ']-token': tokenType(TYPE.RightSquareBracket),
    '(-token': tokenType(TYPE.LeftParenthesis),
    ')-token': tokenType(TYPE.RightParenthesis),
    '{-token': tokenType(TYPE.LeftCurlyBracket),
    '}-token': tokenType(TYPE.RightCurlyBracket),
    'string': tokenType(TYPE.String),
    'ident': tokenType(TYPE.Ident),
    'custom-ident': customIdent,
    'custom-property-name': customPropertyName,
    'hex-color': hexColor,
    'id-selector': idSelector,
    'an-plus-b': anPlusB,
    'urange': urange,
    'declaration-value': declarationValue,
    'any-value': anyValue,
    'dimension': calc(dimension(null)),
    'angle': calc(dimension(ANGLE)),
    'decibel': calc(dimension(DECIBEL)),
    'frequency': calc(dimension(FREQUENCY)),
    'flex': calc(dimension(FLEX)),
    'length': calc(zero(dimension(LENGTH))),
    'resolution': calc(dimension(RESOLUTION)),
    'semitones': calc(dimension(SEMITONES)),
    'time': calc(dimension(TIME)),
    'percentage': calc(percentage),
    'zero': zero(),
    'number': calc(number),
    'integer': calc(integer),
    '-ms-legacy-expression': func('expression')
  };
},849,[850,852,853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TokenStream = _$$_REQUIRE(_dependencyMap[0]);

  var adoptBuffer = _$$_REQUIRE(_dependencyMap[1]);

  var constants = _$$_REQUIRE(_dependencyMap[2]);

  var TYPE = constants.TYPE;

  var charCodeDefinitions = _$$_REQUIRE(_dependencyMap[3]);

  var isNewline = charCodeDefinitions.isNewline;
  var isName = charCodeDefinitions.isName;
  var isValidEscape = charCodeDefinitions.isValidEscape;
  var isNumberStart = charCodeDefinitions.isNumberStart;
  var isIdentifierStart = charCodeDefinitions.isIdentifierStart;
  var charCodeCategory = charCodeDefinitions.charCodeCategory;
  var isBOM = charCodeDefinitions.isBOM;

  var utils = _$$_REQUIRE(_dependencyMap[4]);

  var cmpStr = utils.cmpStr;
  var getNewlineLength = utils.getNewlineLength;
  var findWhiteSpaceEnd = utils.findWhiteSpaceEnd;
  var consumeEscaped = utils.consumeEscaped;
  var consumeName = utils.consumeName;
  var consumeNumber = utils.consumeNumber;
  var consumeBadUrlRemnants = utils.consumeBadUrlRemnants;
  var OFFSET_MASK = 0x00FFFFFF;
  var TYPE_SHIFT = 24;

  function tokenize(source, stream) {
    function getCharCode(offset) {
      return offset < sourceLength ? source.charCodeAt(offset) : 0;
    }

    function consumeNumericToken() {
      offset = consumeNumber(source, offset);

      if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {
        type = TYPE.Dimension;
        offset = consumeName(source, offset);
        return;
      }

      if (getCharCode(offset) === 0x0025) {
        type = TYPE.Percentage;
        offset++;
        return;
      }

      type = TYPE.Number;
    }

    function consumeIdentLikeToken() {
      var nameStartOffset = offset;
      offset = consumeName(source, offset);

      if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {
        offset = findWhiteSpaceEnd(source, offset + 1);

        if (getCharCode(offset) === 0x0022 || getCharCode(offset) === 0x0027) {
          type = TYPE.Function;
          offset = nameStartOffset + 4;
          return;
        }

        consumeUrlToken();
        return;
      }

      if (getCharCode(offset) === 0x0028) {
        type = TYPE.Function;
        offset++;
        return;
      }

      type = TYPE.Ident;
    }

    function consumeStringToken(endingCodePoint) {
      if (!endingCodePoint) {
        endingCodePoint = getCharCode(offset++);
      }

      type = TYPE.String;

      for (; offset < source.length; offset++) {
        var code = source.charCodeAt(offset);

        switch (charCodeCategory(code)) {
          case endingCodePoint:
            offset++;
            return;

          case charCodeCategory.Eof:
            return;

          case charCodeCategory.WhiteSpace:
            if (isNewline(code)) {
              offset += getNewlineLength(source, offset, code);
              type = TYPE.BadString;
              return;
            }

            break;

          case 0x005C:
            if (offset === source.length - 1) {
              break;
            }

            var nextCode = getCharCode(offset + 1);

            if (isNewline(nextCode)) {
              offset += getNewlineLength(source, offset + 1, nextCode);
            } else if (isValidEscape(code, nextCode)) {
              offset = consumeEscaped(source, offset) - 1;
            }

            break;
        }
      }
    }

    function consumeUrlToken() {
      type = TYPE.Url;
      offset = findWhiteSpaceEnd(source, offset);

      for (; offset < source.length; offset++) {
        var code = source.charCodeAt(offset);

        switch (charCodeCategory(code)) {
          case 0x0029:
            offset++;
            return;

          case charCodeCategory.Eof:
            return;

          case charCodeCategory.WhiteSpace:
            offset = findWhiteSpaceEnd(source, offset);

            if (getCharCode(offset) === 0x0029 || offset >= source.length) {
              if (offset < source.length) {
                offset++;
              }

              return;
            }

            offset = consumeBadUrlRemnants(source, offset);
            type = TYPE.BadUrl;
            return;

          case 0x0022:
          case 0x0027:
          case 0x0028:
          case charCodeCategory.NonPrintable:
            offset = consumeBadUrlRemnants(source, offset);
            type = TYPE.BadUrl;
            return;

          case 0x005C:
            if (isValidEscape(code, getCharCode(offset + 1))) {
              offset = consumeEscaped(source, offset) - 1;
              break;
            }

            offset = consumeBadUrlRemnants(source, offset);
            type = TYPE.BadUrl;
            return;
        }
      }
    }

    if (!stream) {
      stream = new TokenStream();
    }

    source = String(source || '');
    var sourceLength = source.length;
    var offsetAndType = adoptBuffer(stream.offsetAndType, sourceLength + 1);
    var balance = adoptBuffer(stream.balance, sourceLength + 1);
    var tokenCount = 0;
    var start = isBOM(getCharCode(0));
    var offset = start;
    var balanceCloseType = 0;
    var balanceStart = 0;
    var balancePrev = 0;

    while (offset < sourceLength) {
      var code = source.charCodeAt(offset);
      var type = 0;
      balance[tokenCount] = sourceLength;

      switch (charCodeCategory(code)) {
        case charCodeCategory.WhiteSpace:
          type = TYPE.WhiteSpace;
          offset = findWhiteSpaceEnd(source, offset + 1);
          break;

        case 0x0022:
          consumeStringToken();
          break;

        case 0x0023:
          if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {
            type = TYPE.Hash;
            offset = consumeName(source, offset + 1);
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x0027:
          consumeStringToken();
          break;

        case 0x0028:
          type = TYPE.LeftParenthesis;
          offset++;
          break;

        case 0x0029:
          type = TYPE.RightParenthesis;
          offset++;
          break;

        case 0x002B:
          if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
            consumeNumericToken();
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x002C:
          type = TYPE.Comma;
          offset++;
          break;

        case 0x002D:
          if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
            consumeNumericToken();
          } else {
            if (getCharCode(offset + 1) === 0x002D && getCharCode(offset + 2) === 0x003E) {
              type = TYPE.CDC;
              offset = offset + 3;
            } else {
              if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
                consumeIdentLikeToken();
              } else {
                type = TYPE.Delim;
                offset++;
              }
            }
          }

          break;

        case 0x002E:
          if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
            consumeNumericToken();
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x002F:
          if (getCharCode(offset + 1) === 0x002A) {
            type = TYPE.Comment;
            offset = source.indexOf('*/', offset + 2) + 2;

            if (offset === 1) {
              offset = source.length;
            }
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x003A:
          type = TYPE.Colon;
          offset++;
          break;

        case 0x003B:
          type = TYPE.Semicolon;
          offset++;
          break;

        case 0x003C:
          if (getCharCode(offset + 1) === 0x0021 && getCharCode(offset + 2) === 0x002D && getCharCode(offset + 3) === 0x002D) {
            type = TYPE.CDO;
            offset = offset + 4;
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x0040:
          if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {
            type = TYPE.AtKeyword;
            offset = consumeName(source, offset + 1);
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x005B:
          type = TYPE.LeftSquareBracket;
          offset++;
          break;

        case 0x005C:
          if (isValidEscape(code, getCharCode(offset + 1))) {
            consumeIdentLikeToken();
          } else {
            type = TYPE.Delim;
            offset++;
          }

          break;

        case 0x005D:
          type = TYPE.RightSquareBracket;
          offset++;
          break;

        case 0x007B:
          type = TYPE.LeftCurlyBracket;
          offset++;
          break;

        case 0x007D:
          type = TYPE.RightCurlyBracket;
          offset++;
          break;

        case charCodeCategory.Digit:
          consumeNumericToken();
          break;

        case charCodeCategory.NameStart:
          consumeIdentLikeToken();
          break;

        case charCodeCategory.Eof:
          break;

        default:
          type = TYPE.Delim;
          offset++;
      }

      switch (type) {
        case balanceCloseType:
          balancePrev = balanceStart & OFFSET_MASK;
          balanceStart = balance[balancePrev];
          balanceCloseType = balanceStart >> TYPE_SHIFT;
          balance[tokenCount] = balancePrev;
          balance[balancePrev++] = tokenCount;

          for (; balancePrev < tokenCount; balancePrev++) {
            if (balance[balancePrev] === sourceLength) {
              balance[balancePrev] = tokenCount;
            }
          }

          break;

        case TYPE.LeftParenthesis:
        case TYPE.Function:
          balance[tokenCount] = balanceStart;
          balanceCloseType = TYPE.RightParenthesis;
          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;
          break;

        case TYPE.LeftSquareBracket:
          balance[tokenCount] = balanceStart;
          balanceCloseType = TYPE.RightSquareBracket;
          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;
          break;

        case TYPE.LeftCurlyBracket:
          balance[tokenCount] = balanceStart;
          balanceCloseType = TYPE.RightCurlyBracket;
          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;
          break;
      }

      offsetAndType[tokenCount++] = type << TYPE_SHIFT | offset;
    }

    offsetAndType[tokenCount] = TYPE.EOF << TYPE_SHIFT | offset;
    balance[tokenCount] = sourceLength;
    balance[sourceLength] = sourceLength;

    while (balanceStart !== 0) {
      balancePrev = balanceStart & OFFSET_MASK;
      balanceStart = balance[balancePrev];
      balance[balancePrev] = sourceLength;
    }

    stream.source = source;
    stream.firstCharOffset = start;
    stream.offsetAndType = offsetAndType;
    stream.tokenCount = tokenCount;
    stream.balance = balance;
    stream.reset();
    stream.next();
    return stream;
  }

  Object.keys(constants).forEach(function (key) {
    tokenize[key] = constants[key];
  });
  Object.keys(charCodeDefinitions).forEach(function (key) {
    tokenize[key] = charCodeDefinitions[key];
  });
  Object.keys(utils).forEach(function (key) {
    tokenize[key] = utils[key];
  });
  module.exports = tokenize;
},850,[841,851,842,844,843]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var MIN_SIZE = 16384;
  var SafeUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : Array;

  module.exports = function adoptBuffer(buffer, size) {
    if (buffer === null || buffer.length < size) {
      return new SafeUint32Array(Math.max(size + 1024, MIN_SIZE));
    }

    return buffer;
  };
},851,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isDigit = _$$_REQUIRE(_dependencyMap[0]).isDigit;

  var cmpChar = _$$_REQUIRE(_dependencyMap[0]).cmpChar;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var DELIM = TYPE.Delim;
  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var IDENT = TYPE.Ident;
  var NUMBER = TYPE.Number;
  var DIMENSION = TYPE.Dimension;
  var PLUSSIGN = 0x002B;
  var HYPHENMINUS = 0x002D;
  var N = 0x006E;
  var DISALLOW_SIGN = true;
  var ALLOW_SIGN = false;

  function isDelim(token, code) {
    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;
  }

  function skipSC(token, offset, getNextToken) {
    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {
      token = getNextToken(++offset);
    }

    return offset;
  }

  function checkInteger(token, valueOffset, disallowSign, offset) {
    if (!token) {
      return 0;
    }

    var code = token.value.charCodeAt(valueOffset);

    if (code === PLUSSIGN || code === HYPHENMINUS) {
      if (disallowSign) {
        return 0;
      }

      valueOffset++;
    }

    for (; valueOffset < token.value.length; valueOffset++) {
      if (!isDigit(token.value.charCodeAt(valueOffset))) {
        return 0;
      }
    }

    return offset + 1;
  }

  function consumeB(token, offset_, getNextToken) {
    var sign = false;
    var offset = skipSC(token, offset_, getNextToken);
    token = getNextToken(offset);

    if (token === null) {
      return offset_;
    }

    if (token.type !== NUMBER) {
      if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {
        sign = true;
        offset = skipSC(getNextToken(++offset), offset, getNextToken);
        token = getNextToken(offset);

        if (token === null && token.type !== NUMBER) {
          return 0;
        }
      } else {
        return offset_;
      }
    }

    if (!sign) {
      var code = token.value.charCodeAt(0);

      if (code !== PLUSSIGN && code !== HYPHENMINUS) {
        return 0;
      }
    }

    return checkInteger(token, sign ? 0 : 1, sign, offset);
  }

  module.exports = function anPlusB(token, getNextToken) {
    var offset = 0;

    if (!token) {
      return 0;
    }

    if (token.type === NUMBER) {
      return checkInteger(token, 0, ALLOW_SIGN, offset);
    } else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {
        if (!cmpChar(token.value, 1, N)) {
          return 0;
        }

        switch (token.value.length) {
          case 2:
            return consumeB(getNextToken(++offset), offset, getNextToken);

          case 3:
            if (token.value.charCodeAt(2) !== HYPHENMINUS) {
              return 0;
            }

            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);

          default:
            if (token.value.charCodeAt(2) !== HYPHENMINUS) {
              return 0;
            }

            return checkInteger(token, 3, DISALLOW_SIGN, offset);
        }
      } else if (token.type === IDENT || isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT) {
          if (token.type !== IDENT) {
            token = getNextToken(++offset);
          }

          if (token === null || !cmpChar(token.value, 0, N)) {
            return 0;
          }

          switch (token.value.length) {
            case 1:
              return consumeB(getNextToken(++offset), offset, getNextToken);

            case 2:
              if (token.value.charCodeAt(1) !== HYPHENMINUS) {
                return 0;
              }

              offset = skipSC(getNextToken(++offset), offset, getNextToken);
              token = getNextToken(offset);
              return checkInteger(token, 0, DISALLOW_SIGN, offset);

            default:
              if (token.value.charCodeAt(1) !== HYPHENMINUS) {
                return 0;
              }

              return checkInteger(token, 2, DISALLOW_SIGN, offset);
          }
        } else if (token.type === DIMENSION) {
            var code = token.value.charCodeAt(0);
            var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;

            for (var i = sign; i < token.value.length; i++) {
              if (!isDigit(token.value.charCodeAt(i))) {
                break;
              }
            }

            if (i === sign) {
              return 0;
            }

            if (!cmpChar(token.value, i, N)) {
              return 0;
            }

            if (i + 1 === token.value.length) {
              return consumeB(getNextToken(++offset), offset, getNextToken);
            } else {
              if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {
                return 0;
              }

              if (i + 2 === token.value.length) {
                offset = skipSC(getNextToken(++offset), offset, getNextToken);
                token = getNextToken(offset);
                return checkInteger(token, 0, DISALLOW_SIGN, offset);
              } else {
                  return checkInteger(token, i + 2, DISALLOW_SIGN, offset);
                }
            }
          }

    return 0;
  };
},852,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isHexDigit = _$$_REQUIRE(_dependencyMap[0]).isHexDigit;

  var cmpChar = _$$_REQUIRE(_dependencyMap[0]).cmpChar;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var DELIM = TYPE.Delim;
  var NUMBER = TYPE.Number;
  var DIMENSION = TYPE.Dimension;
  var PLUSSIGN = 0x002B;
  var HYPHENMINUS = 0x002D;
  var QUESTIONMARK = 0x003F;
  var U = 0x0075;

  function isDelim(token, code) {
    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;
  }

  function startsWith(token, code) {
    return token.value.charCodeAt(0) === code;
  }

  function hexSequence(token, offset, allowDash) {
    for (var pos = offset, hexlen = 0; pos < token.value.length; pos++) {
      var code = token.value.charCodeAt(pos);

      if (code === HYPHENMINUS && allowDash && hexlen !== 0) {
        if (hexSequence(token, offset + hexlen + 1, false) > 0) {
          return 6;
        }

        return 0;
      }

      if (!isHexDigit(code)) {
        return 0;
      }

      if (++hexlen > 6) {
        return 0;
      }

      ;
    }

    return hexlen;
  }

  function withQuestionMarkSequence(consumed, length, getNextToken) {
    if (!consumed) {
      return 0;
    }

    while (isDelim(getNextToken(length), QUESTIONMARK)) {
      if (++consumed > 6) {
        return 0;
      }

      length++;
    }

    return length;
  }

  module.exports = function urange(token, getNextToken) {
    var length = 0;

    if (token === null || token.type !== IDENT || !cmpChar(token.value, 0, U)) {
      return 0;
    }

    token = getNextToken(++length);

    if (token === null) {
      return 0;
    }

    if (isDelim(token, PLUSSIGN)) {
      token = getNextToken(++length);

      if (token === null) {
        return 0;
      }

      if (token.type === IDENT) {
        return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);
      }

      if (isDelim(token, QUESTIONMARK)) {
        return withQuestionMarkSequence(1, ++length, getNextToken);
      }

      return 0;
    }

    if (token.type === NUMBER) {
      if (!startsWith(token, PLUSSIGN)) {
        return 0;
      }

      var consumedHexLength = hexSequence(token, 1, true);

      if (consumedHexLength === 0) {
        return 0;
      }

      token = getNextToken(++length);

      if (token === null) {
        return length;
      }

      if (token.type === DIMENSION || token.type === NUMBER) {
        if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {
          return 0;
        }

        return length + 1;
      }

      return withQuestionMarkSequence(consumedHexLength, length, getNextToken);
    }

    if (token.type === DIMENSION) {
      if (!startsWith(token, PLUSSIGN)) {
        return 0;
      }

      return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);
    }

    return 0;
  };
},853,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Tokenizer = _$$_REQUIRE(_dependencyMap[0]);

  var TAB = 9;
  var N = 10;
  var F = 12;
  var R = 13;
  var SPACE = 32;
  var EXCLAMATIONMARK = 33;
  var NUMBERSIGN = 35;
  var AMPERSAND = 38;
  var APOSTROPHE = 39;
  var LEFTPARENTHESIS = 40;
  var RIGHTPARENTHESIS = 41;
  var ASTERISK = 42;
  var PLUSSIGN = 43;
  var COMMA = 44;
  var HYPERMINUS = 45;
  var LESSTHANSIGN = 60;
  var GREATERTHANSIGN = 62;
  var QUESTIONMARK = 63;
  var COMMERCIALAT = 64;
  var LEFTSQUAREBRACKET = 91;
  var RIGHTSQUAREBRACKET = 93;
  var LEFTCURLYBRACKET = 123;
  var VERTICALLINE = 124;
  var RIGHTCURLYBRACKET = 125;
  var INFINITY = 8734;
  var NAME_CHAR = createCharMap(function (ch) {
    return /[a-zA-Z0-9\-]/.test(ch);
  });
  var COMBINATOR_PRECEDENCE = {
    ' ': 1,
    '&&': 2,
    '||': 3,
    '|': 4
  };

  function createCharMap(fn) {
    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);

    for (var i = 0; i < 128; i++) {
      array[i] = fn(String.fromCharCode(i)) ? 1 : 0;
    }

    return array;
  }

  function scanSpaces(tokenizer) {
    return tokenizer.substringToPos(tokenizer.findWsEnd(tokenizer.pos));
  }

  function scanWord(tokenizer) {
    var end = tokenizer.pos;

    for (; end < tokenizer.str.length; end++) {
      var code = tokenizer.str.charCodeAt(end);

      if (code >= 128 || NAME_CHAR[code] === 0) {
        break;
      }
    }

    if (tokenizer.pos === end) {
      tokenizer.error('Expect a keyword');
    }

    return tokenizer.substringToPos(end);
  }

  function scanNumber(tokenizer) {
    var end = tokenizer.pos;

    for (; end < tokenizer.str.length; end++) {
      var code = tokenizer.str.charCodeAt(end);

      if (code < 48 || code > 57) {
        break;
      }
    }

    if (tokenizer.pos === end) {
      tokenizer.error('Expect a number');
    }

    return tokenizer.substringToPos(end);
  }

  function scanString(tokenizer) {
    var end = tokenizer.str.indexOf('\'', tokenizer.pos + 1);

    if (end === -1) {
      tokenizer.pos = tokenizer.str.length;
      tokenizer.error('Expect an apostrophe');
    }

    return tokenizer.substringToPos(end + 1);
  }

  function readMultiplierRange(tokenizer) {
    var min = null;
    var max = null;
    tokenizer.eat(LEFTCURLYBRACKET);
    min = scanNumber(tokenizer);

    if (tokenizer.charCode() === COMMA) {
      tokenizer.pos++;

      if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {
        max = scanNumber(tokenizer);
      }
    } else {
      max = min;
    }

    tokenizer.eat(RIGHTCURLYBRACKET);
    return {
      min: Number(min),
      max: max ? Number(max) : 0
    };
  }

  function readMultiplier(tokenizer) {
    var range = null;
    var comma = false;

    switch (tokenizer.charCode()) {
      case ASTERISK:
        tokenizer.pos++;
        range = {
          min: 0,
          max: 0
        };
        break;

      case PLUSSIGN:
        tokenizer.pos++;
        range = {
          min: 1,
          max: 0
        };
        break;

      case QUESTIONMARK:
        tokenizer.pos++;
        range = {
          min: 0,
          max: 1
        };
        break;

      case NUMBERSIGN:
        tokenizer.pos++;
        comma = true;

        if (tokenizer.charCode() === LEFTCURLYBRACKET) {
          range = readMultiplierRange(tokenizer);
        } else {
          range = {
            min: 1,
            max: 0
          };
        }

        break;

      case LEFTCURLYBRACKET:
        range = readMultiplierRange(tokenizer);
        break;

      default:
        return null;
    }

    return {
      type: 'Multiplier',
      comma: comma,
      min: range.min,
      max: range.max,
      term: null
    };
  }

  function maybeMultiplied(tokenizer, node) {
    var multiplier = readMultiplier(tokenizer);

    if (multiplier !== null) {
      multiplier.term = node;
      return multiplier;
    }

    return node;
  }

  function maybeToken(tokenizer) {
    var ch = tokenizer.peek();

    if (ch === '') {
      return null;
    }

    return {
      type: 'Token',
      value: ch
    };
  }

  function readProperty(tokenizer) {
    var name;
    tokenizer.eat(LESSTHANSIGN);
    tokenizer.eat(APOSTROPHE);
    name = scanWord(tokenizer);
    tokenizer.eat(APOSTROPHE);
    tokenizer.eat(GREATERTHANSIGN);
    return maybeMultiplied(tokenizer, {
      type: 'Property',
      name: name
    });
  }

  function readTypeRange(tokenizer) {
    var min = null;
    var max = null;
    var sign = 1;
    tokenizer.eat(LEFTSQUAREBRACKET);

    if (tokenizer.charCode() === HYPERMINUS) {
      tokenizer.peek();
      sign = -1;
    }

    if (sign == -1 && tokenizer.charCode() === INFINITY) {
      tokenizer.peek();
    } else {
      min = sign * Number(scanNumber(tokenizer));
    }

    scanSpaces(tokenizer);
    tokenizer.eat(COMMA);
    scanSpaces(tokenizer);

    if (tokenizer.charCode() === INFINITY) {
      tokenizer.peek();
    } else {
      sign = 1;

      if (tokenizer.charCode() === HYPERMINUS) {
        tokenizer.peek();
        sign = -1;
      }

      max = sign * Number(scanNumber(tokenizer));
    }

    tokenizer.eat(RIGHTSQUAREBRACKET);

    if (min === null && max === null) {
      return null;
    }

    return {
      type: 'Range',
      min: min,
      max: max
    };
  }

  function readType(tokenizer) {
    var name;
    var opts = null;
    tokenizer.eat(LESSTHANSIGN);
    name = scanWord(tokenizer);

    if (tokenizer.charCode() === LEFTPARENTHESIS && tokenizer.nextCharCode() === RIGHTPARENTHESIS) {
      tokenizer.pos += 2;
      name += '()';
    }

    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {
      scanSpaces(tokenizer);
      opts = readTypeRange(tokenizer);
    }

    tokenizer.eat(GREATERTHANSIGN);
    return maybeMultiplied(tokenizer, {
      type: 'Type',
      name: name,
      opts: opts
    });
  }

  function readKeywordOrFunction(tokenizer) {
    var name;
    name = scanWord(tokenizer);

    if (tokenizer.charCode() === LEFTPARENTHESIS) {
      tokenizer.pos++;
      return {
        type: 'Function',
        name: name
      };
    }

    return maybeMultiplied(tokenizer, {
      type: 'Keyword',
      name: name
    });
  }

  function regroupTerms(terms, combinators) {
    function createGroup(terms, combinator) {
      return {
        type: 'Group',
        terms: terms,
        combinator: combinator,
        disallowEmpty: false,
        explicit: false
      };
    }

    combinators = Object.keys(combinators).sort(function (a, b) {
      return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];
    });

    while (combinators.length > 0) {
      var combinator = combinators.shift();

      for (var i = 0, subgroupStart = 0; i < terms.length; i++) {
        var term = terms[i];

        if (term.type === 'Combinator') {
          if (term.value === combinator) {
            if (subgroupStart === -1) {
              subgroupStart = i - 1;
            }

            terms.splice(i, 1);
            i--;
          } else {
            if (subgroupStart !== -1 && i - subgroupStart > 1) {
              terms.splice(subgroupStart, i - subgroupStart, createGroup(terms.slice(subgroupStart, i), combinator));
              i = subgroupStart + 1;
            }

            subgroupStart = -1;
          }
        }
      }

      if (subgroupStart !== -1 && combinators.length) {
        terms.splice(subgroupStart, i - subgroupStart, createGroup(terms.slice(subgroupStart, i), combinator));
      }
    }

    return combinator;
  }

  function readImplicitGroup(tokenizer) {
    var terms = [];
    var combinators = {};
    var token;
    var prevToken = null;
    var prevTokenPos = tokenizer.pos;

    while (token = peek(tokenizer)) {
      if (token.type !== 'Spaces') {
        if (token.type === 'Combinator') {
          if (prevToken === null || prevToken.type === 'Combinator') {
            tokenizer.pos = prevTokenPos;
            tokenizer.error('Unexpected combinator');
          }

          combinators[token.value] = true;
        } else if (prevToken !== null && prevToken.type !== 'Combinator') {
          combinators[' '] = true;
          terms.push({
            type: 'Combinator',
            value: ' '
          });
        }

        terms.push(token);
        prevToken = token;
        prevTokenPos = tokenizer.pos;
      }
    }

    if (prevToken !== null && prevToken.type === 'Combinator') {
      tokenizer.pos -= prevTokenPos;
      tokenizer.error('Unexpected combinator');
    }

    return {
      type: 'Group',
      terms: terms,
      combinator: regroupTerms(terms, combinators) || ' ',
      disallowEmpty: false,
      explicit: false
    };
  }

  function readGroup(tokenizer) {
    var result;
    tokenizer.eat(LEFTSQUAREBRACKET);
    result = readImplicitGroup(tokenizer);
    tokenizer.eat(RIGHTSQUAREBRACKET);
    result.explicit = true;

    if (tokenizer.charCode() === EXCLAMATIONMARK) {
      tokenizer.pos++;
      result.disallowEmpty = true;
    }

    return result;
  }

  function peek(tokenizer) {
    var code = tokenizer.charCode();

    if (code < 128 && NAME_CHAR[code] === 1) {
      return readKeywordOrFunction(tokenizer);
    }

    switch (code) {
      case RIGHTSQUAREBRACKET:
        break;

      case LEFTSQUAREBRACKET:
        return maybeMultiplied(tokenizer, readGroup(tokenizer));

      case LESSTHANSIGN:
        return tokenizer.nextCharCode() === APOSTROPHE ? readProperty(tokenizer) : readType(tokenizer);

      case VERTICALLINE:
        return {
          type: 'Combinator',
          value: tokenizer.substringToPos(tokenizer.nextCharCode() === VERTICALLINE ? tokenizer.pos + 2 : tokenizer.pos + 1)
        };

      case AMPERSAND:
        tokenizer.pos++;
        tokenizer.eat(AMPERSAND);
        return {
          type: 'Combinator',
          value: '&&'
        };

      case COMMA:
        tokenizer.pos++;
        return {
          type: 'Comma'
        };

      case APOSTROPHE:
        return maybeMultiplied(tokenizer, {
          type: 'String',
          value: scanString(tokenizer)
        });

      case SPACE:
      case TAB:
      case N:
      case R:
      case F:
        return {
          type: 'Spaces',
          value: scanSpaces(tokenizer)
        };

      case COMMERCIALAT:
        code = tokenizer.nextCharCode();

        if (code < 128 && NAME_CHAR[code] === 1) {
          tokenizer.pos++;
          return {
            type: 'AtKeyword',
            name: scanWord(tokenizer)
          };
        }

        return maybeToken(tokenizer);

      case ASTERISK:
      case PLUSSIGN:
      case QUESTIONMARK:
      case NUMBERSIGN:
      case EXCLAMATIONMARK:
        break;

      case LEFTCURLYBRACKET:
        code = tokenizer.nextCharCode();

        if (code < 48 || code > 57) {
          return maybeToken(tokenizer);
        }

        break;

      default:
        return maybeToken(tokenizer);
    }
  }

  function parse(source) {
    var tokenizer = new Tokenizer(source);
    var result = readImplicitGroup(tokenizer);

    if (tokenizer.pos !== source.length) {
      tokenizer.error('Unexpected input');
    }

    if (result.terms.length === 1 && result.terms[0].type === 'Group') {
      result = result.terms[0];
    }

    return result;
  }

  parse('[a&&<b>#|<\'c\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');
  module.exports = parse;
},854,[855]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var SyntaxError = _$$_REQUIRE(_dependencyMap[0]);

  var TAB = 9;
  var N = 10;
  var F = 12;
  var R = 13;
  var SPACE = 32;

  var Tokenizer = function Tokenizer(str) {
    this.str = str;
    this.pos = 0;
  };

  Tokenizer.prototype = {
    charCodeAt: function charCodeAt(pos) {
      return pos < this.str.length ? this.str.charCodeAt(pos) : 0;
    },
    charCode: function charCode() {
      return this.charCodeAt(this.pos);
    },
    nextCharCode: function nextCharCode() {
      return this.charCodeAt(this.pos + 1);
    },
    nextNonWsCode: function nextNonWsCode(pos) {
      return this.charCodeAt(this.findWsEnd(pos));
    },
    findWsEnd: function findWsEnd(pos) {
      for (; pos < this.str.length; pos++) {
        var code = this.str.charCodeAt(pos);

        if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {
          break;
        }
      }

      return pos;
    },
    substringToPos: function substringToPos(end) {
      return this.str.substring(this.pos, this.pos = end);
    },
    eat: function eat(code) {
      if (this.charCode() !== code) {
        this.error('Expect `' + String.fromCharCode(code) + '`');
      }

      this.pos++;
    },
    peek: function peek() {
      return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';
    },
    error: function error(message) {
      throw new SyntaxError(message, this.str, this.pos);
    }
  };
  module.exports = Tokenizer;
},855,[856]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var createCustomError = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function SyntaxError(message, input, offset) {
    var error = createCustomError('SyntaxError', message);
    error.input = input;
    error.offset = offset;
    error.rawMessage = message;
    error.message = error.rawMessage + '\n' + '  ' + error.input + '\n' + '--' + new Array((error.offset || error.input.length) + 1).join('-') + '^';
    return error;
  };
},856,[840]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var noop = function noop() {};

  function ensureFunction(value) {
    return typeof value === 'function' ? value : noop;
  }

  module.exports = function (node, options, context) {
    function walk(node) {
      enter.call(context, node);

      switch (node.type) {
        case 'Group':
          node.terms.forEach(walk);
          break;

        case 'Multiplier':
          walk(node.term);
          break;

        case 'Type':
        case 'Property':
        case 'Keyword':
        case 'AtKeyword':
        case 'Function':
        case 'String':
        case 'Token':
        case 'Comma':
          break;

        default:
          throw new Error('Unknown type: ' + node.type);
      }

      leave.call(context, node);
    }

    var enter = noop;
    var leave = noop;

    if (typeof options === 'function') {
      enter = options;
    } else if (options) {
      enter = ensureFunction(options.enter);
      leave = ensureFunction(options.leave);
    }

    if (enter === noop && leave === noop) {
      throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\'t a function');
    }

    walk(node, context);
  };
},857,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var tokenize = _$$_REQUIRE(_dependencyMap[0]);

  var TokenStream = _$$_REQUIRE(_dependencyMap[1]);

  var tokenStream = new TokenStream();
  var astToTokens = {
    decorator: function decorator(handlers) {
      var curNode = null;
      var prev = {
        len: 0,
        node: null
      };
      var nodes = [prev];
      var buffer = '';
      return {
        children: handlers.children,
        node: function node(_node) {
          var tmp = curNode;
          curNode = _node;
          handlers.node.call(this, _node);
          curNode = tmp;
        },
        chunk: function chunk(_chunk) {
          buffer += _chunk;

          if (prev.node !== curNode) {
            nodes.push({
              len: _chunk.length,
              node: curNode
            });
          } else {
            prev.len += _chunk.length;
          }
        },
        result: function result() {
          return prepareTokens(buffer, nodes);
        }
      };
    }
  };

  function prepareTokens(str, nodes) {
    var tokens = [];
    var nodesOffset = 0;
    var nodesIndex = 0;
    var currentNode = nodes ? nodes[nodesIndex].node : null;
    tokenize(str, tokenStream);

    while (!tokenStream.eof) {
      if (nodes) {
        while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {
          nodesOffset += nodes[nodesIndex++].len;
          currentNode = nodes[nodesIndex].node;
        }
      }

      tokens.push({
        type: tokenStream.tokenType,
        value: tokenStream.getTokenValue(),
        index: tokenStream.tokenIndex,
        balance: tokenStream.balance[tokenStream.tokenIndex],
        node: currentNode
      });
      tokenStream.next();
    }

    return tokens;
  }

  module.exports = function (value, syntax) {
    if (typeof value === 'string') {
      return prepareTokens(value, null);
    }

    return syntax.generate(value, astToTokens);
  };
},858,[850,841]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var parse = _$$_REQUIRE(_dependencyMap[0]);

  var MATCH = {
    type: 'Match'
  };
  var MISMATCH = {
    type: 'Mismatch'
  };
  var DISALLOW_EMPTY = {
    type: 'DisallowEmpty'
  };
  var LEFTPARENTHESIS = 40;
  var RIGHTPARENTHESIS = 41;

  function createCondition(match, thenBranch, elseBranch) {
    if (thenBranch === MATCH && elseBranch === MISMATCH) {
      return match;
    }

    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {
      return match;
    }

    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {
      thenBranch = match.then;
      match = match.match;
    }

    return {
      type: 'If',
      match: match,
      then: thenBranch,
      else: elseBranch
    };
  }

  function isFunctionType(name) {
    return name.length > 2 && name.charCodeAt(name.length - 2) === LEFTPARENTHESIS && name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS;
  }

  function isEnumCapatible(term) {
    return term.type === 'Keyword' || term.type === 'AtKeyword' || term.type === 'Function' || term.type === 'Type' && isFunctionType(term.name);
  }

  function buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {
    switch (combinator) {
      case ' ':
        var result = MATCH;

        for (var i = terms.length - 1; i >= 0; i--) {
          var term = terms[i];
          result = createCondition(term, result, MISMATCH);
        }

        ;
        return result;

      case '|':
        var result = MISMATCH;
        var map = null;

        for (var i = terms.length - 1; i >= 0; i--) {
          var term = terms[i];

          if (isEnumCapatible(term)) {
            if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {
              map = Object.create(null);
              result = createCondition({
                type: 'Enum',
                map: map
              }, MATCH, result);
            }

            if (map !== null) {
              var key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();

              if (key in map === false) {
                map[key] = term;
                continue;
              }
            }
          }

          map = null;
          result = createCondition(term, MATCH, result);
        }

        ;
        return result;

      case '&&':
        if (terms.length > 5) {
          return {
            type: 'MatchOnce',
            terms: terms,
            all: true
          };
        }

        var result = MISMATCH;

        for (var i = terms.length - 1; i >= 0; i--) {
          var term = terms[i];
          var thenClause;

          if (terms.length > 1) {
            thenClause = buildGroupMatchGraph(combinator, terms.filter(function (newGroupTerm) {
              return newGroupTerm !== term;
            }), false);
          } else {
            thenClause = MATCH;
          }

          result = createCondition(term, thenClause, result);
        }

        ;
        return result;

      case '||':
        if (terms.length > 5) {
          return {
            type: 'MatchOnce',
            terms: terms,
            all: false
          };
        }

        var result = atLeastOneTermMatched ? MATCH : MISMATCH;

        for (var i = terms.length - 1; i >= 0; i--) {
          var term = terms[i];
          var thenClause;

          if (terms.length > 1) {
            thenClause = buildGroupMatchGraph(combinator, terms.filter(function (newGroupTerm) {
              return newGroupTerm !== term;
            }), true);
          } else {
            thenClause = MATCH;
          }

          result = createCondition(term, thenClause, result);
        }

        ;
        return result;
    }
  }

  function buildMultiplierMatchGraph(node) {
    var result = MATCH;

    var matchTerm = _buildMatchGraph(node.term);

    if (node.max === 0) {
      matchTerm = createCondition(matchTerm, DISALLOW_EMPTY, MISMATCH);
      result = createCondition(matchTerm, null, MISMATCH);
      result.then = createCondition(MATCH, MATCH, result);

      if (node.comma) {
        result.then.else = createCondition({
          type: 'Comma',
          syntax: node
        }, result, MISMATCH);
      }
    } else {
      for (var i = node.min || 1; i <= node.max; i++) {
        if (node.comma && result !== MATCH) {
          result = createCondition({
            type: 'Comma',
            syntax: node
          }, result, MISMATCH);
        }

        result = createCondition(matchTerm, createCondition(MATCH, MATCH, result), MISMATCH);
      }
    }

    if (node.min === 0) {
      result = createCondition(MATCH, MATCH, result);
    } else {
      for (var i = 0; i < node.min - 1; i++) {
        if (node.comma && result !== MATCH) {
          result = createCondition({
            type: 'Comma',
            syntax: node
          }, result, MISMATCH);
        }

        result = createCondition(matchTerm, result, MISMATCH);
      }
    }

    return result;
  }

  function _buildMatchGraph(node) {
    if (typeof node === 'function') {
      return {
        type: 'Generic',
        fn: node
      };
    }

    switch (node.type) {
      case 'Group':
        var result = buildGroupMatchGraph(node.combinator, node.terms.map(_buildMatchGraph), false);

        if (node.disallowEmpty) {
          result = createCondition(result, DISALLOW_EMPTY, MISMATCH);
        }

        return result;

      case 'Multiplier':
        return buildMultiplierMatchGraph(node);

      case 'Type':
      case 'Property':
        return {
          type: node.type,
          name: node.name,
          syntax: node
        };

      case 'Keyword':
        return {
          type: node.type,
          name: node.name.toLowerCase(),
          syntax: node
        };

      case 'AtKeyword':
        return {
          type: node.type,
          name: '@' + node.name.toLowerCase(),
          syntax: node
        };

      case 'Function':
        return {
          type: node.type,
          name: node.name.toLowerCase() + '(',
          syntax: node
        };

      case 'String':
        if (node.value.length === 3) {
          return {
            type: 'Token',
            value: node.value.charAt(1),
            syntax: node
          };
        }

        return {
          type: node.type,
          value: node.value.substr(1, node.value.length - 2).replace(/\\'/g, '\''),
          syntax: node
        };

      case 'Token':
        return {
          type: node.type,
          value: node.value,
          syntax: node
        };

      case 'Comma':
        return {
          type: node.type,
          syntax: node
        };

      default:
        throw new Error('Unknown node type:', node.type);
    }
  }

  module.exports = {
    MATCH: MATCH,
    MISMATCH: MISMATCH,
    DISALLOW_EMPTY: DISALLOW_EMPTY,
    buildMatchGraph: function buildMatchGraph(syntaxTree, ref) {
      if (typeof syntaxTree === 'string') {
        syntaxTree = parse(syntaxTree);
      }

      return {
        type: 'MatchGraph',
        match: _buildMatchGraph(syntaxTree),
        syntax: ref || null,
        source: syntaxTree
      };
    }
  };
},859,[854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  var matchGraph = _$$_REQUIRE(_dependencyMap[0]);

  var MATCH = matchGraph.MATCH;
  var MISMATCH = matchGraph.MISMATCH;
  var DISALLOW_EMPTY = matchGraph.DISALLOW_EMPTY;

  var TYPE = _$$_REQUIRE(_dependencyMap[1]).TYPE;

  var STUB = 0;
  var TOKEN = 1;
  var OPEN_SYNTAX = 2;
  var CLOSE_SYNTAX = 3;
  var EXIT_REASON_MATCH = 'Match';
  var EXIT_REASON_MISMATCH = 'Mismatch';
  var EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';
  var ITERATION_LIMIT = 15000;
  var totalIterationCount = 0;

  function reverseList(list) {
    var prev = null;
    var next = null;
    var item = list;

    while (item !== null) {
      next = item.prev;
      item.prev = prev;
      prev = item;
      item = next;
    }

    return prev;
  }

  function areStringsEqualCaseInsensitive(testStr, referenceStr) {
    if (testStr.length !== referenceStr.length) {
      return false;
    }

    for (var i = 0; i < testStr.length; i++) {
      var testCode = testStr.charCodeAt(i);
      var referenceCode = referenceStr.charCodeAt(i);

      if (testCode >= 0x0041 && testCode <= 0x005A) {
        testCode = testCode | 32;
      }

      if (testCode !== referenceCode) {
        return false;
      }
    }

    return true;
  }

  function isContextEdgeDelim(token) {
    if (token.type !== TYPE.Delim) {
      return false;
    }

    return token.value !== '?';
  }

  function isCommaContextStart(token) {
    if (token === null) {
      return true;
    }

    return token.type === TYPE.Comma || token.type === TYPE.Function || token.type === TYPE.LeftParenthesis || token.type === TYPE.LeftSquareBracket || token.type === TYPE.LeftCurlyBracket || isContextEdgeDelim(token);
  }

  function isCommaContextEnd(token) {
    if (token === null) {
      return true;
    }

    return token.type === TYPE.RightParenthesis || token.type === TYPE.RightSquareBracket || token.type === TYPE.RightCurlyBracket || token.type === TYPE.Delim;
  }

  function internalMatch(tokens, state, syntaxes) {
    function moveToNextToken() {
      do {
        tokenIndex++;
        token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;
      } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));
    }

    function getNextToken(offset) {
      var nextIndex = tokenIndex + offset;
      return nextIndex < tokens.length ? tokens[nextIndex] : null;
    }

    function stateSnapshotFromSyntax(nextState, prev) {
      return {
        nextState: nextState,
        matchStack: matchStack,
        syntaxStack: syntaxStack,
        thenStack: thenStack,
        tokenIndex: tokenIndex,
        prev: prev
      };
    }

    function pushThenStack(nextState) {
      thenStack = {
        nextState: nextState,
        matchStack: matchStack,
        syntaxStack: syntaxStack,
        prev: thenStack
      };
    }

    function pushElseStack(nextState) {
      elseStack = stateSnapshotFromSyntax(nextState, elseStack);
    }

    function addTokenToMatch() {
      matchStack = {
        type: TOKEN,
        syntax: state.syntax,
        token: token,
        prev: matchStack
      };
      moveToNextToken();
      syntaxStash = null;

      if (tokenIndex > longestMatch) {
        longestMatch = tokenIndex;
      }
    }

    function openSyntax() {
      syntaxStack = {
        syntax: state.syntax,
        opts: state.syntax.opts || syntaxStack !== null && syntaxStack.opts || null,
        prev: syntaxStack
      };
      matchStack = {
        type: OPEN_SYNTAX,
        syntax: state.syntax,
        token: matchStack.token,
        prev: matchStack
      };
    }

    function closeSyntax() {
      if (matchStack.type === OPEN_SYNTAX) {
        matchStack = matchStack.prev;
      } else {
        matchStack = {
          type: CLOSE_SYNTAX,
          syntax: syntaxStack.syntax,
          token: matchStack.token,
          prev: matchStack
        };
      }

      syntaxStack = syntaxStack.prev;
    }

    var syntaxStack = null;
    var thenStack = null;
    var elseStack = null;
    var syntaxStash = null;
    var iterationCount = 0;
    var exitReason = null;
    var token = null;
    var tokenIndex = -1;
    var longestMatch = 0;
    var matchStack = {
      type: STUB,
      syntax: null,
      token: null,
      prev: null
    };
    moveToNextToken();

    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {
      switch (state.type) {
        case 'Match':
          if (thenStack === null) {
            if (token !== null) {
              if (tokenIndex !== tokens.length - 1 || token.value !== '\\0' && token.value !== '\\9') {
                state = MISMATCH;
                break;
              }
            }

            exitReason = EXIT_REASON_MATCH;
            break;
          }

          state = thenStack.nextState;

          if (state === DISALLOW_EMPTY) {
            if (thenStack.matchStack === matchStack) {
              state = MISMATCH;
              break;
            } else {
              state = MATCH;
            }
          }

          while (thenStack.syntaxStack !== syntaxStack) {
            closeSyntax();
          }

          thenStack = thenStack.prev;
          break;

        case 'Mismatch':
          if (syntaxStash !== null && syntaxStash !== false) {
            if (elseStack === null || tokenIndex > elseStack.tokenIndex) {
              elseStack = syntaxStash;
              syntaxStash = false;
            }
          } else if (elseStack === null) {
            exitReason = EXIT_REASON_MISMATCH;
            break;
          }

          state = elseStack.nextState;
          thenStack = elseStack.thenStack;
          syntaxStack = elseStack.syntaxStack;
          matchStack = elseStack.matchStack;
          tokenIndex = elseStack.tokenIndex;
          token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;
          elseStack = elseStack.prev;
          break;

        case 'MatchGraph':
          state = state.match;
          break;

        case 'If':
          if (state.else !== MISMATCH) {
            pushElseStack(state.else);
          }

          if (state.then !== MATCH) {
            pushThenStack(state.then);
          }

          state = state.match;
          break;

        case 'MatchOnce':
          state = {
            type: 'MatchOnceBuffer',
            syntax: state,
            index: 0,
            mask: 0
          };
          break;

        case 'MatchOnceBuffer':
          var terms = state.syntax.terms;

          if (state.index === terms.length) {
            if (state.mask === 0 || state.syntax.all) {
              state = MISMATCH;
              break;
            }

            state = MATCH;
            break;
          }

          if (state.mask === (1 << terms.length) - 1) {
            state = MATCH;
            break;
          }

          for (; state.index < terms.length; state.index++) {
            var matchFlag = 1 << state.index;

            if ((state.mask & matchFlag) === 0) {
              pushElseStack(state);
              pushThenStack({
                type: 'AddMatchOnce',
                syntax: state.syntax,
                mask: state.mask | matchFlag
              });
              state = terms[state.index++];
              break;
            }
          }

          break;

        case 'AddMatchOnce':
          state = {
            type: 'MatchOnceBuffer',
            syntax: state.syntax,
            index: 0,
            mask: state.mask
          };
          break;

        case 'Enum':
          if (token !== null) {
            var name = token.value.toLowerCase();

            if (name.indexOf('\\') !== -1) {
              name = name.replace(/\\[09].*$/, '');
            }

            if (hasOwnProperty.call(state.map, name)) {
              state = state.map[name];
              break;
            }
          }

          state = MISMATCH;
          break;

        case 'Generic':
          var opts = syntaxStack !== null ? syntaxStack.opts : null;
          var lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));

          if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {
            while (tokenIndex < lastTokenIndex) {
              addTokenToMatch();
            }

            state = MATCH;
          } else {
            state = MISMATCH;
          }

          break;

        case 'Type':
        case 'Property':
          var syntaxDict = state.type === 'Type' ? 'types' : 'properties';
          var dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;

          if (!dictSyntax || !dictSyntax.match) {
            throw new Error('Bad syntax reference: ' + (state.type === 'Type' ? '<' + state.name + '>' : '<\'' + state.name + '\'>'));
          }

          if (syntaxStash !== false && token !== null && state.type === 'Type') {
            var lowPriorityMatching = state.name === 'custom-ident' && token.type === TYPE.Ident || state.name === 'length' && token.value === '0';

            if (lowPriorityMatching) {
              if (syntaxStash === null) {
                syntaxStash = stateSnapshotFromSyntax(state, elseStack);
              }

              state = MISMATCH;
              break;
            }
          }

          openSyntax();
          state = dictSyntax.match;
          break;

        case 'Keyword':
          var name = state.name;

          if (token !== null) {
            var keywordName = token.value;

            if (keywordName.indexOf('\\') !== -1) {
              keywordName = keywordName.replace(/\\[09].*$/, '');
            }

            if (areStringsEqualCaseInsensitive(keywordName, name)) {
              addTokenToMatch();
              state = MATCH;
              break;
            }
          }

          state = MISMATCH;
          break;

        case 'AtKeyword':
        case 'Function':
          if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {
            addTokenToMatch();
            state = MATCH;
            break;
          }

          state = MISMATCH;
          break;

        case 'Token':
          if (token !== null && token.value === state.value) {
            addTokenToMatch();
            state = MATCH;
            break;
          }

          state = MISMATCH;
          break;

        case 'Comma':
          if (token !== null && token.type === TYPE.Comma) {
            if (isCommaContextStart(matchStack.token)) {
              state = MISMATCH;
            } else {
              addTokenToMatch();
              state = isCommaContextEnd(token) ? MISMATCH : MATCH;
            }
          } else {
            state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;
          }

          break;

        case 'String':
          var string = '';

          for (var lastTokenIndex = tokenIndex; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {
            string += tokens[lastTokenIndex].value;
          }

          if (areStringsEqualCaseInsensitive(string, state.value)) {
            while (tokenIndex < lastTokenIndex) {
              addTokenToMatch();
            }

            state = MATCH;
          } else {
            state = MISMATCH;
          }

          break;

        default:
          throw new Error('Unknown node type: ' + state.type);
      }
    }

    totalIterationCount += iterationCount;

    switch (exitReason) {
      case null:
        console.warn("[csstree-match] BREAK after 15000 iterations");
        exitReason = EXIT_REASON_ITERATION_LIMIT;
        matchStack = null;
        break;

      case EXIT_REASON_MATCH:
        while (syntaxStack !== null) {
          closeSyntax();
        }

        break;

      default:
        matchStack = null;
    }

    return {
      tokens: tokens,
      reason: exitReason,
      iterations: iterationCount,
      match: matchStack,
      longestMatch: longestMatch
    };
  }

  function matchAsList(tokens, matchGraph, syntaxes) {
    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});

    if (matchResult.match !== null) {
      var item = reverseList(matchResult.match).prev;
      matchResult.match = [];

      while (item !== null) {
        switch (item.type) {
          case STUB:
            break;

          case OPEN_SYNTAX:
          case CLOSE_SYNTAX:
            matchResult.match.push({
              type: item.type,
              syntax: item.syntax
            });
            break;

          default:
            matchResult.match.push({
              token: item.token.value,
              node: item.token.node
            });
            break;
        }

        item = item.prev;
      }
    }

    return matchResult;
  }

  function matchAsTree(tokens, matchGraph, syntaxes) {
    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});

    if (matchResult.match === null) {
      return matchResult;
    }

    var item = matchResult.match;
    var host = matchResult.match = {
      syntax: matchGraph.syntax || null,
      match: []
    };
    var hostStack = [host];
    item = reverseList(item).prev;

    while (item !== null) {
      switch (item.type) {
        case OPEN_SYNTAX:
          host.match.push(host = {
            syntax: item.syntax,
            match: []
          });
          hostStack.push(host);
          break;

        case CLOSE_SYNTAX:
          hostStack.pop();
          host = hostStack[hostStack.length - 1];
          break;

        default:
          host.match.push({
            syntax: item.syntax || null,
            token: item.token.value,
            node: item.token.node
          });
      }

      item = item.prev;
    }

    return matchResult;
  }

  module.exports = {
    matchAsList: matchAsList,
    matchAsTree: matchAsTree,
    getTotalIterationCount: function getTotalIterationCount() {
      return totalIterationCount;
    }
  };
},860,[859,842]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function getTrace(node) {
    function shouldPutToTrace(syntax) {
      if (syntax === null) {
        return false;
      }

      return syntax.type === 'Type' || syntax.type === 'Property' || syntax.type === 'Keyword';
    }

    function hasMatch(matchNode) {
      if (Array.isArray(matchNode.match)) {
        for (var i = 0; i < matchNode.match.length; i++) {
          if (hasMatch(matchNode.match[i])) {
            if (shouldPutToTrace(matchNode.syntax)) {
              result.unshift(matchNode.syntax);
            }

            return true;
          }
        }
      } else if (matchNode.node === node) {
        result = shouldPutToTrace(matchNode.syntax) ? [matchNode.syntax] : [];
        return true;
      }

      return false;
    }

    var result = null;

    if (this.matched !== null) {
      hasMatch(this.matched);
    }

    return result;
  }

  function testNode(match, node, fn) {
    var trace = getTrace.call(match, node);

    if (trace === null) {
      return false;
    }

    return trace.some(fn);
  }

  function isType(node, type) {
    return testNode(this, node, function (matchNode) {
      return matchNode.type === 'Type' && matchNode.name === type;
    });
  }

  function isProperty(node, property) {
    return testNode(this, node, function (matchNode) {
      return matchNode.type === 'Property' && matchNode.name === property;
    });
  }

  function isKeyword(node) {
    return testNode(this, node, function (matchNode) {
      return matchNode.type === 'Keyword';
    });
  }

  module.exports = {
    getTrace: getTrace,
    isType: isType,
    isProperty: isProperty,
    isKeyword: isKeyword
  };
},861,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var List = _$$_REQUIRE(_dependencyMap[0]);

  function getFirstMatchNode(matchNode) {
    if ('node' in matchNode) {
      return matchNode.node;
    }

    return getFirstMatchNode(matchNode.match[0]);
  }

  function getLastMatchNode(matchNode) {
    if ('node' in matchNode) {
      return matchNode.node;
    }

    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);
  }

  function matchFragments(lexer, ast, match, type, name) {
    function findFragments(matchNode) {
      if (matchNode.syntax !== null && matchNode.syntax.type === type && matchNode.syntax.name === name) {
        var start = getFirstMatchNode(matchNode);
        var end = getLastMatchNode(matchNode);
        lexer.syntax.walk(ast, function (node, item, list) {
          if (node === start) {
            var nodes = new List();

            do {
              nodes.appendData(item.data);

              if (item.data === end) {
                break;
              }

              item = item.next;
            } while (item !== null);

            fragments.push({
              parent: list,
              nodes: nodes
            });
          }
        });
      }

      if (Array.isArray(matchNode.match)) {
        matchNode.match.forEach(findFragments);
      }
    }

    var fragments = [];

    if (match.matched !== null) {
      findFragments(match.matched);
    }

    return fragments;
  }

  module.exports = {
    matchFragments: matchFragments
  };
},862,[838]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var List = _$$_REQUIRE(_dependencyMap[0]);

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function isValidNumber(value) {
    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value && value >= 0;
  }

  function isValidLocation(loc) {
    return Boolean(loc) && isValidNumber(loc.offset) && isValidNumber(loc.line) && isValidNumber(loc.column);
  }

  function createNodeStructureChecker(type, fields) {
    return function checkNode(node, warn) {
      if (!node || node.constructor !== Object) {
        return warn(node, 'Type of node should be an Object');
      }

      for (var key in node) {
        var valid = true;

        if (hasOwnProperty.call(node, key) === false) {
          continue;
        }

        if (key === 'type') {
          if (node.type !== type) {
            warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');
          }
        } else if (key === 'loc') {
          if (node.loc === null) {
            continue;
          } else if (node.loc && node.loc.constructor === Object) {
            if (typeof node.loc.source !== 'string') {
              key += '.source';
            } else if (!isValidLocation(node.loc.start)) {
              key += '.start';
            } else if (!isValidLocation(node.loc.end)) {
              key += '.end';
            } else {
              continue;
            }
          }

          valid = false;
        } else if (fields.hasOwnProperty(key)) {
          for (var i = 0, valid = false; !valid && i < fields[key].length; i++) {
            var fieldType = fields[key][i];

            switch (fieldType) {
              case String:
                valid = typeof node[key] === 'string';
                break;

              case Boolean:
                valid = typeof node[key] === 'boolean';
                break;

              case null:
                valid = node[key] === null;
                break;

              default:
                if (typeof fieldType === 'string') {
                  valid = node[key] && node[key].type === fieldType;
                } else if (Array.isArray(fieldType)) {
                  valid = node[key] instanceof List;
                }

            }
          }
        } else {
          warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');
        }

        if (!valid) {
          warn(node, 'Bad value for `' + type + '.' + key + '`');
        }
      }

      for (var key in fields) {
        if (hasOwnProperty.call(fields, key) && hasOwnProperty.call(node, key) === false) {
          warn(node, 'Field `' + type + '.' + key + '` is missed');
        }
      }
    };
  }

  function processStructure(name, nodeType) {
    var structure = nodeType.structure;
    var fields = {
      type: String,
      loc: true
    };
    var docs = {
      type: '"' + name + '"'
    };

    for (var key in structure) {
      if (hasOwnProperty.call(structure, key) === false) {
        continue;
      }

      var docsTypes = [];
      var fieldTypes = fields[key] = Array.isArray(structure[key]) ? structure[key].slice() : [structure[key]];

      for (var i = 0; i < fieldTypes.length; i++) {
        var fieldType = fieldTypes[i];

        if (fieldType === String || fieldType === Boolean) {
          docsTypes.push(fieldType.name);
        } else if (fieldType === null) {
          docsTypes.push('null');
        } else if (typeof fieldType === 'string') {
          docsTypes.push('<' + fieldType + '>');
        } else if (Array.isArray(fieldType)) {
          docsTypes.push('List');
        } else {
          throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');
        }
      }

      docs[key] = docsTypes.join(' | ');
    }

    return {
      docs: docs,
      check: createNodeStructureChecker(name, fields)
    };
  }

  module.exports = {
    getStructureFromConfig: function getStructureFromConfig(config) {
      var structure = {};

      if (config.node) {
        for (var name in config.node) {
          if (hasOwnProperty.call(config.node, name)) {
            var nodeType = config.node[name];

            if (nodeType.structure) {
              structure[name] = processStructure(name, nodeType);
            } else {
              throw new Error('Missed `structure` field in `' + name + '` node type definition');
            }
          }
        }
      }

      return structure;
    }
  };
},863,[838]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    SyntaxError: _$$_REQUIRE(_dependencyMap[0]),
    parse: _$$_REQUIRE(_dependencyMap[1]),
    generate: _$$_REQUIRE(_dependencyMap[2]),
    walk: _$$_REQUIRE(_dependencyMap[3])
  };
},864,[856,854,847,857]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var OffsetToLocation = _$$_REQUIRE(_dependencyMap[0]);

  var SyntaxError = _$$_REQUIRE(_dependencyMap[1]);

  var TokenStream = _$$_REQUIRE(_dependencyMap[2]);

  var List = _$$_REQUIRE(_dependencyMap[3]);

  var tokenize = _$$_REQUIRE(_dependencyMap[4]);

  var constants = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      findWhiteSpaceStart = _require.findWhiteSpaceStart,
      cmpStr = _require.cmpStr;

  var sequence = _$$_REQUIRE(_dependencyMap[7]);

  var noop = function noop() {};

  var TYPE = constants.TYPE;
  var NAME = constants.NAME;
  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var IDENT = TYPE.Ident;
  var FUNCTION = TYPE.Function;
  var URL = TYPE.Url;
  var HASH = TYPE.Hash;
  var PERCENTAGE = TYPE.Percentage;
  var NUMBER = TYPE.Number;
  var NUMBERSIGN = 0x0023;
  var NULL = 0;

  function createParseContext(name) {
    return function () {
      return this[name]();
    };
  }

  function processConfig(config) {
    var parserConfig = {
      context: {},
      scope: {},
      atrule: {},
      pseudo: {}
    };

    if (config.parseContext) {
      for (var name in config.parseContext) {
        switch (typeof config.parseContext[name]) {
          case 'function':
            parserConfig.context[name] = config.parseContext[name];
            break;

          case 'string':
            parserConfig.context[name] = createParseContext(config.parseContext[name]);
            break;
        }
      }
    }

    if (config.scope) {
      for (var name in config.scope) {
        parserConfig.scope[name] = config.scope[name];
      }
    }

    if (config.atrule) {
      for (var name in config.atrule) {
        var atrule = config.atrule[name];

        if (atrule.parse) {
          parserConfig.atrule[name] = atrule.parse;
        }
      }
    }

    if (config.pseudo) {
      for (var name in config.pseudo) {
        var pseudo = config.pseudo[name];

        if (pseudo.parse) {
          parserConfig.pseudo[name] = pseudo.parse;
        }
      }
    }

    if (config.node) {
      for (var name in config.node) {
        parserConfig[name] = config.node[name].parse;
      }
    }

    return parserConfig;
  }

  module.exports = function createParser(config) {
    var parser = {
      scanner: new TokenStream(),
      locationMap: new OffsetToLocation(),
      filename: '<unknown>',
      needPositions: false,
      onParseError: noop,
      onParseErrorThrow: false,
      parseAtrulePrelude: true,
      parseRulePrelude: true,
      parseValue: true,
      parseCustomProperty: false,
      readSequence: sequence,
      createList: function createList() {
        return new List();
      },
      createSingleNodeList: function createSingleNodeList(node) {
        return new List().appendData(node);
      },
      getFirstListNode: function getFirstListNode(list) {
        return list && list.first();
      },
      getLastListNode: function getLastListNode(list) {
        return list.last();
      },
      parseWithFallback: function parseWithFallback(consumer, fallback) {
        var startToken = this.scanner.tokenIndex;

        try {
          return consumer.call(this);
        } catch (e) {
          if (this.onParseErrorThrow) {
            throw e;
          }

          var fallbackNode = fallback.call(this, startToken);
          this.onParseErrorThrow = true;
          this.onParseError(e, fallbackNode);
          this.onParseErrorThrow = false;
          return fallbackNode;
        }
      },
      lookupNonWSType: function lookupNonWSType(offset) {
        do {
          var type = this.scanner.lookupType(offset++);

          if (type !== WHITESPACE) {
            return type;
          }
        } while (type !== NULL);

        return NULL;
      },
      eat: function eat(tokenType) {
        if (this.scanner.tokenType !== tokenType) {
          var offset = this.scanner.tokenStart;
          var message = NAME[tokenType] + ' is expected';

          switch (tokenType) {
            case IDENT:
              if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {
                offset = this.scanner.tokenEnd - 1;
                message = 'Identifier is expected but function found';
              } else {
                message = 'Identifier is expected';
              }

              break;

            case HASH:
              if (this.scanner.isDelim(NUMBERSIGN)) {
                this.scanner.next();
                offset++;
                message = 'Name is expected';
              }

              break;

            case PERCENTAGE:
              if (this.scanner.tokenType === NUMBER) {
                offset = this.scanner.tokenEnd;
                message = 'Percent sign is expected';
              }

              break;

            default:
              if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {
                offset = offset + 1;
              }

          }

          this.error(message, offset);
        }

        this.scanner.next();
      },
      consume: function consume(tokenType) {
        var value = this.scanner.getTokenValue();
        this.eat(tokenType);
        return value;
      },
      consumeFunctionName: function consumeFunctionName() {
        var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);
        this.eat(FUNCTION);
        return name;
      },
      getLocation: function getLocation(start, end) {
        if (this.needPositions) {
          return this.locationMap.getLocationRange(start, end, this.filename);
        }

        return null;
      },
      getLocationFromList: function getLocationFromList(list) {
        if (this.needPositions) {
          var head = this.getFirstListNode(list);
          var tail = this.getLastListNode(list);
          return this.locationMap.getLocationRange(head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart, tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart, this.filename);
        }

        return null;
      },
      error: function error(message, offset) {
        var location = typeof offset !== 'undefined' && offset < this.scanner.source.length ? this.locationMap.getLocation(offset) : this.scanner.eof ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1)) : this.locationMap.getLocation(this.scanner.tokenStart);
        throw new SyntaxError(message || 'Unexpected input', this.scanner.source, location.offset, location.line, location.column);
      }
    };
    config = processConfig(config || {});

    for (var key in config) {
      parser[key] = config[key];
    }

    return function (source, options) {
      options = options || {};
      var context = options.context || 'default';
      var onComment = options.onComment;
      var ast;
      tokenize(source, parser.scanner);
      parser.locationMap.setSource(source, options.offset, options.line, options.column);
      parser.filename = options.filename || '<unknown>';
      parser.needPositions = Boolean(options.positions);
      parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;
      parser.onParseErrorThrow = false;
      parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;
      parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;
      parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;
      parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;

      if (!parser.context.hasOwnProperty(context)) {
        throw new Error('Unknown context `' + context + '`');
      }

      if (typeof onComment === 'function') {
        parser.scanner.forEachToken(function (type, start, end) {
          if (type === COMMENT) {
            var loc = parser.getLocation(start, end);
            var value = cmpStr(source, end - 2, end, '*/') ? source.slice(start + 2, end - 2) : source.slice(start + 2, end);
            onComment(value, loc);
          }
        });
      }

      ast = parser.context[context].call(parser, options);

      if (!parser.scanner.eof) {
        parser.error();
      }

      return ast;
    };
  };
},865,[866,839,841,838,850,842,843,867]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var adoptBuffer = _$$_REQUIRE(_dependencyMap[0]);

  var isBOM = _$$_REQUIRE(_dependencyMap[1]).isBOM;

  var N = 10;
  var F = 12;
  var R = 13;

  function computeLinesAndColumns(host, source) {
    var sourceLength = source.length;
    var lines = adoptBuffer(host.lines, sourceLength);
    var line = host.startLine;
    var columns = adoptBuffer(host.columns, sourceLength);
    var column = host.startColumn;
    var startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;

    for (var i = startOffset; i < sourceLength; i++) {
      var code = source.charCodeAt(i);
      lines[i] = line;
      columns[i] = column++;

      if (code === N || code === R || code === F) {
        if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {
          i++;
          lines[i] = line;
          columns[i] = column;
        }

        line++;
        column = 1;
      }
    }

    lines[i] = line;
    columns[i] = column;
    host.lines = lines;
    host.columns = columns;
  }

  var OffsetToLocation = function OffsetToLocation() {
    this.lines = null;
    this.columns = null;
    this.linesAndColumnsComputed = false;
  };

  OffsetToLocation.prototype = {
    setSource: function setSource(source, startOffset, startLine, startColumn) {
      this.source = source;
      this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;
      this.startLine = typeof startLine === 'undefined' ? 1 : startLine;
      this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;
      this.linesAndColumnsComputed = false;
    },
    ensureLinesAndColumnsComputed: function ensureLinesAndColumnsComputed() {
      if (!this.linesAndColumnsComputed) {
        computeLinesAndColumns(this, this.source);
        this.linesAndColumnsComputed = true;
      }
    },
    getLocation: function getLocation(offset, filename) {
      this.ensureLinesAndColumnsComputed();
      return {
        source: filename,
        offset: this.startOffset + offset,
        line: this.lines[offset],
        column: this.columns[offset]
      };
    },
    getLocationRange: function getLocationRange(start, end, filename) {
      this.ensureLinesAndColumnsComputed();
      return {
        source: filename,
        start: {
          offset: this.startOffset + start,
          line: this.lines[start],
          column: this.columns[start]
        },
        end: {
          offset: this.startOffset + end,
          line: this.lines[end],
          column: this.columns[end]
        }
      };
    }
  };
  module.exports = OffsetToLocation;
},866,[851,850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;

  module.exports = function readSequence(recognizer) {
    var children = this.createList();
    var child = null;
    var context = {
      recognizer: recognizer,
      space: null,
      ignoreWS: false,
      ignoreWSAfter: false
    };
    this.scanner.skipSC();

    while (!this.scanner.eof) {
      switch (this.scanner.tokenType) {
        case COMMENT:
          this.scanner.next();
          continue;

        case WHITESPACE:
          if (context.ignoreWS) {
            this.scanner.next();
          } else {
            context.space = this.WhiteSpace();
          }

          continue;
      }

      child = recognizer.getNode.call(this, context);

      if (child === undefined) {
        break;
      }

      if (context.space !== null) {
        children.push(context.space);
        context.space = null;
      }

      children.push(child);

      if (context.ignoreWSAfter) {
        context.ignoreWSAfter = false;
        context.ignoreWS = true;
      } else {
        context.ignoreWS = false;
      }
    }

    return children;
  };
},867,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var sourceMap = _$$_REQUIRE(_dependencyMap[0]);

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function processChildren(node, delimeter) {
    var list = node.children;
    var prev = null;

    if (typeof delimeter !== 'function') {
      list.forEach(this.node, this);
    } else {
      list.forEach(function (node) {
        if (prev !== null) {
          delimeter.call(this, prev);
        }

        this.node(node);
        prev = node;
      }, this);
    }
  }

  module.exports = function createGenerator(config) {
    function processNode(node) {
      if (hasOwnProperty.call(types, node.type)) {
        types[node.type].call(this, node);
      } else {
        throw new Error('Unknown node type: ' + node.type);
      }
    }

    var types = {};

    if (config.node) {
      for (var name in config.node) {
        types[name] = config.node[name].generate;
      }
    }

    return function (node, options) {
      var buffer = '';
      var handlers = {
        children: processChildren,
        node: processNode,
        chunk: function chunk(_chunk) {
          buffer += _chunk;
        },
        result: function result() {
          return buffer;
        }
      };

      if (options) {
        if (typeof options.decorator === 'function') {
          handlers = options.decorator(handlers);
        }

        if (options.sourceMap) {
          handlers = sourceMap(handlers);
        }
      }

      handlers.node(node);
      return handlers.result();
    };
  };
},868,[869]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var SourceMapGenerator = _$$_REQUIRE(_dependencyMap[0]).SourceMapGenerator;

  var trackNodes = {
    Atrule: true,
    Selector: true,
    Declaration: true
  };

  module.exports = function generateSourceMap(handlers) {
    var map = new SourceMapGenerator();
    var line = 1;
    var column = 0;
    var generated = {
      line: 1,
      column: 0
    };
    var original = {
      line: 0,
      column: 0
    };
    var sourceMappingActive = false;
    var activatedGenerated = {
      line: 1,
      column: 0
    };
    var activatedMapping = {
      generated: activatedGenerated
    };
    var handlersNode = handlers.node;

    handlers.node = function (node) {
      if (node.loc && node.loc.start && trackNodes.hasOwnProperty(node.type)) {
        var nodeLine = node.loc.start.line;
        var nodeColumn = node.loc.start.column - 1;

        if (original.line !== nodeLine || original.column !== nodeColumn) {
          original.line = nodeLine;
          original.column = nodeColumn;
          generated.line = line;
          generated.column = column;

          if (sourceMappingActive) {
            sourceMappingActive = false;

            if (generated.line !== activatedGenerated.line || generated.column !== activatedGenerated.column) {
              map.addMapping(activatedMapping);
            }
          }

          sourceMappingActive = true;
          map.addMapping({
            source: node.loc.source,
            original: original,
            generated: generated
          });
        }
      }

      handlersNode.call(this, node);

      if (sourceMappingActive && trackNodes.hasOwnProperty(node.type)) {
        activatedGenerated.line = line;
        activatedGenerated.column = column;
      }
    };

    var handlersChunk = handlers.chunk;

    handlers.chunk = function (chunk) {
      for (var i = 0; i < chunk.length; i++) {
        if (chunk.charCodeAt(i) === 10) {
          line++;
          column = 0;
        } else {
          column++;
        }
      }

      handlersChunk(chunk);
    };

    var handlersResult = handlers.result;

    handlers.result = function () {
      if (sourceMappingActive) {
        map.addMapping(activatedMapping);
      }

      return {
        css: handlersResult(),
        map: map
      };
    };

    return handlers;
  };
},869,[870]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var base64VLQ = _$$_REQUIRE(_dependencyMap[0]);

  var util = _$$_REQUIRE(_dependencyMap[1]);

  var ArraySet = _$$_REQUIRE(_dependencyMap[2]).ArraySet;

  var MappingList = _$$_REQUIRE(_dependencyMap[3]).MappingList;

  function SourceMapGenerator(aArgs) {
    if (!aArgs) {
      aArgs = {};
    }

    this._file = util.getArg(aArgs, 'file', null);
    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
    this._sources = new ArraySet();
    this._names = new ArraySet();
    this._mappings = new MappingList();
    this._sourcesContents = null;
  }

  SourceMapGenerator.prototype._version = 3;

  SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;

        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var sourceRelative = sourceFile;

      if (sourceRoot !== null) {
        sourceRelative = util.relative(sourceRoot, sourceFile);
      }

      if (!generator._sources.has(sourceRelative)) {
        generator._sources.add(sourceRelative);
      }

      var content = aSourceMapConsumer.sourceContentFor(sourceFile);

      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

  SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);

      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);

      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

  SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;

    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }

      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      delete this._sourcesContents[util.toSetString(source)];

      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

  SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;

    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error("SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's \"file\" property. Both were omitted.");
      }

      sourceFile = aSourceMapConsumer.file;
    }

    var sourceRoot = this._sourceRoot;

    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }

    var newSources = new ArraySet();
    var newNames = new ArraySet();

    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });

        if (original.source != null) {
          mapping.source = original.source;

          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source);
          }

          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }

          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;

          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;

      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;

      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }
    }, this);

    this._sources = newSources;
    this._names = newNames;
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);

      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }

        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }

        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

  SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
      throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {
      return;
    } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {
      return;
    } else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

  SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();

    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = '';

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;

        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      } else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }

          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;
        next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;
        next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

  SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }

      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }

      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;
    }, this);
  };

  SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };

    if (this._file != null) {
      map.file = this._file;
    }

    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }

    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

  SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

  exports.SourceMapGenerator = SourceMapGenerator;
},870,[871,873,874,875]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var VLQ_BASE_SHIFT = 5;
  var VLQ_BASE = 32;
  var VLQ_BASE_MASK = 31;
  var VLQ_CONTINUATION_BIT = VLQ_BASE;

  function toVLQSigned(aValue) {
    return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;
  }

  function fromVLQSigned(aValue) {
    var isNegative = (aValue & 1) === 1;
    var shifted = aValue >> 1;
    return isNegative ? -shifted : shifted;
  }

  exports.encode = function base64VLQ_encode(aValue) {
    var encoded = "";
    var digit;
    var vlq = toVLQSigned(aValue);

    do {
      digit = vlq & VLQ_BASE_MASK;
      vlq >>>= VLQ_BASE_SHIFT;

      if (vlq > 0) {
        digit |= VLQ_CONTINUATION_BIT;
      }

      encoded += base64.encode(digit);
    } while (vlq > 0);

    return encoded;
  };

  exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
    var strLen = aStr.length;
    var result = 0;
    var shift = 0;
    var continuation, digit;

    do {
      if (aIndex >= strLen) {
        throw new Error("Expected more digits in base 64 VLQ value.");
      }

      digit = base64.decode(aStr.charCodeAt(aIndex++));

      if (digit === -1) {
        throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
      }

      continuation = !!(digit & VLQ_CONTINUATION_BIT);
      digit &= VLQ_BASE_MASK;
      result = result + (digit << shift);
      shift += VLQ_BASE_SHIFT;
    } while (continuation);

    aOutParam.value = fromVLQSigned(result);
    aOutParam.rest = aIndex;
  };
},871,[872]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

  exports.encode = function (number) {
    if (0 <= number && number < intToCharMap.length) {
      return intToCharMap[number];
    }

    throw new TypeError("Must be between 0 and 63: " + number);
  };

  exports.decode = function (charCode) {
    var bigA = 65;
    var bigZ = 90;
    var littleA = 97;
    var littleZ = 122;
    var zero = 48;
    var nine = 57;
    var plus = 43;
    var slash = 47;
    var littleOffset = 26;
    var numberOffset = 52;

    if (bigA <= charCode && charCode <= bigZ) {
      return charCode - bigA;
    }

    if (littleA <= charCode && charCode <= littleZ) {
      return charCode - littleA + littleOffset;
    }

    if (zero <= charCode && charCode <= nine) {
      return charCode - zero + numberOffset;
    }

    if (charCode == plus) {
      return 62;
    }

    if (charCode == slash) {
      return 63;
    }

    return -1;
  };
},872,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function getArg(aArgs, aName, aDefaultValue) {
    if (aName in aArgs) {
      return aArgs[aName];
    } else if (arguments.length === 3) {
      return aDefaultValue;
    } else {
      throw new Error('"' + aName + '" is a required argument.');
    }
  }

  exports.getArg = getArg;
  var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
  var dataUrlRegexp = /^data:.+\,.+$/;

  function urlParse(aUrl) {
    var match = aUrl.match(urlRegexp);

    if (!match) {
      return null;
    }

    return {
      scheme: match[1],
      auth: match[2],
      host: match[3],
      port: match[4],
      path: match[5]
    };
  }

  exports.urlParse = urlParse;

  function urlGenerate(aParsedUrl) {
    var url = '';

    if (aParsedUrl.scheme) {
      url += aParsedUrl.scheme + ':';
    }

    url += '//';

    if (aParsedUrl.auth) {
      url += aParsedUrl.auth + '@';
    }

    if (aParsedUrl.host) {
      url += aParsedUrl.host;
    }

    if (aParsedUrl.port) {
      url += ":" + aParsedUrl.port;
    }

    if (aParsedUrl.path) {
      url += aParsedUrl.path;
    }

    return url;
  }

  exports.urlGenerate = urlGenerate;

  function normalize(aPath) {
    var path = aPath;
    var url = urlParse(aPath);

    if (url) {
      if (!url.path) {
        return aPath;
      }

      path = url.path;
    }

    var isAbsolute = exports.isAbsolute(path);
    var parts = path.split(/\/+/);

    for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
      part = parts[i];

      if (part === '.') {
        parts.splice(i, 1);
      } else if (part === '..') {
        up++;
      } else if (up > 0) {
        if (part === '') {
          parts.splice(i + 1, up);
          up = 0;
        } else {
          parts.splice(i, 2);
          up--;
        }
      }
    }

    path = parts.join('/');

    if (path === '') {
      path = isAbsolute ? '/' : '.';
    }

    if (url) {
      url.path = path;
      return urlGenerate(url);
    }

    return path;
  }

  exports.normalize = normalize;

  function join(aRoot, aPath) {
    if (aRoot === "") {
      aRoot = ".";
    }

    if (aPath === "") {
      aPath = ".";
    }

    var aPathUrl = urlParse(aPath);
    var aRootUrl = urlParse(aRoot);

    if (aRootUrl) {
      aRoot = aRootUrl.path || '/';
    }

    if (aPathUrl && !aPathUrl.scheme) {
      if (aRootUrl) {
        aPathUrl.scheme = aRootUrl.scheme;
      }

      return urlGenerate(aPathUrl);
    }

    if (aPathUrl || aPath.match(dataUrlRegexp)) {
      return aPath;
    }

    if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
      aRootUrl.host = aPath;
      return urlGenerate(aRootUrl);
    }

    var joined = aPath.charAt(0) === '/' ? aPath : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

    if (aRootUrl) {
      aRootUrl.path = joined;
      return urlGenerate(aRootUrl);
    }

    return joined;
  }

  exports.join = join;

  exports.isAbsolute = function (aPath) {
    return aPath.charAt(0) === '/' || urlRegexp.test(aPath);
  };

  function relative(aRoot, aPath) {
    if (aRoot === "") {
      aRoot = ".";
    }

    aRoot = aRoot.replace(/\/$/, '');
    var level = 0;

    while (aPath.indexOf(aRoot + '/') !== 0) {
      var index = aRoot.lastIndexOf("/");

      if (index < 0) {
        return aPath;
      }

      aRoot = aRoot.slice(0, index);

      if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
        return aPath;
      }

      ++level;
    }

    return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
  }

  exports.relative = relative;

  var supportsNullProto = function () {
    var obj = Object.create(null);
    return !('__proto__' in obj);
  }();

  function identity(s) {
    return s;
  }

  function toSetString(aStr) {
    if (isProtoString(aStr)) {
      return '$' + aStr;
    }

    return aStr;
  }

  exports.toSetString = supportsNullProto ? identity : toSetString;

  function fromSetString(aStr) {
    if (isProtoString(aStr)) {
      return aStr.slice(1);
    }

    return aStr;
  }

  exports.fromSetString = supportsNullProto ? identity : fromSetString;

  function isProtoString(s) {
    if (!s) {
      return false;
    }

    var length = s.length;

    if (length < 9) {
        return false;
      }

    if (s.charCodeAt(length - 1) !== 95 || s.charCodeAt(length - 2) !== 95 || s.charCodeAt(length - 3) !== 111 || s.charCodeAt(length - 4) !== 116 || s.charCodeAt(length - 5) !== 111 || s.charCodeAt(length - 6) !== 114 || s.charCodeAt(length - 7) !== 112 || s.charCodeAt(length - 8) !== 95 || s.charCodeAt(length - 9) !== 95) {
        return false;
      }

    for (var i = length - 10; i >= 0; i--) {
      if (s.charCodeAt(i) !== 36) {
          return false;
        }
    }

    return true;
  }

  function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
    var cmp = strcmp(mappingA.source, mappingB.source);

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.originalLine - mappingB.originalLine;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.originalColumn - mappingB.originalColumn;

    if (cmp !== 0 || onlyCompareOriginal) {
      return cmp;
    }

    cmp = mappingA.generatedColumn - mappingB.generatedColumn;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.generatedLine - mappingB.generatedLine;

    if (cmp !== 0) {
      return cmp;
    }

    return strcmp(mappingA.name, mappingB.name);
  }

  exports.compareByOriginalPositions = compareByOriginalPositions;

  function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
    var cmp = mappingA.generatedLine - mappingB.generatedLine;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.generatedColumn - mappingB.generatedColumn;

    if (cmp !== 0 || onlyCompareGenerated) {
      return cmp;
    }

    cmp = strcmp(mappingA.source, mappingB.source);

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.originalLine - mappingB.originalLine;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.originalColumn - mappingB.originalColumn;

    if (cmp !== 0) {
      return cmp;
    }

    return strcmp(mappingA.name, mappingB.name);
  }

  exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

  function strcmp(aStr1, aStr2) {
    if (aStr1 === aStr2) {
      return 0;
    }

    if (aStr1 === null) {
      return 1;
    }

    if (aStr2 === null) {
      return -1;
    }

    if (aStr1 > aStr2) {
      return 1;
    }

    return -1;
  }

  function compareByGeneratedPositionsInflated(mappingA, mappingB) {
    var cmp = mappingA.generatedLine - mappingB.generatedLine;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.generatedColumn - mappingB.generatedColumn;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = strcmp(mappingA.source, mappingB.source);

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.originalLine - mappingB.originalLine;

    if (cmp !== 0) {
      return cmp;
    }

    cmp = mappingA.originalColumn - mappingB.originalColumn;

    if (cmp !== 0) {
      return cmp;
    }

    return strcmp(mappingA.name, mappingB.name);
  }

  exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

  function parseSourceMapInput(str) {
    return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
  }

  exports.parseSourceMapInput = parseSourceMapInput;

  function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
    sourceURL = sourceURL || '';

    if (sourceRoot) {
      if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {
        sourceRoot += '/';
      }

      sourceURL = sourceRoot + sourceURL;
    }

    if (sourceMapURL) {
      var parsed = urlParse(sourceMapURL);

      if (!parsed) {
        throw new Error("sourceMapURL could not be parsed");
      }

      if (parsed.path) {
        var index = parsed.path.lastIndexOf('/');

        if (index >= 0) {
          parsed.path = parsed.path.substring(0, index + 1);
        }
      }

      sourceURL = join(urlGenerate(parsed), sourceURL);
    }

    return normalize(sourceURL);
  }

  exports.computeSourceURL = computeSourceURL;
},873,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var util = _$$_REQUIRE(_dependencyMap[0]);

  var has = Object.prototype.hasOwnProperty;
  var hasNativeMap = typeof Map !== "undefined";

  function ArraySet() {
    this._array = [];
    this._set = hasNativeMap ? new Map() : Object.create(null);
  }

  ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
    var set = new ArraySet();

    for (var i = 0, len = aArray.length; i < len; i++) {
      set.add(aArray[i], aAllowDuplicates);
    }

    return set;
  };

  ArraySet.prototype.size = function ArraySet_size() {
    return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
  };

  ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
    var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
    var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
    var idx = this._array.length;

    if (!isDuplicate || aAllowDuplicates) {
      this._array.push(aStr);
    }

    if (!isDuplicate) {
      if (hasNativeMap) {
        this._set.set(aStr, idx);
      } else {
        this._set[sStr] = idx;
      }
    }
  };

  ArraySet.prototype.has = function ArraySet_has(aStr) {
    if (hasNativeMap) {
      return this._set.has(aStr);
    } else {
      var sStr = util.toSetString(aStr);
      return has.call(this._set, sStr);
    }
  };

  ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
    if (hasNativeMap) {
      var idx = this._set.get(aStr);

      if (idx >= 0) {
        return idx;
      }
    } else {
      var sStr = util.toSetString(aStr);

      if (has.call(this._set, sStr)) {
        return this._set[sStr];
      }
    }

    throw new Error('"' + aStr + '" is not in the set.');
  };

  ArraySet.prototype.at = function ArraySet_at(aIdx) {
    if (aIdx >= 0 && aIdx < this._array.length) {
      return this._array[aIdx];
    }

    throw new Error('No element indexed by ' + aIdx);
  };

  ArraySet.prototype.toArray = function ArraySet_toArray() {
    return this._array.slice();
  };

  exports.ArraySet = ArraySet;
},874,[873]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var util = _$$_REQUIRE(_dependencyMap[0]);

  function generatedPositionAfter(mappingA, mappingB) {
    var lineA = mappingA.generatedLine;
    var lineB = mappingB.generatedLine;
    var columnA = mappingA.generatedColumn;
    var columnB = mappingB.generatedColumn;
    return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
  }

  function MappingList() {
    this._array = [];
    this._sorted = true;
    this._last = {
      generatedLine: -1,
      generatedColumn: 0
    };
  }

  MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

  MappingList.prototype.add = function MappingList_add(aMapping) {
    if (generatedPositionAfter(this._last, aMapping)) {
      this._last = aMapping;

      this._array.push(aMapping);
    } else {
      this._sorted = false;

      this._array.push(aMapping);
    }
  };

  MappingList.prototype.toArray = function MappingList_toArray() {
    if (!this._sorted) {
      this._array.sort(util.compareByGeneratedPositionsInflated);

      this._sorted = true;
    }

    return this._array;
  };

  exports.MappingList = MappingList;
},875,[873]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var List = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function createConvertors(walk) {
    return {
      fromPlainObject: function fromPlainObject(ast) {
        walk(ast, {
          enter: function enter(node) {
            if (node.children && node.children instanceof List === false) {
              node.children = new List().fromArray(node.children);
            }
          }
        });
        return ast;
      },
      toPlainObject: function toPlainObject(ast) {
        walk(ast, {
          leave: function leave(node) {
            if (node.children && node.children instanceof List) {
              node.children = node.children.toArray();
            }
          }
        });
        return ast;
      }
    };
  };
},876,[838]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  var noop = function noop() {};

  function ensureFunction(value) {
    return typeof value === 'function' ? value : noop;
  }

  function invokeForType(fn, type) {
    return function (node, item, list) {
      if (node.type === type) {
        fn.call(this, node, item, list);
      }
    };
  }

  function getWalkersFromStructure(name, nodeType) {
    var structure = nodeType.structure;
    var walkers = [];

    for (var key in structure) {
      if (hasOwnProperty.call(structure, key) === false) {
        continue;
      }

      var fieldTypes = structure[key];
      var walker = {
        name: key,
        type: false,
        nullable: false
      };

      if (!Array.isArray(structure[key])) {
        fieldTypes = [structure[key]];
      }

      for (var i = 0; i < fieldTypes.length; i++) {
        var fieldType = fieldTypes[i];

        if (fieldType === null) {
          walker.nullable = true;
        } else if (typeof fieldType === 'string') {
          walker.type = 'node';
        } else if (Array.isArray(fieldType)) {
          walker.type = 'list';
        }
      }

      if (walker.type) {
        walkers.push(walker);
      }
    }

    if (walkers.length) {
      return {
        context: nodeType.walkContext,
        fields: walkers
      };
    }

    return null;
  }

  function getTypesFromConfig(config) {
    var types = {};

    for (var name in config.node) {
      if (hasOwnProperty.call(config.node, name)) {
        var nodeType = config.node[name];

        if (!nodeType.structure) {
          throw new Error('Missed `structure` field in `' + name + '` node type definition');
        }

        types[name] = getWalkersFromStructure(name, nodeType);
      }
    }

    return types;
  }

  function createTypeIterator(config, reverse) {
    var fields = config.fields.slice();
    var contextName = config.context;
    var useContext = typeof contextName === 'string';

    if (reverse) {
      fields.reverse();
    }

    return function (node, context, walk, walkReducer) {
      var prevContextValue;

      if (useContext) {
        prevContextValue = context[contextName];
        context[contextName] = node;
      }

      for (var i = 0; i < fields.length; i++) {
        var field = fields[i];
        var ref = node[field.name];

        if (!field.nullable || ref) {
          if (field.type === 'list') {
            var breakWalk = reverse ? ref.reduceRight(walkReducer, false) : ref.reduce(walkReducer, false);

            if (breakWalk) {
              return true;
            }
          } else if (walk(ref)) {
            return true;
          }
        }
      }

      if (useContext) {
        context[contextName] = prevContextValue;
      }
    };
  }

  function createFastTraveralMap(iterators) {
    return {
      Atrule: {
        StyleSheet: iterators.StyleSheet,
        Atrule: iterators.Atrule,
        Rule: iterators.Rule,
        Block: iterators.Block
      },
      Rule: {
        StyleSheet: iterators.StyleSheet,
        Atrule: iterators.Atrule,
        Rule: iterators.Rule,
        Block: iterators.Block
      },
      Declaration: {
        StyleSheet: iterators.StyleSheet,
        Atrule: iterators.Atrule,
        Rule: iterators.Rule,
        Block: iterators.Block,
        DeclarationList: iterators.DeclarationList
      }
    };
  }

  module.exports = function createWalker(config) {
    var types = getTypesFromConfig(config);
    var iteratorsNatural = {};
    var iteratorsReverse = {};
    var breakWalk = Symbol('break-walk');
    var skipNode = Symbol('skip-node');

    for (var name in types) {
      if (hasOwnProperty.call(types, name) && types[name] !== null) {
        iteratorsNatural[name] = createTypeIterator(types[name], false);
        iteratorsReverse[name] = createTypeIterator(types[name], true);
      }
    }

    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);
    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);

    var walk = function walk(root, options) {
      function walkNode(node, item, list) {
        var enterRet = enter.call(context, node, item, list);

        if (enterRet === breakWalk) {
          debugger;
          return true;
        }

        if (enterRet === skipNode) {
          return false;
        }

        if (iterators.hasOwnProperty(node.type)) {
          if (iterators[node.type](node, context, walkNode, walkReducer)) {
            return true;
          }
        }

        if (leave.call(context, node, item, list) === breakWalk) {
          return true;
        }

        return false;
      }

      var walkReducer = function walkReducer(ret, data, item, list) {
        return ret || walkNode(data, item, list);
      };

      var enter = noop;
      var leave = noop;
      var iterators = iteratorsNatural;
      var context = {
        break: breakWalk,
        skip: skipNode,
        root: root,
        stylesheet: null,
        atrule: null,
        atrulePrelude: null,
        rule: null,
        selector: null,
        block: null,
        declaration: null,
        function: null
      };

      if (typeof options === 'function') {
        enter = options;
      } else if (options) {
        enter = ensureFunction(options.enter);
        leave = ensureFunction(options.leave);

        if (options.reverse) {
          iterators = iteratorsReverse;
        }

        if (options.visit) {
          if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {
            iterators = options.reverse ? fastTraversalIteratorsReverse[options.visit] : fastTraversalIteratorsNatural[options.visit];
          } else if (!types.hasOwnProperty(options.visit)) {
            throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');
          }

          enter = invokeForType(enter, options.visit);
          leave = invokeForType(leave, options.visit);
        }
      }

      if (enter === noop && leave === noop) {
        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\'t a function');
      }

      walkNode(root);
    };

    walk.break = breakWalk;
    walk.skip = skipNode;

    walk.find = function (ast, fn) {
      var found = null;
      walk(ast, function (node, item, list) {
        if (fn.call(this, node, item, list)) {
          found = node;
          return breakWalk;
        }
      });
      return found;
    };

    walk.findLast = function (ast, fn) {
      var found = null;
      walk(ast, {
        reverse: true,
        enter: function enter(node, item, list) {
          if (fn.call(this, node, item, list)) {
            found = node;
            return breakWalk;
          }
        }
      });
      return found;
    };

    walk.findAll = function (ast, fn) {
      var found = [];
      walk(ast, function (node, item, list) {
        if (fn.call(this, node, item, list)) {
          found.push(node);
        }
      });
      return found;
    };

    return walk;
  };
},877,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var List = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = function clone(node) {
    var result = {};

    for (var key in node) {
      var value = node[key];

      if (value) {
        if (Array.isArray(value) || value instanceof List) {
          value = value.map(clone);
        } else if (value.constructor === Object) {
          value = clone(value);
        }
      }

      result[key] = value;
    }

    return result;
  };
},878,[838]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var shape = {
    generic: true,
    types: appendOrAssign,
    atrules: {
      prelude: appendOrAssignOrNull,
      descriptors: appendOrAssignOrNull
    },
    properties: appendOrAssign,
    parseContext: assign,
    scope: deepAssign,
    atrule: ['parse'],
    pseudo: ['parse'],
    node: ['name', 'structure', 'parse', 'generate', 'walkContext']
  };

  function isObject(value) {
    return value && value.constructor === Object;
  }

  function copy(value) {
    return isObject(value) ? _extends({}, value) : value;
  }

  function assign(dest, src) {
    return _extends(dest, src);
  }

  function deepAssign(dest, src) {
    for (var key in src) {
      if (hasOwnProperty.call(src, key)) {
        if (isObject(dest[key])) {
          deepAssign(dest[key], copy(src[key]));
        } else {
          dest[key] = copy(src[key]);
        }
      }
    }

    return dest;
  }

  function append(a, b) {
    if (typeof b === 'string' && /^\s*\|/.test(b)) {
      return typeof a === 'string' ? a + b : b.replace(/^\s*\|\s*/, '');
    }

    return b || null;
  }

  function appendOrAssign(a, b) {
    if (typeof b === 'string') {
      return append(a, b);
    }

    var result = _extends({}, a);

    for (var key in b) {
      if (hasOwnProperty.call(b, key)) {
        result[key] = append(hasOwnProperty.call(a, key) ? a[key] : undefined, b[key]);
      }
    }

    return result;
  }

  function appendOrAssignOrNull(a, b) {
    var result = appendOrAssign(a, b);
    return !isObject(result) || Object.keys(result).length ? result : null;
  }

  function mix(dest, src, shape) {
    for (var key in shape) {
      if (hasOwnProperty.call(shape, key) === false) {
        continue;
      }

      if (shape[key] === true) {
        if (key in src) {
          if (hasOwnProperty.call(src, key)) {
            dest[key] = copy(src[key]);
          }
        }
      } else if (shape[key]) {
        if (typeof shape[key] === 'function') {
          var fn = shape[key];
          dest[key] = fn({}, dest[key]);
          dest[key] = fn(dest[key] || {}, src[key]);
        } else if (isObject(shape[key])) {
          var result = {};

          for (var name in dest[key]) {
            result[name] = mix({}, dest[key][name], shape[key]);
          }

          for (var _name in src[key]) {
            result[_name] = mix(result[_name] || {}, src[key][_name], shape[key]);
          }

          dest[key] = result;
        } else if (Array.isArray(shape[key])) {
          var res = {};
          var innerShape = shape[key].reduce(function (s, k) {
            s[k] = true;
            return s;
          }, {});

          for (var _i = 0, _Object$entries = Object.entries(dest[key] || {}); _i < _Object$entries.length; _i++) {
            var _ref = _Object$entries[_i];

            var _ref2 = _slicedToArray(_ref, 2);

            var _name2 = _ref2[0];
            var value = _ref2[1];
            res[_name2] = {};

            if (value) {
              mix(res[_name2], value, innerShape);
            }
          }

          for (var _name3 in src[key]) {
            if (hasOwnProperty.call(src[key], _name3)) {
              if (!res[_name3]) {
                res[_name3] = {};
              }

              if (src[key] && src[key][_name3]) {
                mix(res[_name3], src[key][_name3], innerShape);
              }
            }
          }

          dest[key] = res;
        }
      }
    }

    return dest;
  }

  module.exports = function (dest, src) {
    return mix(dest, src, shape);
  };
},879,[12,11]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var data = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = {
    generic: true,
    types: data.types,
    atrules: data.atrules,
    properties: data.properties,
    node: _$$_REQUIRE(_dependencyMap[1])
  };
},880,[881,886]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var mdnAtrules = _$$_REQUIRE(_dependencyMap[0]);

  var mdnProperties = _$$_REQUIRE(_dependencyMap[1]);

  var mdnSyntaxes = _$$_REQUIRE(_dependencyMap[2]);

  var patch = _$$_REQUIRE(_dependencyMap[3]);

  var extendSyntax = /^\s*\|\s*/;

  function preprocessAtrules(dict) {
    var result = Object.create(null);

    for (var atruleName in dict) {
      var atrule = dict[atruleName];
      var descriptors = null;

      if (atrule.descriptors) {
        descriptors = Object.create(null);

        for (var descriptor in atrule.descriptors) {
          descriptors[descriptor] = atrule.descriptors[descriptor].syntax;
        }
      }

      result[atruleName.substr(1)] = {
        prelude: atrule.syntax.trim().match(/^@\S+\s+([^;\{]*)/)[1].trim() || null,
        descriptors: descriptors
      };
    }

    return result;
  }

  function patchDictionary(dict, patchDict) {
    var result = {};

    for (var key in dict) {
      result[key] = dict[key].syntax || dict[key];
    }

    for (var _key in patchDict) {
      if (_key in dict) {
        if (patchDict[_key].syntax) {
          result[_key] = extendSyntax.test(patchDict[_key].syntax) ? result[_key] + ' ' + patchDict[_key].syntax.trim() : patchDict[_key].syntax;
        } else {
          delete result[_key];
        }
      } else {
        if (patchDict[_key].syntax) {
          result[_key] = patchDict[_key].syntax.replace(extendSyntax, '');
        }
      }
    }

    return result;
  }

  function unpackSyntaxes(dict) {
    var result = {};

    for (var key in dict) {
      result[key] = dict[key].syntax;
    }

    return result;
  }

  function patchAtrules(dict, patchDict) {
    var result = {};

    for (var key in dict) {
      var patchDescriptors = patchDict[key] && patchDict[key].descriptors || null;
      result[key] = {
        prelude: key in patchDict && 'prelude' in patchDict[key] ? patchDict[key].prelude : dict[key].prelude || null,
        descriptors: dict[key].descriptors ? patchDictionary(dict[key].descriptors, patchDescriptors || {}) : patchDescriptors && unpackSyntaxes(patchDescriptors)
      };
    }

    for (var _key2 in patchDict) {
      if (!hasOwnProperty.call(dict, _key2)) {
        result[_key2] = {
          prelude: patchDict[_key2].prelude || null,
          descriptors: patchDict[_key2].descriptors && unpackSyntaxes(patchDict[_key2].descriptors)
        };
      }
    }

    return result;
  }

  module.exports = {
    types: patchDictionary(mdnSyntaxes, patch.syntaxes),
    atrules: patchAtrules(preprocessAtrules(mdnAtrules), patch.atrules),
    properties: patchDictionary(mdnProperties, patch.properties)
  };
},881,[882,883,884,885]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "@charset": {
    "syntax": "@charset \"<charset>\";",
    "groups": [
      "CSS Charsets"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@charset"
  },
  "@counter-style": {
    "syntax": "@counter-style <counter-style-name> {\n  [ system: <counter-system>; ] ||\n  [ symbols: <counter-symbols>; ] ||\n  [ additive-symbols: <additive-symbols>; ] ||\n  [ negative: <negative-symbol>; ] ||\n  [ prefix: <prefix>; ] ||\n  [ suffix: <suffix>; ] ||\n  [ range: <range>; ] ||\n  [ pad: <padding>; ] ||\n  [ speak-as: <speak-as>; ] ||\n  [ fallback: <counter-style-name>; ]\n}",
    "interfaces": [
      "CSSCounterStyleRule"
    ],
    "groups": [
      "CSS Counter Styles"
    ],
    "descriptors": {
      "additive-symbols": {
        "syntax": "[ <integer> && <symbol> ]#",
        "media": "all",
        "initial": "n/a (required)",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "fallback": {
        "syntax": "<counter-style-name>",
        "media": "all",
        "initial": "decimal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "negative": {
        "syntax": "<symbol> <symbol>?",
        "media": "all",
        "initial": "\"-\" hyphen-minus",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "pad": {
        "syntax": "<integer> && <symbol>",
        "media": "all",
        "initial": "0 \"\"",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "prefix": {
        "syntax": "<symbol>",
        "media": "all",
        "initial": "\"\"",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "range": {
        "syntax": "[ [ <integer> | infinite ]{2} ]# | auto",
        "media": "all",
        "initial": "auto",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "speak-as": {
        "syntax": "auto | bullets | numbers | words | spell-out | <counter-style-name>",
        "media": "all",
        "initial": "auto",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "suffix": {
        "syntax": "<symbol>",
        "media": "all",
        "initial": "\". \"",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "symbols": {
        "syntax": "<symbol>+",
        "media": "all",
        "initial": "n/a (required)",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "system": {
        "syntax": "cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]",
        "media": "all",
        "initial": "symbolic",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      }
    },
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@counter-style"
  },
  "@document": {
    "syntax": "@document [ <url> | url-prefix(<string>) | domain(<string>) | media-document(<string>) | regexp(<string>) ]# {\n  <group-rule-body>\n}",
    "interfaces": [
      "CSSGroupingRule",
      "CSSConditionRule"
    ],
    "groups": [
      "CSS Conditional Rules"
    ],
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@document"
  },
  "@font-face": {
    "syntax": "@font-face {\n  [ font-family: <family-name>; ] ||\n  [ src: <src>; ] ||\n  [ unicode-range: <unicode-range>; ] ||\n  [ font-variant: <font-variant>; ] ||\n  [ font-feature-settings: <font-feature-settings>; ] ||\n  [ font-variation-settings: <font-variation-settings>; ] ||\n  [ font-stretch: <font-stretch>; ] ||\n  [ font-weight: <font-weight>; ] ||\n  [ font-style: <font-style>; ]\n}",
    "interfaces": [
      "CSSFontFaceRule"
    ],
    "groups": [
      "CSS Fonts"
    ],
    "descriptors": {
      "font-display": {
        "syntax": "[ auto | block | swap | fallback | optional ]",
        "media": "visual",
        "percentages": "no",
        "initial": "auto",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "experimental"
      },
      "font-family": {
        "syntax": "<family-name>",
        "media": "all",
        "initial": "n/a (required)",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "font-feature-settings": {
        "syntax": "normal | <feature-tag-value>#",
        "media": "all",
        "initial": "normal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "font-variation-settings": {
        "syntax": "normal | [ <string> <number> ]#",
        "media": "all",
        "initial": "normal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "font-stretch": {
        "syntax": "<font-stretch-absolute>{1,2}",
        "media": "all",
        "initial": "normal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "font-style": {
        "syntax": "normal | italic | oblique <angle>{0,2}",
        "media": "all",
        "initial": "normal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "font-weight": {
        "syntax": "<font-weight-absolute>{1,2}",
        "media": "all",
        "initial": "normal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "font-variant": {
        "syntax": "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
        "media": "all",
        "initial": "normal",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "src": {
        "syntax": "[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#",
        "media": "all",
        "initial": "n/a (required)",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "unicode-range": {
        "syntax": "<unicode-range>#",
        "media": "all",
        "initial": "U+0-10FFFF",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      }
    },
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@font-face"
  },
  "@font-feature-values": {
    "syntax": "@font-feature-values <family-name># {\n  <feature-value-block-list>\n}",
    "interfaces": [
      "CSSFontFeatureValuesRule"
    ],
    "groups": [
      "CSS Fonts"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@font-feature-values"
  },
  "@import": {
    "syntax": "@import [ <string> | <url> ] [ <media-query-list> ]?;",
    "groups": [
      "Media Queries"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@import"
  },
  "@keyframes": {
    "syntax": "@keyframes <keyframes-name> {\n  <keyframe-block-list>\n}",
    "interfaces": [
      "CSSKeyframeRule",
      "CSSKeyframesRule"
    ],
    "groups": [
      "CSS Animations"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@keyframes"
  },
  "@media": {
    "syntax": "@media <media-query-list> {\n  <group-rule-body>\n}",
    "interfaces": [
      "CSSGroupingRule",
      "CSSConditionRule",
      "CSSMediaRule",
      "CSSCustomMediaRule"
    ],
    "groups": [
      "CSS Conditional Rules",
      "Media Queries"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@media"
  },
  "@namespace": {
    "syntax": "@namespace <namespace-prefix>? [ <string> | <url> ];",
    "groups": [
      "CSS Namespaces"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@namespace"
  },
  "@page": {
    "syntax": "@page <page-selector-list> {\n  <page-body>\n}",
    "interfaces": [
      "CSSPageRule"
    ],
    "groups": [
      "CSS Pages"
    ],
    "descriptors": {
      "bleed": {
        "syntax": "auto | <length>",
        "media": [
          "visual",
          "paged"
        ],
        "initial": "auto",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "marks": {
        "syntax": "none | [ crop || cross ]",
        "media": [
          "visual",
          "paged"
        ],
        "initial": "none",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "size": {
        "syntax": "<length>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ]",
        "media": [
          "visual",
          "paged"
        ],
        "initial": "auto",
        "percentages": "no",
        "computed": "asSpecifiedRelativeToAbsoluteLengths",
        "order": "orderOfAppearance",
        "status": "standard"
      }
    },
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@page"
  },
  "@property": {
    "syntax": "@property <custom-property-name> {\n  <declaration-list>\n}",
    "interfaces": [
      "CSS",
      "CSSPropertyRule"
    ],
    "groups": [
      "CSS Houdini"
    ],
    "descriptors": {
      "syntax": {
        "syntax": "<string>",
        "media": "all",
        "percentages": "no",
        "initial": "n/a (required)",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "experimental"
      },
      "inherits": {
        "syntax": "true | false",
        "media": "all",
        "percentages": "no",
        "initial": "auto",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "experimental"
      },
      "initial-value": {
        "syntax": "<string>",
        "media": "all",
        "initial": "n/a (required)",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "experimental"
      }
    },
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@property"
  },
  "@supports": {
    "syntax": "@supports <supports-condition> {\n  <group-rule-body>\n}",
    "interfaces": [
      "CSSGroupingRule",
      "CSSConditionRule",
      "CSSSupportsRule"
    ],
    "groups": [
      "CSS Conditional Rules"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@supports"
  },
  "@viewport": {
    "syntax": "@viewport {\n  <group-rule-body>\n}",
    "interfaces": [
      "CSSViewportRule"
    ],
    "groups": [
      "CSS Device Adaptation"
    ],
    "descriptors": {
      "height": {
        "syntax": "<viewport-length>{1,2}",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": [
          "min-height",
          "max-height"
        ],
        "percentages": [
          "min-height",
          "max-height"
        ],
        "computed": [
          "min-height",
          "max-height"
        ],
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "max-height": {
        "syntax": "<viewport-length>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "referToHeightOfInitialViewport",
        "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "max-width": {
        "syntax": "<viewport-length>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "referToWidthOfInitialViewport",
        "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "max-zoom": {
        "syntax": "auto | <number> | <percentage>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "the zoom factor itself",
        "computed": "autoNonNegativeOrPercentage",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "min-height": {
        "syntax": "<viewport-length>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "referToHeightOfInitialViewport",
        "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "min-width": {
        "syntax": "<viewport-length>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "referToWidthOfInitialViewport",
        "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "min-zoom": {
        "syntax": "auto | <number> | <percentage>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "the zoom factor itself",
        "computed": "autoNonNegativeOrPercentage",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "orientation": {
        "syntax": "auto | portrait | landscape",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "referToSizeOfBoundingBox",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "user-zoom": {
        "syntax": "zoom | fixed",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "zoom",
        "percentages": "referToSizeOfBoundingBox",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "viewport-fit": {
        "syntax": "auto | contain | cover",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "no",
        "computed": "asSpecified",
        "order": "uniqueOrder",
        "status": "standard"
      },
      "width": {
        "syntax": "<viewport-length>{1,2}",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": [
          "min-width",
          "max-width"
        ],
        "percentages": [
          "min-width",
          "max-width"
        ],
        "computed": [
          "min-width",
          "max-width"
        ],
        "order": "orderOfAppearance",
        "status": "standard"
      },
      "zoom": {
        "syntax": "auto | <number> | <percentage>",
        "media": [
          "visual",
          "continuous"
        ],
        "initial": "auto",
        "percentages": "the zoom factor itself",
        "computed": "autoNonNegativeOrPercentage",
        "order": "uniqueOrder",
        "status": "standard"
      }
    },
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/@viewport"
  }
}
;
},882,[]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "--*": {
    "syntax": "<declaration-value>",
    "media": "all",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Variables"
    ],
    "initial": "seeProse",
    "appliesto": "allElements",
    "computed": "asSpecifiedWithVarsSubstituted",
    "order": "perGrammar",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/--*"
  },
  "-ms-accelerator": {
    "syntax": "false | true",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "false",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-accelerator"
  },
  "-ms-block-progression": {
    "syntax": "tb | rl | bt | lr",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "tb",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-block-progression"
  },
  "-ms-content-zoom-chaining": {
    "syntax": "none | chained",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-chaining"
  },
  "-ms-content-zooming": {
    "syntax": "none | zoom",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "zoomForTheTopLevelNoneForTheRest",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zooming"
  },
  "-ms-content-zoom-limit": {
    "syntax": "<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": [
      "-ms-content-zoom-limit-max",
      "-ms-content-zoom-limit-min"
    ],
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": [
      "-ms-content-zoom-limit-max",
      "-ms-content-zoom-limit-min"
    ],
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": [
      "-ms-content-zoom-limit-max",
      "-ms-content-zoom-limit-min"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit"
  },
  "-ms-content-zoom-limit-max": {
    "syntax": "<percentage>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "maxZoomFactor",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "400%",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit-max"
  },
  "-ms-content-zoom-limit-min": {
    "syntax": "<percentage>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "minZoomFactor",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "100%",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit-min"
  },
  "-ms-content-zoom-snap": {
    "syntax": "<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": [
      "-ms-content-zoom-snap-type",
      "-ms-content-zoom-snap-points"
    ],
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": [
      "-ms-content-zoom-snap-type",
      "-ms-content-zoom-snap-points"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap"
  },
  "-ms-content-zoom-snap-points": {
    "syntax": "snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "snapInterval(0%, 100%)",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap-points"
  },
  "-ms-content-zoom-snap-type": {
    "syntax": "none | proximity | mandatory",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap-type"
  },
  "-ms-filter": {
    "syntax": "<string>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "\"\"",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-filter"
  },
  "-ms-flow-from": {
    "syntax": "[ none | <custom-ident> ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "nonReplacedElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-flow-from"
  },
  "-ms-flow-into": {
    "syntax": "[ none | <custom-ident> ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "iframeElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-flow-into"
  },
  "-ms-grid-columns": {
    "syntax": "none | <track-list> | <auto-track-list>",
    "media": "visual",
    "inherited": false,
    "animationType": "simpleListOfLpcDifferenceLpc",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "none",
    "appliesto": "gridContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-grid-columns"
  },
  "-ms-grid-rows": {
    "syntax": "none | <track-list> | <auto-track-list>",
    "media": "visual",
    "inherited": false,
    "animationType": "simpleListOfLpcDifferenceLpc",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "none",
    "appliesto": "gridContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-grid-rows"
  },
  "-ms-high-contrast-adjust": {
    "syntax": "auto | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-high-contrast-adjust"
  },
  "-ms-hyphenate-limit-chars": {
    "syntax": "auto | <integer>{1,3}",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-chars"
  },
  "-ms-hyphenate-limit-lines": {
    "syntax": "no-limit | <integer>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "no-limit",
    "appliesto": "blockContainerElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-lines"
  },
  "-ms-hyphenate-limit-zone": {
    "syntax": "<percentage> | <length>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "referToLineBoxWidth",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "0",
    "appliesto": "blockContainerElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-zone"
  },
  "-ms-ime-align": {
    "syntax": "auto | after",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-ime-align"
  },
  "-ms-overflow-style": {
    "syntax": "auto | none | scrollbar | -ms-autohiding-scrollbar",
    "media": "interactive",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-overflow-style"
  },
  "-ms-scrollbar-3dlight-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "dependsOnUserAgent",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-3dlight-color"
  },
  "-ms-scrollbar-arrow-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "ButtonText",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-arrow-color"
  },
  "-ms-scrollbar-base-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "dependsOnUserAgent",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-base-color"
  },
  "-ms-scrollbar-darkshadow-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "ThreeDDarkShadow",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-darkshadow-color"
  },
  "-ms-scrollbar-face-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "ThreeDFace",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-face-color"
  },
  "-ms-scrollbar-highlight-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "ThreeDHighlight",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-highlight-color"
  },
  "-ms-scrollbar-shadow-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "ThreeDDarkShadow",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-shadow-color"
  },
  "-ms-scrollbar-track-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "Scrollbar",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-track-color"
  },
  "-ms-scroll-chaining": {
    "syntax": "chained | none",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "chained",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-chaining"
  },
  "-ms-scroll-limit": {
    "syntax": "<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": [
      "-ms-scroll-limit-x-min",
      "-ms-scroll-limit-y-min",
      "-ms-scroll-limit-x-max",
      "-ms-scroll-limit-y-max"
    ],
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": [
      "-ms-scroll-limit-x-min",
      "-ms-scroll-limit-y-min",
      "-ms-scroll-limit-x-max",
      "-ms-scroll-limit-y-max"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit"
  },
  "-ms-scroll-limit-x-max": {
    "syntax": "auto | <length>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-x-max"
  },
  "-ms-scroll-limit-x-min": {
    "syntax": "<length>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "0",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-x-min"
  },
  "-ms-scroll-limit-y-max": {
    "syntax": "auto | <length>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-y-max"
  },
  "-ms-scroll-limit-y-min": {
    "syntax": "<length>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "0",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-y-min"
  },
  "-ms-scroll-rails": {
    "syntax": "none | railed",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "railed",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-rails"
  },
  "-ms-scroll-snap-points-x": {
    "syntax": "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "snapInterval(0px, 100%)",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-points-x"
  },
  "-ms-scroll-snap-points-y": {
    "syntax": "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "snapInterval(0px, 100%)",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-points-y"
  },
  "-ms-scroll-snap-type": {
    "syntax": "none | proximity | mandatory",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-type"
  },
  "-ms-scroll-snap-x": {
    "syntax": "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": [
      "-ms-scroll-snap-type",
      "-ms-scroll-snap-points-x"
    ],
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": [
      "-ms-scroll-snap-type",
      "-ms-scroll-snap-points-x"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-x"
  },
  "-ms-scroll-snap-y": {
    "syntax": "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": [
      "-ms-scroll-snap-type",
      "-ms-scroll-snap-points-y"
    ],
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": [
      "-ms-scroll-snap-type",
      "-ms-scroll-snap-points-y"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-y"
  },
  "-ms-scroll-translation": {
    "syntax": "none | vertical-to-horizontal",
    "media": "interactive",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-translation"
  },
  "-ms-text-autospace": {
    "syntax": "none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-text-autospace"
  },
  "-ms-touch-select": {
    "syntax": "grippers | none",
    "media": "interactive",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "grippers",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-touch-select"
  },
  "-ms-user-select": {
    "syntax": "none | element | text",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "text",
    "appliesto": "nonReplacedElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-user-select"
  },
  "-ms-wrap-flow": {
    "syntax": "auto | both | start | end | maximum | clear",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "auto",
    "appliesto": "blockLevelElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-flow"
  },
  "-ms-wrap-margin": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "0",
    "appliesto": "exclusionElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-margin"
  },
  "-ms-wrap-through": {
    "syntax": "wrap | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "wrap",
    "appliesto": "blockLevelElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-through"
  },
  "-moz-appearance": {
    "syntax": "none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "noneButOverriddenInUserAgentCSS",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/appearance"
  },
  "-moz-binding": {
    "syntax": "<url> | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElementsExceptGeneratedContentOrPseudoElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-binding"
  },
  "-moz-border-bottom-colors": {
    "syntax": "<color>+ | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-border-bottom-colors"
  },
  "-moz-border-left-colors": {
    "syntax": "<color>+ | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-border-left-colors"
  },
  "-moz-border-right-colors": {
    "syntax": "<color>+ | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-border-right-colors"
  },
  "-moz-border-top-colors": {
    "syntax": "<color>+ | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-border-top-colors"
  },
  "-moz-context-properties": {
    "syntax": "none | [ fill | fill-opacity | stroke | stroke-opacity ]#",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElementsThatCanReferenceImages",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-context-properties"
  },
  "-moz-float-edge": {
    "syntax": "border-box | content-box | margin-box | padding-box",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "content-box",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-float-edge"
  },
  "-moz-force-broken-image-icon": {
    "syntax": "<integer [0,1]>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "0",
    "appliesto": "images",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-force-broken-image-icon"
  },
  "-moz-image-region": {
    "syntax": "<shape> | auto",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "auto",
    "appliesto": "xulImageElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-image-region"
  },
  "-moz-orient": {
    "syntax": "inline | block | horizontal | vertical",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "inline",
    "appliesto": "anyElementEffectOnProgressAndMeter",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-orient"
  },
  "-moz-outline-radius": {
    "syntax": "<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "-moz-outline-radius-topleft",
      "-moz-outline-radius-topright",
      "-moz-outline-radius-bottomright",
      "-moz-outline-radius-bottomleft"
    ],
    "percentages": [
      "-moz-outline-radius-topleft",
      "-moz-outline-radius-topright",
      "-moz-outline-radius-bottomright",
      "-moz-outline-radius-bottomleft"
    ],
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": [
      "-moz-outline-radius-topleft",
      "-moz-outline-radius-topright",
      "-moz-outline-radius-bottomright",
      "-moz-outline-radius-bottomleft"
    ],
    "appliesto": "allElements",
    "computed": [
      "-moz-outline-radius-topleft",
      "-moz-outline-radius-topright",
      "-moz-outline-radius-bottomright",
      "-moz-outline-radius-bottomleft"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius"
  },
  "-moz-outline-radius-bottomleft": {
    "syntax": "<outline-radius>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomleft"
  },
  "-moz-outline-radius-bottomright": {
    "syntax": "<outline-radius>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomright"
  },
  "-moz-outline-radius-topleft": {
    "syntax": "<outline-radius>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topleft"
  },
  "-moz-outline-radius-topright": {
    "syntax": "<outline-radius>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topright"
  },
  "-moz-stack-sizing": {
    "syntax": "ignore | stretch-to-fit",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "stretch-to-fit",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-stack-sizing"
  },
  "-moz-text-blink": {
    "syntax": "none | blink",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-text-blink"
  },
  "-moz-user-focus": {
    "syntax": "ignore | normal | select-after | select-before | select-menu | select-same | select-all | none",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-user-focus"
  },
  "-moz-user-input": {
    "syntax": "auto | none | enabled | disabled",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-user-input"
  },
  "-moz-user-modify": {
    "syntax": "read-only | read-write | write-only",
    "media": "interactive",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "read-only",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-user-modify"
  },
  "-moz-window-dragging": {
    "syntax": "drag | no-drag",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "drag",
    "appliesto": "allElementsCreatingNativeWindows",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-window-dragging"
  },
  "-moz-window-shadow": {
    "syntax": "default | menu | tooltip | sheet | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "default",
    "appliesto": "allElementsCreatingNativeWindows",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-moz-window-shadow"
  },
  "-webkit-appearance": {
    "syntax": "none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "noneButOverriddenInUserAgentCSS",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/appearance"
  },
  "-webkit-border-before": {
    "syntax": "<'border-width'> || <'border-style'> || <'color'>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": [
      "-webkit-border-before-width"
    ],
    "groups": [
      "WebKit Extensions"
    ],
    "initial": [
      "border-width",
      "border-style",
      "color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-width",
      "border-style",
      "color"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-border-before"
  },
  "-webkit-border-before-color": {
    "syntax": "<'color'>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "nonstandard"
  },
  "-webkit-border-before-style": {
    "syntax": "<'border-style'>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard"
  },
  "-webkit-border-before-width": {
    "syntax": "<'border-width'>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "nonstandard"
  },
  "-webkit-box-reflect": {
    "syntax": "[ above | below | right | left ]? <length>? <image>?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-box-reflect"
  },
  "-webkit-line-clamp": {
    "syntax": "none | <integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "WebKit Extensions",
      "CSS Overflow"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-line-clamp"
  },
  "-webkit-mask": {
    "syntax": "[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": [
      "-webkit-mask-image",
      "-webkit-mask-repeat",
      "-webkit-mask-attachment",
      "-webkit-mask-position",
      "-webkit-mask-origin",
      "-webkit-mask-clip"
    ],
    "appliesto": "allElements",
    "computed": [
      "-webkit-mask-image",
      "-webkit-mask-repeat",
      "-webkit-mask-attachment",
      "-webkit-mask-position",
      "-webkit-mask-origin",
      "-webkit-mask-clip"
    ],
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask"
  },
  "-webkit-mask-attachment": {
    "syntax": "<attachment>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "scroll",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-attachment"
  },
  "-webkit-mask-clip": {
    "syntax": "[ <box> | border | padding | content | text ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "border",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-clip"
  },
  "-webkit-mask-composite": {
    "syntax": "<composite-style>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "source-over",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-composite"
  },
  "-webkit-mask-image": {
    "syntax": "<mask-reference>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "absoluteURIOrNone",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-image"
  },
  "-webkit-mask-origin": {
    "syntax": "[ <box> | border | padding | content ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "padding",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-origin"
  },
  "-webkit-mask-position": {
    "syntax": "<position>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToSizeOfElement",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "0% 0%",
    "appliesto": "allElements",
    "computed": "absoluteLengthOrPercentage",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-position"
  },
  "-webkit-mask-position-x": {
    "syntax": "[ <length-percentage> | left | center | right ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToSizeOfElement",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "0%",
    "appliesto": "allElements",
    "computed": "absoluteLengthOrPercentage",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-x"
  },
  "-webkit-mask-position-y": {
    "syntax": "[ <length-percentage> | top | center | bottom ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToSizeOfElement",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "0%",
    "appliesto": "allElements",
    "computed": "absoluteLengthOrPercentage",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-y"
  },
  "-webkit-mask-repeat": {
    "syntax": "<repeat-style>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "repeat",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-repeat"
  },
  "-webkit-mask-repeat-x": {
    "syntax": "repeat | no-repeat | space | round",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "repeat",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-x"
  },
  "-webkit-mask-repeat-y": {
    "syntax": "repeat | no-repeat | space | round",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "repeat",
    "appliesto": "allElements",
    "computed": "absoluteLengthOrPercentage",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-y"
  },
  "-webkit-mask-size": {
    "syntax": "<bg-size>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "relativeToBackgroundPositioningArea",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "auto auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-size"
  },
  "-webkit-overflow-scrolling": {
    "syntax": "auto | touch",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "auto",
    "appliesto": "scrollingBoxes",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-overflow-scrolling"
  },
  "-webkit-tap-highlight-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "black",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-tap-highlight-color"
  },
  "-webkit-text-fill-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-fill-color"
  },
  "-webkit-text-stroke": {
    "syntax": "<length> || <color>",
    "media": "visual",
    "inherited": true,
    "animationType": [
      "-webkit-text-stroke-width",
      "-webkit-text-stroke-color"
    ],
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": [
      "-webkit-text-stroke-width",
      "-webkit-text-stroke-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "-webkit-text-stroke-width",
      "-webkit-text-stroke-color"
    ],
    "order": "canonicalOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke"
  },
  "-webkit-text-stroke-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-color"
  },
  "-webkit-text-stroke-width": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "absoluteLength",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-width"
  },
  "-webkit-touch-callout": {
    "syntax": "default | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "default",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/-webkit-touch-callout"
  },
  "-webkit-user-modify": {
    "syntax": "read-only | read-write | read-write-plaintext-only",
    "media": "interactive",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "WebKit Extensions"
    ],
    "initial": "read-only",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard"
  },
  "align-content": {
    "syntax": "normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "normal",
    "appliesto": "multilineFlexContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/align-content"
  },
  "align-items": {
    "syntax": "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/align-items"
  },
  "align-self": {
    "syntax": "auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "auto",
    "appliesto": "flexItemsGridItemsAndAbsolutelyPositionedBoxes",
    "computed": "autoOnAbsolutelyPositionedElementsValueOfAlignItemsOnParent",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/align-self"
  },
  "align-tracks": {
    "syntax": "[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "normal",
    "appliesto": "gridContainersWithMasonryLayoutInTheirBlockAxis",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/align-tracks"
  },
  "all": {
    "syntax": "initial | inherit | unset | revert",
    "media": "noPracticalMedia",
    "inherited": false,
    "animationType": "eachOfShorthandPropertiesExceptUnicodeBiDiAndDirection",
    "percentages": "no",
    "groups": [
      "CSS Miscellaneous"
    ],
    "initial": "noPracticalInitialValue",
    "appliesto": "allElements",
    "computed": "asSpecifiedAppliesToEachProperty",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/all"
  },
  "animation": {
    "syntax": "<single-animation>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": [
      "animation-name",
      "animation-duration",
      "animation-timing-function",
      "animation-delay",
      "animation-iteration-count",
      "animation-direction",
      "animation-fill-mode",
      "animation-play-state"
    ],
    "appliesto": "allElementsAndPseudos",
    "computed": [
      "animation-name",
      "animation-duration",
      "animation-timing-function",
      "animation-delay",
      "animation-direction",
      "animation-iteration-count",
      "animation-fill-mode",
      "animation-play-state"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation"
  },
  "animation-delay": {
    "syntax": "<time>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "0s",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-delay"
  },
  "animation-direction": {
    "syntax": "<single-animation-direction>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "normal",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-direction"
  },
  "animation-duration": {
    "syntax": "<time>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "0s",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-duration"
  },
  "animation-fill-mode": {
    "syntax": "<single-animation-fill-mode>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "none",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode"
  },
  "animation-iteration-count": {
    "syntax": "<single-animation-iteration-count>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "1",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count"
  },
  "animation-name": {
    "syntax": "[ none | <keyframes-name> ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "none",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-name"
  },
  "animation-play-state": {
    "syntax": "<single-animation-play-state>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "running",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-play-state"
  },
  "animation-timing-function": {
    "syntax": "<timing-function>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Animations"
    ],
    "initial": "ease",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/animation-timing-function"
  },
  "appearance": {
    "syntax": "none | auto | textfield | menulist-button | <compat-auto>",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/appearance"
  },
  "aspect-ratio": {
    "syntax": "auto | <ratio>",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "auto",
    "appliesto": "allElementsExceptInlineBoxesAndInternalRubyOrTableBoxes",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/aspect-ratio"
  },
  "azimuth": {
    "syntax": "<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards",
    "media": "aural",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Speech"
    ],
    "initial": "center",
    "appliesto": "allElements",
    "computed": "normalizedAngle",
    "order": "orderOfAppearance",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/azimuth"
  },
  "backdrop-filter": {
    "syntax": "none | <filter-function-list>",
    "media": "visual",
    "inherited": false,
    "animationType": "filterList",
    "percentages": "no",
    "groups": [
      "Filter Effects"
    ],
    "initial": "none",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/backdrop-filter"
  },
  "backface-visibility": {
    "syntax": "visible | hidden",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "visible",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/backface-visibility"
  },
  "background": {
    "syntax": "[ <bg-layer> , ]* <final-bg-layer>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "background-color",
      "background-image",
      "background-clip",
      "background-position",
      "background-size",
      "background-repeat",
      "background-attachment"
    ],
    "percentages": [
      "background-position",
      "background-size"
    ],
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "background-image",
      "background-position",
      "background-size",
      "background-repeat",
      "background-origin",
      "background-clip",
      "background-attachment",
      "background-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "background-image",
      "background-position",
      "background-size",
      "background-repeat",
      "background-origin",
      "background-clip",
      "background-attachment",
      "background-color"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background"
  },
  "background-attachment": {
    "syntax": "<attachment>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "scroll",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-attachment"
  },
  "background-blend-mode": {
    "syntax": "<blend-mode>#",
    "media": "none",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Compositing and Blending"
    ],
    "initial": "normal",
    "appliesto": "allElementsSVGContainerGraphicsAndGraphicsReferencingElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-blend-mode"
  },
  "background-clip": {
    "syntax": "<box>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "border-box",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-clip"
  },
  "background-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "transparent",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-color"
  },
  "background-image": {
    "syntax": "<bg-image>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecifiedURLsAbsolute",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-image"
  },
  "background-origin": {
    "syntax": "<box>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "padding-box",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-origin"
  },
  "background-position": {
    "syntax": "<bg-position>#",
    "media": "visual",
    "inherited": false,
    "animationType": "repeatableListOfSimpleListOfLpc",
    "percentages": "referToSizeOfBackgroundPositioningAreaMinusBackgroundImageSize",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "0% 0%",
    "appliesto": "allElements",
    "computed": "listEachItemTwoKeywordsOriginOffsets",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-position"
  },
  "background-position-x": {
    "syntax": "[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToWidthOfBackgroundPositioningAreaMinusBackgroundImageHeight",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "left",
    "appliesto": "allElements",
    "computed": "listEachItemConsistingOfAbsoluteLengthPercentageAndOrigin",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-position-x"
  },
  "background-position-y": {
    "syntax": "[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToHeightOfBackgroundPositioningAreaMinusBackgroundImageHeight",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "top",
    "appliesto": "allElements",
    "computed": "listEachItemConsistingOfAbsoluteLengthPercentageAndOrigin",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-position-y"
  },
  "background-repeat": {
    "syntax": "<repeat-style>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "repeat",
    "appliesto": "allElements",
    "computed": "listEachItemHasTwoKeywordsOnePerDimension",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-repeat"
  },
  "background-size": {
    "syntax": "<bg-size>#",
    "media": "visual",
    "inherited": false,
    "animationType": "repeatableListOfSimpleListOfLpc",
    "percentages": "relativeToBackgroundPositioningArea",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "auto auto",
    "appliesto": "allElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/background-size"
  },
  "block-overflow": {
    "syntax": "clip | ellipsis | <string>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "clip",
    "appliesto": "blockContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "experimental"
  },
  "block-size": {
    "syntax": "<'width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "blockSizeOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "sameAsWidthAndHeight",
    "computed": "sameAsWidthAndHeight",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/block-size"
  },
  "border": {
    "syntax": "<line-width> || <line-style> || <color>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-color",
      "border-style",
      "border-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-width",
      "border-style",
      "border-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-width",
      "border-style",
      "border-color"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border"
  },
  "border-block": {
    "syntax": "<'border-top-width'> || <'border-top-style'> || <'color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block"
  },
  "border-block-color": {
    "syntax": "<'border-top-color'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-color"
  },
  "border-block-style": {
    "syntax": "<'border-top-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-style"
  },
  "border-block-width": {
    "syntax": "<'border-top-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-width"
  },
  "border-block-end": {
    "syntax": "<'border-top-width'> || <'border-top-style'> || <'color'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-block-end-color",
      "border-block-end-style",
      "border-block-end-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-end"
  },
  "border-block-end-color": {
    "syntax": "<'border-top-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-end-color"
  },
  "border-block-end-style": {
    "syntax": "<'border-top-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-end-style"
  },
  "border-block-end-width": {
    "syntax": "<'border-top-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-end-width"
  },
  "border-block-start": {
    "syntax": "<'border-top-width'> || <'border-top-style'> || <'color'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-block-start-color",
      "border-block-start-style",
      "border-block-start-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": [
      "border-width",
      "border-style",
      "color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-width",
      "border-style",
      "border-block-start-color"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-start"
  },
  "border-block-start-color": {
    "syntax": "<'border-top-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-start-color"
  },
  "border-block-start-style": {
    "syntax": "<'border-top-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-start-style"
  },
  "border-block-start-width": {
    "syntax": "<'border-top-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-block-start-width"
  },
  "border-bottom": {
    "syntax": "<line-width> || <line-style> || <color>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-bottom-color",
      "border-bottom-style",
      "border-bottom-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-bottom-width",
      "border-bottom-style",
      "border-bottom-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-bottom-width",
      "border-bottom-style",
      "border-bottom-color"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-bottom"
  },
  "border-bottom-color": {
    "syntax": "<'border-top-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-bottom-color"
  },
  "border-bottom-left-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius"
  },
  "border-bottom-right-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius"
  },
  "border-bottom-style": {
    "syntax": "<line-style>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-bottom-style"
  },
  "border-bottom-width": {
    "syntax": "<line-width>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthOr0IfBorderBottomStyleNoneOrHidden",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-bottom-width"
  },
  "border-collapse": {
    "syntax": "collapse | separate",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Table"
    ],
    "initial": "separate",
    "appliesto": "tableElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-collapse"
  },
  "border-color": {
    "syntax": "<color>{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-bottom-color",
      "border-left-color",
      "border-right-color",
      "border-top-color"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-top-color",
      "border-right-color",
      "border-bottom-color",
      "border-left-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-bottom-color",
      "border-left-color",
      "border-right-color",
      "border-top-color"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-color"
  },
  "border-end-end-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius"
  },
  "border-end-start-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius"
  },
  "border-image": {
    "syntax": "<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": [
      "border-image-slice",
      "border-image-width"
    ],
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-image-source",
      "border-image-slice",
      "border-image-width",
      "border-image-outset",
      "border-image-repeat"
    ],
    "appliesto": "allElementsExceptTableElementsWhenCollapse",
    "computed": [
      "border-image-outset",
      "border-image-repeat",
      "border-image-slice",
      "border-image-source",
      "border-image-width"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-image"
  },
  "border-image-outset": {
    "syntax": "[ <length> | <number> ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptTableElementsWhenCollapse",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-image-outset"
  },
  "border-image-repeat": {
    "syntax": "[ stretch | repeat | round | space ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "stretch",
    "appliesto": "allElementsExceptTableElementsWhenCollapse",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-image-repeat"
  },
  "border-image-slice": {
    "syntax": "<number-percentage>{1,4} && fill?",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "referToSizeOfBorderImage",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "100%",
    "appliesto": "allElementsExceptTableElementsWhenCollapse",
    "computed": "oneToFourPercentagesOrAbsoluteLengthsPlusFill",
    "order": "percentagesOrLengthsFollowedByFill",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-image-slice"
  },
  "border-image-source": {
    "syntax": "none | <image>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElementsExceptTableElementsWhenCollapse",
    "computed": "noneOrImageWithAbsoluteURI",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-image-source"
  },
  "border-image-width": {
    "syntax": "[ <length-percentage> | <number> | auto ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "referToWidthOrHeightOfBorderImageArea",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "1",
    "appliesto": "allElementsExceptTableElementsWhenCollapse",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-image-width"
  },
  "border-inline": {
    "syntax": "<'border-top-width'> || <'border-top-style'> || <'color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline"
  },
  "border-inline-end": {
    "syntax": "<'border-top-width'> || <'border-top-style'> || <'color'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-inline-end-color",
      "border-inline-end-style",
      "border-inline-end-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": [
      "border-width",
      "border-style",
      "color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-width",
      "border-style",
      "border-inline-end-color"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-end"
  },
  "border-inline-color": {
    "syntax": "<'border-top-color'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-color"
  },
  "border-inline-style": {
    "syntax": "<'border-top-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-style"
  },
  "border-inline-width": {
    "syntax": "<'border-top-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-width"
  },
  "border-inline-end-color": {
    "syntax": "<'border-top-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color"
  },
  "border-inline-end-style": {
    "syntax": "<'border-top-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style"
  },
  "border-inline-end-width": {
    "syntax": "<'border-top-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width"
  },
  "border-inline-start": {
    "syntax": "<'border-top-width'> || <'border-top-style'> || <'color'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-inline-start-color",
      "border-inline-start-style",
      "border-inline-start-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": [
      "border-width",
      "border-style",
      "color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-width",
      "border-style",
      "border-inline-start-color"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-start"
  },
  "border-inline-start-color": {
    "syntax": "<'border-top-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color"
  },
  "border-inline-start-style": {
    "syntax": "<'border-top-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style"
  },
  "border-inline-start-width": {
    "syntax": "<'border-top-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthZeroIfBorderStyleNoneOrHidden",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width"
  },
  "border-left": {
    "syntax": "<line-width> || <line-style> || <color>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-left-color",
      "border-left-style",
      "border-left-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-left-width",
      "border-left-style",
      "border-left-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-left-width",
      "border-left-style",
      "border-left-color"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-left"
  },
  "border-left-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-left-color"
  },
  "border-left-style": {
    "syntax": "<line-style>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-left-style"
  },
  "border-left-width": {
    "syntax": "<line-width>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthOr0IfBorderLeftStyleNoneOrHidden",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-left-width"
  },
  "border-radius": {
    "syntax": "<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-top-left-radius",
      "border-top-right-radius",
      "border-bottom-right-radius",
      "border-bottom-left-radius"
    ],
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-top-left-radius",
      "border-top-right-radius",
      "border-bottom-right-radius",
      "border-bottom-left-radius"
    ],
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": [
      "border-bottom-left-radius",
      "border-bottom-right-radius",
      "border-top-left-radius",
      "border-top-right-radius"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-radius"
  },
  "border-right": {
    "syntax": "<line-width> || <line-style> || <color>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-right-color",
      "border-right-style",
      "border-right-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-right-width",
      "border-right-style",
      "border-right-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-right-width",
      "border-right-style",
      "border-right-color"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-right"
  },
  "border-right-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-right-color"
  },
  "border-right-style": {
    "syntax": "<line-style>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-right-style"
  },
  "border-right-width": {
    "syntax": "<line-width>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthOr0IfBorderRightStyleNoneOrHidden",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-right-width"
  },
  "border-spacing": {
    "syntax": "<length> <length>?",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Table"
    ],
    "initial": "0",
    "appliesto": "tableElements",
    "computed": "twoAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-spacing"
  },
  "border-start-end-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius"
  },
  "border-start-start-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius"
  },
  "border-style": {
    "syntax": "<line-style>{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-top-style",
      "border-right-style",
      "border-bottom-style",
      "border-left-style"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-bottom-style",
      "border-left-style",
      "border-right-style",
      "border-top-style"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-style"
  },
  "border-top": {
    "syntax": "<line-width> || <line-style> || <color>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-top-color",
      "border-top-style",
      "border-top-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-top-width",
      "border-top-style",
      "border-top-color"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-top"
  },
  "border-top-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-top-color"
  },
  "border-top-left-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius"
  },
  "border-top-right-radius": {
    "syntax": "<length-percentage>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfBorderBox",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "0",
    "appliesto": "allElementsUAsNotRequiredWhenCollapse",
    "computed": "twoAbsoluteLengthOrPercentages",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius"
  },
  "border-top-style": {
    "syntax": "<line-style>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-top-style"
  },
  "border-top-width": {
    "syntax": "<line-width>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLengthOr0IfBorderTopStyleNoneOrHidden",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-top-width"
  },
  "border-width": {
    "syntax": "<line-width>{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "border-bottom-width",
      "border-left-width",
      "border-right-width",
      "border-top-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": [
      "border-top-width",
      "border-right-width",
      "border-bottom-width",
      "border-left-width"
    ],
    "appliesto": "allElements",
    "computed": [
      "border-bottom-width",
      "border-left-width",
      "border-right-width",
      "border-top-width"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/border-width"
  },
  "bottom": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToContainingBlockHeight",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/bottom"
  },
  "box-align": {
    "syntax": "start | center | end | baseline | stretch",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "stretch",
    "appliesto": "elementsWithDisplayBoxOrInlineBox",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-align"
  },
  "box-decoration-break": {
    "syntax": "slice | clone",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fragmentation"
    ],
    "initial": "slice",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-decoration-break"
  },
  "box-direction": {
    "syntax": "normal | reverse | inherit",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "normal",
    "appliesto": "elementsWithDisplayBoxOrInlineBox",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-direction"
  },
  "box-flex": {
    "syntax": "<number>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "0",
    "appliesto": "directChildrenOfElementsWithDisplayMozBoxMozInlineBox",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-flex"
  },
  "box-flex-group": {
    "syntax": "<integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "1",
    "appliesto": "inFlowChildrenOfBoxElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-flex-group"
  },
  "box-lines": {
    "syntax": "single | multiple",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "single",
    "appliesto": "boxElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-lines"
  },
  "box-ordinal-group": {
    "syntax": "<integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "1",
    "appliesto": "childrenOfBoxElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-ordinal-group"
  },
  "box-orient": {
    "syntax": "horizontal | vertical | inline-axis | block-axis | inherit",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "inlineAxisHorizontalInXUL",
    "appliesto": "elementsWithDisplayBoxOrInlineBox",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-orient"
  },
  "box-pack": {
    "syntax": "start | center | end | justify",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions",
      "WebKit Extensions"
    ],
    "initial": "start",
    "appliesto": "elementsWithDisplayMozBoxMozInlineBox",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-pack"
  },
  "box-shadow": {
    "syntax": "none | <shadow>#",
    "media": "visual",
    "inherited": false,
    "animationType": "shadowList",
    "percentages": "no",
    "groups": [
      "CSS Backgrounds and Borders"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "absoluteLengthsSpecifiedColorAsSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-shadow"
  },
  "box-sizing": {
    "syntax": "content-box | border-box",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "content-box",
    "appliesto": "allElementsAcceptingWidthOrHeight",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/box-sizing"
  },
  "break-after": {
    "syntax": "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fragmentation"
    ],
    "initial": "auto",
    "appliesto": "blockLevelElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/break-after"
  },
  "break-before": {
    "syntax": "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fragmentation"
    ],
    "initial": "auto",
    "appliesto": "blockLevelElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/break-before"
  },
  "break-inside": {
    "syntax": "auto | avoid | avoid-page | avoid-column | avoid-region",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fragmentation"
    ],
    "initial": "auto",
    "appliesto": "blockLevelElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/break-inside"
  },
  "caption-side": {
    "syntax": "top | bottom | block-start | block-end | inline-start | inline-end",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Table"
    ],
    "initial": "top",
    "appliesto": "tableCaptionElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/caption-side"
  },
  "caret-color": {
    "syntax": "auto | <color>",
    "media": "interactive",
    "inherited": true,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asAutoOrColor",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/caret-color"
  },
  "clear": {
    "syntax": "none | left | right | both | inline-start | inline-end",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "none",
    "appliesto": "blockLevelElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/clear"
  },
  "clip": {
    "syntax": "<shape> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "rectangle",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "auto",
    "appliesto": "absolutelyPositionedElements",
    "computed": "autoOrRectangle",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/clip"
  },
  "clip-path": {
    "syntax": "<clip-source> | [ <basic-shape> || <geometry-box> ] | none",
    "media": "visual",
    "inherited": false,
    "animationType": "basicShapeOtherwiseNo",
    "percentages": "referToReferenceBoxWhenSpecifiedOtherwiseBorderBox",
    "groups": [
      "CSS Masking"
    ],
    "initial": "none",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecifiedURLsAbsolute",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/clip-path"
  },
  "color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": true,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Color"
    ],
    "initial": "variesFromBrowserToBrowser",
    "appliesto": "allElements",
    "computed": "translucentValuesRGBAOtherwiseRGB",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/color"
  },
  "color-adjust": {
    "syntax": "economy | exact",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Color"
    ],
    "initial": "economy",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/color-adjust"
  },
  "column-count": {
    "syntax": "<integer> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "integer",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "auto",
    "appliesto": "blockContainersExceptTableWrappers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-count"
  },
  "column-fill": {
    "syntax": "auto | balance | balance-all",
    "media": "visualInContinuousMediaNoEffectInOverflowColumns",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "balance",
    "appliesto": "multicolElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-fill"
  },
  "column-gap": {
    "syntax": "normal | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "normal",
    "appliesto": "multiColumnElementsFlexContainersGridContainers",
    "computed": "asSpecifiedWithLengthsAbsoluteAndNormalComputingToZeroExceptMultiColumn",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-gap"
  },
  "column-rule": {
    "syntax": "<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "column-rule-color",
      "column-rule-style",
      "column-rule-width"
    ],
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": [
      "column-rule-width",
      "column-rule-style",
      "column-rule-color"
    ],
    "appliesto": "multicolElements",
    "computed": [
      "column-rule-color",
      "column-rule-style",
      "column-rule-width"
    ],
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-rule"
  },
  "column-rule-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "currentcolor",
    "appliesto": "multicolElements",
    "computed": "computedColor",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-rule-color"
  },
  "column-rule-style": {
    "syntax": "<'border-style'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "none",
    "appliesto": "multicolElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-rule-style"
  },
  "column-rule-width": {
    "syntax": "<'border-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "medium",
    "appliesto": "multicolElements",
    "computed": "absoluteLength0IfColumnRuleStyleNoneOrHidden",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-rule-width"
  },
  "column-span": {
    "syntax": "none | all",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "none",
    "appliesto": "inFlowBlockLevelElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-span"
  },
  "column-width": {
    "syntax": "<length> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": "auto",
    "appliesto": "blockContainersExceptTableWrappers",
    "computed": "absoluteLengthZeroOrLarger",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-width"
  },
  "columns": {
    "syntax": "<'column-width'> || <'column-count'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "column-width",
      "column-count"
    ],
    "percentages": "no",
    "groups": [
      "CSS Columns"
    ],
    "initial": [
      "column-width",
      "column-count"
    ],
    "appliesto": "blockContainersExceptTableWrappers",
    "computed": [
      "column-width",
      "column-count"
    ],
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/columns"
  },
  "contain": {
    "syntax": "none | strict | content | [ size || layout || style || paint ]",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Containment"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/contain"
  },
  "content": {
    "syntax": "normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Generated Content"
    ],
    "initial": "normal",
    "appliesto": "beforeAndAfterPseudos",
    "computed": "normalOnElementsForPseudosNoneAbsoluteURIStringOrAsSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/content"
  },
  "counter-increment": {
    "syntax": "[ <custom-ident> <integer>? ]+ | none",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Counter Styles"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/counter-increment"
  },
  "counter-reset": {
    "syntax": "[ <custom-ident> <integer>? ]+ | none",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Counter Styles"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/counter-reset"
  },
  "counter-set": {
    "syntax": "[ <custom-ident> <integer>? ]+ | none",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Counter Styles"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/counter-set"
  },
  "cursor": {
    "syntax": "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]",
    "media": [
      "visual",
      "interactive"
    ],
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecifiedURLsAbsolute",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/cursor"
  },
  "direction": {
    "syntax": "ltr | rtl",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Writing Modes"
    ],
    "initial": "ltr",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/direction"
  },
  "display": {
    "syntax": "[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Display"
    ],
    "initial": "inline",
    "appliesto": "allElements",
    "computed": "asSpecifiedExceptPositionedFloatingAndRootElementsKeywordMaybeDifferent",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/display"
  },
  "empty-cells": {
    "syntax": "show | hide",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Table"
    ],
    "initial": "show",
    "appliesto": "tableCellElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/empty-cells"
  },
  "filter": {
    "syntax": "none | <filter-function-list>",
    "media": "visual",
    "inherited": false,
    "animationType": "filterList",
    "percentages": "no",
    "groups": [
      "Filter Effects"
    ],
    "initial": "none",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/filter"
  },
  "flex": {
    "syntax": "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "flex-grow",
      "flex-shrink",
      "flex-basis"
    ],
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": [
      "flex-grow",
      "flex-shrink",
      "flex-basis"
    ],
    "appliesto": "flexItemsAndInFlowPseudos",
    "computed": [
      "flex-grow",
      "flex-shrink",
      "flex-basis"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex"
  },
  "flex-basis": {
    "syntax": "content | <'width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToFlexContainersInnerMainSize",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": "auto",
    "appliesto": "flexItemsAndInFlowPseudos",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "lengthOrPercentageBeforeKeywordIfBothPresent",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex-basis"
  },
  "flex-direction": {
    "syntax": "row | row-reverse | column | column-reverse",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": "row",
    "appliesto": "flexContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex-direction"
  },
  "flex-flow": {
    "syntax": "<'flex-direction'> || <'flex-wrap'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": [
      "flex-direction",
      "flex-wrap"
    ],
    "appliesto": "flexContainers",
    "computed": [
      "flex-direction",
      "flex-wrap"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex-flow"
  },
  "flex-grow": {
    "syntax": "<number>",
    "media": "visual",
    "inherited": false,
    "animationType": "number",
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": "0",
    "appliesto": "flexItemsAndInFlowPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex-grow"
  },
  "flex-shrink": {
    "syntax": "<number>",
    "media": "visual",
    "inherited": false,
    "animationType": "number",
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": "1",
    "appliesto": "flexItemsAndInFlowPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex-shrink"
  },
  "flex-wrap": {
    "syntax": "nowrap | wrap | wrap-reverse",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": "nowrap",
    "appliesto": "flexContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/flex-wrap"
  },
  "float": {
    "syntax": "left | right | none | inline-start | inline-end",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "none",
    "appliesto": "allElementsNoEffectIfDisplayNone",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/float"
  },
  "font": {
    "syntax": "[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar",
    "media": "visual",
    "inherited": true,
    "animationType": [
      "font-style",
      "font-variant",
      "font-weight",
      "font-stretch",
      "font-size",
      "line-height",
      "font-family"
    ],
    "percentages": [
      "font-size",
      "line-height"
    ],
    "groups": [
      "CSS Fonts"
    ],
    "initial": [
      "font-style",
      "font-variant",
      "font-weight",
      "font-stretch",
      "font-size",
      "line-height",
      "font-family"
    ],
    "appliesto": "allElements",
    "computed": [
      "font-style",
      "font-variant",
      "font-weight",
      "font-stretch",
      "font-size",
      "line-height",
      "font-family"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font"
  },
  "font-family": {
    "syntax": "[ <family-name> | <generic-family> ]#",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "dependsOnUserAgent",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-family"
  },
  "font-feature-settings": {
    "syntax": "normal | <feature-tag-value>#",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-feature-settings"
  },
  "font-kerning": {
    "syntax": "auto | normal | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-kerning"
  },
  "font-language-override": {
    "syntax": "normal | <string>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-language-override"
  },
  "font-optical-sizing": {
    "syntax": "auto | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing"
  },
  "font-variation-settings": {
    "syntax": "normal | [ <string> <number> ]#",
    "media": "visual",
    "inherited": true,
    "animationType": "transform",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variation-settings"
  },
  "font-size": {
    "syntax": "<absolute-size> | <relative-size> | <length-percentage>",
    "media": "visual",
    "inherited": true,
    "animationType": "length",
    "percentages": "referToParentElementsFontSize",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-size"
  },
  "font-size-adjust": {
    "syntax": "none | <number>",
    "media": "visual",
    "inherited": true,
    "animationType": "number",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-size-adjust"
  },
  "font-smooth": {
    "syntax": "auto | never | always | <absolute-size> | <length>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-smooth"
  },
  "font-stretch": {
    "syntax": "<font-stretch-absolute>",
    "media": "visual",
    "inherited": true,
    "animationType": "fontStretch",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-stretch"
  },
  "font-style": {
    "syntax": "normal | italic | oblique <angle>?",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-style"
  },
  "font-synthesis": {
    "syntax": "none | [ weight || style ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "weight style",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-synthesis"
  },
  "font-variant": {
    "syntax": "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant"
  },
  "font-variant-alternates": {
    "syntax": "normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates"
  },
  "font-variant-caps": {
    "syntax": "normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant-caps"
  },
  "font-variant-east-asian": {
    "syntax": "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian"
  },
  "font-variant-ligatures": {
    "syntax": "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures"
  },
  "font-variant-numeric": {
    "syntax": "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric"
  },
  "font-variant-position": {
    "syntax": "normal | sub | super",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-variant-position"
  },
  "font-weight": {
    "syntax": "<font-weight-absolute> | bolder | lighter",
    "media": "visual",
    "inherited": true,
    "animationType": "fontWeight",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "keywordOrNumericalValueBolderLighterTransformedToRealValue",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/font-weight"
  },
  "gap": {
    "syntax": "<'row-gap'> <'column-gap'>?",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "row-gap",
      "column-gap"
    ],
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": [
      "row-gap",
      "column-gap"
    ],
    "appliesto": "multiColumnElementsFlexContainersGridContainers",
    "computed": [
      "row-gap",
      "column-gap"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/gap"
  },
  "grid": {
    "syntax": "<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": [
      "grid-template-rows",
      "grid-template-columns",
      "grid-auto-rows",
      "grid-auto-columns"
    ],
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": [
      "grid-template-rows",
      "grid-template-columns",
      "grid-template-areas",
      "grid-auto-rows",
      "grid-auto-columns",
      "grid-auto-flow",
      "grid-column-gap",
      "grid-row-gap",
      "column-gap",
      "row-gap"
    ],
    "appliesto": "gridContainers",
    "computed": [
      "grid-template-rows",
      "grid-template-columns",
      "grid-template-areas",
      "grid-auto-rows",
      "grid-auto-columns",
      "grid-auto-flow",
      "grid-column-gap",
      "grid-row-gap",
      "column-gap",
      "row-gap"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid"
  },
  "grid-area": {
    "syntax": "<grid-line> [ / <grid-line> ]{0,3}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": [
      "grid-row-start",
      "grid-column-start",
      "grid-row-end",
      "grid-column-end"
    ],
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": [
      "grid-row-start",
      "grid-column-start",
      "grid-row-end",
      "grid-column-end"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-area"
  },
  "grid-auto-columns": {
    "syntax": "<track-size>+",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "auto",
    "appliesto": "gridContainers",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns"
  },
  "grid-auto-flow": {
    "syntax": "[ row | column ] || dense",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "row",
    "appliesto": "gridContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow"
  },
  "grid-auto-rows": {
    "syntax": "<track-size>+",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "auto",
    "appliesto": "gridContainers",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows"
  },
  "grid-column": {
    "syntax": "<grid-line> [ / <grid-line> ]?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": [
      "grid-column-start",
      "grid-column-end"
    ],
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": [
      "grid-column-start",
      "grid-column-end"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-column"
  },
  "grid-column-end": {
    "syntax": "<grid-line>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "auto",
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-column-end"
  },
  "grid-column-gap": {
    "syntax": "<length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "0",
    "appliesto": "gridContainers",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/column-gap"
  },
  "grid-column-start": {
    "syntax": "<grid-line>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "auto",
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-column-start"
  },
  "grid-gap": {
    "syntax": "<'grid-row-gap'> <'grid-column-gap'>?",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "grid-row-gap",
      "grid-column-gap"
    ],
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": [
      "grid-row-gap",
      "grid-column-gap"
    ],
    "appliesto": "gridContainers",
    "computed": [
      "grid-row-gap",
      "grid-column-gap"
    ],
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/gap"
  },
  "grid-row": {
    "syntax": "<grid-line> [ / <grid-line> ]?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": [
      "grid-row-start",
      "grid-row-end"
    ],
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": [
      "grid-row-start",
      "grid-row-end"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-row"
  },
  "grid-row-end": {
    "syntax": "<grid-line>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "auto",
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-row-end"
  },
  "grid-row-gap": {
    "syntax": "<length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "0",
    "appliesto": "gridContainers",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/row-gap"
  },
  "grid-row-start": {
    "syntax": "<grid-line>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "auto",
    "appliesto": "gridItemsAndBoxesWithinGridContainer",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-row-start"
  },
  "grid-template": {
    "syntax": "none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": [
      "grid-template-columns",
      "grid-template-rows"
    ],
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": [
      "grid-template-columns",
      "grid-template-rows",
      "grid-template-areas"
    ],
    "appliesto": "gridContainers",
    "computed": [
      "grid-template-columns",
      "grid-template-rows",
      "grid-template-areas"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-template"
  },
  "grid-template-areas": {
    "syntax": "none | <string>+",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "none",
    "appliesto": "gridContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-template-areas"
  },
  "grid-template-columns": {
    "syntax": "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
    "media": "visual",
    "inherited": false,
    "animationType": "simpleListOfLpcDifferenceLpc",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "none",
    "appliesto": "gridContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-template-columns"
  },
  "grid-template-rows": {
    "syntax": "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
    "media": "visual",
    "inherited": false,
    "animationType": "simpleListOfLpcDifferenceLpc",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "none",
    "appliesto": "gridContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/grid-template-rows"
  },
  "hanging-punctuation": {
    "syntax": "none | [ first || [ force-end | allow-end ] || last ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation"
  },
  "height": {
    "syntax": "auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "regardingHeightOfGeneratedBoxContainingBlockPercentagesRelativeToContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "allElementsButNonReplacedAndTableColumns",
    "computed": "percentageAutoOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/height"
  },
  "hyphens": {
    "syntax": "none | manual | auto",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "manual",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/hyphens"
  },
  "image-orientation": {
    "syntax": "from-image | <angle> | [ <angle>? flip ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Images"
    ],
    "initial": "from-image",
    "appliesto": "allElements",
    "computed": "angleRoundedToNextQuarter",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/image-orientation"
  },
  "image-rendering": {
    "syntax": "auto | crisp-edges | pixelated",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Images"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/image-rendering"
  },
  "image-resolution": {
    "syntax": "[ from-image || <resolution> ] && snap?",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Images"
    ],
    "initial": "1dppx",
    "appliesto": "allElements",
    "computed": "asSpecifiedWithExceptionOfResolution",
    "order": "uniqueOrder",
    "status": "experimental"
  },
  "ime-mode": {
    "syntax": "auto | normal | active | inactive | disabled",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "auto",
    "appliesto": "textFields",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/ime-mode"
  },
  "initial-letter": {
    "syntax": "normal | [ <number> <integer>? ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Inline"
    ],
    "initial": "normal",
    "appliesto": "firstLetterPseudoElementsAndInlineLevelFirstChildren",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/initial-letter"
  },
  "initial-letter-align": {
    "syntax": "[ auto | alphabetic | hanging | ideographic ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Inline"
    ],
    "initial": "auto",
    "appliesto": "firstLetterPseudoElementsAndInlineLevelFirstChildren",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/initial-letter-align"
  },
  "inline-size": {
    "syntax": "<'width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "inlineSizeOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "sameAsWidthAndHeight",
    "computed": "sameAsWidthAndHeight",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inline-size"
  },
  "inset": {
    "syntax": "<'top'>{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalHeightOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset"
  },
  "inset-block": {
    "syntax": "<'top'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalHeightOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset-block"
  },
  "inset-block-end": {
    "syntax": "<'top'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalHeightOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset-block-end"
  },
  "inset-block-start": {
    "syntax": "<'top'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalHeightOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset-block-start"
  },
  "inset-inline": {
    "syntax": "<'top'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset-inline"
  },
  "inset-inline-end": {
    "syntax": "<'top'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset-inline-end"
  },
  "inset-inline-start": {
    "syntax": "<'top'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "sameAsBoxOffsets",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/inset-inline-start"
  },
  "isolation": {
    "syntax": "auto | isolate",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Compositing and Blending"
    ],
    "initial": "auto",
    "appliesto": "allElementsSVGContainerGraphicsAndGraphicsReferencingElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/isolation"
  },
  "justify-content": {
    "syntax": "normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "normal",
    "appliesto": "flexContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/justify-content"
  },
  "justify-items": {
    "syntax": "normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "legacy",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/justify-items"
  },
  "justify-self": {
    "syntax": "auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "auto",
    "appliesto": "blockLevelBoxesAndAbsolutelyPositionedBoxesAndGridItems",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/justify-self"
  },
  "justify-tracks": {
    "syntax": "[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "normal",
    "appliesto": "gridContainersWithMasonryLayoutInTheirInlineAxis",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/justify-tracks"
  },
  "left": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/left"
  },
  "letter-spacing": {
    "syntax": "normal | <length>",
    "media": "visual",
    "inherited": true,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "optimumValueOfAbsoluteLengthOrNormal",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/letter-spacing"
  },
  "line-break": {
    "syntax": "auto | loose | normal | strict | anywhere",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/line-break"
  },
  "line-clamp": {
    "syntax": "none | <integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "integer",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "none",
    "appliesto": "blockContainersExceptMultiColumnContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "experimental"
  },
  "line-height": {
    "syntax": "normal | <number> | <length> | <percentage>",
    "media": "visual",
    "inherited": true,
    "animationType": "numberOrLength",
    "percentages": "referToElementFontSize",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "absoluteLengthOrAsSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/line-height"
  },
  "line-height-step": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fonts"
    ],
    "initial": "0",
    "appliesto": "blockContainers",
    "computed": "absoluteLength",
    "order": "perGrammar",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/line-height-step"
  },
  "list-style": {
    "syntax": "<'list-style-type'> || <'list-style-position'> || <'list-style-image'>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Lists and Counters"
    ],
    "initial": [
      "list-style-type",
      "list-style-position",
      "list-style-image"
    ],
    "appliesto": "listItems",
    "computed": [
      "list-style-image",
      "list-style-position",
      "list-style-type"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/list-style"
  },
  "list-style-image": {
    "syntax": "<url> | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Lists and Counters"
    ],
    "initial": "none",
    "appliesto": "listItems",
    "computed": "noneOrImageWithAbsoluteURI",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/list-style-image"
  },
  "list-style-position": {
    "syntax": "inside | outside",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Lists and Counters"
    ],
    "initial": "outside",
    "appliesto": "listItems",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/list-style-position"
  },
  "list-style-type": {
    "syntax": "<counter-style> | <string> | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Lists and Counters"
    ],
    "initial": "disc",
    "appliesto": "listItems",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/list-style-type"
  },
  "margin": {
    "syntax": "[ <length> | <percentage> | auto ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": [
      "margin-bottom",
      "margin-left",
      "margin-right",
      "margin-top"
    ],
    "appliesto": "allElementsExceptTableDisplayTypes",
    "computed": [
      "margin-bottom",
      "margin-left",
      "margin-right",
      "margin-top"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin"
  },
  "margin-block": {
    "syntax": "<'margin-left'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "dependsOnLayoutModel",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsMargin",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-block"
  },
  "margin-block-end": {
    "syntax": "<'margin-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "dependsOnLayoutModel",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsMargin",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-block-end"
  },
  "margin-block-start": {
    "syntax": "<'margin-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "dependsOnLayoutModel",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsMargin",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-block-start"
  },
  "margin-bottom": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-bottom"
  },
  "margin-inline": {
    "syntax": "<'margin-left'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "dependsOnLayoutModel",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsMargin",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-inline"
  },
  "margin-inline-end": {
    "syntax": "<'margin-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "dependsOnLayoutModel",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsMargin",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-inline-end"
  },
  "margin-inline-start": {
    "syntax": "<'margin-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "dependsOnLayoutModel",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsMargin",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-inline-start"
  },
  "margin-left": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-left"
  },
  "margin-right": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-right"
  },
  "margin-top": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-top"
  },
  "margin-trim": {
    "syntax": "none | in-flow | all",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "none",
    "appliesto": "blockContainersAndMultiColumnContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/margin-trim"
  },
  "mask": {
    "syntax": "<mask-layer>#",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "mask-image",
      "mask-mode",
      "mask-repeat",
      "mask-position",
      "mask-clip",
      "mask-origin",
      "mask-size",
      "mask-composite"
    ],
    "percentages": [
      "mask-position"
    ],
    "groups": [
      "CSS Masking"
    ],
    "initial": [
      "mask-image",
      "mask-mode",
      "mask-repeat",
      "mask-position",
      "mask-clip",
      "mask-origin",
      "mask-size",
      "mask-composite"
    ],
    "appliesto": "allElementsSVGContainerElements",
    "computed": [
      "mask-image",
      "mask-mode",
      "mask-repeat",
      "mask-position",
      "mask-clip",
      "mask-origin",
      "mask-size",
      "mask-composite"
    ],
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask"
  },
  "mask-border": {
    "syntax": "<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "mask-border-mode",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width"
    ],
    "percentages": [
      "mask-border-slice",
      "mask-border-width"
    ],
    "groups": [
      "CSS Masking"
    ],
    "initial": [
      "mask-border-mode",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width"
    ],
    "appliesto": "allElementsSVGContainerElements",
    "computed": [
      "mask-border-mode",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width"
    ],
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border"
  },
  "mask-border-mode": {
    "syntax": "luminance | alpha",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "alpha",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border-mode"
  },
  "mask-border-outset": {
    "syntax": "[ <length> | <number> ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "0",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border-outset"
  },
  "mask-border-repeat": {
    "syntax": "[ stretch | repeat | round | space ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "stretch",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat"
  },
  "mask-border-slice": {
    "syntax": "<number-percentage>{1,4} fill?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "referToSizeOfMaskBorderImage",
    "groups": [
      "CSS Masking"
    ],
    "initial": "0",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border-slice"
  },
  "mask-border-source": {
    "syntax": "none | <image>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "none",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecifiedURLsAbsolute",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border-source"
  },
  "mask-border-width": {
    "syntax": "[ <length-percentage> | <number> | auto ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "relativeToMaskBorderImageArea",
    "groups": [
      "CSS Masking"
    ],
    "initial": "auto",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-border-width"
  },
  "mask-clip": {
    "syntax": "[ <geometry-box> | no-clip ]#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "border-box",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-clip"
  },
  "mask-composite": {
    "syntax": "<compositing-operator>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "add",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-composite"
  },
  "mask-image": {
    "syntax": "<mask-reference>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "none",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecifiedURLsAbsolute",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-image"
  },
  "mask-mode": {
    "syntax": "<masking-mode>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "match-source",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-mode"
  },
  "mask-origin": {
    "syntax": "<geometry-box>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "border-box",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-origin"
  },
  "mask-position": {
    "syntax": "<position>#",
    "media": "visual",
    "inherited": false,
    "animationType": "repeatableListOfSimpleListOfLpc",
    "percentages": "referToSizeOfMaskPaintingArea",
    "groups": [
      "CSS Masking"
    ],
    "initial": "center",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "consistsOfTwoKeywordsForOriginAndOffsets",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-position"
  },
  "mask-repeat": {
    "syntax": "<repeat-style>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "no-repeat",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "consistsOfTwoDimensionKeywords",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-repeat"
  },
  "mask-size": {
    "syntax": "<bg-size>#",
    "media": "visual",
    "inherited": false,
    "animationType": "repeatableListOfSimpleListOfLpc",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "auto",
    "appliesto": "allElementsSVGContainerElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-size"
  },
  "mask-type": {
    "syntax": "luminance | alpha",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Masking"
    ],
    "initial": "luminance",
    "appliesto": "maskElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mask-type"
  },
  "masonry-auto-flow": {
    "syntax": "[ pack | next ] || [ definite-first | ordered ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Grid Layout"
    ],
    "initial": "pack",
    "appliesto": "gridContainersWithMasonryLayout",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/masonry-auto-flow"
  },
  "math-style": {
    "syntax": "normal | compact",
    "media": "visual",
    "inherited": true,
    "animationType": "notAnimatable",
    "percentages": "no",
    "groups": [
      "MathML"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/math-style"
  },
  "max-block-size": {
    "syntax": "<'max-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "blockSizeOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsWidthAndHeight",
    "computed": "sameAsMaxWidthAndMaxHeight",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/max-block-size"
  },
  "max-height": {
    "syntax": "none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>)",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "regardingHeightOfGeneratedBoxContainingBlockPercentagesNone",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "none",
    "appliesto": "allElementsButNonReplacedAndTableColumns",
    "computed": "percentageAsSpecifiedAbsoluteLengthOrNone",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/max-height"
  },
  "max-inline-size": {
    "syntax": "<'max-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "inlineSizeOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsWidthAndHeight",
    "computed": "sameAsMaxWidthAndMaxHeight",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/max-inline-size"
  },
  "max-lines": {
    "syntax": "none | <integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "integer",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "none",
    "appliesto": "blockContainersExceptMultiColumnContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "experimental"
  },
  "max-width": {
    "syntax": "none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>)",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "none",
    "appliesto": "allElementsButNonReplacedAndTableRows",
    "computed": "percentageAsSpecifiedAbsoluteLengthOrNone",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/max-width"
  },
  "min-block-size": {
    "syntax": "<'min-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "blockSizeOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsWidthAndHeight",
    "computed": "sameAsMinWidthAndMinHeight",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/min-block-size"
  },
  "min-height": {
    "syntax": "auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "regardingHeightOfGeneratedBoxContainingBlockPercentages0",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "allElementsButNonReplacedAndTableColumns",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/min-height"
  },
  "min-inline-size": {
    "syntax": "<'min-width'>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "inlineSizeOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "sameAsWidthAndHeight",
    "computed": "sameAsMinWidthAndMinHeight",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/min-inline-size"
  },
  "min-width": {
    "syntax": "auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "allElementsButNonReplacedAndTableRows",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/min-width"
  },
  "mix-blend-mode": {
    "syntax": "<blend-mode>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Compositing and Blending"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode"
  },
  "object-fit": {
    "syntax": "fill | contain | cover | none | scale-down",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Images"
    ],
    "initial": "fill",
    "appliesto": "replacedElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/object-fit"
  },
  "object-position": {
    "syntax": "<position>",
    "media": "visual",
    "inherited": true,
    "animationType": "repeatableListOfSimpleListOfLpc",
    "percentages": "referToWidthAndHeightOfElement",
    "groups": [
      "CSS Images"
    ],
    "initial": "50% 50%",
    "appliesto": "replacedElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/object-position"
  },
  "offset": {
    "syntax": "[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "offset-position",
      "offset-path",
      "offset-distance",
      "offset-anchor",
      "offset-rotate"
    ],
    "percentages": [
      "offset-position",
      "offset-distance",
      "offset-anchor"
    ],
    "groups": [
      "CSS Motion Path"
    ],
    "initial": [
      "offset-position",
      "offset-path",
      "offset-distance",
      "offset-anchor",
      "offset-rotate"
    ],
    "appliesto": "transformableElements",
    "computed": [
      "offset-position",
      "offset-path",
      "offset-distance",
      "offset-anchor",
      "offset-rotate"
    ],
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/offset"
  },
  "offset-anchor": {
    "syntax": "auto | <position>",
    "media": "visual",
    "inherited": false,
    "animationType": "position",
    "percentages": "relativeToWidthAndHeight",
    "groups": [
      "CSS Motion Path"
    ],
    "initial": "auto",
    "appliesto": "transformableElements",
    "computed": "forLengthAbsoluteValueOtherwisePercentage",
    "order": "perGrammar",
    "status": "standard"
  },
  "offset-distance": {
    "syntax": "<length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToTotalPathLength",
    "groups": [
      "CSS Motion Path"
    ],
    "initial": "0",
    "appliesto": "transformableElements",
    "computed": "forLengthAbsoluteValueOtherwisePercentage",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/offset-distance"
  },
  "offset-path": {
    "syntax": "none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]",
    "media": "visual",
    "inherited": false,
    "animationType": "angleOrBasicShapeOrPath",
    "percentages": "no",
    "groups": [
      "CSS Motion Path"
    ],
    "initial": "none",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/offset-path"
  },
  "offset-position": {
    "syntax": "auto | <position>",
    "media": "visual",
    "inherited": false,
    "animationType": "position",
    "percentages": "referToSizeOfContainingBlock",
    "groups": [
      "CSS Motion Path"
    ],
    "initial": "auto",
    "appliesto": "transformableElements",
    "computed": "forLengthAbsoluteValueOtherwisePercentage",
    "order": "perGrammar",
    "status": "experimental"
  },
  "offset-rotate": {
    "syntax": "[ auto | reverse ] || <angle>",
    "media": "visual",
    "inherited": false,
    "animationType": "angleOrBasicShapeOrPath",
    "percentages": "no",
    "groups": [
      "CSS Motion Path"
    ],
    "initial": "auto",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/offset-rotate"
  },
  "opacity": {
    "syntax": "<alpha-value>",
    "media": "visual",
    "inherited": false,
    "animationType": "number",
    "percentages": "no",
    "groups": [
      "CSS Color"
    ],
    "initial": "1.0",
    "appliesto": "allElements",
    "computed": "specifiedValueClipped0To1",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/opacity"
  },
  "order": {
    "syntax": "<integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "integer",
    "percentages": "no",
    "groups": [
      "CSS Flexible Box Layout"
    ],
    "initial": "0",
    "appliesto": "flexItemsGridItemsAbsolutelyPositionedContainerChildren",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/order"
  },
  "orphans": {
    "syntax": "<integer>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fragmentation"
    ],
    "initial": "2",
    "appliesto": "blockContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/orphans"
  },
  "outline": {
    "syntax": "[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]",
    "media": [
      "visual",
      "interactive"
    ],
    "inherited": false,
    "animationType": [
      "outline-color",
      "outline-width",
      "outline-style"
    ],
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": [
      "outline-color",
      "outline-style",
      "outline-width"
    ],
    "appliesto": "allElements",
    "computed": [
      "outline-color",
      "outline-width",
      "outline-style"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/outline"
  },
  "outline-color": {
    "syntax": "<color> | invert",
    "media": [
      "visual",
      "interactive"
    ],
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "invertOrCurrentColor",
    "appliesto": "allElements",
    "computed": "invertForTranslucentColorRGBAOtherwiseRGB",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/outline-color"
  },
  "outline-offset": {
    "syntax": "<length>",
    "media": [
      "visual",
      "interactive"
    ],
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/outline-offset"
  },
  "outline-style": {
    "syntax": "auto | <'border-style'>",
    "media": [
      "visual",
      "interactive"
    ],
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/outline-style"
  },
  "outline-width": {
    "syntax": "<line-width>",
    "media": [
      "visual",
      "interactive"
    ],
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "medium",
    "appliesto": "allElements",
    "computed": "absoluteLength0ForNone",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/outline-width"
  },
  "overflow": {
    "syntax": "[ visible | hidden | clip | scroll | auto ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "visible",
    "appliesto": "blockContainersFlexContainersGridContainers",
    "computed": [
      "overflow-x",
      "overflow-y"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overflow"
  },
  "overflow-anchor": {
    "syntax": "auto | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scroll Anchoring"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard"
  },
  "overflow-block": {
    "syntax": "visible | hidden | clip | scroll | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "auto",
    "appliesto": "blockContainersFlexContainersGridContainers",
    "computed": "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
    "order": "perGrammar",
    "status": "standard"
  },
  "overflow-clip-box": {
    "syntax": "padding-box | content-box",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Mozilla Extensions"
    ],
    "initial": "padding-box",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Mozilla/CSS/overflow-clip-box"
  },
  "overflow-inline": {
    "syntax": "visible | hidden | clip | scroll | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "auto",
    "appliesto": "blockContainersFlexContainersGridContainers",
    "computed": "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
    "order": "perGrammar",
    "status": "standard"
  },
  "overflow-wrap": {
    "syntax": "normal | break-word | anywhere",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "nonReplacedInlineElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overflow-wrap"
  },
  "overflow-x": {
    "syntax": "visible | hidden | clip | scroll | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "visible",
    "appliesto": "blockContainersFlexContainersGridContainers",
    "computed": "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overflow-x"
  },
  "overflow-y": {
    "syntax": "visible | hidden | clip | scroll | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "visible",
    "appliesto": "blockContainersFlexContainersGridContainers",
    "computed": "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overflow-y"
  },
  "overscroll-behavior": {
    "syntax": "[ contain | none | auto ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior"
  },
  "overscroll-behavior-block": {
    "syntax": "contain | none | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block"
  },
  "overscroll-behavior-inline": {
    "syntax": "contain | none | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline"
  },
  "overscroll-behavior-x": {
    "syntax": "contain | none | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x"
  },
  "overscroll-behavior-y": {
    "syntax": "contain | none | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "nonReplacedBlockAndInlineBlockElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y"
  },
  "padding": {
    "syntax": "[ <length> | <percentage> ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": [
      "padding-bottom",
      "padding-left",
      "padding-right",
      "padding-top"
    ],
    "appliesto": "allElementsExceptInternalTableDisplayTypes",
    "computed": [
      "padding-bottom",
      "padding-left",
      "padding-right",
      "padding-top"
    ],
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding"
  },
  "padding-block": {
    "syntax": "<'padding-left'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-block"
  },
  "padding-block-end": {
    "syntax": "<'padding-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-block-end"
  },
  "padding-block-start": {
    "syntax": "<'padding-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-block-start"
  },
  "padding-bottom": {
    "syntax": "<length> | <percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptInternalTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-bottom"
  },
  "padding-inline": {
    "syntax": "<'padding-left'>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-inline"
  },
  "padding-inline-end": {
    "syntax": "<'padding-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-inline-end"
  },
  "padding-inline-start": {
    "syntax": "<'padding-left'>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "logicalWidthOfContainingBlock",
    "groups": [
      "CSS Logical Properties"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-inline-start"
  },
  "padding-left": {
    "syntax": "<length> | <percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptInternalTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-left"
  },
  "padding-right": {
    "syntax": "<length> | <percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptInternalTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-right"
  },
  "padding-top": {
    "syntax": "<length> | <percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "0",
    "appliesto": "allElementsExceptInternalTableDisplayTypes",
    "computed": "percentageAsSpecifiedOrAbsoluteLength",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/padding-top"
  },
  "page-break-after": {
    "syntax": "auto | always | avoid | left | right | recto | verso",
    "media": [
      "visual",
      "paged"
    ],
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Pages"
    ],
    "initial": "auto",
    "appliesto": "blockElementsInNormalFlow",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/page-break-after"
  },
  "page-break-before": {
    "syntax": "auto | always | avoid | left | right | recto | verso",
    "media": [
      "visual",
      "paged"
    ],
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Pages"
    ],
    "initial": "auto",
    "appliesto": "blockElementsInNormalFlow",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/page-break-before"
  },
  "page-break-inside": {
    "syntax": "auto | avoid",
    "media": [
      "visual",
      "paged"
    ],
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Pages"
    ],
    "initial": "auto",
    "appliesto": "blockElementsInNormalFlow",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/page-break-inside"
  },
  "paint-order": {
    "syntax": "normal | [ fill || stroke || markers ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "textElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/paint-order"
  },
  "perspective": {
    "syntax": "none | <length>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "none",
    "appliesto": "transformableElements",
    "computed": "absoluteLengthOrNone",
    "order": "uniqueOrder",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/perspective"
  },
  "perspective-origin": {
    "syntax": "<position>",
    "media": "visual",
    "inherited": false,
    "animationType": "simpleListOfLpc",
    "percentages": "referToSizeOfBoundingBox",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "50% 50%",
    "appliesto": "transformableElements",
    "computed": "forLengthAbsoluteValueOtherwisePercentage",
    "order": "oneOrTwoValuesLengthAbsoluteKeywordsPercentages",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/perspective-origin"
  },
  "place-content": {
    "syntax": "<'align-content'> <'justify-content'>?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "normal",
    "appliesto": "multilineFlexContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/place-content"
  },
  "place-items": {
    "syntax": "<'align-items'> <'justify-items'>?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": [
      "align-items",
      "justify-items"
    ],
    "appliesto": "allElements",
    "computed": [
      "align-items",
      "justify-items"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/place-items"
  },
  "place-self": {
    "syntax": "<'align-self'> <'justify-self'>?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": [
      "align-self",
      "justify-self"
    ],
    "appliesto": "blockLevelBoxesAndAbsolutelyPositionedBoxesAndGridItems",
    "computed": [
      "align-self",
      "justify-self"
    ],
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/place-self"
  },
  "pointer-events": {
    "syntax": "auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Pointer Events"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/pointer-events"
  },
  "position": {
    "syntax": "static | relative | absolute | sticky | fixed",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "static",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/position"
  },
  "quotes": {
    "syntax": "none | auto | [ <string> <string> ]+",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Generated Content"
    ],
    "initial": "dependsOnUserAgent",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/quotes"
  },
  "resize": {
    "syntax": "none | both | horizontal | vertical | block | inline",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "none",
    "appliesto": "elementsWithOverflowNotVisibleAndReplacedElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/resize"
  },
  "right": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/right"
  },
  "rotate": {
    "syntax": "none | <angle> | [ x | y | z | <number>{3} ] && <angle>",
    "media": "visual",
    "inherited": false,
    "animationType": "transform",
    "percentages": "no",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "none",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/rotate"
  },
  "row-gap": {
    "syntax": "normal | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToDimensionOfContentArea",
    "groups": [
      "CSS Box Alignment"
    ],
    "initial": "normal",
    "appliesto": "multiColumnElementsFlexContainersGridContainers",
    "computed": "asSpecifiedWithLengthsAbsoluteAndNormalComputingToZeroExceptMultiColumn",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/row-gap"
  },
  "ruby-align": {
    "syntax": "start | center | space-between | space-around",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Ruby"
    ],
    "initial": "space-around",
    "appliesto": "rubyBasesAnnotationsBaseAnnotationContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/ruby-align"
  },
  "ruby-merge": {
    "syntax": "separate | collapse | auto",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Ruby"
    ],
    "initial": "separate",
    "appliesto": "rubyAnnotationsContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental"
  },
  "ruby-position": {
    "syntax": "over | under | inter-character",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Ruby"
    ],
    "initial": "over",
    "appliesto": "rubyAnnotationsContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/ruby-position"
  },
  "scale": {
    "syntax": "none | <number>{1,3}",
    "media": "visual",
    "inherited": false,
    "animationType": "transform",
    "percentages": "no",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "none",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scale"
  },
  "scrollbar-color": {
    "syntax": "auto | dark | light | <color>{2}",
    "media": "visual",
    "inherited": true,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Scrollbars"
    ],
    "initial": "auto",
    "appliesto": "scrollingBoxes",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scrollbar-color"
  },
  "scrollbar-gutter": {
    "syntax": "auto | [ stable | always ] && both? && force?",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Overflow"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter"
  },
  "scrollbar-width": {
    "syntax": "auto | thin | none",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scrollbars"
    ],
    "initial": "auto",
    "appliesto": "scrollingBoxes",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scrollbar-width"
  },
  "scroll-behavior": {
    "syntax": "auto | smooth",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSSOM View"
    ],
    "initial": "auto",
    "appliesto": "scrollingBoxes",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-behavior"
  },
  "scroll-margin": {
    "syntax": "<length>{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin"
  },
  "scroll-margin-block": {
    "syntax": "<length>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block"
  },
  "scroll-margin-block-start": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start"
  },
  "scroll-margin-block-end": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end"
  },
  "scroll-margin-bottom": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom"
  },
  "scroll-margin-inline": {
    "syntax": "<length>{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline"
  },
  "scroll-margin-inline-start": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start"
  },
  "scroll-margin-inline-end": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end"
  },
  "scroll-margin-left": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left"
  },
  "scroll-margin-right": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right"
  },
  "scroll-margin-top": {
    "syntax": "<length>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top"
  },
  "scroll-padding": {
    "syntax": "[ auto | <length-percentage> ]{1,4}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding"
  },
  "scroll-padding-block": {
    "syntax": "[ auto | <length-percentage> ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block"
  },
  "scroll-padding-block-start": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start"
  },
  "scroll-padding-block-end": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end"
  },
  "scroll-padding-bottom": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom"
  },
  "scroll-padding-inline": {
    "syntax": "[ auto | <length-percentage> ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline"
  },
  "scroll-padding-inline-start": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start"
  },
  "scroll-padding-inline-end": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end"
  },
  "scroll-padding-left": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left"
  },
  "scroll-padding-right": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right"
  },
  "scroll-padding-top": {
    "syntax": "auto | <length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "relativeToTheScrollContainersScrollport",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "auto",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top"
  },
  "scroll-snap-align": {
    "syntax": "[ none | start | end | center ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align"
  },
  "scroll-snap-coordinate": {
    "syntax": "none | <position>#",
    "media": "interactive",
    "inherited": false,
    "animationType": "position",
    "percentages": "referToBorderBox",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-coordinate"
  },
  "scroll-snap-destination": {
    "syntax": "<position>",
    "media": "interactive",
    "inherited": false,
    "animationType": "position",
    "percentages": "relativeToScrollContainerPaddingBoxAxis",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "0px 0px",
    "appliesto": "scrollContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-destination"
  },
  "scroll-snap-points-x": {
    "syntax": "none | repeat( <length-percentage> )",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "relativeToScrollContainerPaddingBoxAxis",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "scrollContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-x"
  },
  "scroll-snap-points-y": {
    "syntax": "none | repeat( <length-percentage> )",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "relativeToScrollContainerPaddingBoxAxis",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "scrollContainers",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-y"
  },
  "scroll-snap-stop": {
    "syntax": "normal | always",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop"
  },
  "scroll-snap-type": {
    "syntax": "none | [ x | y | block | inline | both ] [ mandatory | proximity ]?",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type"
  },
  "scroll-snap-type-x": {
    "syntax": "none | mandatory | proximity",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-x"
  },
  "scroll-snap-type-y": {
    "syntax": "none | mandatory | proximity",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Scroll Snap"
    ],
    "initial": "none",
    "appliesto": "scrollContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "obsolete",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-y"
  },
  "shape-image-threshold": {
    "syntax": "<alpha-value>",
    "media": "visual",
    "inherited": false,
    "animationType": "number",
    "percentages": "no",
    "groups": [
      "CSS Shapes"
    ],
    "initial": "0.0",
    "appliesto": "floats",
    "computed": "specifiedValueNumberClipped0To1",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold"
  },
  "shape-margin": {
    "syntax": "<length-percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Shapes"
    ],
    "initial": "0",
    "appliesto": "floats",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/shape-margin"
  },
  "shape-outside": {
    "syntax": "none | <shape-box> || <basic-shape> | <image>",
    "media": "visual",
    "inherited": false,
    "animationType": "basicShapeOtherwiseNo",
    "percentages": "no",
    "groups": [
      "CSS Shapes"
    ],
    "initial": "none",
    "appliesto": "floats",
    "computed": "asDefinedForBasicShapeWithAbsoluteURIOtherwiseAsSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/shape-outside"
  },
  "tab-size": {
    "syntax": "<integer> | <length>",
    "media": "visual",
    "inherited": true,
    "animationType": "length",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "8",
    "appliesto": "blockContainers",
    "computed": "specifiedIntegerOrAbsoluteLength",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/tab-size"
  },
  "table-layout": {
    "syntax": "auto | fixed",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Table"
    ],
    "initial": "auto",
    "appliesto": "tableElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/table-layout"
  },
  "text-align": {
    "syntax": "start | end | left | right | center | justify | match-parent",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "startOrNamelessValueIfLTRRightIfRTL",
    "appliesto": "blockContainers",
    "computed": "asSpecifiedExceptMatchParent",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-align"
  },
  "text-align-last": {
    "syntax": "auto | start | end | left | right | center | justify",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "auto",
    "appliesto": "blockContainers",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-align-last"
  },
  "text-combine-upright": {
    "syntax": "none | all | [ digits <integer>? ]",
    "media": "visual",
    "inherited": true,
    "animationType": "notAnimatable",
    "percentages": "no",
    "groups": [
      "CSS Writing Modes"
    ],
    "initial": "none",
    "appliesto": "nonReplacedInlineElements",
    "computed": "keywordPlusIntegerIfDigits",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-combine-upright"
  },
  "text-decoration": {
    "syntax": "<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "text-decoration-color",
      "text-decoration-style",
      "text-decoration-line",
      "text-decoration-thickness"
    ],
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": [
      "text-decoration-color",
      "text-decoration-style",
      "text-decoration-line"
    ],
    "appliesto": "allElements",
    "computed": [
      "text-decoration-line",
      "text-decoration-style",
      "text-decoration-color",
      "text-decoration-thickness"
    ],
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration"
  },
  "text-decoration-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration-color"
  },
  "text-decoration-line": {
    "syntax": "none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration-line"
  },
  "text-decoration-skip": {
    "syntax": "none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "objects",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip"
  },
  "text-decoration-skip-ink": {
    "syntax": "auto | all | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink"
  },
  "text-decoration-style": {
    "syntax": "solid | double | dotted | dashed | wavy",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "solid",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration-style"
  },
  "text-decoration-thickness": {
    "syntax": "auto | from-font | <length> | <percentage> ",
    "media": "visual",
    "inherited": false,
    "animationType": "byComputedValueType",
    "percentages": "referToElementFontSize",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness"
  },
  "text-emphasis": {
    "syntax": "<'text-emphasis-style'> || <'text-emphasis-color'>",
    "media": "visual",
    "inherited": false,
    "animationType": [
      "text-emphasis-color",
      "text-emphasis-style"
    ],
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": [
      "text-emphasis-style",
      "text-emphasis-color"
    ],
    "appliesto": "allElements",
    "computed": [
      "text-emphasis-style",
      "text-emphasis-color"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-emphasis"
  },
  "text-emphasis-color": {
    "syntax": "<color>",
    "media": "visual",
    "inherited": false,
    "animationType": "color",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "currentcolor",
    "appliesto": "allElements",
    "computed": "computedColor",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color"
  },
  "text-emphasis-position": {
    "syntax": "[ over | under ] && [ right | left ]",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "over right",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position"
  },
  "text-emphasis-style": {
    "syntax": "none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style"
  },
  "text-indent": {
    "syntax": "<length-percentage> && hanging? && each-line?",
    "media": "visual",
    "inherited": true,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Text"
    ],
    "initial": "0",
    "appliesto": "blockContainers",
    "computed": "percentageOrAbsoluteLengthPlusKeywords",
    "order": "lengthOrPercentageBeforeKeywords",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-indent"
  },
  "text-justify": {
    "syntax": "auto | inter-character | inter-word | none",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "auto",
    "appliesto": "inlineLevelAndTableCellElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-justify"
  },
  "text-orientation": {
    "syntax": "mixed | upright | sideways",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Writing Modes"
    ],
    "initial": "mixed",
    "appliesto": "allElementsExceptTableRowGroupsRowsColumnGroupsAndColumns",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-orientation"
  },
  "text-overflow": {
    "syntax": "[ clip | ellipsis | <string> ]{1,2}",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "clip",
    "appliesto": "blockContainerElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-overflow"
  },
  "text-rendering": {
    "syntax": "auto | optimizeSpeed | optimizeLegibility | geometricPrecision",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Miscellaneous"
    ],
    "initial": "auto",
    "appliesto": "textElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-rendering"
  },
  "text-shadow": {
    "syntax": "none | <shadow-t>#",
    "media": "visual",
    "inherited": true,
    "animationType": "shadowList",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "colorPlusThreeAbsoluteLengths",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-shadow"
  },
  "text-size-adjust": {
    "syntax": "none | auto | <percentage>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "referToSizeOfFont",
    "groups": [
      "CSS Text"
    ],
    "initial": "autoForSmartphoneBrowsersSupportingInflation",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "experimental",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-size-adjust"
  },
  "text-transform": {
    "syntax": "none | capitalize | uppercase | lowercase | full-width | full-size-kana",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "none",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-transform"
  },
  "text-underline-offset": {
    "syntax": "auto | <length> | <percentage> ",
    "media": "visual",
    "inherited": true,
    "animationType": "byComputedValueType",
    "percentages": "referToElementFontSize",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-underline-offset"
  },
  "text-underline-position": {
    "syntax": "auto | from-font | [ under || [ left | right ] ]",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text Decoration"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/text-underline-position"
  },
  "top": {
    "syntax": "<length> | <percentage> | auto",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToContainingBlockHeight",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/top"
  },
  "touch-action": {
    "syntax": "auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "Pointer Events"
    ],
    "initial": "auto",
    "appliesto": "allElementsExceptNonReplacedInlineElementsTableRowsColumnsRowColumnGroups",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/touch-action"
  },
  "transform": {
    "syntax": "none | <transform-list>",
    "media": "visual",
    "inherited": false,
    "animationType": "transform",
    "percentages": "referToSizeOfBoundingBox",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "none",
    "appliesto": "transformableElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "uniqueOrder",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transform"
  },
  "transform-box": {
    "syntax": "content-box | border-box | fill-box | stroke-box | view-box",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "view-box",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transform-box"
  },
  "transform-origin": {
    "syntax": "[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?",
    "media": "visual",
    "inherited": false,
    "animationType": "simpleListOfLpc",
    "percentages": "referToSizeOfBoundingBox",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "50% 50% 0",
    "appliesto": "transformableElements",
    "computed": "forLengthAbsoluteValueOtherwisePercentage",
    "order": "oneOrTwoValuesLengthAbsoluteKeywordsPercentages",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transform-origin"
  },
  "transform-style": {
    "syntax": "flat | preserve-3d",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "flat",
    "appliesto": "transformableElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transform-style"
  },
  "transition": {
    "syntax": "<single-transition>#",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transitions"
    ],
    "initial": [
      "transition-delay",
      "transition-duration",
      "transition-property",
      "transition-timing-function"
    ],
    "appliesto": "allElementsAndPseudos",
    "computed": [
      "transition-delay",
      "transition-duration",
      "transition-property",
      "transition-timing-function"
    ],
    "order": "orderOfAppearance",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transition"
  },
  "transition-delay": {
    "syntax": "<time>#",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transitions"
    ],
    "initial": "0s",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transition-delay"
  },
  "transition-duration": {
    "syntax": "<time>#",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transitions"
    ],
    "initial": "0s",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transition-duration"
  },
  "transition-property": {
    "syntax": "none | <single-transition-property>#",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transitions"
    ],
    "initial": "all",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transition-property"
  },
  "transition-timing-function": {
    "syntax": "<timing-function>#",
    "media": "interactive",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Transitions"
    ],
    "initial": "ease",
    "appliesto": "allElementsAndPseudos",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/transition-timing-function"
  },
  "translate": {
    "syntax": "none | <length-percentage> [ <length-percentage> <length>? ]?",
    "media": "visual",
    "inherited": false,
    "animationType": "transform",
    "percentages": "referToSizeOfBoundingBox",
    "groups": [
      "CSS Transforms"
    ],
    "initial": "none",
    "appliesto": "transformableElements",
    "computed": "asSpecifiedRelativeToAbsoluteLengths",
    "order": "perGrammar",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/translate"
  },
  "unicode-bidi": {
    "syntax": "normal | embed | isolate | bidi-override | isolate-override | plaintext",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Writing Modes"
    ],
    "initial": "normal",
    "appliesto": "allElementsSomeValuesNoEffectOnNonInlineElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/unicode-bidi"
  },
  "user-select": {
    "syntax": "auto | text | none | contain | all",
    "media": "visual",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Basic User Interface"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/user-select"
  },
  "vertical-align": {
    "syntax": "baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>",
    "media": "visual",
    "inherited": false,
    "animationType": "length",
    "percentages": "referToLineHeight",
    "groups": [
      "CSS Table"
    ],
    "initial": "baseline",
    "appliesto": "inlineLevelAndTableCellElements",
    "computed": "absoluteLengthOrKeyword",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/vertical-align"
  },
  "visibility": {
    "syntax": "visible | hidden | collapse",
    "media": "visual",
    "inherited": true,
    "animationType": "visibility",
    "percentages": "no",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "visible",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/visibility"
  },
  "white-space": {
    "syntax": "normal | pre | nowrap | pre-wrap | pre-line | break-spaces",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/white-space"
  },
  "widows": {
    "syntax": "<integer>",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Fragmentation"
    ],
    "initial": "2",
    "appliesto": "blockContainerElements",
    "computed": "asSpecified",
    "order": "perGrammar",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/widows"
  },
  "width": {
    "syntax": "auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)",
    "media": "visual",
    "inherited": false,
    "animationType": "lpc",
    "percentages": "referToWidthOfContainingBlock",
    "groups": [
      "CSS Box Model"
    ],
    "initial": "auto",
    "appliesto": "allElementsButNonReplacedAndTableRows",
    "computed": "percentageAutoOrAbsoluteLength",
    "order": "lengthOrPercentageBeforeKeywordIfBothPresent",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/width"
  },
  "will-change": {
    "syntax": "auto | <animateable-feature>#",
    "media": "all",
    "inherited": false,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Will Change"
    ],
    "initial": "auto",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/will-change"
  },
  "word-break": {
    "syntax": "normal | break-all | keep-all | break-word",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/word-break"
  },
  "word-spacing": {
    "syntax": "normal | <length-percentage>",
    "media": "visual",
    "inherited": true,
    "animationType": "length",
    "percentages": "referToWidthOfAffectedGlyph",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "optimumMinAndMaxValueOfAbsoluteLengthPercentageOrNormal",
    "order": "uniqueOrder",
    "alsoAppliesTo": [
      "::first-letter",
      "::first-line",
      "::placeholder"
    ],
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/word-spacing"
  },
  "word-wrap": {
    "syntax": "normal | break-word",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Text"
    ],
    "initial": "normal",
    "appliesto": "nonReplacedInlineElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/overflow-wrap"
  },
  "writing-mode": {
    "syntax": "horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr",
    "media": "visual",
    "inherited": true,
    "animationType": "discrete",
    "percentages": "no",
    "groups": [
      "CSS Writing Modes"
    ],
    "initial": "horizontal-tb",
    "appliesto": "allElementsExceptTableRowColumnGroupsTableRowsColumns",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/writing-mode"
  },
  "z-index": {
    "syntax": "auto | <integer>",
    "media": "visual",
    "inherited": false,
    "animationType": "integer",
    "percentages": "no",
    "groups": [
      "CSS Positioning"
    ],
    "initial": "auto",
    "appliesto": "positionedElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "stacking": true,
    "status": "standard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/z-index"
  },
  "zoom": {
    "syntax": "normal | reset | <number> | <percentage>",
    "media": "visual",
    "inherited": false,
    "animationType": "integer",
    "percentages": "no",
    "groups": [
      "Microsoft Extensions"
    ],
    "initial": "normal",
    "appliesto": "allElements",
    "computed": "asSpecified",
    "order": "uniqueOrder",
    "status": "nonstandard",
    "mdn_url": "https://developer.mozilla.org/docs/Web/CSS/zoom"
  }
}
;
},883,[]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "absolute-size": {
    "syntax": "xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large"
  },
  "alpha-value": {
    "syntax": "<number> | <percentage>"
  },
  "angle-percentage": {
    "syntax": "<angle> | <percentage>"
  },
  "angular-color-hint": {
    "syntax": "<angle-percentage>"
  },
  "angular-color-stop": {
    "syntax": "<color> && <color-stop-angle>?"
  },
  "angular-color-stop-list": {
    "syntax": "[ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>"
  },
  "animateable-feature": {
    "syntax": "scroll-position | contents | <custom-ident>"
  },
  "attachment": {
    "syntax": "scroll | fixed | local"
  },
  "attr()": {
    "syntax": "attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )"
  },
  "attr-matcher": {
    "syntax": "[ '~' | '|' | '^' | '$' | '*' ]? '='"
  },
  "attr-modifier": {
    "syntax": "i | s"
  },
  "attribute-selector": {
    "syntax": "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'"
  },
  "auto-repeat": {
    "syntax": "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
  },
  "auto-track-list": {
    "syntax": "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>\n[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?"
  },
  "baseline-position": {
    "syntax": "[ first | last ]? baseline"
  },
  "basic-shape": {
    "syntax": "<inset()> | <circle()> | <ellipse()> | <polygon()> | <path()>"
  },
  "bg-image": {
    "syntax": "none | <image>"
  },
  "bg-layer": {
    "syntax": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>"
  },
  "bg-position": {
    "syntax": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]"
  },
  "bg-size": {
    "syntax": "[ <length-percentage> | auto ]{1,2} | cover | contain"
  },
  "blur()": {
    "syntax": "blur( <length> )"
  },
  "blend-mode": {
    "syntax": "normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity"
  },
  "box": {
    "syntax": "border-box | padding-box | content-box"
  },
  "brightness()": {
    "syntax": "brightness( <number-percentage> )"
  },
  "calc()": {
    "syntax": "calc( <calc-sum> )"
  },
  "calc-sum": {
    "syntax": "<calc-product> [ [ '+' | '-' ] <calc-product> ]*"
  },
  "calc-product": {
    "syntax": "<calc-value> [ '*' <calc-value> | '/' <number> ]*"
  },
  "calc-value": {
    "syntax": "<number> | <dimension> | <percentage> | ( <calc-sum> )"
  },
  "cf-final-image": {
    "syntax": "<image> | <color>"
  },
  "cf-mixing-image": {
    "syntax": "<percentage>? && <image>"
  },
  "circle()": {
    "syntax": "circle( [ <shape-radius> ]? [ at <position> ]? )"
  },
  "clamp()": {
    "syntax": "clamp( <calc-sum>#{3} )"
  },
  "class-selector": {
    "syntax": "'.' <ident-token>"
  },
  "clip-source": {
    "syntax": "<url>"
  },
  "color": {
    "syntax": "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>"
  },
  "color-stop": {
    "syntax": "<color-stop-length> | <color-stop-angle>"
  },
  "color-stop-angle": {
    "syntax": "<angle-percentage>{1,2}"
  },
  "color-stop-length": {
    "syntax": "<length-percentage>{1,2}"
  },
  "color-stop-list": {
    "syntax": "[ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>"
  },
  "combinator": {
    "syntax": "'>' | '+' | '~' | [ '||' ]"
  },
  "common-lig-values": {
    "syntax": "[ common-ligatures | no-common-ligatures ]"
  },
  "compat-auto": {
    "syntax": "searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar | button"
  },
  "composite-style": {
    "syntax": "clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor"
  },
  "compositing-operator": {
    "syntax": "add | subtract | intersect | exclude"
  },
  "compound-selector": {
    "syntax": "[ <type-selector>? <subclass-selector>* [ <pseudo-element-selector> <pseudo-class-selector>* ]* ]!"
  },
  "compound-selector-list": {
    "syntax": "<compound-selector>#"
  },
  "complex-selector": {
    "syntax": "<compound-selector> [ <combinator>? <compound-selector> ]*"
  },
  "complex-selector-list": {
    "syntax": "<complex-selector>#"
  },
  "conic-gradient()": {
    "syntax": "conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )"
  },
  "contextual-alt-values": {
    "syntax": "[ contextual | no-contextual ]"
  },
  "content-distribution": {
    "syntax": "space-between | space-around | space-evenly | stretch"
  },
  "content-list": {
    "syntax": "[ <string> | contents | <image> | <quote> | <target> | <leader()> ]+"
  },
  "content-position": {
    "syntax": "center | start | end | flex-start | flex-end"
  },
  "content-replacement": {
    "syntax": "<image>"
  },
  "contrast()": {
    "syntax": "contrast( [ <number-percentage> ] )"
  },
  "counter()": {
    "syntax": "counter( <custom-ident>, <counter-style>? )"
  },
  "counter-style": {
    "syntax": "<counter-style-name> | symbols()"
  },
  "counter-style-name": {
    "syntax": "<custom-ident>"
  },
  "counters()": {
    "syntax": "counters( <custom-ident>, <string>, <counter-style>? )"
  },
  "cross-fade()": {
    "syntax": "cross-fade( <cf-mixing-image> , <cf-final-image>? )"
  },
  "cubic-bezier-timing-function": {
    "syntax": "ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)"
  },
  "deprecated-system-color": {
    "syntax": "ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonFace | ButtonHighlight | ButtonShadow | ButtonText | CaptionText | GrayText | Highlight | HighlightText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText"
  },
  "discretionary-lig-values": {
    "syntax": "[ discretionary-ligatures | no-discretionary-ligatures ]"
  },
  "display-box": {
    "syntax": "contents | none"
  },
  "display-inside": {
    "syntax": "flow | flow-root | table | flex | grid | ruby"
  },
  "display-internal": {
    "syntax": "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container"
  },
  "display-legacy": {
    "syntax": "inline-block | inline-list-item | inline-table | inline-flex | inline-grid"
  },
  "display-listitem": {
    "syntax": "<display-outside>? && [ flow | flow-root ]? && list-item"
  },
  "display-outside": {
    "syntax": "block | inline | run-in"
  },
  "drop-shadow()": {
    "syntax": "drop-shadow( <length>{2,3} <color>? )"
  },
  "east-asian-variant-values": {
    "syntax": "[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]"
  },
  "east-asian-width-values": {
    "syntax": "[ full-width | proportional-width ]"
  },
  "element()": {
    "syntax": "element( <id-selector> )"
  },
  "ellipse()": {
    "syntax": "ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )"
  },
  "ending-shape": {
    "syntax": "circle | ellipse"
  },
  "env()": {
    "syntax": "env( <custom-ident> , <declaration-value>? )"
  },
  "explicit-track-list": {
    "syntax": "[ <line-names>? <track-size> ]+ <line-names>?"
  },
  "family-name": {
    "syntax": "<string> | <custom-ident>+"
  },
  "feature-tag-value": {
    "syntax": "<string> [ <integer> | on | off ]?"
  },
  "feature-type": {
    "syntax": "@stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation"
  },
  "feature-value-block": {
    "syntax": "<feature-type> '{' <feature-value-declaration-list> '}'"
  },
  "feature-value-block-list": {
    "syntax": "<feature-value-block>+"
  },
  "feature-value-declaration": {
    "syntax": "<custom-ident>: <integer>+;"
  },
  "feature-value-declaration-list": {
    "syntax": "<feature-value-declaration>"
  },
  "feature-value-name": {
    "syntax": "<custom-ident>"
  },
  "fill-rule": {
    "syntax": "nonzero | evenodd"
  },
  "filter-function": {
    "syntax": "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <saturate()> | <sepia()>"
  },
  "filter-function-list": {
    "syntax": "[ <filter-function> | <url> ]+"
  },
  "final-bg-layer": {
    "syntax": "<'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>"
  },
  "fit-content()": {
    "syntax": "fit-content( [ <length> | <percentage> ] )"
  },
  "fixed-breadth": {
    "syntax": "<length-percentage>"
  },
  "fixed-repeat": {
    "syntax": "repeat( [ <positive-integer> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
  },
  "fixed-size": {
    "syntax": "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )"
  },
  "font-stretch-absolute": {
    "syntax": "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>"
  },
  "font-variant-css21": {
    "syntax": "[ normal | small-caps ]"
  },
  "font-weight-absolute": {
    "syntax": "normal | bold | <number [1,1000]>"
  },
  "frequency-percentage": {
    "syntax": "<frequency> | <percentage>"
  },
  "general-enclosed": {
    "syntax": "[ <function-token> <any-value> ) ] | ( <ident> <any-value> )"
  },
  "generic-family": {
    "syntax": "serif | sans-serif | cursive | fantasy | monospace"
  },
  "generic-name": {
    "syntax": "serif | sans-serif | cursive | fantasy | monospace"
  },
  "geometry-box": {
    "syntax": "<shape-box> | fill-box | stroke-box | view-box"
  },
  "gradient": {
    "syntax": "<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()>"
  },
  "grayscale()": {
    "syntax": "grayscale( <number-percentage> )"
  },
  "grid-line": {
    "syntax": "auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]"
  },
  "historical-lig-values": {
    "syntax": "[ historical-ligatures | no-historical-ligatures ]"
  },
  "hsl()": {
    "syntax": "hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )"
  },
  "hsla()": {
    "syntax": "hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )"
  },
  "hue": {
    "syntax": "<number> | <angle>"
  },
  "hue-rotate()": {
    "syntax": "hue-rotate( <angle> )"
  },
  "id-selector": {
    "syntax": "<hash-token>"
  },
  "image": {
    "syntax": "<url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>"
  },
  "image()": {
    "syntax": "image( <image-tags>? [ <image-src>? , <color>? ]! )"
  },
  "image-set()": {
    "syntax": "image-set( <image-set-option># )"
  },
  "image-set-option": {
    "syntax": "[ <image> | <string> ] <resolution>"
  },
  "image-src": {
    "syntax": "<url> | <string>"
  },
  "image-tags": {
    "syntax": "ltr | rtl"
  },
  "inflexible-breadth": {
    "syntax": "<length> | <percentage> | min-content | max-content | auto"
  },
  "inset()": {
    "syntax": "inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )"
  },
  "invert()": {
    "syntax": "invert( <number-percentage> )"
  },
  "keyframes-name": {
    "syntax": "<custom-ident> | <string>"
  },
  "keyframe-block": {
    "syntax": "<keyframe-selector># {\n  <declaration-list>\n}"
  },
  "keyframe-block-list": {
    "syntax": "<keyframe-block>+"
  },
  "keyframe-selector": {
    "syntax": "from | to | <percentage>"
  },
  "leader()": {
    "syntax": "leader( <leader-type> )"
  },
  "leader-type": {
    "syntax": "dotted | solid | space | <string>"
  },
  "length-percentage": {
    "syntax": "<length> | <percentage>"
  },
  "line-names": {
    "syntax": "'[' <custom-ident>* ']'"
  },
  "line-name-list": {
    "syntax": "[ <line-names> | <name-repeat> ]+"
  },
  "line-style": {
    "syntax": "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset"
  },
  "line-width": {
    "syntax": "<length> | thin | medium | thick"
  },
  "linear-color-hint": {
    "syntax": "<length-percentage>"
  },
  "linear-color-stop": {
    "syntax": "<color> <color-stop-length>?"
  },
  "linear-gradient()": {
    "syntax": "linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )"
  },
  "mask-layer": {
    "syntax": "<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>"
  },
  "mask-position": {
    "syntax": "[ <length-percentage> | left | center | right ] [ <length-percentage> | top | center | bottom ]?"
  },
  "mask-reference": {
    "syntax": "none | <image> | <mask-source>"
  },
  "mask-source": {
    "syntax": "<url>"
  },
  "masking-mode": {
    "syntax": "alpha | luminance | match-source"
  },
  "matrix()": {
    "syntax": "matrix( <number>#{6} )"
  },
  "matrix3d()": {
    "syntax": "matrix3d( <number>#{16} )"
  },
  "max()": {
    "syntax": "max( <calc-sum># )"
  },
  "media-and": {
    "syntax": "<media-in-parens> [ and <media-in-parens> ]+"
  },
  "media-condition": {
    "syntax": "<media-not> | <media-and> | <media-or> | <media-in-parens>"
  },
  "media-condition-without-or": {
    "syntax": "<media-not> | <media-and> | <media-in-parens>"
  },
  "media-feature": {
    "syntax": "( [ <mf-plain> | <mf-boolean> | <mf-range> ] )"
  },
  "media-in-parens": {
    "syntax": "( <media-condition> ) | <media-feature> | <general-enclosed>"
  },
  "media-not": {
    "syntax": "not <media-in-parens>"
  },
  "media-or": {
    "syntax": "<media-in-parens> [ or <media-in-parens> ]+"
  },
  "media-query": {
    "syntax": "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?"
  },
  "media-query-list": {
    "syntax": "<media-query>#"
  },
  "media-type": {
    "syntax": "<ident>"
  },
  "mf-boolean": {
    "syntax": "<mf-name>"
  },
  "mf-name": {
    "syntax": "<ident>"
  },
  "mf-plain": {
    "syntax": "<mf-name> : <mf-value>"
  },
  "mf-range": {
    "syntax": "<mf-name> [ '<' | '>' ]? '='? <mf-value>\n| <mf-value> [ '<' | '>' ]? '='? <mf-name>\n| <mf-value> '<' '='? <mf-name> '<' '='? <mf-value>\n| <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>"
  },
  "mf-value": {
    "syntax": "<number> | <dimension> | <ident> | <ratio>"
  },
  "min()": {
    "syntax": "min( <calc-sum># )"
  },
  "minmax()": {
    "syntax": "minmax( [ <length> | <percentage> | min-content | max-content | auto ] , [ <length> | <percentage> | <flex> | min-content | max-content | auto ] )"
  },
  "named-color": {
    "syntax": "transparent | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen"
  },
  "namespace-prefix": {
    "syntax": "<ident>"
  },
  "ns-prefix": {
    "syntax": "[ <ident-token> | '*' ]? '|'"
  },
  "number-percentage": {
    "syntax": "<number> | <percentage>"
  },
  "numeric-figure-values": {
    "syntax": "[ lining-nums | oldstyle-nums ]"
  },
  "numeric-fraction-values": {
    "syntax": "[ diagonal-fractions | stacked-fractions ]"
  },
  "numeric-spacing-values": {
    "syntax": "[ proportional-nums | tabular-nums ]"
  },
  "nth": {
    "syntax": "<an-plus-b> | even | odd"
  },
  "opacity()": {
    "syntax": "opacity( [ <number-percentage> ] )"
  },
  "overflow-position": {
    "syntax": "unsafe | safe"
  },
  "outline-radius": {
    "syntax": "<length> | <percentage>"
  },
  "page-body": {
    "syntax": "<declaration>? [ ; <page-body> ]? | <page-margin-box> <page-body>"
  },
  "page-margin-box": {
    "syntax": "<page-margin-box-type> '{' <declaration-list> '}'"
  },
  "page-margin-box-type": {
    "syntax": "@top-left-corner | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom"
  },
  "page-selector-list": {
    "syntax": "[ <page-selector># ]?"
  },
  "page-selector": {
    "syntax": "<pseudo-page>+ | <ident> <pseudo-page>*"
  },
  "path()": {
    "syntax": "path( [ <fill-rule>, ]? <string> )"
  },
  "paint()": {
    "syntax": "paint( <ident>, <declaration-value>? )"
  },
  "perspective()": {
    "syntax": "perspective( <length> )"
  },
  "polygon()": {
    "syntax": "polygon( <fill-rule>? , [ <length-percentage> <length-percentage> ]# )"
  },
  "position": {
    "syntax": "[ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]"
  },
  "pseudo-class-selector": {
    "syntax": "':' <ident-token> | ':' <function-token> <any-value> ')'"
  },
  "pseudo-element-selector": {
    "syntax": "':' <pseudo-class-selector>"
  },
  "pseudo-page": {
    "syntax": ": [ left | right | first | blank ]"
  },
  "quote": {
    "syntax": "open-quote | close-quote | no-open-quote | no-close-quote"
  },
  "radial-gradient()": {
    "syntax": "radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )"
  },
  "relative-selector": {
    "syntax": "<combinator>? <complex-selector>"
  },
  "relative-selector-list": {
    "syntax": "<relative-selector>#"
  },
  "relative-size": {
    "syntax": "larger | smaller"
  },
  "repeat-style": {
    "syntax": "repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}"
  },
  "repeating-linear-gradient()": {
    "syntax": "repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )"
  },
  "repeating-radial-gradient()": {
    "syntax": "repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )"
  },
  "rgb()": {
    "syntax": "rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )"
  },
  "rgba()": {
    "syntax": "rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )"
  },
  "rotate()": {
    "syntax": "rotate( [ <angle> | <zero> ] )"
  },
  "rotate3d()": {
    "syntax": "rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )"
  },
  "rotateX()": {
    "syntax": "rotateX( [ <angle> | <zero> ] )"
  },
  "rotateY()": {
    "syntax": "rotateY( [ <angle> | <zero> ] )"
  },
  "rotateZ()": {
    "syntax": "rotateZ( [ <angle> | <zero> ] )"
  },
  "saturate()": {
    "syntax": "saturate( <number-percentage> )"
  },
  "scale()": {
    "syntax": "scale( <number> , <number>? )"
  },
  "scale3d()": {
    "syntax": "scale3d( <number> , <number> , <number> )"
  },
  "scaleX()": {
    "syntax": "scaleX( <number> )"
  },
  "scaleY()": {
    "syntax": "scaleY( <number> )"
  },
  "scaleZ()": {
    "syntax": "scaleZ( <number> )"
  },
  "self-position": {
    "syntax": "center | start | end | self-start | self-end | flex-start | flex-end"
  },
  "shape-radius": {
    "syntax": "<length-percentage> | closest-side | farthest-side"
  },
  "skew()": {
    "syntax": "skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )"
  },
  "skewX()": {
    "syntax": "skewX( [ <angle> | <zero> ] )"
  },
  "skewY()": {
    "syntax": "skewY( [ <angle> | <zero> ] )"
  },
  "sepia()": {
    "syntax": "sepia( <number-percentage> )"
  },
  "shadow": {
    "syntax": "inset? && <length>{2,4} && <color>?"
  },
  "shadow-t": {
    "syntax": "[ <length>{2,3} && <color>? ]"
  },
  "shape": {
    "syntax": "rect(<top>, <right>, <bottom>, <left>)"
  },
  "shape-box": {
    "syntax": "<box> | margin-box"
  },
  "side-or-corner": {
    "syntax": "[ left | right ] || [ top | bottom ]"
  },
  "single-animation": {
    "syntax": "<time> || <timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]"
  },
  "single-animation-direction": {
    "syntax": "normal | reverse | alternate | alternate-reverse"
  },
  "single-animation-fill-mode": {
    "syntax": "none | forwards | backwards | both"
  },
  "single-animation-iteration-count": {
    "syntax": "infinite | <number>"
  },
  "single-animation-play-state": {
    "syntax": "running | paused"
  },
  "single-transition": {
    "syntax": "[ none | <single-transition-property> ] || <time> || <timing-function> || <time>"
  },
  "single-transition-property": {
    "syntax": "all | <custom-ident>"
  },
  "size": {
    "syntax": "closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}"
  },
  "step-position": {
    "syntax": "jump-start | jump-end | jump-none | jump-both | start | end"
  },
  "step-timing-function": {
    "syntax": "step-start | step-end | steps(<integer>[, <step-position>]?)"
  },
  "subclass-selector": {
    "syntax": "<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>"
  },
  "supports-condition": {
    "syntax": "not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*"
  },
  "supports-in-parens": {
    "syntax": "( <supports-condition> ) | <supports-feature> | <general-enclosed>"
  },
  "supports-feature": {
    "syntax": "<supports-decl> | <supports-selector-fn>"
  },
  "supports-decl": {
    "syntax": "( <declaration> )"
  },
  "supports-selector-fn": {
    "syntax": "selector( <complex-selector> )"
  },
  "symbol": {
    "syntax": "<string> | <image> | <custom-ident>"
  },
  "target": {
    "syntax": "<target-counter()> | <target-counters()> | <target-text()>"
  },
  "target-counter()": {
    "syntax": "target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )"
  },
  "target-counters()": {
    "syntax": "target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )"
  },
  "target-text()": {
    "syntax": "target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )"
  },
  "time-percentage": {
    "syntax": "<time> | <percentage>"
  },
  "timing-function": {
    "syntax": "linear | <cubic-bezier-timing-function> | <step-timing-function>"
  },
  "track-breadth": {
    "syntax": "<length-percentage> | <flex> | min-content | max-content | auto"
  },
  "track-list": {
    "syntax": "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?"
  },
  "track-repeat": {
    "syntax": "repeat( [ <positive-integer> ] , [ <line-names>? <track-size> ]+ <line-names>? )"
  },
  "track-size": {
    "syntax": "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )"
  },
  "transform-function": {
    "syntax": "<matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>"
  },
  "transform-list": {
    "syntax": "<transform-function>+"
  },
  "translate()": {
    "syntax": "translate( <length-percentage> , <length-percentage>? )"
  },
  "translate3d()": {
    "syntax": "translate3d( <length-percentage> , <length-percentage> , <length> )"
  },
  "translateX()": {
    "syntax": "translateX( <length-percentage> )"
  },
  "translateY()": {
    "syntax": "translateY( <length-percentage> )"
  },
  "translateZ()": {
    "syntax": "translateZ( <length> )"
  },
  "type-or-unit": {
    "syntax": "string | color | url | integer | number | length | angle | time | frequency | cap | ch | em | ex | ic | lh | rlh | rem | vb | vi | vw | vh | vmin | vmax | mm | Q | cm | in | pt | pc | px | deg | grad | rad | turn | ms | s | Hz | kHz | %"
  },
  "type-selector": {
    "syntax": "<wq-name> | <ns-prefix>? '*'"
  },
  "var()": {
    "syntax": "var( <custom-property-name> , <declaration-value>? )"
  },
  "viewport-length": {
    "syntax": "auto | <length-percentage>"
  },
  "wq-name": {
    "syntax": "<ns-prefix>? <ident-token>"
  }
}
;
},884,[]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
    "atrules": {
        "charset": {
            "prelude": "<string>"
        },
        "font-face": {
            "descriptors": {
                "unicode-range": {
                    "comment": "replaces <unicode-range>, an old production name",
                    "syntax": "<urange>#"
                }
            }
        }
    },
    "properties": {
        "-moz-background-clip": {
            "comment": "deprecated syntax in old Firefox, https://developer.mozilla.org/en/docs/Web/CSS/background-clip",
            "syntax": "padding | border"
        },
        "-moz-border-radius-bottomleft": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-left-radius",
            "syntax": "<'border-bottom-left-radius'>"
        },
        "-moz-border-radius-bottomright": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius",
            "syntax": "<'border-bottom-right-radius'>"
        },
        "-moz-border-radius-topleft": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-left-radius",
            "syntax": "<'border-top-left-radius'>"
        },
        "-moz-border-radius-topright": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius",
            "syntax": "<'border-bottom-right-radius'>"
        },
        "-moz-control-character-visibility": {
            "comment": "firefox specific keywords, https://bugzilla.mozilla.org/show_bug.cgi?id=947588",
            "syntax": "visible | hidden"
        },
        "-moz-osx-font-smoothing": {
            "comment": "misssed old syntax https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth",
            "syntax": "auto | grayscale"
        },
        "-moz-user-select": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
            "syntax": "none | text | all | -moz-none"
        },
        "-ms-flex-align": {
            "comment": "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align",
            "syntax": "start | end | center | baseline | stretch"
        },
        "-ms-flex-item-align": {
            "comment": "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align",
            "syntax": "auto | start | end | center | baseline | stretch"
        },
        "-ms-flex-line-pack": {
            "comment": "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-line-pack",
            "syntax": "start | end | center | justify | distribute | stretch"
        },
        "-ms-flex-negative": {
            "comment": "misssed old syntax implemented in IE; TODO: find references for comfirmation",
            "syntax": "<'flex-shrink'>"
        },
        "-ms-flex-pack": {
            "comment": "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-pack",
            "syntax": "start | end | center | justify | distribute"
        },
        "-ms-flex-order": {
            "comment": "misssed old syntax implemented in IE; https://msdn.microsoft.com/en-us/library/jj127303(v=vs.85).aspx",
            "syntax": "<integer>"
        },
        "-ms-flex-positive": {
            "comment": "misssed old syntax implemented in IE; TODO: find references for comfirmation",
            "syntax": "<'flex-grow'>"
        },
        "-ms-flex-preferred-size": {
            "comment": "misssed old syntax implemented in IE; TODO: find references for comfirmation",
            "syntax": "<'flex-basis'>"
        },
        "-ms-interpolation-mode": {
            "comment": "https://msdn.microsoft.com/en-us/library/ff521095(v=vs.85).aspx",
            "syntax": "nearest-neighbor | bicubic"
        },
        "-ms-grid-column-align": {
            "comment": "add this property first since it uses as fallback for flexbox, https://msdn.microsoft.com/en-us/library/windows/apps/hh466338.aspx",
            "syntax": "start | end | center | stretch"
        },
        "-ms-grid-row-align": {
            "comment": "add this property first since it uses as fallback for flexbox, https://msdn.microsoft.com/en-us/library/windows/apps/hh466348.aspx",
            "syntax": "start | end | center | stretch"
        },
        "-ms-hyphenate-limit-last": {
            "comment": "misssed old syntax implemented in IE; https://www.w3.org/TR/css-text-4/#hyphenate-line-limits",
            "syntax": "none | always | column | page | spread"
        },
        "-webkit-appearance": {
            "comment": "webkit specific keywords",
            "references": [
                "http://css-infos.net/property/-webkit-appearance"
            ],
            "syntax": "none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button"
        },
        "-webkit-background-clip": {
            "comment": "https://developer.mozilla.org/en/docs/Web/CSS/background-clip",
            "syntax": "[ <box> | border | padding | content | text ]#"
        },
        "-webkit-column-break-after": {
            "comment": "added, http://help.dottoro.com/lcrthhhv.php",
            "syntax": "always | auto | avoid"
        },
        "-webkit-column-break-before": {
            "comment": "added, http://help.dottoro.com/lcxquvkf.php",
            "syntax": "always | auto | avoid"
        },
        "-webkit-column-break-inside": {
            "comment": "added, http://help.dottoro.com/lclhnthl.php",
            "syntax": "always | auto | avoid"
        },
        "-webkit-font-smoothing": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth",
            "syntax": "auto | none | antialiased | subpixel-antialiased"
        },
        "-webkit-mask-box-image": {
            "comment": "missed; https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-box-image",
            "syntax": "[ <url> | <gradient> | none ] [ <length-percentage>{4} <-webkit-mask-box-repeat>{2} ]?"
        },
        "-webkit-print-color-adjust": {
            "comment": "missed",
            "references": [
                "https://developer.mozilla.org/en/docs/Web/CSS/-webkit-print-color-adjust"
            ],
            "syntax": "economy | exact"
        },
        "-webkit-text-security": {
            "comment": "missed; http://help.dottoro.com/lcbkewgt.php",
            "syntax": "none | circle | disc | square"
        },
        "-webkit-user-drag": {
            "comment": "missed; http://help.dottoro.com/lcbixvwm.php",
            "syntax": "none | element | auto"
        },
        "-webkit-user-select": {
            "comment": "auto is supported by old webkit, https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
            "syntax": "auto | none | text | all"
        },
        "alignment-baseline": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#AlignmentBaselineProperty"
            ],
            "syntax": "auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical"
        },
        "baseline-shift": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#BaselineShiftProperty"
            ],
            "syntax": "baseline | sub | super | <svg-length>"
        },
        "behavior": {
            "comment": "added old IE property https://msdn.microsoft.com/en-us/library/ms530723(v=vs.85).aspx",
            "syntax": "<url>+"
        },
        "clip-rule": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/masking.html#ClipRuleProperty"
            ],
            "syntax": "nonzero | evenodd"
        },
        "cue": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<'cue-before'> <'cue-after'>?"
        },
        "cue-after": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<url> <decibel>? | none"
        },
        "cue-before": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<url> <decibel>? | none"
        },
        "cursor": {
            "comment": "added legacy keywords: hand, -webkit-grab. -webkit-grabbing, -webkit-zoom-in, -webkit-zoom-out, -moz-grab, -moz-grabbing, -moz-zoom-in, -moz-zoom-out",
            "references": [
                "https://www.sitepoint.com/css3-cursor-styles/"
            ],
            "syntax": "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing | hand | -webkit-grab | -webkit-grabbing | -webkit-zoom-in | -webkit-zoom-out | -moz-grab | -moz-grabbing | -moz-zoom-in | -moz-zoom-out ] ]"
        },
        "display": {
            "comment": "extended with -ms-flexbox",
            "syntax": "| <-non-standard-display>"
        },
        "position": {
            "comment": "extended with -webkit-sticky",
            "syntax": "| -webkit-sticky"
        },
        "dominant-baseline": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#DominantBaselineProperty"
            ],
            "syntax": "auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge"
        },
        "image-rendering": {
            "comment": "extended with <-non-standard-image-rendering>, added SVG keywords optimizeSpeed and optimizeQuality",
            "references": [
                "https://developer.mozilla.org/en/docs/Web/CSS/image-rendering",
                "https://www.w3.org/TR/SVG/painting.html#ImageRenderingProperty"
            ],
            "syntax": "| optimizeSpeed | optimizeQuality | <-non-standard-image-rendering>"
        },
        "fill": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#FillProperty"
            ],
            "syntax": "<paint>"
        },
        "fill-opacity": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#FillProperty"
            ],
            "syntax": "<number-zero-one>"
        },
        "fill-rule": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#FillProperty"
            ],
            "syntax": "nonzero | evenodd"
        },
        "filter": {
            "comment": "extend with IE legacy syntaxes",
            "syntax": "| <-ms-filter-function-list>"
        },
        "glyph-orientation-horizontal": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#GlyphOrientationHorizontalProperty"
            ],
            "syntax": "<angle>"
        },
        "glyph-orientation-vertical": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#GlyphOrientationVerticalProperty"
            ],
            "syntax": "<angle>"
        },
        "kerning": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#KerningProperty"
            ],
            "syntax": "auto | <svg-length>"
        },
        "letter-spacing": {
            "comment": "fix syntax <length> -> <length-percentage>",
            "references": [
                "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/letter-spacing"
            ],
            "syntax": "normal | <length-percentage>"
        },
        "marker": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
            ],
            "syntax": "none | <url>"
        },
        "marker-end": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
            ],
            "syntax": "none | <url>"
        },
        "marker-mid": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
            ],
            "syntax": "none | <url>"
        },
        "marker-start": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
            ],
            "syntax": "none | <url>"
        },
        "max-width": {
            "comment": "fix auto -> none (https://github.com/mdn/data/pull/431); extend by non-standard width keywords https://developer.mozilla.org/en-US/docs/Web/CSS/max-width",
            "syntax": "none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>) | <-non-standard-width>"
        },
        "width": {
            "comment": "per spec fit-content should be a function, however browsers are supporting it as a keyword (https://github.com/csstree/stylelint-validator/issues/29)",
            "syntax": "| fit-content | -moz-fit-content | -webkit-fit-content"
        },
        "min-width": {
            "comment": "extend by non-standard width keywords https://developer.mozilla.org/en-US/docs/Web/CSS/width",
            "syntax": "auto | <length-percentage> | min-content | max-content | fit-content(<length-percentage>) | <-non-standard-width>"
        },
        "overflow": {
            "comment": "extend by vendor keywords https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
            "syntax": "| <-non-standard-overflow>"
        },
        "pause": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<'pause-before'> <'pause-after'>?"
        },
        "pause-after": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "pause-before": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "rest": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<'rest-before'> <'rest-after'>?"
        },
        "rest-after": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "rest-before": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "shape-rendering": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#ShapeRenderingPropert"
            ],
            "syntax": "auto | optimizeSpeed | crispEdges | geometricPrecision"
        },
        "src": {
            "comment": "added @font-face's src property https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src",
            "syntax": "[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#"
        },
        "speak": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "auto | none | normal"
        },
        "speak-as": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "normal | spell-out || digits || [ literal-punctuation | no-punctuation ]"
        },
        "stroke": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "<paint>"
        },
        "stroke-dasharray": {
            "comment": "added SVG property; a list of comma and/or white space separated <length>s and <percentage>s",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "none | [ <svg-length>+ ]#"
        },
        "stroke-dashoffset": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "<svg-length>"
        },
        "stroke-linecap": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "butt | round | square"
        },
        "stroke-linejoin": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "miter | round | bevel"
        },
        "stroke-miterlimit": {
            "comment": "added SVG property (<miterlimit> = <number-one-or-greater>) ",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "<number-one-or-greater>"
        },
        "stroke-opacity": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "<number-zero-one>"
        },
        "stroke-width": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
            ],
            "syntax": "<svg-length>"
        },
        "text-anchor": {
            "comment": "added SVG property",
            "references": [
                "https://www.w3.org/TR/SVG/text.html#TextAlignmentProperties"
            ],
            "syntax": "start | middle | end"
        },
        "unicode-bidi": {
            "comment": "added prefixed keywords https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi",
            "syntax": "| -moz-isolate | -moz-isolate-override | -moz-plaintext | -webkit-isolate | -webkit-isolate-override | -webkit-plaintext"
        },
        "unicode-range": {
            "comment": "added missed property https://developer.mozilla.org/en-US/docs/Web/CSS/%40font-face/unicode-range",
            "syntax": "<urange>#"
        },
        "voice-balance": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<number> | left | center | right | leftwards | rightwards"
        },
        "voice-duration": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "auto | <time>"
        },
        "voice-family": {
            "comment": "<name> -> <family-name>, https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "[ [ <family-name> | <generic-voice> ] , ]* [ <family-name> | <generic-voice> ] | preserve"
        },
        "voice-pitch": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<frequency> && absolute | [ [ x-low | low | medium | high | x-high ] || [ <frequency> | <semitones> | <percentage> ] ]"
        },
        "voice-range": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "<frequency> && absolute | [ [ x-low | low | medium | high | x-high ] || [ <frequency> | <semitones> | <percentage> ] ]"
        },
        "voice-rate": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "[ normal | x-slow | slow | medium | fast | x-fast ] || <percentage>"
        },
        "voice-stress": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "normal | strong | moderate | none | reduced"
        },
        "voice-volume": {
            "comment": "https://www.w3.org/TR/css3-speech/#property-index",
            "syntax": "silent | [ [ x-soft | soft | medium | loud | x-loud ] || <decibel> ]"
        },
        "writing-mode": {
            "comment": "extend with SVG keywords",
            "syntax": "| <svg-writing-mode>"
        }
    },
    "syntaxes": {
        "-legacy-gradient": {
            "comment": "added collection of legacy gradient syntaxes",
            "syntax": "<-webkit-gradient()> | <-legacy-linear-gradient> | <-legacy-repeating-linear-gradient> | <-legacy-radial-gradient> | <-legacy-repeating-radial-gradient>"
        },
        "-legacy-linear-gradient": {
            "comment": "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
            "syntax": "-moz-linear-gradient( <-legacy-linear-gradient-arguments> ) | -webkit-linear-gradient( <-legacy-linear-gradient-arguments> ) | -o-linear-gradient( <-legacy-linear-gradient-arguments> )"
        },
        "-legacy-repeating-linear-gradient": {
            "comment": "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
            "syntax": "-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> ) | -webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> ) | -o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )"
        },
        "-legacy-linear-gradient-arguments": {
            "comment": "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
            "syntax": "[ <angle> | <side-or-corner> ]? , <color-stop-list>"
        },
        "-legacy-radial-gradient": {
            "comment": "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
            "syntax": "-moz-radial-gradient( <-legacy-radial-gradient-arguments> ) | -webkit-radial-gradient( <-legacy-radial-gradient-arguments> ) | -o-radial-gradient( <-legacy-radial-gradient-arguments> )"
        },
        "-legacy-repeating-radial-gradient": {
            "comment": "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
            "syntax": "-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> ) | -webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> ) | -o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )"
        },
        "-legacy-radial-gradient-arguments": {
            "comment": "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
            "syntax": "[ <position> , ]? [ [ [ <-legacy-radial-gradient-shape> || <-legacy-radial-gradient-size> ] | [ <length> | <percentage> ]{2} ] , ]? <color-stop-list>"
        },
        "-legacy-radial-gradient-size": {
            "comment": "before a standard it contains 2 extra keywords (`contain` and `cover`) https://www.w3.org/TR/2011/WD-css3-images-20110908/#ltsize",
            "syntax": "closest-side | closest-corner | farthest-side | farthest-corner | contain | cover"
        },
        "-legacy-radial-gradient-shape": {
            "comment": "define to double sure it doesn't extends in future https://www.w3.org/TR/2011/WD-css3-images-20110908/#ltshape",
            "syntax": "circle | ellipse"
        },
        "-non-standard-font": {
            "comment": "non standard fonts",
            "references": [
                "https://webkit.org/blog/3709/using-the-system-font-in-web-content/"
            ],
            "syntax": "-apple-system-body | -apple-system-headline | -apple-system-subheadline | -apple-system-caption1 | -apple-system-caption2 | -apple-system-footnote | -apple-system-short-body | -apple-system-short-headline | -apple-system-short-subheadline | -apple-system-short-caption1 | -apple-system-short-footnote | -apple-system-tall-body"
        },
        "-non-standard-color": {
            "comment": "non standard colors",
            "references": [
                "http://cssdot.ru/%D0%A1%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA_CSS/color-i305.html",
                "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Mozilla_Color_Preference_Extensions"
            ],
            "syntax": "-moz-ButtonDefault | -moz-ButtonHoverFace | -moz-ButtonHoverText | -moz-CellHighlight | -moz-CellHighlightText | -moz-Combobox | -moz-ComboboxText | -moz-Dialog | -moz-DialogText | -moz-dragtargetzone | -moz-EvenTreeRow | -moz-Field | -moz-FieldText | -moz-html-CellHighlight | -moz-html-CellHighlightText | -moz-mac-accentdarkestshadow | -moz-mac-accentdarkshadow | -moz-mac-accentface | -moz-mac-accentlightesthighlight | -moz-mac-accentlightshadow | -moz-mac-accentregularhighlight | -moz-mac-accentregularshadow | -moz-mac-chrome-active | -moz-mac-chrome-inactive | -moz-mac-focusring | -moz-mac-menuselect | -moz-mac-menushadow | -moz-mac-menutextselect | -moz-MenuHover | -moz-MenuHoverText | -moz-MenuBarText | -moz-MenuBarHoverText | -moz-nativehyperlinktext | -moz-OddTreeRow | -moz-win-communicationstext | -moz-win-mediatext | -moz-activehyperlinktext | -moz-default-background-color | -moz-default-color | -moz-hyperlinktext | -moz-visitedhyperlinktext | -webkit-activelink | -webkit-focus-ring-color | -webkit-link | -webkit-text"
        },
        "-non-standard-image-rendering": {
            "comment": "non-standard keywords http://phrogz.net/tmp/canvas_image_zoom.html",
            "syntax": "optimize-contrast | -moz-crisp-edges | -o-crisp-edges | -webkit-optimize-contrast"
        },
        "-non-standard-overflow": {
            "comment": "non-standard keywords https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
            "syntax": "-moz-scrollbars-none | -moz-scrollbars-horizontal | -moz-scrollbars-vertical | -moz-hidden-unscrollable"
        },
        "-non-standard-width": {
            "comment": "non-standard keywords https://developer.mozilla.org/en-US/docs/Web/CSS/width",
            "syntax": "fill-available | min-intrinsic | intrinsic | -moz-available | -moz-fit-content | -moz-min-content | -moz-max-content | -webkit-min-content | -webkit-max-content"
        },
        "-webkit-gradient()": {
            "comment": "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/ - TODO: simplify when after match algorithm improvement ( [, point, radius | , point] -> [, radius]? , point )",
            "syntax": "-webkit-gradient( <-webkit-gradient-type>, <-webkit-gradient-point> [, <-webkit-gradient-point> | , <-webkit-gradient-radius>, <-webkit-gradient-point> ] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )"
        },
        "-webkit-gradient-color-stop": {
            "comment": "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
            "syntax": "from( <color> ) | color-stop( [ <number-zero-one> | <percentage> ] , <color> ) | to( <color> )"
        },
        "-webkit-gradient-point": {
            "comment": "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
            "syntax": "[ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]"
        },
        "-webkit-gradient-radius": {
            "comment": "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
            "syntax": "<length> | <percentage>"
        },
        "-webkit-gradient-type": {
            "comment": "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
            "syntax": "linear | radial"
        },
        "-webkit-mask-box-repeat": {
            "comment": "missed; https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-box-image",
            "syntax": "repeat | stretch | round"
        },
        "-webkit-mask-clip-style": {
            "comment": "missed; there is no enough information about `-webkit-mask-clip` property, but looks like all those keywords are working",
            "syntax": "border | border-box | padding | padding-box | content | content-box | text"
        },
        "-ms-filter-function-list": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
            "syntax": "<-ms-filter-function>+"
        },
        "-ms-filter-function": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
            "syntax": "<-ms-filter-function-progid> | <-ms-filter-function-legacy>"
        },
        "-ms-filter-function-progid": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
            "syntax": "'progid:' [ <ident-token> '.' ]* [ <ident-token> | <function-token> <any-value>? ) ]"
        },
        "-ms-filter-function-legacy": {
            "comment": "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
            "syntax": "<ident-token> | <function-token> <any-value>? )"
        },
        "-ms-filter": {
            "syntax": "<string>"
        },
        "age": {
            "comment": "https://www.w3.org/TR/css3-speech/#voice-family",
            "syntax": "child | young | old"
        },
        "attr-name": {
            "syntax": "<wq-name>"
        },
        "attr-fallback": {
            "syntax": "<any-value>"
        },
        "border-radius": {
            "comment": "missed, https://drafts.csswg.org/css-backgrounds-3/#the-border-radius",
            "syntax": "<length-percentage>{1,2}"
        },
        "bottom": {
            "comment": "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
            "syntax": "<length> | auto"
        },
        "content-list": {
            "comment": "missed -> https://drafts.csswg.org/css-content/#typedef-content-list (document-url, <target> and leader() is omitted util stabilization)",
            "syntax": "[ <string> | contents | <image> | <quote> | <target> | <leader()> | <attr()> | counter( <ident>, <'list-style-type'>? ) ]+"
        },
        "element()": {
            "comment": "https://drafts.csswg.org/css-gcpm/#element-syntax & https://drafts.csswg.org/css-images-4/#element-notation",
            "syntax": "element( <custom-ident> , [ first | start | last | first-except ]? ) | element( <id-selector> )"
        },
        "generic-voice": {
            "comment": "https://www.w3.org/TR/css3-speech/#voice-family",
            "syntax": "[ <age>? <gender> <integer>? ]"
        },
        "gender": {
            "comment": "https://www.w3.org/TR/css3-speech/#voice-family",
            "syntax": "male | female | neutral"
        },
        "generic-family": {
            "comment": "added -apple-system",
            "references": [
                "https://webkit.org/blog/3709/using-the-system-font-in-web-content/"
            ],
            "syntax": "| -apple-system"
        },
        "gradient": {
            "comment": "added legacy syntaxes support",
            "syntax": "| <-legacy-gradient>"
        },
        "left": {
            "comment": "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
            "syntax": "<length> | auto"
        },
        "mask-image": {
            "comment": "missed; https://drafts.fxtf.org/css-masking-1/#the-mask-image",
            "syntax": "<mask-reference>#"
        },
        "name-repeat": {
            "comment": "missed, and looks like obsolete, keep it as is since other property syntaxes should be changed too; https://www.w3.org/TR/2015/WD-css-grid-1-20150917/#typedef-name-repeat",
            "syntax": "repeat( [ <positive-integer> | auto-fill ], <line-names>+)"
        },
        "named-color": {
            "comment": "added non standard color names",
            "syntax": "| <-non-standard-color>"
        },
        "paint": {
            "comment": "used by SVG https://www.w3.org/TR/SVG/painting.html#SpecifyingPaint",
            "syntax": "none | <color> | <url> [ none | <color> ]? | context-fill | context-stroke"
        },
        "page-size": {
            "comment": "https://www.w3.org/TR/css-page-3/#typedef-page-size-page-size",
            "syntax": "A5 | A4 | A3 | B5 | B4 | JIS-B5 | JIS-B4 | letter | legal | ledger"
        },
        "ratio": {
            "comment": "missed, https://drafts.csswg.org/mediaqueries-4/#typedef-ratio",
            "syntax": "<integer> / <integer>"
        },
        "right": {
            "comment": "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
            "syntax": "<length> | auto"
        },
        "shape": {
            "comment": "missed spaces in function body and add backwards compatible syntax",
            "syntax": "rect( <top>, <right>, <bottom>, <left> ) | rect( <top> <right> <bottom> <left> )"
        },
        "svg-length": {
            "comment": "All coordinates and lengths in SVG can be specified with or without a unit identifier",
            "references": [
                "https://www.w3.org/TR/SVG11/coords.html#Units"
            ],
            "syntax": "<percentage> | <length> | <number>"
        },
        "svg-writing-mode": {
            "comment": "SVG specific keywords (deprecated for CSS)",
            "references": [
                "https://developer.mozilla.org/en/docs/Web/CSS/writing-mode",
                "https://www.w3.org/TR/SVG/text.html#WritingModeProperty"
            ],
            "syntax": "lr-tb | rl-tb | tb-rl | lr | rl | tb"
        },
        "top": {
            "comment": "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
            "syntax": "<length> | auto"
        },
        "track-group": {
            "comment": "used by old grid-columns and grid-rows syntax v0",
            "syntax": "'(' [ <string>* <track-minmax> <string>* ]+ ')' [ '[' <positive-integer> ']' ]? | <track-minmax>"
        },
        "track-list-v0": {
            "comment": "used by old grid-columns and grid-rows syntax v0",
            "syntax": "[ <string>* <track-group> <string>* ]+ | none"
        },
        "track-minmax": {
            "comment": "used by old grid-columns and grid-rows syntax v0",
            "syntax": "minmax( <track-breadth> , <track-breadth> ) | auto | <track-breadth> | fit-content"
        },
        "x": {
            "comment": "missed; not sure we should add it, but no others except `cursor` is using it so it's ok for now; https://drafts.csswg.org/css-ui-3/#cursor",
            "syntax": "<number>"
        },
        "y": {
            "comment": "missed; not sure we should add it, but no others except `cursor` is using so it's ok for now; https://drafts.csswg.org/css-ui-3/#cursor",
            "syntax": "<number>"
        },
        "declaration": {
            "comment": "missed, restored by https://drafts.csswg.org/css-syntax",
            "syntax": "<ident-token> : <declaration-value>? [ '!' important ]?"
        },
        "declaration-list": {
            "comment": "missed, restored by https://drafts.csswg.org/css-syntax",
            "syntax": "[ <declaration>? ';' ]* <declaration>?"
        },
        "url": {
            "comment": "https://drafts.csswg.org/css-values-4/#urls",
            "syntax": "url( <string> <url-modifier>* ) | <url-token>"
        },
        "url-modifier": {
            "comment": "https://drafts.csswg.org/css-values-4/#typedef-url-modifier",
            "syntax": "<ident> | <function-token> <any-value> )"
        },
        "number-zero-one": {
            "syntax": "<number [0,1]>"
        },
        "number-one-or-greater": {
            "syntax": "<number [1,∞]>"
        },
        "positive-integer": {
            "syntax": "<integer [0,∞]>"
        },
        "-non-standard-display": {
            "syntax": "-ms-inline-flexbox | -ms-grid | -ms-inline-grid | -webkit-flex | -webkit-inline-flex | -webkit-box | -webkit-inline-box | -moz-inline-stack | -moz-box | -moz-inline-box"
        }
    }
}
;
},885,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    AnPlusB: _$$_REQUIRE(_dependencyMap[0]),
    Atrule: _$$_REQUIRE(_dependencyMap[1]),
    AtrulePrelude: _$$_REQUIRE(_dependencyMap[2]),
    AttributeSelector: _$$_REQUIRE(_dependencyMap[3]),
    Block: _$$_REQUIRE(_dependencyMap[4]),
    Brackets: _$$_REQUIRE(_dependencyMap[5]),
    CDC: _$$_REQUIRE(_dependencyMap[6]),
    CDO: _$$_REQUIRE(_dependencyMap[7]),
    ClassSelector: _$$_REQUIRE(_dependencyMap[8]),
    Combinator: _$$_REQUIRE(_dependencyMap[9]),
    Comment: _$$_REQUIRE(_dependencyMap[10]),
    Declaration: _$$_REQUIRE(_dependencyMap[11]),
    DeclarationList: _$$_REQUIRE(_dependencyMap[12]),
    Dimension: _$$_REQUIRE(_dependencyMap[13]),
    Function: _$$_REQUIRE(_dependencyMap[14]),
    Hash: _$$_REQUIRE(_dependencyMap[15]),
    Identifier: _$$_REQUIRE(_dependencyMap[16]),
    IdSelector: _$$_REQUIRE(_dependencyMap[17]),
    MediaFeature: _$$_REQUIRE(_dependencyMap[18]),
    MediaQuery: _$$_REQUIRE(_dependencyMap[19]),
    MediaQueryList: _$$_REQUIRE(_dependencyMap[20]),
    Nth: _$$_REQUIRE(_dependencyMap[21]),
    Number: _$$_REQUIRE(_dependencyMap[22]),
    Operator: _$$_REQUIRE(_dependencyMap[23]),
    Parentheses: _$$_REQUIRE(_dependencyMap[24]),
    Percentage: _$$_REQUIRE(_dependencyMap[25]),
    PseudoClassSelector: _$$_REQUIRE(_dependencyMap[26]),
    PseudoElementSelector: _$$_REQUIRE(_dependencyMap[27]),
    Ratio: _$$_REQUIRE(_dependencyMap[28]),
    Raw: _$$_REQUIRE(_dependencyMap[29]),
    Rule: _$$_REQUIRE(_dependencyMap[30]),
    Selector: _$$_REQUIRE(_dependencyMap[31]),
    SelectorList: _$$_REQUIRE(_dependencyMap[32]),
    String: _$$_REQUIRE(_dependencyMap[33]),
    StyleSheet: _$$_REQUIRE(_dependencyMap[34]),
    TypeSelector: _$$_REQUIRE(_dependencyMap[35]),
    UnicodeRange: _$$_REQUIRE(_dependencyMap[36]),
    Url: _$$_REQUIRE(_dependencyMap[37]),
    Value: _$$_REQUIRE(_dependencyMap[38]),
    WhiteSpace: _$$_REQUIRE(_dependencyMap[39])
  };
},886,[887,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,889,917,918,919,920,921,922,923,924,925,926]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cmpChar = _$$_REQUIRE(_dependencyMap[0]).cmpChar;

  var isDigit = _$$_REQUIRE(_dependencyMap[0]).isDigit;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var IDENT = TYPE.Ident;
  var NUMBER = TYPE.Number;
  var DIMENSION = TYPE.Dimension;
  var PLUSSIGN = 0x002B;
  var HYPHENMINUS = 0x002D;
  var N = 0x006E;
  var DISALLOW_SIGN = true;
  var ALLOW_SIGN = false;

  function checkInteger(offset, disallowSign) {
    var pos = this.scanner.tokenStart + offset;
    var code = this.scanner.source.charCodeAt(pos);

    if (code === PLUSSIGN || code === HYPHENMINUS) {
      if (disallowSign) {
        this.error('Number sign is not allowed');
      }

      pos++;
    }

    for (; pos < this.scanner.tokenEnd; pos++) {
      if (!isDigit(this.scanner.source.charCodeAt(pos))) {
        this.error('Integer is expected', pos);
      }
    }
  }

  function checkTokenIsInteger(disallowSign) {
    return checkInteger.call(this, 0, disallowSign);
  }

  function expectCharCode(offset, code) {
    if (!cmpChar(this.scanner.source, this.scanner.tokenStart + offset, code)) {
      var msg = '';

      switch (code) {
        case N:
          msg = 'N is expected';
          break;

        case HYPHENMINUS:
          msg = 'HyphenMinus is expected';
          break;
      }

      this.error(msg, this.scanner.tokenStart + offset);
    }
  }

  function consumeB() {
    var offset = 0;
    var sign = 0;
    var type = this.scanner.tokenType;

    while (type === WHITESPACE || type === COMMENT) {
      type = this.scanner.lookupType(++offset);
    }

    if (type !== NUMBER) {
      if (this.scanner.isDelim(PLUSSIGN, offset) || this.scanner.isDelim(HYPHENMINUS, offset)) {
        sign = this.scanner.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;

        do {
          type = this.scanner.lookupType(++offset);
        } while (type === WHITESPACE || type === COMMENT);

        if (type !== NUMBER) {
          this.scanner.skip(offset);
          checkTokenIsInteger.call(this, DISALLOW_SIGN);
        }
      } else {
        return null;
      }
    }

    if (offset > 0) {
      this.scanner.skip(offset);
    }

    if (sign === 0) {
      type = this.scanner.source.charCodeAt(this.scanner.tokenStart);

      if (type !== PLUSSIGN && type !== HYPHENMINUS) {
        this.error('Number sign is expected');
      }
    }

    checkTokenIsInteger.call(this, sign !== 0);
    return sign === HYPHENMINUS ? '-' + this.consume(NUMBER) : this.consume(NUMBER);
  }

  module.exports = {
    name: 'AnPlusB',
    structure: {
      a: [String, null],
      b: [String, null]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var a = null;
      var b = null;

      if (this.scanner.tokenType === NUMBER) {
        checkTokenIsInteger.call(this, ALLOW_SIGN);
        b = this.consume(NUMBER);
      } else if (this.scanner.tokenType === IDENT && cmpChar(this.scanner.source, this.scanner.tokenStart, HYPHENMINUS)) {
          a = '-1';
          expectCharCode.call(this, 1, N);

          switch (this.scanner.getTokenLength()) {
            case 2:
              this.scanner.next();
              b = consumeB.call(this);
              break;

            case 3:
              expectCharCode.call(this, 2, HYPHENMINUS);
              this.scanner.next();
              this.scanner.skipSC();
              checkTokenIsInteger.call(this, DISALLOW_SIGN);
              b = '-' + this.consume(NUMBER);
              break;

            default:
              expectCharCode.call(this, 2, HYPHENMINUS);
              checkInteger.call(this, 3, DISALLOW_SIGN);
              this.scanner.next();
              b = this.scanner.substrToCursor(start + 2);
          }
        } else if (this.scanner.tokenType === IDENT || this.scanner.isDelim(PLUSSIGN) && this.scanner.lookupType(1) === IDENT) {
            var sign = 0;
            a = '1';

            if (this.scanner.isDelim(PLUSSIGN)) {
              sign = 1;
              this.scanner.next();
            }

            expectCharCode.call(this, 0, N);

            switch (this.scanner.getTokenLength()) {
              case 1:
                this.scanner.next();
                b = consumeB.call(this);
                break;

              case 2:
                expectCharCode.call(this, 1, HYPHENMINUS);
                this.scanner.next();
                this.scanner.skipSC();
                checkTokenIsInteger.call(this, DISALLOW_SIGN);
                b = '-' + this.consume(NUMBER);
                break;

              default:
                expectCharCode.call(this, 1, HYPHENMINUS);
                checkInteger.call(this, 2, DISALLOW_SIGN);
                this.scanner.next();
                b = this.scanner.substrToCursor(start + sign + 1);
            }
          } else if (this.scanner.tokenType === DIMENSION) {
              var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);
              var sign = code === PLUSSIGN || code === HYPHENMINUS;

              for (var i = this.scanner.tokenStart + sign; i < this.scanner.tokenEnd; i++) {
                if (!isDigit(this.scanner.source.charCodeAt(i))) {
                  break;
                }
              }

              if (i === this.scanner.tokenStart + sign) {
                this.error('Integer is expected', this.scanner.tokenStart + sign);
              }

              expectCharCode.call(this, i - this.scanner.tokenStart, N);
              a = this.scanner.source.substring(start, i);

              if (i + 1 === this.scanner.tokenEnd) {
                this.scanner.next();
                b = consumeB.call(this);
              } else {
                expectCharCode.call(this, i - this.scanner.tokenStart + 1, HYPHENMINUS);

                if (i + 2 === this.scanner.tokenEnd) {
                  this.scanner.next();
                  this.scanner.skipSC();
                  checkTokenIsInteger.call(this, DISALLOW_SIGN);
                  b = '-' + this.consume(NUMBER);
                } else {
                    checkInteger.call(this, i - this.scanner.tokenStart + 2, DISALLOW_SIGN);
                    this.scanner.next();
                    b = this.scanner.substrToCursor(i + 1);
                  }
              }
            } else {
              this.error();
            }

      if (a !== null && a.charCodeAt(0) === PLUSSIGN) {
        a = a.substr(1);
      }

      if (b !== null && b.charCodeAt(0) === PLUSSIGN) {
        b = b.substr(1);
      }

      return {
        type: 'AnPlusB',
        loc: this.getLocation(start, this.scanner.tokenStart),
        a: a,
        b: b
      };
    },
    generate: function generate(node) {
      var a = node.a !== null && node.a !== undefined;
      var b = node.b !== null && node.b !== undefined;

      if (a) {
        this.chunk(node.a === '+1' ? '+n' : node.a === '1' ? 'n' : node.a === '-1' ? '-n' : node.a + 'n');

        if (b) {
          b = String(node.b);

          if (b.charAt(0) === '-' || b.charAt(0) === '+') {
            this.chunk(b.charAt(0));
            this.chunk(b.substr(1));
          } else {
            this.chunk('+');
            this.chunk(b);
          }
        }
      } else {
        this.chunk(String(node.b));
      }
    }
  };
},887,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var rawMode = _$$_REQUIRE(_dependencyMap[1]).mode;

  var ATKEYWORD = TYPE.AtKeyword;
  var SEMICOLON = TYPE.Semicolon;
  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;
  var RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;

  function consumeRaw(startToken) {
    return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);
  }

  function isDeclarationBlockAtrule() {
    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {
      if (type === RIGHTCURLYBRACKET) {
        return true;
      }

      if (type === LEFTCURLYBRACKET || type === ATKEYWORD) {
        return false;
      }
    }

    return false;
  }

  module.exports = {
    name: 'Atrule',
    structure: {
      name: String,
      prelude: ['AtrulePrelude', 'Raw', null],
      block: ['Block', null]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var name;
      var nameLowerCase;
      var prelude = null;
      var block = null;
      this.eat(ATKEYWORD);
      name = this.scanner.substrToCursor(start + 1);
      nameLowerCase = name.toLowerCase();
      this.scanner.skipSC();

      if (this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {
        if (this.parseAtrulePrelude) {
          prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);

          if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {
            prelude = null;
          }
        } else {
          prelude = consumeRaw.call(this, this.scanner.tokenIndex);
        }

        this.scanner.skipSC();
      }

      switch (this.scanner.tokenType) {
        case SEMICOLON:
          this.scanner.next();
          break;

        case LEFTCURLYBRACKET:
          if (this.atrule.hasOwnProperty(nameLowerCase) && typeof this.atrule[nameLowerCase].block === 'function') {
            block = this.atrule[nameLowerCase].block.call(this);
          } else {
            block = this.Block(isDeclarationBlockAtrule.call(this));
          }

          break;
      }

      return {
        type: 'Atrule',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: name,
        prelude: prelude,
        block: block
      };
    },
    generate: function generate(node) {
      this.chunk('@');
      this.chunk(node.name);

      if (node.prelude !== null) {
        this.chunk(' ');
        this.node(node.prelude);
      }

      if (node.block) {
        this.node(node.block);
      } else {
        this.chunk(';');
      }
    },
    walkContext: 'atrule'
  };
},888,[850,889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var tokenizer = _$$_REQUIRE(_dependencyMap[0]);

  var TYPE = tokenizer.TYPE;
  var WhiteSpace = TYPE.WhiteSpace;
  var Semicolon = TYPE.Semicolon;
  var LeftCurlyBracket = TYPE.LeftCurlyBracket;
  var Delim = TYPE.Delim;
  var EXCLAMATIONMARK = 0x0021;

  function getOffsetExcludeWS() {
    if (this.scanner.tokenIndex > 0) {
      if (this.scanner.lookupType(-1) === WhiteSpace) {
        return this.scanner.tokenIndex > 1 ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1) : this.scanner.firstCharOffset;
      }
    }

    return this.scanner.tokenStart;
  }

  function balanceEnd() {
    return 0;
  }

  function leftCurlyBracket(tokenType) {
    return tokenType === LeftCurlyBracket ? 1 : 0;
  }

  function leftCurlyBracketOrSemicolon(tokenType) {
    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;
  }

  function exclamationMarkOrSemicolon(tokenType, source, offset) {
    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {
      return 1;
    }

    return tokenType === Semicolon ? 1 : 0;
  }

  function semicolonIncluded(tokenType) {
    return tokenType === Semicolon ? 2 : 0;
  }

  module.exports = {
    name: 'Raw',
    structure: {
      value: String
    },
    parse: function parse(startToken, mode, excludeWhiteSpace) {
      var startOffset = this.scanner.getTokenStart(startToken);
      var endOffset;
      this.scanner.skip(this.scanner.getRawLength(startToken, mode || balanceEnd));

      if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {
        endOffset = getOffsetExcludeWS.call(this);
      } else {
        endOffset = this.scanner.tokenStart;
      }

      return {
        type: 'Raw',
        loc: this.getLocation(startOffset, endOffset),
        value: this.scanner.source.substring(startOffset, endOffset)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
    },
    mode: {
      default: balanceEnd,
      leftCurlyBracket: leftCurlyBracket,
      leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,
      exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,
      semicolonIncluded: semicolonIncluded
    }
  };
},889,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var SEMICOLON = TYPE.Semicolon;
  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;
  module.exports = {
    name: 'AtrulePrelude',
    structure: {
      children: [[]]
    },
    parse: function parse(name) {
      var children = null;

      if (name !== null) {
        name = name.toLowerCase();
      }

      this.scanner.skipSC();

      if (this.atrule.hasOwnProperty(name) && typeof this.atrule[name].prelude === 'function') {
        children = this.atrule[name].prelude.call(this);
      } else {
        children = this.readSequence(this.scope.AtrulePrelude);
      }

      this.scanner.skipSC();

      if (this.scanner.eof !== true && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {
        this.error('Semicolon or block is expected');
      }

      if (children === null) {
        children = this.createList();
      }

      return {
        type: 'AtrulePrelude',
        loc: this.getLocationFromList(children),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node);
    },
    walkContext: 'atrulePrelude'
  };
},890,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var STRING = TYPE.String;
  var COLON = TYPE.Colon;
  var LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;
  var RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;
  var DOLLARSIGN = 0x0024;
  var ASTERISK = 0x002A;
  var EQUALSSIGN = 0x003D;
  var CIRCUMFLEXACCENT = 0x005E;
  var VERTICALLINE = 0x007C;
  var TILDE = 0x007E;

  function getAttributeName() {
    if (this.scanner.eof) {
      this.error('Unexpected end of input');
    }

    var start = this.scanner.tokenStart;
    var expectIdent = false;
    var checkColon = true;

    if (this.scanner.isDelim(ASTERISK)) {
      expectIdent = true;
      checkColon = false;
      this.scanner.next();
    } else if (!this.scanner.isDelim(VERTICALLINE)) {
      this.eat(IDENT);
    }

    if (this.scanner.isDelim(VERTICALLINE)) {
      if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 1) !== EQUALSSIGN) {
        this.scanner.next();
        this.eat(IDENT);
      } else if (expectIdent) {
        this.error('Identifier is expected', this.scanner.tokenEnd);
      }
    } else if (expectIdent) {
      this.error('Vertical line is expected');
    }

    if (checkColon && this.scanner.tokenType === COLON) {
      this.scanner.next();
      this.eat(IDENT);
    }

    return {
      type: 'Identifier',
      loc: this.getLocation(start, this.scanner.tokenStart),
      name: this.scanner.substrToCursor(start)
    };
  }

  function getOperator() {
    var start = this.scanner.tokenStart;
    var code = this.scanner.source.charCodeAt(start);

    if (code !== EQUALSSIGN && code !== TILDE && code !== CIRCUMFLEXACCENT && code !== DOLLARSIGN && code !== ASTERISK && code !== VERTICALLINE) {
        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');
      }

    this.scanner.next();

    if (code !== EQUALSSIGN) {
      if (!this.scanner.isDelim(EQUALSSIGN)) {
        this.error('Equal sign is expected');
      }

      this.scanner.next();
    }

    return this.scanner.substrToCursor(start);
  }

  module.exports = {
    name: 'AttributeSelector',
    structure: {
      name: 'Identifier',
      matcher: [String, null],
      value: ['String', 'Identifier', null],
      flags: [String, null]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var name;
      var matcher = null;
      var value = null;
      var flags = null;
      this.eat(LEFTSQUAREBRACKET);
      this.scanner.skipSC();
      name = getAttributeName.call(this);
      this.scanner.skipSC();

      if (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {
        if (this.scanner.tokenType !== IDENT) {
          matcher = getOperator.call(this);
          this.scanner.skipSC();
          value = this.scanner.tokenType === STRING ? this.String() : this.Identifier();
          this.scanner.skipSC();
        }

        if (this.scanner.tokenType === IDENT) {
          flags = this.scanner.getTokenValue();
          this.scanner.next();
          this.scanner.skipSC();
        }
      }

      this.eat(RIGHTSQUAREBRACKET);
      return {
        type: 'AttributeSelector',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: name,
        matcher: matcher,
        value: value,
        flags: flags
      };
    },
    generate: function generate(node) {
      var flagsPrefix = ' ';
      this.chunk('[');
      this.node(node.name);

      if (node.matcher !== null) {
        this.chunk(node.matcher);

        if (node.value !== null) {
          this.node(node.value);

          if (node.value.type === 'String') {
            flagsPrefix = '';
          }
        }
      }

      if (node.flags !== null) {
        this.chunk(flagsPrefix);
        this.chunk(node.flags);
      }

      this.chunk(']');
    }
  };
},891,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var rawMode = _$$_REQUIRE(_dependencyMap[1]).mode;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var SEMICOLON = TYPE.Semicolon;
  var ATKEYWORD = TYPE.AtKeyword;
  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;
  var RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;

  function consumeRaw(startToken) {
    return this.Raw(startToken, null, true);
  }

  function consumeRule() {
    return this.parseWithFallback(this.Rule, consumeRaw);
  }

  function consumeRawDeclaration(startToken) {
    return this.Raw(startToken, rawMode.semicolonIncluded, true);
  }

  function consumeDeclaration() {
    if (this.scanner.tokenType === SEMICOLON) {
      return consumeRawDeclaration.call(this, this.scanner.tokenIndex);
    }

    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);

    if (this.scanner.tokenType === SEMICOLON) {
      this.scanner.next();
    }

    return node;
  }

  module.exports = {
    name: 'Block',
    structure: {
      children: [['Atrule', 'Rule', 'Declaration']]
    },
    parse: function parse(isDeclaration) {
      var consumer = isDeclaration ? consumeDeclaration : consumeRule;
      var start = this.scanner.tokenStart;
      var children = this.createList();
      this.eat(LEFTCURLYBRACKET);

      scan: while (!this.scanner.eof) {
        switch (this.scanner.tokenType) {
          case RIGHTCURLYBRACKET:
            break scan;

          case WHITESPACE:
          case COMMENT:
            this.scanner.next();
            break;

          case ATKEYWORD:
            children.push(this.parseWithFallback(this.Atrule, consumeRaw));
            break;

          default:
            children.push(consumer.call(this));
        }
      }

      if (!this.scanner.eof) {
        this.eat(RIGHTCURLYBRACKET);
      }

      return {
        type: 'Block',
        loc: this.getLocation(start, this.scanner.tokenStart),
        children: children
      };
    },
    generate: function generate(node) {
      this.chunk('{');
      this.children(node, function (prev) {
        if (prev.type === 'Declaration') {
          this.chunk(';');
        }
      });
      this.chunk('}');
    },
    walkContext: 'block'
  };
},892,[850,889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;
  var RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;
  module.exports = {
    name: 'Brackets',
    structure: {
      children: [[]]
    },
    parse: function parse(readSequence, recognizer) {
      var start = this.scanner.tokenStart;
      var children = null;
      this.eat(LEFTSQUAREBRACKET);
      children = readSequence.call(this, recognizer);

      if (!this.scanner.eof) {
        this.eat(RIGHTSQUAREBRACKET);
      }

      return {
        type: 'Brackets',
        loc: this.getLocation(start, this.scanner.tokenStart),
        children: children
      };
    },
    generate: function generate(node) {
      this.chunk('[');
      this.children(node);
      this.chunk(']');
    }
  };
},893,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var CDC = _$$_REQUIRE(_dependencyMap[0]).TYPE.CDC;

  module.exports = {
    name: 'CDC',
    structure: [],
    parse: function parse() {
      var start = this.scanner.tokenStart;
      this.eat(CDC);
      return {
        type: 'CDC',
        loc: this.getLocation(start, this.scanner.tokenStart)
      };
    },
    generate: function generate() {
      this.chunk('-->');
    }
  };
},894,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var CDO = _$$_REQUIRE(_dependencyMap[0]).TYPE.CDO;

  module.exports = {
    name: 'CDO',
    structure: [],
    parse: function parse() {
      var start = this.scanner.tokenStart;
      this.eat(CDO);
      return {
        type: 'CDO',
        loc: this.getLocation(start, this.scanner.tokenStart)
      };
    },
    generate: function generate() {
      this.chunk('<!--');
    }
  };
},895,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var FULLSTOP = 0x002E;
  module.exports = {
    name: 'ClassSelector',
    structure: {
      name: String
    },
    parse: function parse() {
      if (!this.scanner.isDelim(FULLSTOP)) {
        this.error('Full stop is expected');
      }

      this.scanner.next();
      return {
        type: 'ClassSelector',
        loc: this.getLocation(this.scanner.tokenStart - 1, this.scanner.tokenEnd),
        name: this.consume(IDENT)
      };
    },
    generate: function generate(node) {
      this.chunk('.');
      this.chunk(node.name);
    }
  };
},896,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var PLUSSIGN = 0x002B;
  var SOLIDUS = 0x002F;
  var GREATERTHANSIGN = 0x003E;
  var TILDE = 0x007E;
  module.exports = {
    name: 'Combinator',
    structure: {
      name: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);

      switch (code) {
        case GREATERTHANSIGN:
        case PLUSSIGN:
        case TILDE:
          this.scanner.next();
          break;

        case SOLIDUS:
          this.scanner.next();

          if (this.scanner.tokenType !== IDENT || this.scanner.lookupValue(0, 'deep') === false) {
            this.error('Identifier `deep` is expected');
          }

          this.scanner.next();

          if (!this.scanner.isDelim(SOLIDUS)) {
            this.error('Solidus is expected');
          }

          this.scanner.next();
          break;

        default:
          this.error('Combinator is expected');
      }

      return {
        type: 'Combinator',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: this.scanner.substrToCursor(start)
      };
    },
    generate: function generate(node) {
      this.chunk(node.name);
    }
  };
},897,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var COMMENT = TYPE.Comment;
  var ASTERISK = 0x002A;
  var SOLIDUS = 0x002F;
  module.exports = {
    name: 'Comment',
    structure: {
      value: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var end = this.scanner.tokenEnd;
      this.eat(COMMENT);

      if (end - start + 2 >= 2 && this.scanner.source.charCodeAt(end - 2) === ASTERISK && this.scanner.source.charCodeAt(end - 1) === SOLIDUS) {
        end -= 2;
      }

      return {
        type: 'Comment',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: this.scanner.source.substring(start + 2, end)
      };
    },
    generate: function generate(node) {
      this.chunk('/*');
      this.chunk(node.value);
      this.chunk('*/');
    }
  };
},898,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isCustomProperty = _$$_REQUIRE(_dependencyMap[0]).isCustomProperty;

  var TYPE = _$$_REQUIRE(_dependencyMap[1]).TYPE;

  var rawMode = _$$_REQUIRE(_dependencyMap[2]).mode;

  var IDENT = TYPE.Ident;
  var HASH = TYPE.Hash;
  var COLON = TYPE.Colon;
  var SEMICOLON = TYPE.Semicolon;
  var DELIM = TYPE.Delim;
  var WHITESPACE = TYPE.WhiteSpace;
  var EXCLAMATIONMARK = 0x0021;
  var NUMBERSIGN = 0x0023;
  var DOLLARSIGN = 0x0024;
  var AMPERSAND = 0x0026;
  var ASTERISK = 0x002A;
  var PLUSSIGN = 0x002B;
  var SOLIDUS = 0x002F;

  function consumeValueRaw(startToken) {
    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);
  }

  function consumeCustomPropertyRaw(startToken) {
    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);
  }

  function consumeValue() {
    var startValueToken = this.scanner.tokenIndex;
    var value = this.Value();

    if (value.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== SEMICOLON && this.scanner.isDelim(EXCLAMATIONMARK) === false && this.scanner.isBalanceEdge(startValueToken) === false) {
      this.error();
    }

    return value;
  }

  module.exports = {
    name: 'Declaration',
    structure: {
      important: [Boolean, String],
      property: String,
      value: ['Value', 'Raw']
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var startToken = this.scanner.tokenIndex;
      var property = readProperty.call(this);
      var customProperty = isCustomProperty(property);
      var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;
      var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;
      var important = false;
      var value;
      this.scanner.skipSC();
      this.eat(COLON);
      var valueStart = this.scanner.tokenIndex;

      if (!customProperty) {
        this.scanner.skipSC();
      }

      if (parseValue) {
        value = this.parseWithFallback(consumeValue, consumeRaw);
      } else {
        value = consumeRaw.call(this, this.scanner.tokenIndex);
      }

      if (customProperty && value.type === 'Value' && value.children.isEmpty()) {
        for (var offset = valueStart - this.scanner.tokenIndex; offset <= 0; offset++) {
          if (this.scanner.lookupType(offset) === WHITESPACE) {
            value.children.appendData({
              type: 'WhiteSpace',
              loc: null,
              value: ' '
            });
            break;
          }
        }
      }

      if (this.scanner.isDelim(EXCLAMATIONMARK)) {
        important = getImportant.call(this);
        this.scanner.skipSC();
      }

      if (this.scanner.eof === false && this.scanner.tokenType !== SEMICOLON && this.scanner.isBalanceEdge(startToken) === false) {
        this.error();
      }

      return {
        type: 'Declaration',
        loc: this.getLocation(start, this.scanner.tokenStart),
        important: important,
        property: property,
        value: value
      };
    },
    generate: function generate(node) {
      this.chunk(node.property);
      this.chunk(':');
      this.node(node.value);

      if (node.important) {
        this.chunk(node.important === true ? '!important' : '!' + node.important);
      }
    },
    walkContext: 'declaration'
  };

  function readProperty() {
    var start = this.scanner.tokenStart;
    var prefix = 0;

    if (this.scanner.tokenType === DELIM) {
      switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {
        case ASTERISK:
        case DOLLARSIGN:
        case PLUSSIGN:
        case NUMBERSIGN:
        case AMPERSAND:
          this.scanner.next();
          break;

        case SOLIDUS:
          this.scanner.next();

          if (this.scanner.isDelim(SOLIDUS)) {
            this.scanner.next();
          }

          break;
      }
    }

    if (this.scanner.tokenType === HASH) {
      this.eat(HASH);
    } else {
      this.eat(IDENT);
    }

    return this.scanner.substrToCursor(start);
  }

  function getImportant() {
    this.eat(DELIM);
    this.scanner.skipSC();
    var important = this.consume(IDENT);
    return important === 'important' ? true : important;
  }
},899,[848,850,889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var rawMode = _$$_REQUIRE(_dependencyMap[1]).mode;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var SEMICOLON = TYPE.Semicolon;

  function consumeRaw(startToken) {
    return this.Raw(startToken, rawMode.semicolonIncluded, true);
  }

  module.exports = {
    name: 'DeclarationList',
    structure: {
      children: [['Declaration']]
    },
    parse: function parse() {
      var children = this.createList();

      scan: while (!this.scanner.eof) {
        switch (this.scanner.tokenType) {
          case WHITESPACE:
          case COMMENT:
          case SEMICOLON:
            this.scanner.next();
            break;

          default:
            children.push(this.parseWithFallback(this.Declaration, consumeRaw));
        }
      }

      return {
        type: 'DeclarationList',
        loc: this.getLocationFromList(children),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node, function (prev) {
        if (prev.type === 'Declaration') {
          this.chunk(';');
        }
      });
    }
  };
},900,[850,889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var consumeNumber = _$$_REQUIRE(_dependencyMap[0]).consumeNumber;

  var TYPE = _$$_REQUIRE(_dependencyMap[1]).TYPE;

  var DIMENSION = TYPE.Dimension;
  module.exports = {
    name: 'Dimension',
    structure: {
      value: String,
      unit: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var numberEnd = consumeNumber(this.scanner.source, start);
      this.eat(DIMENSION);
      return {
        type: 'Dimension',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: this.scanner.source.substring(start, numberEnd),
        unit: this.scanner.source.substring(numberEnd, this.scanner.tokenStart)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
      this.chunk(node.unit);
    }
  };
},901,[843,850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var RIGHTPARENTHESIS = TYPE.RightParenthesis;
  module.exports = {
    name: 'Function',
    structure: {
      name: String,
      children: [[]]
    },
    parse: function parse(readSequence, recognizer) {
      var start = this.scanner.tokenStart;
      var name = this.consumeFunctionName();
      var nameLowerCase = name.toLowerCase();
      var children;
      children = recognizer.hasOwnProperty(nameLowerCase) ? recognizer[nameLowerCase].call(this, recognizer) : readSequence.call(this, recognizer);

      if (!this.scanner.eof) {
        this.eat(RIGHTPARENTHESIS);
      }

      return {
        type: 'Function',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: name,
        children: children
      };
    },
    generate: function generate(node) {
      this.chunk(node.name);
      this.chunk('(');
      this.children(node);
      this.chunk(')');
    },
    walkContext: 'function'
  };
},902,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var HASH = TYPE.Hash;
  module.exports = {
    name: 'Hash',
    structure: {
      value: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      this.eat(HASH);
      return {
        type: 'Hash',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: this.scanner.substrToCursor(start + 1)
      };
    },
    generate: function generate(node) {
      this.chunk('#');
      this.chunk(node.value);
    }
  };
},903,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  module.exports = {
    name: 'Identifier',
    structure: {
      name: String
    },
    parse: function parse() {
      return {
        type: 'Identifier',
        loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),
        name: this.consume(IDENT)
      };
    },
    generate: function generate(node) {
      this.chunk(node.name);
    }
  };
},904,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var HASH = TYPE.Hash;
  module.exports = {
    name: 'IdSelector',
    structure: {
      name: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      this.eat(HASH);
      return {
        type: 'IdSelector',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: this.scanner.substrToCursor(start + 1)
      };
    },
    generate: function generate(node) {
      this.chunk('#');
      this.chunk(node.name);
    }
  };
},905,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var NUMBER = TYPE.Number;
  var DIMENSION = TYPE.Dimension;
  var LEFTPARENTHESIS = TYPE.LeftParenthesis;
  var RIGHTPARENTHESIS = TYPE.RightParenthesis;
  var COLON = TYPE.Colon;
  var DELIM = TYPE.Delim;
  module.exports = {
    name: 'MediaFeature',
    structure: {
      name: String,
      value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var name;
      var value = null;
      this.eat(LEFTPARENTHESIS);
      this.scanner.skipSC();
      name = this.consume(IDENT);
      this.scanner.skipSC();

      if (this.scanner.tokenType !== RIGHTPARENTHESIS) {
        this.eat(COLON);
        this.scanner.skipSC();

        switch (this.scanner.tokenType) {
          case NUMBER:
            if (this.lookupNonWSType(1) === DELIM) {
              value = this.Ratio();
            } else {
              value = this.Number();
            }

            break;

          case DIMENSION:
            value = this.Dimension();
            break;

          case IDENT:
            value = this.Identifier();
            break;

          default:
            this.error('Number, dimension, ratio or identifier is expected');
        }

        this.scanner.skipSC();
      }

      this.eat(RIGHTPARENTHESIS);
      return {
        type: 'MediaFeature',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: name,
        value: value
      };
    },
    generate: function generate(node) {
      this.chunk('(');
      this.chunk(node.name);

      if (node.value !== null) {
        this.chunk(':');
        this.node(node.value);
      }

      this.chunk(')');
    }
  };
},906,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var IDENT = TYPE.Ident;
  var LEFTPARENTHESIS = TYPE.LeftParenthesis;
  module.exports = {
    name: 'MediaQuery',
    structure: {
      children: [['Identifier', 'MediaFeature', 'WhiteSpace']]
    },
    parse: function parse() {
      this.scanner.skipSC();
      var children = this.createList();
      var child = null;
      var space = null;

      scan: while (!this.scanner.eof) {
        switch (this.scanner.tokenType) {
          case COMMENT:
            this.scanner.next();
            continue;

          case WHITESPACE:
            space = this.WhiteSpace();
            continue;

          case IDENT:
            child = this.Identifier();
            break;

          case LEFTPARENTHESIS:
            child = this.MediaFeature();
            break;

          default:
            break scan;
        }

        if (space !== null) {
          children.push(space);
          space = null;
        }

        children.push(child);
      }

      if (child === null) {
        this.error('Identifier or parenthesis is expected');
      }

      return {
        type: 'MediaQuery',
        loc: this.getLocationFromList(children),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node);
    }
  };
},907,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var COMMA = _$$_REQUIRE(_dependencyMap[0]).TYPE.Comma;

  module.exports = {
    name: 'MediaQueryList',
    structure: {
      children: [['MediaQuery']]
    },
    parse: function parse(relative) {
      var children = this.createList();
      this.scanner.skipSC();

      while (!this.scanner.eof) {
        children.push(this.MediaQuery(relative));

        if (this.scanner.tokenType !== COMMA) {
          break;
        }

        this.scanner.next();
      }

      return {
        type: 'MediaQueryList',
        loc: this.getLocationFromList(children),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node, function () {
        this.chunk(',');
      });
    }
  };
},908,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    name: 'Nth',
    structure: {
      nth: ['AnPlusB', 'Identifier'],
      selector: ['SelectorList', null]
    },
    parse: function parse(allowOfClause) {
      this.scanner.skipSC();
      var start = this.scanner.tokenStart;
      var end = start;
      var selector = null;
      var query;

      if (this.scanner.lookupValue(0, 'odd') || this.scanner.lookupValue(0, 'even')) {
        query = this.Identifier();
      } else {
        query = this.AnPlusB();
      }

      this.scanner.skipSC();

      if (allowOfClause && this.scanner.lookupValue(0, 'of')) {
        this.scanner.next();
        selector = this.SelectorList();

        if (this.needPositions) {
          end = this.getLastListNode(selector.children).loc.end.offset;
        }
      } else {
        if (this.needPositions) {
          end = query.loc.end.offset;
        }
      }

      return {
        type: 'Nth',
        loc: this.getLocation(start, end),
        nth: query,
        selector: selector
      };
    },
    generate: function generate(node) {
      this.node(node.nth);

      if (node.selector !== null) {
        this.chunk(' of ');
        this.node(node.selector);
      }
    }
  };
},909,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var NUMBER = _$$_REQUIRE(_dependencyMap[0]).TYPE.Number;

  module.exports = {
    name: 'Number',
    structure: {
      value: String
    },
    parse: function parse() {
      return {
        type: 'Number',
        loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),
        value: this.consume(NUMBER)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
    }
  };
},910,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    name: 'Operator',
    structure: {
      value: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      this.scanner.next();
      return {
        type: 'Operator',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: this.scanner.substrToCursor(start)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
    }
  };
},911,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var LEFTPARENTHESIS = TYPE.LeftParenthesis;
  var RIGHTPARENTHESIS = TYPE.RightParenthesis;
  module.exports = {
    name: 'Parentheses',
    structure: {
      children: [[]]
    },
    parse: function parse(readSequence, recognizer) {
      var start = this.scanner.tokenStart;
      var children = null;
      this.eat(LEFTPARENTHESIS);
      children = readSequence.call(this, recognizer);

      if (!this.scanner.eof) {
        this.eat(RIGHTPARENTHESIS);
      }

      return {
        type: 'Parentheses',
        loc: this.getLocation(start, this.scanner.tokenStart),
        children: children
      };
    },
    generate: function generate(node) {
      this.chunk('(');
      this.children(node);
      this.chunk(')');
    }
  };
},912,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var consumeNumber = _$$_REQUIRE(_dependencyMap[0]).consumeNumber;

  var TYPE = _$$_REQUIRE(_dependencyMap[1]).TYPE;

  var PERCENTAGE = TYPE.Percentage;
  module.exports = {
    name: 'Percentage',
    structure: {
      value: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var numberEnd = consumeNumber(this.scanner.source, start);
      this.eat(PERCENTAGE);
      return {
        type: 'Percentage',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: this.scanner.source.substring(start, numberEnd)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
      this.chunk('%');
    }
  };
},913,[843,850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var FUNCTION = TYPE.Function;
  var COLON = TYPE.Colon;
  var RIGHTPARENTHESIS = TYPE.RightParenthesis;
  module.exports = {
    name: 'PseudoClassSelector',
    structure: {
      name: String,
      children: [['Raw'], null]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var children = null;
      var name;
      var nameLowerCase;
      this.eat(COLON);

      if (this.scanner.tokenType === FUNCTION) {
        name = this.consumeFunctionName();
        nameLowerCase = name.toLowerCase();

        if (this.pseudo.hasOwnProperty(nameLowerCase)) {
          this.scanner.skipSC();
          children = this.pseudo[nameLowerCase].call(this);
          this.scanner.skipSC();
        } else {
          children = this.createList();
          children.push(this.Raw(this.scanner.tokenIndex, null, false));
        }

        this.eat(RIGHTPARENTHESIS);
      } else {
        name = this.consume(IDENT);
      }

      return {
        type: 'PseudoClassSelector',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: name,
        children: children
      };
    },
    generate: function generate(node) {
      this.chunk(':');
      this.chunk(node.name);

      if (node.children !== null) {
        this.chunk('(');
        this.children(node);
        this.chunk(')');
      }
    },
    walkContext: 'function'
  };
},914,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var FUNCTION = TYPE.Function;
  var COLON = TYPE.Colon;
  var RIGHTPARENTHESIS = TYPE.RightParenthesis;
  module.exports = {
    name: 'PseudoElementSelector',
    structure: {
      name: String,
      children: [['Raw'], null]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var children = null;
      var name;
      var nameLowerCase;
      this.eat(COLON);
      this.eat(COLON);

      if (this.scanner.tokenType === FUNCTION) {
        name = this.consumeFunctionName();
        nameLowerCase = name.toLowerCase();

        if (this.pseudo.hasOwnProperty(nameLowerCase)) {
          this.scanner.skipSC();
          children = this.pseudo[nameLowerCase].call(this);
          this.scanner.skipSC();
        } else {
          children = this.createList();
          children.push(this.Raw(this.scanner.tokenIndex, null, false));
        }

        this.eat(RIGHTPARENTHESIS);
      } else {
        name = this.consume(IDENT);
      }

      return {
        type: 'PseudoElementSelector',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: name,
        children: children
      };
    },
    generate: function generate(node) {
      this.chunk('::');
      this.chunk(node.name);

      if (node.children !== null) {
        this.chunk('(');
        this.children(node);
        this.chunk(')');
      }
    },
    walkContext: 'function'
  };
},915,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isDigit = _$$_REQUIRE(_dependencyMap[0]).isDigit;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var NUMBER = TYPE.Number;
  var DELIM = TYPE.Delim;
  var SOLIDUS = 0x002F;
  var FULLSTOP = 0x002E;

  function consumeNumber() {
    this.scanner.skipWS();
    var value = this.consume(NUMBER);

    for (var i = 0; i < value.length; i++) {
      var code = value.charCodeAt(i);

      if (!isDigit(code) && code !== FULLSTOP) {
        this.error('Unsigned number is expected', this.scanner.tokenStart - value.length + i);
      }
    }

    if (Number(value) === 0) {
      this.error('Zero number is not allowed', this.scanner.tokenStart - value.length);
    }

    return value;
  }

  module.exports = {
    name: 'Ratio',
    structure: {
      left: String,
      right: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var left = consumeNumber.call(this);
      var right;
      this.scanner.skipWS();

      if (!this.scanner.isDelim(SOLIDUS)) {
        this.error('Solidus is expected');
      }

      this.eat(DELIM);
      right = consumeNumber.call(this);
      return {
        type: 'Ratio',
        loc: this.getLocation(start, this.scanner.tokenStart),
        left: left,
        right: right
      };
    },
    generate: function generate(node) {
      this.chunk(node.left);
      this.chunk('/');
      this.chunk(node.right);
    }
  };
},916,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var rawMode = _$$_REQUIRE(_dependencyMap[1]).mode;

  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;

  function consumeRaw(startToken) {
    return this.Raw(startToken, rawMode.leftCurlyBracket, true);
  }

  function consumePrelude() {
    var prelude = this.SelectorList();

    if (prelude.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET) {
      this.error();
    }

    return prelude;
  }

  module.exports = {
    name: 'Rule',
    structure: {
      prelude: ['SelectorList', 'Raw'],
      block: ['Block']
    },
    parse: function parse() {
      var startToken = this.scanner.tokenIndex;
      var startOffset = this.scanner.tokenStart;
      var prelude;
      var block;

      if (this.parseRulePrelude) {
        prelude = this.parseWithFallback(consumePrelude, consumeRaw);
      } else {
        prelude = consumeRaw.call(this, startToken);
      }

      block = this.Block(true);
      return {
        type: 'Rule',
        loc: this.getLocation(startOffset, this.scanner.tokenStart),
        prelude: prelude,
        block: block
      };
    },
    generate: function generate(node) {
      this.node(node.prelude);
      this.node(node.block);
    },
    walkContext: 'rule'
  };
},917,[850,889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    name: 'Selector',
    structure: {
      children: [['TypeSelector', 'IdSelector', 'ClassSelector', 'AttributeSelector', 'PseudoClassSelector', 'PseudoElementSelector', 'Combinator', 'WhiteSpace']]
    },
    parse: function parse() {
      var children = this.readSequence(this.scope.Selector);

      if (this.getFirstListNode(children) === null) {
        this.error('Selector is expected');
      }

      return {
        type: 'Selector',
        loc: this.getLocationFromList(children),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node);
    }
  };
},918,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var COMMA = TYPE.Comma;
  module.exports = {
    name: 'SelectorList',
    structure: {
      children: [['Selector', 'Raw']]
    },
    parse: function parse() {
      var children = this.createList();

      while (!this.scanner.eof) {
        children.push(this.Selector());

        if (this.scanner.tokenType === COMMA) {
          this.scanner.next();
          continue;
        }

        break;
      }

      return {
        type: 'SelectorList',
        loc: this.getLocationFromList(children),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node, function () {
        this.chunk(',');
      });
    },
    walkContext: 'selector'
  };
},919,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var STRING = _$$_REQUIRE(_dependencyMap[0]).TYPE.String;

  module.exports = {
    name: 'String',
    structure: {
      value: String
    },
    parse: function parse() {
      return {
        type: 'String',
        loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),
        value: this.consume(STRING)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
    }
  };
},920,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var ATKEYWORD = TYPE.AtKeyword;
  var CDO = TYPE.CDO;
  var CDC = TYPE.CDC;
  var EXCLAMATIONMARK = 0x0021;

  function consumeRaw(startToken) {
    return this.Raw(startToken, null, false);
  }

  module.exports = {
    name: 'StyleSheet',
    structure: {
      children: [['Comment', 'CDO', 'CDC', 'Atrule', 'Rule', 'Raw']]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var children = this.createList();
      var child;

      scan: while (!this.scanner.eof) {
        switch (this.scanner.tokenType) {
          case WHITESPACE:
            this.scanner.next();
            continue;

          case COMMENT:
            if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {
              this.scanner.next();
              continue;
            }

            child = this.Comment();
            break;

          case CDO:
            child = this.CDO();
            break;

          case CDC:
            child = this.CDC();
            break;

          case ATKEYWORD:
            child = this.parseWithFallback(this.Atrule, consumeRaw);
            break;

          default:
            child = this.parseWithFallback(this.Rule, consumeRaw);
        }

        children.push(child);
      }

      return {
        type: 'StyleSheet',
        loc: this.getLocation(start, this.scanner.tokenStart),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node);
    },
    walkContext: 'stylesheet'
  };
},921,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var ASTERISK = 0x002A;
  var VERTICALLINE = 0x007C;

  function eatIdentifierOrAsterisk() {
    if (this.scanner.tokenType !== IDENT && this.scanner.isDelim(ASTERISK) === false) {
      this.error('Identifier or asterisk is expected');
    }

    this.scanner.next();
  }

  module.exports = {
    name: 'TypeSelector',
    structure: {
      name: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;

      if (this.scanner.isDelim(VERTICALLINE)) {
        this.scanner.next();
        eatIdentifierOrAsterisk.call(this);
      } else {
        eatIdentifierOrAsterisk.call(this);

        if (this.scanner.isDelim(VERTICALLINE)) {
          this.scanner.next();
          eatIdentifierOrAsterisk.call(this);
        }
      }

      return {
        type: 'TypeSelector',
        loc: this.getLocation(start, this.scanner.tokenStart),
        name: this.scanner.substrToCursor(start)
      };
    },
    generate: function generate(node) {
      this.chunk(node.name);
    }
  };
},922,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isHexDigit = _$$_REQUIRE(_dependencyMap[0]).isHexDigit;

  var cmpChar = _$$_REQUIRE(_dependencyMap[0]).cmpChar;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var NAME = _$$_REQUIRE(_dependencyMap[0]).NAME;

  var IDENT = TYPE.Ident;
  var NUMBER = TYPE.Number;
  var DIMENSION = TYPE.Dimension;
  var PLUSSIGN = 0x002B;
  var HYPHENMINUS = 0x002D;
  var QUESTIONMARK = 0x003F;
  var U = 0x0075;

  function eatHexSequence(offset, allowDash) {
    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {
      var code = this.scanner.source.charCodeAt(pos);

      if (code === HYPHENMINUS && allowDash && len !== 0) {
        if (eatHexSequence.call(this, offset + len + 1, false) === 0) {
          this.error();
        }

        return -1;
      }

      if (!isHexDigit(code)) {
        this.error(allowDash && len !== 0 ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected' : len < 6 ? 'Hex digit is expected' : 'Unexpected input', pos);
      }

      if (++len > 6) {
        this.error('Too many hex digits', pos);
      }

      ;
    }

    this.scanner.next();
    return len;
  }

  function eatQuestionMarkSequence(max) {
    var count = 0;

    while (this.scanner.isDelim(QUESTIONMARK)) {
      if (++count > max) {
        this.error('Too many question marks');
      }

      this.scanner.next();
    }
  }

  function startsWith(code) {
    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {
      this.error(NAME[code] + ' is expected');
    }
  }

  function scanUnicodeRange() {
    var hexLength = 0;

    if (this.scanner.isDelim(PLUSSIGN)) {
      this.scanner.next();

      if (this.scanner.tokenType === IDENT) {
        hexLength = eatHexSequence.call(this, 0, true);

        if (hexLength > 0) {
          eatQuestionMarkSequence.call(this, 6 - hexLength);
        }

        return;
      }

      if (this.scanner.isDelim(QUESTIONMARK)) {
        this.scanner.next();
        eatQuestionMarkSequence.call(this, 5);
        return;
      }

      this.error('Hex digit or question mark is expected');
      return;
    }

    if (this.scanner.tokenType === NUMBER) {
      startsWith.call(this, PLUSSIGN);
      hexLength = eatHexSequence.call(this, 1, true);

      if (this.scanner.isDelim(QUESTIONMARK)) {
        eatQuestionMarkSequence.call(this, 6 - hexLength);
        return;
      }

      if (this.scanner.tokenType === DIMENSION || this.scanner.tokenType === NUMBER) {
        startsWith.call(this, HYPHENMINUS);
        eatHexSequence.call(this, 1, false);
        return;
      }

      return;
    }

    if (this.scanner.tokenType === DIMENSION) {
      startsWith.call(this, PLUSSIGN);
      hexLength = eatHexSequence.call(this, 1, true);

      if (hexLength > 0) {
        eatQuestionMarkSequence.call(this, 6 - hexLength);
      }

      return;
    }

    this.error();
  }

  module.exports = {
    name: 'UnicodeRange',
    structure: {
      value: String
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;

      if (!cmpChar(this.scanner.source, start, U)) {
        this.error('U is expected');
      }

      if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {
        this.error('Plus sign is expected');
      }

      this.scanner.next();
      scanUnicodeRange.call(this);
      return {
        type: 'UnicodeRange',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: this.scanner.substrToCursor(start)
      };
    },
    generate: function generate(node) {
      this.chunk(node.value);
    }
  };
},923,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isWhiteSpace = _$$_REQUIRE(_dependencyMap[0]).isWhiteSpace;

  var cmpStr = _$$_REQUIRE(_dependencyMap[0]).cmpStr;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var FUNCTION = TYPE.Function;
  var URL = TYPE.Url;
  var RIGHTPARENTHESIS = TYPE.RightParenthesis;
  module.exports = {
    name: 'Url',
    structure: {
      value: ['String', 'Raw']
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var value;

      switch (this.scanner.tokenType) {
        case URL:
          var rawStart = start + 4;
          var rawEnd = this.scanner.tokenEnd - 1;

          while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {
            rawStart++;
          }

          while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {
            rawEnd--;
          }

          value = {
            type: 'Raw',
            loc: this.getLocation(rawStart, rawEnd),
            value: this.scanner.source.substring(rawStart, rawEnd)
          };
          this.eat(URL);
          break;

        case FUNCTION:
          if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {
            this.error('Function name must be `url`');
          }

          this.eat(FUNCTION);
          this.scanner.skipSC();
          value = this.String();
          this.scanner.skipSC();
          this.eat(RIGHTPARENTHESIS);
          break;

        default:
          this.error('Url or Function is expected');
      }

      return {
        type: 'Url',
        loc: this.getLocation(start, this.scanner.tokenStart),
        value: value
      };
    },
    generate: function generate(node) {
      this.chunk('url');
      this.chunk('(');
      this.node(node.value);
      this.chunk(')');
    }
  };
},924,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    name: 'Value',
    structure: {
      children: [[]]
    },
    parse: function parse() {
      var start = this.scanner.tokenStart;
      var children = this.readSequence(this.scope.Value);
      return {
        type: 'Value',
        loc: this.getLocation(start, this.scanner.tokenStart),
        children: children
      };
    },
    generate: function generate(node) {
      this.children(node);
    }
  };
},925,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0]).TYPE.WhiteSpace;

  var SPACE = Object.freeze({
    type: 'WhiteSpace',
    loc: null,
    value: ' '
  });
  module.exports = {
    name: 'WhiteSpace',
    structure: {
      value: String
    },
    parse: function parse() {
      this.eat(WHITESPACE);
      return SPACE;
    },
    generate: function generate(node) {
      this.chunk(node.value);
    }
  };
},926,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parseContext: {
      default: 'StyleSheet',
      stylesheet: 'StyleSheet',
      atrule: 'Atrule',
      atrulePrelude: function atrulePrelude(options) {
        return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);
      },
      mediaQueryList: 'MediaQueryList',
      mediaQuery: 'MediaQuery',
      rule: 'Rule',
      selectorList: 'SelectorList',
      selector: 'Selector',
      block: function block() {
        return this.Block(true);
      },
      declarationList: 'DeclarationList',
      declaration: 'Declaration',
      value: 'Value'
    },
    scope: _$$_REQUIRE(_dependencyMap[0]),
    atrule: _$$_REQUIRE(_dependencyMap[1]),
    pseudo: _$$_REQUIRE(_dependencyMap[2]),
    node: _$$_REQUIRE(_dependencyMap[3])
  };
},927,[928,935,941,886]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    AtrulePrelude: _$$_REQUIRE(_dependencyMap[0]),
    Selector: _$$_REQUIRE(_dependencyMap[1]),
    Value: _$$_REQUIRE(_dependencyMap[2])
  };
},928,[929,931,932]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    getNode: _$$_REQUIRE(_dependencyMap[0])
  };
},929,[930]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cmpChar = _$$_REQUIRE(_dependencyMap[0]).cmpChar;

  var cmpStr = _$$_REQUIRE(_dependencyMap[0]).cmpStr;

  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var IDENT = TYPE.Ident;
  var STRING = TYPE.String;
  var NUMBER = TYPE.Number;
  var FUNCTION = TYPE.Function;
  var URL = TYPE.Url;
  var HASH = TYPE.Hash;
  var DIMENSION = TYPE.Dimension;
  var PERCENTAGE = TYPE.Percentage;
  var LEFTPARENTHESIS = TYPE.LeftParenthesis;
  var LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;
  var COMMA = TYPE.Comma;
  var DELIM = TYPE.Delim;
  var NUMBERSIGN = 0x0023;
  var ASTERISK = 0x002A;
  var PLUSSIGN = 0x002B;
  var HYPHENMINUS = 0x002D;
  var SOLIDUS = 0x002F;
  var U = 0x0075;

  module.exports = function defaultRecognizer(context) {
    switch (this.scanner.tokenType) {
      case HASH:
        return this.Hash();

      case COMMA:
        context.space = null;
        context.ignoreWSAfter = true;
        return this.Operator();

      case LEFTPARENTHESIS:
        return this.Parentheses(this.readSequence, context.recognizer);

      case LEFTSQUAREBRACKET:
        return this.Brackets(this.readSequence, context.recognizer);

      case STRING:
        return this.String();

      case DIMENSION:
        return this.Dimension();

      case PERCENTAGE:
        return this.Percentage();

      case NUMBER:
        return this.Number();

      case FUNCTION:
        return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(') ? this.Url() : this.Function(this.readSequence, context.recognizer);

      case URL:
        return this.Url();

      case IDENT:
        if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) && cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {
          return this.UnicodeRange();
        } else {
          return this.Identifier();
        }

      case DELIM:
        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);

        if (code === SOLIDUS || code === ASTERISK || code === PLUSSIGN || code === HYPHENMINUS) {
          return this.Operator();
        }

        if (code === NUMBERSIGN) {
          this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);
        }

        break;
    }
  };
},930,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var DELIM = TYPE.Delim;
  var IDENT = TYPE.Ident;
  var DIMENSION = TYPE.Dimension;
  var PERCENTAGE = TYPE.Percentage;
  var NUMBER = TYPE.Number;
  var HASH = TYPE.Hash;
  var COLON = TYPE.Colon;
  var LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;
  var NUMBERSIGN = 0x0023;
  var ASTERISK = 0x002A;
  var PLUSSIGN = 0x002B;
  var SOLIDUS = 0x002F;
  var FULLSTOP = 0x002E;
  var GREATERTHANSIGN = 0x003E;
  var VERTICALLINE = 0x007C;
  var TILDE = 0x007E;

  function getNode(context) {
    switch (this.scanner.tokenType) {
      case LEFTSQUAREBRACKET:
        return this.AttributeSelector();

      case HASH:
        return this.IdSelector();

      case COLON:
        if (this.scanner.lookupType(1) === COLON) {
          return this.PseudoElementSelector();
        } else {
          return this.PseudoClassSelector();
        }

      case IDENT:
        return this.TypeSelector();

      case NUMBER:
      case PERCENTAGE:
        return this.Percentage();

      case DIMENSION:
        if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {
          this.error('Identifier is expected', this.scanner.tokenStart + 1);
        }

        break;

      case DELIM:
        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);

        switch (code) {
          case PLUSSIGN:
          case GREATERTHANSIGN:
          case TILDE:
            context.space = null;
            context.ignoreWSAfter = true;
            return this.Combinator();

          case SOLIDUS:
            return this.Combinator();

          case FULLSTOP:
            return this.ClassSelector();

          case ASTERISK:
          case VERTICALLINE:
            return this.TypeSelector();

          case NUMBERSIGN:
            return this.IdSelector();
        }

        break;
    }
  }

  ;
  module.exports = {
    getNode: getNode
  };
},931,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    getNode: _$$_REQUIRE(_dependencyMap[0]),
    'expression': _$$_REQUIRE(_dependencyMap[1]),
    'var': _$$_REQUIRE(_dependencyMap[2])
  };
},932,[930,933,934]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function () {
    return this.createSingleNodeList(this.Raw(this.scanner.tokenIndex, null, false));
  };
},933,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var rawMode = _$$_REQUIRE(_dependencyMap[1]).mode;

  var COMMA = TYPE.Comma;
  var WHITESPACE = TYPE.WhiteSpace;

  module.exports = function () {
    var children = this.createList();
    this.scanner.skipSC();
    children.push(this.Identifier());
    this.scanner.skipSC();

    if (this.scanner.tokenType === COMMA) {
      children.push(this.Operator());
      var startIndex = this.scanner.tokenIndex;
      var value = this.parseCustomProperty ? this.Value(null) : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false);

      if (value.type === 'Value' && value.children.isEmpty()) {
        for (var offset = startIndex - this.scanner.tokenIndex; offset <= 0; offset++) {
          if (this.scanner.lookupType(offset) === WHITESPACE) {
            value.children.appendData({
              type: 'WhiteSpace',
              loc: null,
              value: ' '
            });
            break;
          }
        }
      }

      children.push(value);
    }

    return children;
  };
},934,[850,889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    'font-face': _$$_REQUIRE(_dependencyMap[0]),
    'import': _$$_REQUIRE(_dependencyMap[1]),
    'media': _$$_REQUIRE(_dependencyMap[2]),
    'page': _$$_REQUIRE(_dependencyMap[3]),
    'supports': _$$_REQUIRE(_dependencyMap[4])
  };
},935,[936,937,938,939,940]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: {
      prelude: null,
      block: function block() {
        return this.Block(true);
      }
    }
  };
},936,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var STRING = TYPE.String;
  var IDENT = TYPE.Ident;
  var URL = TYPE.Url;
  var FUNCTION = TYPE.Function;
  var LEFTPARENTHESIS = TYPE.LeftParenthesis;
  module.exports = {
    parse: {
      prelude: function prelude() {
        var children = this.createList();
        this.scanner.skipSC();

        switch (this.scanner.tokenType) {
          case STRING:
            children.push(this.String());
            break;

          case URL:
          case FUNCTION:
            children.push(this.Url());
            break;

          default:
            this.error('String or url() is expected');
        }

        if (this.lookupNonWSType(0) === IDENT || this.lookupNonWSType(0) === LEFTPARENTHESIS) {
          children.push(this.WhiteSpace());
          children.push(this.MediaQueryList());
        }

        return children;
      },
      block: null
    }
  };
},937,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: {
      prelude: function prelude() {
        return this.createSingleNodeList(this.MediaQueryList());
      },
      block: function block() {
        return this.Block(false);
      }
    }
  };
},938,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: {
      prelude: function prelude() {
        return this.createSingleNodeList(this.SelectorList());
      },
      block: function block() {
        return this.Block(true);
      }
    }
  };
},939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TYPE = _$$_REQUIRE(_dependencyMap[0]).TYPE;

  var WHITESPACE = TYPE.WhiteSpace;
  var COMMENT = TYPE.Comment;
  var IDENT = TYPE.Ident;
  var FUNCTION = TYPE.Function;
  var COLON = TYPE.Colon;
  var LEFTPARENTHESIS = TYPE.LeftParenthesis;

  function consumeRaw() {
    return this.createSingleNodeList(this.Raw(this.scanner.tokenIndex, null, false));
  }

  function parentheses() {
    this.scanner.skipSC();

    if (this.scanner.tokenType === IDENT && this.lookupNonWSType(1) === COLON) {
      return this.createSingleNodeList(this.Declaration());
    }

    return readSequence.call(this);
  }

  function readSequence() {
    var children = this.createList();
    var space = null;
    var child;
    this.scanner.skipSC();

    scan: while (!this.scanner.eof) {
      switch (this.scanner.tokenType) {
        case WHITESPACE:
          space = this.WhiteSpace();
          continue;

        case COMMENT:
          this.scanner.next();
          continue;

        case FUNCTION:
          child = this.Function(consumeRaw, this.scope.AtrulePrelude);
          break;

        case IDENT:
          child = this.Identifier();
          break;

        case LEFTPARENTHESIS:
          child = this.Parentheses(parentheses, this.scope.AtrulePrelude);
          break;

        default:
          break scan;
      }

      if (space !== null) {
        children.push(space);
        space = null;
      }

      children.push(child);
    }

    return children;
  }

  module.exports = {
    parse: {
      prelude: function prelude() {
        var children = readSequence.call(this);

        if (this.getFirstListNode(children) === null) {
          this.error('Condition is expected');
        }

        return children;
      },
      block: function block() {
        return this.Block(false);
      }
    }
  };
},940,[850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    'dir': _$$_REQUIRE(_dependencyMap[0]),
    'has': _$$_REQUIRE(_dependencyMap[1]),
    'lang': _$$_REQUIRE(_dependencyMap[2]),
    'matches': _$$_REQUIRE(_dependencyMap[3]),
    'not': _$$_REQUIRE(_dependencyMap[4]),
    'nth-child': _$$_REQUIRE(_dependencyMap[5]),
    'nth-last-child': _$$_REQUIRE(_dependencyMap[6]),
    'nth-last-of-type': _$$_REQUIRE(_dependencyMap[7]),
    'nth-of-type': _$$_REQUIRE(_dependencyMap[8]),
    'slotted': _$$_REQUIRE(_dependencyMap[9])
  };
},941,[942,943,944,945,947,948,950,951,953,954]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: function parse() {
      return this.createSingleNodeList(this.Identifier());
    }
  };
},942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: function parse() {
      return this.createSingleNodeList(this.SelectorList());
    }
  };
},943,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: function parse() {
      return this.createSingleNodeList(this.Identifier());
    }
  };
},944,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},945,[946]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: function selectorList() {
      return this.createSingleNodeList(this.SelectorList());
    }
  };
},946,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},947,[946]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},948,[949]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ALLOW_OF_CLAUSE = true;
  module.exports = {
    parse: function nthWithOfClause() {
      return this.createSingleNodeList(this.Nth(ALLOW_OF_CLAUSE));
    }
  };
},949,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},950,[949]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},951,[952]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var DISALLOW_OF_CLAUSE = false;
  module.exports = {
    parse: function nth() {
      return this.createSingleNodeList(this.Nth(DISALLOW_OF_CLAUSE));
    }
  };
},952,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},953,[952]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    parse: function compoundSelector() {
      return this.createSingleNodeList(this.Selector());
    }
  };
},954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    node: _$$_REQUIRE(_dependencyMap[0])
  };
},955,[886]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "_args": [
    [
      "css-tree@1.1.3",
      "/Users/jingang/Desktop/gitHubProject/RNlearnDemotest/AwesomeProject"
    ]
  ],
  "_from": "css-tree@1.1.3",
  "_id": "css-tree@1.1.3",
  "_inBundle": false,
  "_integrity": "sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==",
  "_location": "/css-tree",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "css-tree@1.1.3",
    "name": "css-tree",
    "escapedName": "css-tree",
    "rawSpec": "1.1.3",
    "saveSpec": null,
    "fetchSpec": "1.1.3"
  },
  "_requiredBy": [
    "/react-native-svg"
  ],
  "_resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz",
  "_spec": "1.1.3",
  "_where": "/Users/jingang/Desktop/gitHubProject/RNlearnDemotest/AwesomeProject",
  "author": {
    "name": "Roman Dvornov",
    "email": "rdvornov@gmail.com",
    "url": "https://github.com/lahmatiy"
  },
  "bugs": {
    "url": "https://github.com/csstree/csstree/issues"
  },
  "dependencies": {
    "mdn-data": "2.0.14",
    "source-map": "^0.6.1"
  },
  "description": "A tool set for CSS: fast detailed parser (CSS → AST), walker (AST traversal), generator (AST → CSS) and lexer (validation and matching) based on specs and browser implementations",
  "devDependencies": {
    "@rollup/plugin-commonjs": "^11.0.2",
    "@rollup/plugin-json": "^4.0.2",
    "@rollup/plugin-node-resolve": "^7.1.1",
    "coveralls": "^3.0.9",
    "eslint": "^6.8.0",
    "json-to-ast": "^2.1.0",
    "mocha": "^6.2.3",
    "nyc": "^14.1.1",
    "rollup": "^1.32.1",
    "rollup-plugin-terser": "^5.3.0"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "data",
    "dist",
    "lib"
  ],
  "homepage": "https://github.com/csstree/csstree#readme",
  "jsdelivr": "dist/csstree.min.js",
  "keywords": [
    "css",
    "ast",
    "tokenizer",
    "parser",
    "walker",
    "lexer",
    "generator",
    "utils",
    "syntax",
    "validation"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "css-tree",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/csstree/csstree.git"
  },
  "scripts": {
    "build": "rollup --config",
    "coverage": "nyc npm test",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "hydrogen": "node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --trace_hydrogen_file=code.cfg --print-opt-code bin/parse --stat -o /dev/null",
    "lint": "eslint data lib scripts test && node scripts/review-syntax-patch --lint && node scripts/update-docs --lint",
    "lint-and-test": "npm run lint && npm test",
    "prepublishOnly": "npm run build",
    "review:syntax-patch": "node scripts/review-syntax-patch",
    "test": "mocha --reporter progress",
    "travis": "nyc npm run lint-and-test && npm run coveralls",
    "update:docs": "node scripts/update-docs"
  },
  "unpkg": "dist/csstree.min.js",
  "version": "1.1.3"
}
;
},956,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  module.exports = CSSselect;

  var DomUtils = _$$_REQUIRE(_dependencyMap[0]);

  var falseFunc = _$$_REQUIRE(_dependencyMap[1]).falseFunc;

  var compileRaw = _$$_REQUIRE(_dependencyMap[2]);

  function wrapCompile(func) {
    return function addAdapter(selector, options, context) {
      options = options || {};
      options.adapter = options.adapter || DomUtils;
      return func(selector, options, context);
    };
  }

  var compile = wrapCompile(compileRaw);
  var compileUnsafe = wrapCompile(compileRaw.compileUnsafe);

  function getSelectorFunc(searchFunc) {
    return function select(query, elems, options) {
      options = options || {};
      options.adapter = options.adapter || DomUtils;

      if (typeof query !== "function") {
        query = compileUnsafe(query, options, elems);
      }

      if (query.shouldTestNextSiblings) {
        elems = appendNextSiblings(options && options.context || elems, options.adapter);
      }

      if (!Array.isArray(elems)) elems = options.adapter.getChildren(elems);else elems = options.adapter.removeSubsets(elems);
      return searchFunc(query, elems, options);
    };
  }

  function getNextSiblings(elem, adapter) {
    var siblings = adapter.getSiblings(elem);
    if (!Array.isArray(siblings)) return [];
    siblings = siblings.slice(0);

    while (siblings.shift() !== elem) {
      ;
    }

    return siblings;
  }

  function appendNextSiblings(elems, adapter) {
    if (!Array.isArray(elems)) elems = [elems];
    var newElems = elems.slice(0);

    for (var i = 0, len = elems.length; i < len; i++) {
      var nextSiblings = getNextSiblings(newElems[i], adapter);
      newElems.push.apply(newElems, nextSiblings);
    }

    return newElems;
  }

  var selectAll = getSelectorFunc(function selectAll(query, elems, options) {
    return query === falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems);
  });
  var selectOne = getSelectorFunc(function selectOne(query, elems, options) {
    return query === falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems);
  });

  function is(elem, query, options) {
    options = options || {};
    options.adapter = options.adapter || DomUtils;
    return (typeof query === "function" ? query : compile(query, options))(elem);
  }

  function CSSselect(query, elems, options) {
    return selectAll(query, elems, options);
  }

  CSSselect.compile = compile;
  CSSselect.filters = compileRaw.Pseudos.filters;
  CSSselect.pseudos = compileRaw.Pseudos.pseudos;
  CSSselect.selectAll = selectAll;
  CSSselect.selectOne = selectOne;
  CSSselect.is = is;
  CSSselect.parse = compile;
  CSSselect.iterate = selectAll;
  CSSselect._compileUnsafe = compileUnsafe;
  CSSselect._compileToken = compileRaw.compileToken;
},957,[958,977,978]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var DomUtils = module.exports;
  [_$$_REQUIRE(_dependencyMap[0]), _$$_REQUIRE(_dependencyMap[1]), _$$_REQUIRE(_dependencyMap[2]), _$$_REQUIRE(_dependencyMap[3]), _$$_REQUIRE(_dependencyMap[4]), _$$_REQUIRE(_dependencyMap[5])].forEach(function (ext) {
    Object.keys(ext).forEach(function (key) {
      DomUtils[key] = ext[key].bind(DomUtils);
    });
  });
},958,[959,972,973,974,975,976]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ElementType = _$$_REQUIRE(_dependencyMap[0]),
      getOuterHTML = _$$_REQUIRE(_dependencyMap[1]),
      isTag = ElementType.isTag;

  module.exports = {
    getInnerHTML: getInnerHTML,
    getOuterHTML: getOuterHTML,
    getText: getText
  };

  function getInnerHTML(elem, opts) {
    return elem.children ? elem.children.map(function (elem) {
      return getOuterHTML(elem, opts);
    }).join("") : "";
  }

  function getText(elem) {
    if (Array.isArray(elem)) return elem.map(getText).join("");
    if (isTag(elem)) return elem.name === "br" ? "\n" : getText(elem.children);
    if (elem.type === ElementType.CDATA) return getText(elem.children);
    if (elem.type === ElementType.Text) return elem.data;
    return "";
  }
},959,[960,961]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    Text: "text",
    Directive: "directive",
    Comment: "comment",
    Script: "script",
    Style: "style",
    Tag: "tag",
    CDATA: "cdata",
    Doctype: "doctype",
    isTag: function isTag(elem) {
      return elem.type === "tag" || elem.type === "script" || elem.type === "style";
    }
  };
},960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var ElementType = _$$_REQUIRE(_dependencyMap[1]);

  var entities = _$$_REQUIRE(_dependencyMap[2]);

  var foreignNames = _$$_REQUIRE(_dependencyMap[3]);

  foreignNames.elementNames.__proto__ = null;
  foreignNames.attributeNames.__proto__ = null;
  var unencodedElements = {
    __proto__: null,
    style: true,
    script: true,
    xmp: true,
    iframe: true,
    noembed: true,
    noframes: true,
    plaintext: true,
    noscript: true
  };

  function formatAttrs(attributes, opts) {
    if (!attributes) return;
    var output = '';
    var value;

    for (var key in attributes) {
      value = attributes[key];

      if (output) {
        output += ' ';
      }

      if (opts.xmlMode === 'foreign') {
        key = foreignNames.attributeNames[key] || key;
      }

      output += key;

      if (value !== null && value !== '' || opts.xmlMode) {
        output += '="' + (opts.decodeEntities ? entities.encodeXML(value) : value.replace(/\"/g, '&quot;')) + '"';
      }
    }

    return output;
  }

  var singleTag = {
    __proto__: null,
    area: true,
    base: true,
    basefont: true,
    br: true,
    col: true,
    command: true,
    embed: true,
    frame: true,
    hr: true,
    img: true,
    input: true,
    isindex: true,
    keygen: true,
    link: true,
    meta: true,
    param: true,
    source: true,
    track: true,
    wbr: true
  };

  var render = module.exports = function (dom, opts) {
    if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
    opts = opts || {};
    var output = '';

    for (var i = 0; i < dom.length; i++) {
      var elem = dom[i];
      if (elem.type === 'root') output += render(elem.children, opts);else if (ElementType.isTag(elem)) output += renderTag(elem, opts);else if (elem.type === ElementType.Directive) output += renderDirective(elem);else if (elem.type === ElementType.Comment) output += renderComment(elem);else if (elem.type === ElementType.CDATA) output += renderCdata(elem);else output += renderText(elem, opts);
    }

    return output;
  };

  var foreignModeIntegrationPoints = ['mi', 'mo', 'mn', 'ms', 'mtext', 'annotation-xml', 'foreignObject', 'desc', 'title'];

  function renderTag(elem, opts) {
    if (opts.xmlMode === 'foreign') {
      elem.name = foreignNames.elementNames[elem.name] || elem.name;
      if (elem.parent && foreignModeIntegrationPoints.indexOf(elem.parent.name) >= 0) opts = _extends({}, opts, {
        xmlMode: false
      });
    }

    if (!opts.xmlMode && ['svg', 'math'].indexOf(elem.name) >= 0) {
      opts = _extends({}, opts, {
        xmlMode: 'foreign'
      });
    }

    var tag = '<' + elem.name;
    var attribs = formatAttrs(elem.attribs, opts);

    if (attribs) {
      tag += ' ' + attribs;
    }

    if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {
      tag += '/>';
    } else {
      tag += '>';

      if (elem.children) {
        tag += render(elem.children, opts);
      }

      if (!singleTag[elem.name] || opts.xmlMode) {
        tag += '</' + elem.name + '>';
      }
    }

    return tag;
  }

  function renderDirective(elem) {
    return '<' + elem.data + '>';
  }

  function renderText(elem, opts) {
    var data = elem.data || '';

    if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
      data = entities.encodeXML(data);
    }

    return data;
  }

  function renderCdata(elem) {
    return '<![CDATA[' + elem.children[0].data + ']]>';
  }

  function renderComment(elem) {
    return '<!--' + elem.data + '-->';
  }
},961,[11,962,963,971]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = undefined;
  var ElementType;

  (function (ElementType) {
    ElementType["Root"] = "root";
    ElementType["Text"] = "text";
    ElementType["Directive"] = "directive";
    ElementType["Comment"] = "comment";
    ElementType["Script"] = "script";
    ElementType["Style"] = "style";
    ElementType["Tag"] = "tag";
    ElementType["CDATA"] = "cdata";
    ElementType["Doctype"] = "doctype";
  })(ElementType = exports.ElementType || (exports.ElementType = {}));

  function isTag(elem) {
    return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;
  }

  exports.isTag = isTag;
  exports.Root = ElementType.Root;
  exports.Text = ElementType.Text;
  exports.Directive = ElementType.Directive;
  exports.Comment = ElementType.Comment;
  exports.Script = ElementType.Script;
  exports.Style = ElementType.Style;
  exports.Tag = ElementType.Tag;
  exports.CDATA = ElementType.CDATA;
  exports.Doctype = ElementType.Doctype;
},962,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = undefined;

  var decode_1 = _$$_REQUIRE(_dependencyMap[0]);

  var encode_1 = _$$_REQUIRE(_dependencyMap[1]);

  function decode(data, level) {
    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);
  }

  exports.decode = decode;

  function decodeStrict(data, level) {
    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);
  }

  exports.decodeStrict = decodeStrict;

  function encode(data, level) {
    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);
  }

  exports.encode = encode;

  var encode_2 = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "encodeXML", {
    enumerable: true,
    get: function get() {
      return encode_2.encodeXML;
    }
  });
  Object.defineProperty(exports, "encodeHTML", {
    enumerable: true,
    get: function get() {
      return encode_2.encodeHTML;
    }
  });
  Object.defineProperty(exports, "encodeNonAsciiHTML", {
    enumerable: true,
    get: function get() {
      return encode_2.encodeNonAsciiHTML;
    }
  });
  Object.defineProperty(exports, "escape", {
    enumerable: true,
    get: function get() {
      return encode_2.escape;
    }
  });
  Object.defineProperty(exports, "escapeUTF8", {
    enumerable: true,
    get: function get() {
      return encode_2.escapeUTF8;
    }
  });
  Object.defineProperty(exports, "encodeHTML4", {
    enumerable: true,
    get: function get() {
      return encode_2.encodeHTML;
    }
  });
  Object.defineProperty(exports, "encodeHTML5", {
    enumerable: true,
    get: function get() {
      return encode_2.encodeHTML;
    }
  });

  var decode_2 = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "decodeXML", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeXML;
    }
  });
  Object.defineProperty(exports, "decodeHTML", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeHTML;
    }
  });
  Object.defineProperty(exports, "decodeHTMLStrict", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeHTMLStrict;
    }
  });
  Object.defineProperty(exports, "decodeHTML4", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeHTML;
    }
  });
  Object.defineProperty(exports, "decodeHTML5", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeHTML;
    }
  });
  Object.defineProperty(exports, "decodeHTML4Strict", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeHTMLStrict;
    }
  });
  Object.defineProperty(exports, "decodeHTML5Strict", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeHTMLStrict;
    }
  });
  Object.defineProperty(exports, "decodeXMLStrict", {
    enumerable: true,
    get: function get() {
      return decode_2.decodeXML;
    }
  });
},963,[964,970]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __importDefault = this && this.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : {
      "default": mod
    };
  };

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = undefined;

  var entities_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0]));

  var legacy_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[1]));

  var xml_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[2]));

  var decode_codepoint_1 = __importDefault(_$$_REQUIRE(_dependencyMap[3]));

  var strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\da-fA-F]+|#\d+);/g;
  exports.decodeXML = getStrictDecoder(xml_json_1.default);
  exports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);

  function getStrictDecoder(map) {
    var replace = getReplacer(map);
    return function (str) {
      return String(str).replace(strictEntityRe, replace);
    };
  }

  var sorter = function sorter(a, b) {
    return a < b ? 1 : -1;
  };

  exports.decodeHTML = function () {
    var legacy = Object.keys(legacy_json_1.default).sort(sorter);
    var keys = Object.keys(entities_json_1.default).sort(sorter);

    for (var i = 0, j = 0; i < keys.length; i++) {
      if (legacy[j] === keys[i]) {
        keys[i] += ";?";
        j++;
      } else {
        keys[i] += ";";
      }
    }

    var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g");
    var replace = getReplacer(entities_json_1.default);

    function replacer(str) {
      if (str.substr(-1) !== ";") str += ";";
      return replace(str);
    }

    return function (str) {
      return String(str).replace(re, replacer);
    };
  }();

  function getReplacer(map) {
    return function replace(str) {
      if (str.charAt(1) === "#") {
        var secondChar = str.charAt(2);

        if (secondChar === "X" || secondChar === "x") {
          return decode_codepoint_1.default(parseInt(str.substr(3), 16));
        }

        return decode_codepoint_1.default(parseInt(str.substr(2), 10));
      }

      return map[str.slice(1, -1)] || str;
    };
  }
},964,[965,966,967,968]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {"Aacute":"Á","aacute":"á","Abreve":"Ă","abreve":"ă","ac":"∾","acd":"∿","acE":"∾̳","Acirc":"Â","acirc":"â","acute":"´","Acy":"А","acy":"а","AElig":"Æ","aelig":"æ","af":"⁡","Afr":"𝔄","afr":"𝔞","Agrave":"À","agrave":"à","alefsym":"ℵ","aleph":"ℵ","Alpha":"Α","alpha":"α","Amacr":"Ā","amacr":"ā","amalg":"⨿","amp":"&","AMP":"&","andand":"⩕","And":"⩓","and":"∧","andd":"⩜","andslope":"⩘","andv":"⩚","ang":"∠","ange":"⦤","angle":"∠","angmsdaa":"⦨","angmsdab":"⦩","angmsdac":"⦪","angmsdad":"⦫","angmsdae":"⦬","angmsdaf":"⦭","angmsdag":"⦮","angmsdah":"⦯","angmsd":"∡","angrt":"∟","angrtvb":"⊾","angrtvbd":"⦝","angsph":"∢","angst":"Å","angzarr":"⍼","Aogon":"Ą","aogon":"ą","Aopf":"𝔸","aopf":"𝕒","apacir":"⩯","ap":"≈","apE":"⩰","ape":"≊","apid":"≋","apos":"'","ApplyFunction":"⁡","approx":"≈","approxeq":"≊","Aring":"Å","aring":"å","Ascr":"𝒜","ascr":"𝒶","Assign":"≔","ast":"*","asymp":"≈","asympeq":"≍","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","awconint":"∳","awint":"⨑","backcong":"≌","backepsilon":"϶","backprime":"‵","backsim":"∽","backsimeq":"⋍","Backslash":"∖","Barv":"⫧","barvee":"⊽","barwed":"⌅","Barwed":"⌆","barwedge":"⌅","bbrk":"⎵","bbrktbrk":"⎶","bcong":"≌","Bcy":"Б","bcy":"б","bdquo":"„","becaus":"∵","because":"∵","Because":"∵","bemptyv":"⦰","bepsi":"϶","bernou":"ℬ","Bernoullis":"ℬ","Beta":"Β","beta":"β","beth":"ℶ","between":"≬","Bfr":"𝔅","bfr":"𝔟","bigcap":"⋂","bigcirc":"◯","bigcup":"⋃","bigodot":"⨀","bigoplus":"⨁","bigotimes":"⨂","bigsqcup":"⨆","bigstar":"★","bigtriangledown":"▽","bigtriangleup":"△","biguplus":"⨄","bigvee":"⋁","bigwedge":"⋀","bkarow":"⤍","blacklozenge":"⧫","blacksquare":"▪","blacktriangle":"▴","blacktriangledown":"▾","blacktriangleleft":"◂","blacktriangleright":"▸","blank":"␣","blk12":"▒","blk14":"░","blk34":"▓","block":"█","bne":"=⃥","bnequiv":"≡⃥","bNot":"⫭","bnot":"⌐","Bopf":"𝔹","bopf":"𝕓","bot":"⊥","bottom":"⊥","bowtie":"⋈","boxbox":"⧉","boxdl":"┐","boxdL":"╕","boxDl":"╖","boxDL":"╗","boxdr":"┌","boxdR":"╒","boxDr":"╓","boxDR":"╔","boxh":"─","boxH":"═","boxhd":"┬","boxHd":"╤","boxhD":"╥","boxHD":"╦","boxhu":"┴","boxHu":"╧","boxhU":"╨","boxHU":"╩","boxminus":"⊟","boxplus":"⊞","boxtimes":"⊠","boxul":"┘","boxuL":"╛","boxUl":"╜","boxUL":"╝","boxur":"└","boxuR":"╘","boxUr":"╙","boxUR":"╚","boxv":"│","boxV":"║","boxvh":"┼","boxvH":"╪","boxVh":"╫","boxVH":"╬","boxvl":"┤","boxvL":"╡","boxVl":"╢","boxVL":"╣","boxvr":"├","boxvR":"╞","boxVr":"╟","boxVR":"╠","bprime":"‵","breve":"˘","Breve":"˘","brvbar":"¦","bscr":"𝒷","Bscr":"ℬ","bsemi":"⁏","bsim":"∽","bsime":"⋍","bsolb":"⧅","bsol":"\\","bsolhsub":"⟈","bull":"•","bullet":"•","bump":"≎","bumpE":"⪮","bumpe":"≏","Bumpeq":"≎","bumpeq":"≏","Cacute":"Ć","cacute":"ć","capand":"⩄","capbrcup":"⩉","capcap":"⩋","cap":"∩","Cap":"⋒","capcup":"⩇","capdot":"⩀","CapitalDifferentialD":"ⅅ","caps":"∩︀","caret":"⁁","caron":"ˇ","Cayleys":"ℭ","ccaps":"⩍","Ccaron":"Č","ccaron":"č","Ccedil":"Ç","ccedil":"ç","Ccirc":"Ĉ","ccirc":"ĉ","Cconint":"∰","ccups":"⩌","ccupssm":"⩐","Cdot":"Ċ","cdot":"ċ","cedil":"¸","Cedilla":"¸","cemptyv":"⦲","cent":"¢","centerdot":"·","CenterDot":"·","cfr":"𝔠","Cfr":"ℭ","CHcy":"Ч","chcy":"ч","check":"✓","checkmark":"✓","Chi":"Χ","chi":"χ","circ":"ˆ","circeq":"≗","circlearrowleft":"↺","circlearrowright":"↻","circledast":"⊛","circledcirc":"⊚","circleddash":"⊝","CircleDot":"⊙","circledR":"®","circledS":"Ⓢ","CircleMinus":"⊖","CirclePlus":"⊕","CircleTimes":"⊗","cir":"○","cirE":"⧃","cire":"≗","cirfnint":"⨐","cirmid":"⫯","cirscir":"⧂","ClockwiseContourIntegral":"∲","CloseCurlyDoubleQuote":"”","CloseCurlyQuote":"’","clubs":"♣","clubsuit":"♣","colon":":","Colon":"∷","Colone":"⩴","colone":"≔","coloneq":"≔","comma":",","commat":"@","comp":"∁","compfn":"∘","complement":"∁","complexes":"ℂ","cong":"≅","congdot":"⩭","Congruent":"≡","conint":"∮","Conint":"∯","ContourIntegral":"∮","copf":"𝕔","Copf":"ℂ","coprod":"∐","Coproduct":"∐","copy":"©","COPY":"©","copysr":"℗","CounterClockwiseContourIntegral":"∳","crarr":"↵","cross":"✗","Cross":"⨯","Cscr":"𝒞","cscr":"𝒸","csub":"⫏","csube":"⫑","csup":"⫐","csupe":"⫒","ctdot":"⋯","cudarrl":"⤸","cudarrr":"⤵","cuepr":"⋞","cuesc":"⋟","cularr":"↶","cularrp":"⤽","cupbrcap":"⩈","cupcap":"⩆","CupCap":"≍","cup":"∪","Cup":"⋓","cupcup":"⩊","cupdot":"⊍","cupor":"⩅","cups":"∪︀","curarr":"↷","curarrm":"⤼","curlyeqprec":"⋞","curlyeqsucc":"⋟","curlyvee":"⋎","curlywedge":"⋏","curren":"¤","curvearrowleft":"↶","curvearrowright":"↷","cuvee":"⋎","cuwed":"⋏","cwconint":"∲","cwint":"∱","cylcty":"⌭","dagger":"†","Dagger":"‡","daleth":"ℸ","darr":"↓","Darr":"↡","dArr":"⇓","dash":"‐","Dashv":"⫤","dashv":"⊣","dbkarow":"⤏","dblac":"˝","Dcaron":"Ď","dcaron":"ď","Dcy":"Д","dcy":"д","ddagger":"‡","ddarr":"⇊","DD":"ⅅ","dd":"ⅆ","DDotrahd":"⤑","ddotseq":"⩷","deg":"°","Del":"∇","Delta":"Δ","delta":"δ","demptyv":"⦱","dfisht":"⥿","Dfr":"𝔇","dfr":"𝔡","dHar":"⥥","dharl":"⇃","dharr":"⇂","DiacriticalAcute":"´","DiacriticalDot":"˙","DiacriticalDoubleAcute":"˝","DiacriticalGrave":"`","DiacriticalTilde":"˜","diam":"⋄","diamond":"⋄","Diamond":"⋄","diamondsuit":"♦","diams":"♦","die":"¨","DifferentialD":"ⅆ","digamma":"ϝ","disin":"⋲","div":"÷","divide":"÷","divideontimes":"⋇","divonx":"⋇","DJcy":"Ђ","djcy":"ђ","dlcorn":"⌞","dlcrop":"⌍","dollar":"$","Dopf":"𝔻","dopf":"𝕕","Dot":"¨","dot":"˙","DotDot":"⃜","doteq":"≐","doteqdot":"≑","DotEqual":"≐","dotminus":"∸","dotplus":"∔","dotsquare":"⊡","doublebarwedge":"⌆","DoubleContourIntegral":"∯","DoubleDot":"¨","DoubleDownArrow":"⇓","DoubleLeftArrow":"⇐","DoubleLeftRightArrow":"⇔","DoubleLeftTee":"⫤","DoubleLongLeftArrow":"⟸","DoubleLongLeftRightArrow":"⟺","DoubleLongRightArrow":"⟹","DoubleRightArrow":"⇒","DoubleRightTee":"⊨","DoubleUpArrow":"⇑","DoubleUpDownArrow":"⇕","DoubleVerticalBar":"∥","DownArrowBar":"⤓","downarrow":"↓","DownArrow":"↓","Downarrow":"⇓","DownArrowUpArrow":"⇵","DownBreve":"̑","downdownarrows":"⇊","downharpoonleft":"⇃","downharpoonright":"⇂","DownLeftRightVector":"⥐","DownLeftTeeVector":"⥞","DownLeftVectorBar":"⥖","DownLeftVector":"↽","DownRightTeeVector":"⥟","DownRightVectorBar":"⥗","DownRightVector":"⇁","DownTeeArrow":"↧","DownTee":"⊤","drbkarow":"⤐","drcorn":"⌟","drcrop":"⌌","Dscr":"𝒟","dscr":"𝒹","DScy":"Ѕ","dscy":"ѕ","dsol":"⧶","Dstrok":"Đ","dstrok":"đ","dtdot":"⋱","dtri":"▿","dtrif":"▾","duarr":"⇵","duhar":"⥯","dwangle":"⦦","DZcy":"Џ","dzcy":"џ","dzigrarr":"⟿","Eacute":"É","eacute":"é","easter":"⩮","Ecaron":"Ě","ecaron":"ě","Ecirc":"Ê","ecirc":"ê","ecir":"≖","ecolon":"≕","Ecy":"Э","ecy":"э","eDDot":"⩷","Edot":"Ė","edot":"ė","eDot":"≑","ee":"ⅇ","efDot":"≒","Efr":"𝔈","efr":"𝔢","eg":"⪚","Egrave":"È","egrave":"è","egs":"⪖","egsdot":"⪘","el":"⪙","Element":"∈","elinters":"⏧","ell":"ℓ","els":"⪕","elsdot":"⪗","Emacr":"Ē","emacr":"ē","empty":"∅","emptyset":"∅","EmptySmallSquare":"◻","emptyv":"∅","EmptyVerySmallSquare":"▫","emsp13":" ","emsp14":" ","emsp":" ","ENG":"Ŋ","eng":"ŋ","ensp":" ","Eogon":"Ę","eogon":"ę","Eopf":"𝔼","eopf":"𝕖","epar":"⋕","eparsl":"⧣","eplus":"⩱","epsi":"ε","Epsilon":"Ε","epsilon":"ε","epsiv":"ϵ","eqcirc":"≖","eqcolon":"≕","eqsim":"≂","eqslantgtr":"⪖","eqslantless":"⪕","Equal":"⩵","equals":"=","EqualTilde":"≂","equest":"≟","Equilibrium":"⇌","equiv":"≡","equivDD":"⩸","eqvparsl":"⧥","erarr":"⥱","erDot":"≓","escr":"ℯ","Escr":"ℰ","esdot":"≐","Esim":"⩳","esim":"≂","Eta":"Η","eta":"η","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","euro":"€","excl":"!","exist":"∃","Exists":"∃","expectation":"ℰ","exponentiale":"ⅇ","ExponentialE":"ⅇ","fallingdotseq":"≒","Fcy":"Ф","fcy":"ф","female":"♀","ffilig":"ﬃ","fflig":"ﬀ","ffllig":"ﬄ","Ffr":"𝔉","ffr":"𝔣","filig":"ﬁ","FilledSmallSquare":"◼","FilledVerySmallSquare":"▪","fjlig":"fj","flat":"♭","fllig":"ﬂ","fltns":"▱","fnof":"ƒ","Fopf":"𝔽","fopf":"𝕗","forall":"∀","ForAll":"∀","fork":"⋔","forkv":"⫙","Fouriertrf":"ℱ","fpartint":"⨍","frac12":"½","frac13":"⅓","frac14":"¼","frac15":"⅕","frac16":"⅙","frac18":"⅛","frac23":"⅔","frac25":"⅖","frac34":"¾","frac35":"⅗","frac38":"⅜","frac45":"⅘","frac56":"⅚","frac58":"⅝","frac78":"⅞","frasl":"⁄","frown":"⌢","fscr":"𝒻","Fscr":"ℱ","gacute":"ǵ","Gamma":"Γ","gamma":"γ","Gammad":"Ϝ","gammad":"ϝ","gap":"⪆","Gbreve":"Ğ","gbreve":"ğ","Gcedil":"Ģ","Gcirc":"Ĝ","gcirc":"ĝ","Gcy":"Г","gcy":"г","Gdot":"Ġ","gdot":"ġ","ge":"≥","gE":"≧","gEl":"⪌","gel":"⋛","geq":"≥","geqq":"≧","geqslant":"⩾","gescc":"⪩","ges":"⩾","gesdot":"⪀","gesdoto":"⪂","gesdotol":"⪄","gesl":"⋛︀","gesles":"⪔","Gfr":"𝔊","gfr":"𝔤","gg":"≫","Gg":"⋙","ggg":"⋙","gimel":"ℷ","GJcy":"Ѓ","gjcy":"ѓ","gla":"⪥","gl":"≷","glE":"⪒","glj":"⪤","gnap":"⪊","gnapprox":"⪊","gne":"⪈","gnE":"≩","gneq":"⪈","gneqq":"≩","gnsim":"⋧","Gopf":"𝔾","gopf":"𝕘","grave":"`","GreaterEqual":"≥","GreaterEqualLess":"⋛","GreaterFullEqual":"≧","GreaterGreater":"⪢","GreaterLess":"≷","GreaterSlantEqual":"⩾","GreaterTilde":"≳","Gscr":"𝒢","gscr":"ℊ","gsim":"≳","gsime":"⪎","gsiml":"⪐","gtcc":"⪧","gtcir":"⩺","gt":">","GT":">","Gt":"≫","gtdot":"⋗","gtlPar":"⦕","gtquest":"⩼","gtrapprox":"⪆","gtrarr":"⥸","gtrdot":"⋗","gtreqless":"⋛","gtreqqless":"⪌","gtrless":"≷","gtrsim":"≳","gvertneqq":"≩︀","gvnE":"≩︀","Hacek":"ˇ","hairsp":" ","half":"½","hamilt":"ℋ","HARDcy":"Ъ","hardcy":"ъ","harrcir":"⥈","harr":"↔","hArr":"⇔","harrw":"↭","Hat":"^","hbar":"ℏ","Hcirc":"Ĥ","hcirc":"ĥ","hearts":"♥","heartsuit":"♥","hellip":"…","hercon":"⊹","hfr":"𝔥","Hfr":"ℌ","HilbertSpace":"ℋ","hksearow":"⤥","hkswarow":"⤦","hoarr":"⇿","homtht":"∻","hookleftarrow":"↩","hookrightarrow":"↪","hopf":"𝕙","Hopf":"ℍ","horbar":"―","HorizontalLine":"─","hscr":"𝒽","Hscr":"ℋ","hslash":"ℏ","Hstrok":"Ħ","hstrok":"ħ","HumpDownHump":"≎","HumpEqual":"≏","hybull":"⁃","hyphen":"‐","Iacute":"Í","iacute":"í","ic":"⁣","Icirc":"Î","icirc":"î","Icy":"И","icy":"и","Idot":"İ","IEcy":"Е","iecy":"е","iexcl":"¡","iff":"⇔","ifr":"𝔦","Ifr":"ℑ","Igrave":"Ì","igrave":"ì","ii":"ⅈ","iiiint":"⨌","iiint":"∭","iinfin":"⧜","iiota":"℩","IJlig":"Ĳ","ijlig":"ĳ","Imacr":"Ī","imacr":"ī","image":"ℑ","ImaginaryI":"ⅈ","imagline":"ℐ","imagpart":"ℑ","imath":"ı","Im":"ℑ","imof":"⊷","imped":"Ƶ","Implies":"⇒","incare":"℅","in":"∈","infin":"∞","infintie":"⧝","inodot":"ı","intcal":"⊺","int":"∫","Int":"∬","integers":"ℤ","Integral":"∫","intercal":"⊺","Intersection":"⋂","intlarhk":"⨗","intprod":"⨼","InvisibleComma":"⁣","InvisibleTimes":"⁢","IOcy":"Ё","iocy":"ё","Iogon":"Į","iogon":"į","Iopf":"𝕀","iopf":"𝕚","Iota":"Ι","iota":"ι","iprod":"⨼","iquest":"¿","iscr":"𝒾","Iscr":"ℐ","isin":"∈","isindot":"⋵","isinE":"⋹","isins":"⋴","isinsv":"⋳","isinv":"∈","it":"⁢","Itilde":"Ĩ","itilde":"ĩ","Iukcy":"І","iukcy":"і","Iuml":"Ï","iuml":"ï","Jcirc":"Ĵ","jcirc":"ĵ","Jcy":"Й","jcy":"й","Jfr":"𝔍","jfr":"𝔧","jmath":"ȷ","Jopf":"𝕁","jopf":"𝕛","Jscr":"𝒥","jscr":"𝒿","Jsercy":"Ј","jsercy":"ј","Jukcy":"Є","jukcy":"є","Kappa":"Κ","kappa":"κ","kappav":"ϰ","Kcedil":"Ķ","kcedil":"ķ","Kcy":"К","kcy":"к","Kfr":"𝔎","kfr":"𝔨","kgreen":"ĸ","KHcy":"Х","khcy":"х","KJcy":"Ќ","kjcy":"ќ","Kopf":"𝕂","kopf":"𝕜","Kscr":"𝒦","kscr":"𝓀","lAarr":"⇚","Lacute":"Ĺ","lacute":"ĺ","laemptyv":"⦴","lagran":"ℒ","Lambda":"Λ","lambda":"λ","lang":"⟨","Lang":"⟪","langd":"⦑","langle":"⟨","lap":"⪅","Laplacetrf":"ℒ","laquo":"«","larrb":"⇤","larrbfs":"⤟","larr":"←","Larr":"↞","lArr":"⇐","larrfs":"⤝","larrhk":"↩","larrlp":"↫","larrpl":"⤹","larrsim":"⥳","larrtl":"↢","latail":"⤙","lAtail":"⤛","lat":"⪫","late":"⪭","lates":"⪭︀","lbarr":"⤌","lBarr":"⤎","lbbrk":"❲","lbrace":"{","lbrack":"[","lbrke":"⦋","lbrksld":"⦏","lbrkslu":"⦍","Lcaron":"Ľ","lcaron":"ľ","Lcedil":"Ļ","lcedil":"ļ","lceil":"⌈","lcub":"{","Lcy":"Л","lcy":"л","ldca":"⤶","ldquo":"“","ldquor":"„","ldrdhar":"⥧","ldrushar":"⥋","ldsh":"↲","le":"≤","lE":"≦","LeftAngleBracket":"⟨","LeftArrowBar":"⇤","leftarrow":"←","LeftArrow":"←","Leftarrow":"⇐","LeftArrowRightArrow":"⇆","leftarrowtail":"↢","LeftCeiling":"⌈","LeftDoubleBracket":"⟦","LeftDownTeeVector":"⥡","LeftDownVectorBar":"⥙","LeftDownVector":"⇃","LeftFloor":"⌊","leftharpoondown":"↽","leftharpoonup":"↼","leftleftarrows":"⇇","leftrightarrow":"↔","LeftRightArrow":"↔","Leftrightarrow":"⇔","leftrightarrows":"⇆","leftrightharpoons":"⇋","leftrightsquigarrow":"↭","LeftRightVector":"⥎","LeftTeeArrow":"↤","LeftTee":"⊣","LeftTeeVector":"⥚","leftthreetimes":"⋋","LeftTriangleBar":"⧏","LeftTriangle":"⊲","LeftTriangleEqual":"⊴","LeftUpDownVector":"⥑","LeftUpTeeVector":"⥠","LeftUpVectorBar":"⥘","LeftUpVector":"↿","LeftVectorBar":"⥒","LeftVector":"↼","lEg":"⪋","leg":"⋚","leq":"≤","leqq":"≦","leqslant":"⩽","lescc":"⪨","les":"⩽","lesdot":"⩿","lesdoto":"⪁","lesdotor":"⪃","lesg":"⋚︀","lesges":"⪓","lessapprox":"⪅","lessdot":"⋖","lesseqgtr":"⋚","lesseqqgtr":"⪋","LessEqualGreater":"⋚","LessFullEqual":"≦","LessGreater":"≶","lessgtr":"≶","LessLess":"⪡","lesssim":"≲","LessSlantEqual":"⩽","LessTilde":"≲","lfisht":"⥼","lfloor":"⌊","Lfr":"𝔏","lfr":"𝔩","lg":"≶","lgE":"⪑","lHar":"⥢","lhard":"↽","lharu":"↼","lharul":"⥪","lhblk":"▄","LJcy":"Љ","ljcy":"љ","llarr":"⇇","ll":"≪","Ll":"⋘","llcorner":"⌞","Lleftarrow":"⇚","llhard":"⥫","lltri":"◺","Lmidot":"Ŀ","lmidot":"ŀ","lmoustache":"⎰","lmoust":"⎰","lnap":"⪉","lnapprox":"⪉","lne":"⪇","lnE":"≨","lneq":"⪇","lneqq":"≨","lnsim":"⋦","loang":"⟬","loarr":"⇽","lobrk":"⟦","longleftarrow":"⟵","LongLeftArrow":"⟵","Longleftarrow":"⟸","longleftrightarrow":"⟷","LongLeftRightArrow":"⟷","Longleftrightarrow":"⟺","longmapsto":"⟼","longrightarrow":"⟶","LongRightArrow":"⟶","Longrightarrow":"⟹","looparrowleft":"↫","looparrowright":"↬","lopar":"⦅","Lopf":"𝕃","lopf":"𝕝","loplus":"⨭","lotimes":"⨴","lowast":"∗","lowbar":"_","LowerLeftArrow":"↙","LowerRightArrow":"↘","loz":"◊","lozenge":"◊","lozf":"⧫","lpar":"(","lparlt":"⦓","lrarr":"⇆","lrcorner":"⌟","lrhar":"⇋","lrhard":"⥭","lrm":"‎","lrtri":"⊿","lsaquo":"‹","lscr":"𝓁","Lscr":"ℒ","lsh":"↰","Lsh":"↰","lsim":"≲","lsime":"⪍","lsimg":"⪏","lsqb":"[","lsquo":"‘","lsquor":"‚","Lstrok":"Ł","lstrok":"ł","ltcc":"⪦","ltcir":"⩹","lt":"<","LT":"<","Lt":"≪","ltdot":"⋖","lthree":"⋋","ltimes":"⋉","ltlarr":"⥶","ltquest":"⩻","ltri":"◃","ltrie":"⊴","ltrif":"◂","ltrPar":"⦖","lurdshar":"⥊","luruhar":"⥦","lvertneqq":"≨︀","lvnE":"≨︀","macr":"¯","male":"♂","malt":"✠","maltese":"✠","Map":"⤅","map":"↦","mapsto":"↦","mapstodown":"↧","mapstoleft":"↤","mapstoup":"↥","marker":"▮","mcomma":"⨩","Mcy":"М","mcy":"м","mdash":"—","mDDot":"∺","measuredangle":"∡","MediumSpace":" ","Mellintrf":"ℳ","Mfr":"𝔐","mfr":"𝔪","mho":"℧","micro":"µ","midast":"*","midcir":"⫰","mid":"∣","middot":"·","minusb":"⊟","minus":"−","minusd":"∸","minusdu":"⨪","MinusPlus":"∓","mlcp":"⫛","mldr":"…","mnplus":"∓","models":"⊧","Mopf":"𝕄","mopf":"𝕞","mp":"∓","mscr":"𝓂","Mscr":"ℳ","mstpos":"∾","Mu":"Μ","mu":"μ","multimap":"⊸","mumap":"⊸","nabla":"∇","Nacute":"Ń","nacute":"ń","nang":"∠⃒","nap":"≉","napE":"⩰̸","napid":"≋̸","napos":"ŉ","napprox":"≉","natural":"♮","naturals":"ℕ","natur":"♮","nbsp":" ","nbump":"≎̸","nbumpe":"≏̸","ncap":"⩃","Ncaron":"Ň","ncaron":"ň","Ncedil":"Ņ","ncedil":"ņ","ncong":"≇","ncongdot":"⩭̸","ncup":"⩂","Ncy":"Н","ncy":"н","ndash":"–","nearhk":"⤤","nearr":"↗","neArr":"⇗","nearrow":"↗","ne":"≠","nedot":"≐̸","NegativeMediumSpace":"​","NegativeThickSpace":"​","NegativeThinSpace":"​","NegativeVeryThinSpace":"​","nequiv":"≢","nesear":"⤨","nesim":"≂̸","NestedGreaterGreater":"≫","NestedLessLess":"≪","NewLine":"\n","nexist":"∄","nexists":"∄","Nfr":"𝔑","nfr":"𝔫","ngE":"≧̸","nge":"≱","ngeq":"≱","ngeqq":"≧̸","ngeqslant":"⩾̸","nges":"⩾̸","nGg":"⋙̸","ngsim":"≵","nGt":"≫⃒","ngt":"≯","ngtr":"≯","nGtv":"≫̸","nharr":"↮","nhArr":"⇎","nhpar":"⫲","ni":"∋","nis":"⋼","nisd":"⋺","niv":"∋","NJcy":"Њ","njcy":"њ","nlarr":"↚","nlArr":"⇍","nldr":"‥","nlE":"≦̸","nle":"≰","nleftarrow":"↚","nLeftarrow":"⇍","nleftrightarrow":"↮","nLeftrightarrow":"⇎","nleq":"≰","nleqq":"≦̸","nleqslant":"⩽̸","nles":"⩽̸","nless":"≮","nLl":"⋘̸","nlsim":"≴","nLt":"≪⃒","nlt":"≮","nltri":"⋪","nltrie":"⋬","nLtv":"≪̸","nmid":"∤","NoBreak":"⁠","NonBreakingSpace":" ","nopf":"𝕟","Nopf":"ℕ","Not":"⫬","not":"¬","NotCongruent":"≢","NotCupCap":"≭","NotDoubleVerticalBar":"∦","NotElement":"∉","NotEqual":"≠","NotEqualTilde":"≂̸","NotExists":"∄","NotGreater":"≯","NotGreaterEqual":"≱","NotGreaterFullEqual":"≧̸","NotGreaterGreater":"≫̸","NotGreaterLess":"≹","NotGreaterSlantEqual":"⩾̸","NotGreaterTilde":"≵","NotHumpDownHump":"≎̸","NotHumpEqual":"≏̸","notin":"∉","notindot":"⋵̸","notinE":"⋹̸","notinva":"∉","notinvb":"⋷","notinvc":"⋶","NotLeftTriangleBar":"⧏̸","NotLeftTriangle":"⋪","NotLeftTriangleEqual":"⋬","NotLess":"≮","NotLessEqual":"≰","NotLessGreater":"≸","NotLessLess":"≪̸","NotLessSlantEqual":"⩽̸","NotLessTilde":"≴","NotNestedGreaterGreater":"⪢̸","NotNestedLessLess":"⪡̸","notni":"∌","notniva":"∌","notnivb":"⋾","notnivc":"⋽","NotPrecedes":"⊀","NotPrecedesEqual":"⪯̸","NotPrecedesSlantEqual":"⋠","NotReverseElement":"∌","NotRightTriangleBar":"⧐̸","NotRightTriangle":"⋫","NotRightTriangleEqual":"⋭","NotSquareSubset":"⊏̸","NotSquareSubsetEqual":"⋢","NotSquareSuperset":"⊐̸","NotSquareSupersetEqual":"⋣","NotSubset":"⊂⃒","NotSubsetEqual":"⊈","NotSucceeds":"⊁","NotSucceedsEqual":"⪰̸","NotSucceedsSlantEqual":"⋡","NotSucceedsTilde":"≿̸","NotSuperset":"⊃⃒","NotSupersetEqual":"⊉","NotTilde":"≁","NotTildeEqual":"≄","NotTildeFullEqual":"≇","NotTildeTilde":"≉","NotVerticalBar":"∤","nparallel":"∦","npar":"∦","nparsl":"⫽⃥","npart":"∂̸","npolint":"⨔","npr":"⊀","nprcue":"⋠","nprec":"⊀","npreceq":"⪯̸","npre":"⪯̸","nrarrc":"⤳̸","nrarr":"↛","nrArr":"⇏","nrarrw":"↝̸","nrightarrow":"↛","nRightarrow":"⇏","nrtri":"⋫","nrtrie":"⋭","nsc":"⊁","nsccue":"⋡","nsce":"⪰̸","Nscr":"𝒩","nscr":"𝓃","nshortmid":"∤","nshortparallel":"∦","nsim":"≁","nsime":"≄","nsimeq":"≄","nsmid":"∤","nspar":"∦","nsqsube":"⋢","nsqsupe":"⋣","nsub":"⊄","nsubE":"⫅̸","nsube":"⊈","nsubset":"⊂⃒","nsubseteq":"⊈","nsubseteqq":"⫅̸","nsucc":"⊁","nsucceq":"⪰̸","nsup":"⊅","nsupE":"⫆̸","nsupe":"⊉","nsupset":"⊃⃒","nsupseteq":"⊉","nsupseteqq":"⫆̸","ntgl":"≹","Ntilde":"Ñ","ntilde":"ñ","ntlg":"≸","ntriangleleft":"⋪","ntrianglelefteq":"⋬","ntriangleright":"⋫","ntrianglerighteq":"⋭","Nu":"Ν","nu":"ν","num":"#","numero":"№","numsp":" ","nvap":"≍⃒","nvdash":"⊬","nvDash":"⊭","nVdash":"⊮","nVDash":"⊯","nvge":"≥⃒","nvgt":">⃒","nvHarr":"⤄","nvinfin":"⧞","nvlArr":"⤂","nvle":"≤⃒","nvlt":"<⃒","nvltrie":"⊴⃒","nvrArr":"⤃","nvrtrie":"⊵⃒","nvsim":"∼⃒","nwarhk":"⤣","nwarr":"↖","nwArr":"⇖","nwarrow":"↖","nwnear":"⤧","Oacute":"Ó","oacute":"ó","oast":"⊛","Ocirc":"Ô","ocirc":"ô","ocir":"⊚","Ocy":"О","ocy":"о","odash":"⊝","Odblac":"Ő","odblac":"ő","odiv":"⨸","odot":"⊙","odsold":"⦼","OElig":"Œ","oelig":"œ","ofcir":"⦿","Ofr":"𝔒","ofr":"𝔬","ogon":"˛","Ograve":"Ò","ograve":"ò","ogt":"⧁","ohbar":"⦵","ohm":"Ω","oint":"∮","olarr":"↺","olcir":"⦾","olcross":"⦻","oline":"‾","olt":"⧀","Omacr":"Ō","omacr":"ō","Omega":"Ω","omega":"ω","Omicron":"Ο","omicron":"ο","omid":"⦶","ominus":"⊖","Oopf":"𝕆","oopf":"𝕠","opar":"⦷","OpenCurlyDoubleQuote":"“","OpenCurlyQuote":"‘","operp":"⦹","oplus":"⊕","orarr":"↻","Or":"⩔","or":"∨","ord":"⩝","order":"ℴ","orderof":"ℴ","ordf":"ª","ordm":"º","origof":"⊶","oror":"⩖","orslope":"⩗","orv":"⩛","oS":"Ⓢ","Oscr":"𝒪","oscr":"ℴ","Oslash":"Ø","oslash":"ø","osol":"⊘","Otilde":"Õ","otilde":"õ","otimesas":"⨶","Otimes":"⨷","otimes":"⊗","Ouml":"Ö","ouml":"ö","ovbar":"⌽","OverBar":"‾","OverBrace":"⏞","OverBracket":"⎴","OverParenthesis":"⏜","para":"¶","parallel":"∥","par":"∥","parsim":"⫳","parsl":"⫽","part":"∂","PartialD":"∂","Pcy":"П","pcy":"п","percnt":"%","period":".","permil":"‰","perp":"⊥","pertenk":"‱","Pfr":"𝔓","pfr":"𝔭","Phi":"Φ","phi":"φ","phiv":"ϕ","phmmat":"ℳ","phone":"☎","Pi":"Π","pi":"π","pitchfork":"⋔","piv":"ϖ","planck":"ℏ","planckh":"ℎ","plankv":"ℏ","plusacir":"⨣","plusb":"⊞","pluscir":"⨢","plus":"+","plusdo":"∔","plusdu":"⨥","pluse":"⩲","PlusMinus":"±","plusmn":"±","plussim":"⨦","plustwo":"⨧","pm":"±","Poincareplane":"ℌ","pointint":"⨕","popf":"𝕡","Popf":"ℙ","pound":"£","prap":"⪷","Pr":"⪻","pr":"≺","prcue":"≼","precapprox":"⪷","prec":"≺","preccurlyeq":"≼","Precedes":"≺","PrecedesEqual":"⪯","PrecedesSlantEqual":"≼","PrecedesTilde":"≾","preceq":"⪯","precnapprox":"⪹","precneqq":"⪵","precnsim":"⋨","pre":"⪯","prE":"⪳","precsim":"≾","prime":"′","Prime":"″","primes":"ℙ","prnap":"⪹","prnE":"⪵","prnsim":"⋨","prod":"∏","Product":"∏","profalar":"⌮","profline":"⌒","profsurf":"⌓","prop":"∝","Proportional":"∝","Proportion":"∷","propto":"∝","prsim":"≾","prurel":"⊰","Pscr":"𝒫","pscr":"𝓅","Psi":"Ψ","psi":"ψ","puncsp":" ","Qfr":"𝔔","qfr":"𝔮","qint":"⨌","qopf":"𝕢","Qopf":"ℚ","qprime":"⁗","Qscr":"𝒬","qscr":"𝓆","quaternions":"ℍ","quatint":"⨖","quest":"?","questeq":"≟","quot":"\"","QUOT":"\"","rAarr":"⇛","race":"∽̱","Racute":"Ŕ","racute":"ŕ","radic":"√","raemptyv":"⦳","rang":"⟩","Rang":"⟫","rangd":"⦒","range":"⦥","rangle":"⟩","raquo":"»","rarrap":"⥵","rarrb":"⇥","rarrbfs":"⤠","rarrc":"⤳","rarr":"→","Rarr":"↠","rArr":"⇒","rarrfs":"⤞","rarrhk":"↪","rarrlp":"↬","rarrpl":"⥅","rarrsim":"⥴","Rarrtl":"⤖","rarrtl":"↣","rarrw":"↝","ratail":"⤚","rAtail":"⤜","ratio":"∶","rationals":"ℚ","rbarr":"⤍","rBarr":"⤏","RBarr":"⤐","rbbrk":"❳","rbrace":"}","rbrack":"]","rbrke":"⦌","rbrksld":"⦎","rbrkslu":"⦐","Rcaron":"Ř","rcaron":"ř","Rcedil":"Ŗ","rcedil":"ŗ","rceil":"⌉","rcub":"}","Rcy":"Р","rcy":"р","rdca":"⤷","rdldhar":"⥩","rdquo":"”","rdquor":"”","rdsh":"↳","real":"ℜ","realine":"ℛ","realpart":"ℜ","reals":"ℝ","Re":"ℜ","rect":"▭","reg":"®","REG":"®","ReverseElement":"∋","ReverseEquilibrium":"⇋","ReverseUpEquilibrium":"⥯","rfisht":"⥽","rfloor":"⌋","rfr":"𝔯","Rfr":"ℜ","rHar":"⥤","rhard":"⇁","rharu":"⇀","rharul":"⥬","Rho":"Ρ","rho":"ρ","rhov":"ϱ","RightAngleBracket":"⟩","RightArrowBar":"⇥","rightarrow":"→","RightArrow":"→","Rightarrow":"⇒","RightArrowLeftArrow":"⇄","rightarrowtail":"↣","RightCeiling":"⌉","RightDoubleBracket":"⟧","RightDownTeeVector":"⥝","RightDownVectorBar":"⥕","RightDownVector":"⇂","RightFloor":"⌋","rightharpoondown":"⇁","rightharpoonup":"⇀","rightleftarrows":"⇄","rightleftharpoons":"⇌","rightrightarrows":"⇉","rightsquigarrow":"↝","RightTeeArrow":"↦","RightTee":"⊢","RightTeeVector":"⥛","rightthreetimes":"⋌","RightTriangleBar":"⧐","RightTriangle":"⊳","RightTriangleEqual":"⊵","RightUpDownVector":"⥏","RightUpTeeVector":"⥜","RightUpVectorBar":"⥔","RightUpVector":"↾","RightVectorBar":"⥓","RightVector":"⇀","ring":"˚","risingdotseq":"≓","rlarr":"⇄","rlhar":"⇌","rlm":"‏","rmoustache":"⎱","rmoust":"⎱","rnmid":"⫮","roang":"⟭","roarr":"⇾","robrk":"⟧","ropar":"⦆","ropf":"𝕣","Ropf":"ℝ","roplus":"⨮","rotimes":"⨵","RoundImplies":"⥰","rpar":")","rpargt":"⦔","rppolint":"⨒","rrarr":"⇉","Rrightarrow":"⇛","rsaquo":"›","rscr":"𝓇","Rscr":"ℛ","rsh":"↱","Rsh":"↱","rsqb":"]","rsquo":"’","rsquor":"’","rthree":"⋌","rtimes":"⋊","rtri":"▹","rtrie":"⊵","rtrif":"▸","rtriltri":"⧎","RuleDelayed":"⧴","ruluhar":"⥨","rx":"℞","Sacute":"Ś","sacute":"ś","sbquo":"‚","scap":"⪸","Scaron":"Š","scaron":"š","Sc":"⪼","sc":"≻","sccue":"≽","sce":"⪰","scE":"⪴","Scedil":"Ş","scedil":"ş","Scirc":"Ŝ","scirc":"ŝ","scnap":"⪺","scnE":"⪶","scnsim":"⋩","scpolint":"⨓","scsim":"≿","Scy":"С","scy":"с","sdotb":"⊡","sdot":"⋅","sdote":"⩦","searhk":"⤥","searr":"↘","seArr":"⇘","searrow":"↘","sect":"§","semi":";","seswar":"⤩","setminus":"∖","setmn":"∖","sext":"✶","Sfr":"𝔖","sfr":"𝔰","sfrown":"⌢","sharp":"♯","SHCHcy":"Щ","shchcy":"щ","SHcy":"Ш","shcy":"ш","ShortDownArrow":"↓","ShortLeftArrow":"←","shortmid":"∣","shortparallel":"∥","ShortRightArrow":"→","ShortUpArrow":"↑","shy":"­","Sigma":"Σ","sigma":"σ","sigmaf":"ς","sigmav":"ς","sim":"∼","simdot":"⩪","sime":"≃","simeq":"≃","simg":"⪞","simgE":"⪠","siml":"⪝","simlE":"⪟","simne":"≆","simplus":"⨤","simrarr":"⥲","slarr":"←","SmallCircle":"∘","smallsetminus":"∖","smashp":"⨳","smeparsl":"⧤","smid":"∣","smile":"⌣","smt":"⪪","smte":"⪬","smtes":"⪬︀","SOFTcy":"Ь","softcy":"ь","solbar":"⌿","solb":"⧄","sol":"/","Sopf":"𝕊","sopf":"𝕤","spades":"♠","spadesuit":"♠","spar":"∥","sqcap":"⊓","sqcaps":"⊓︀","sqcup":"⊔","sqcups":"⊔︀","Sqrt":"√","sqsub":"⊏","sqsube":"⊑","sqsubset":"⊏","sqsubseteq":"⊑","sqsup":"⊐","sqsupe":"⊒","sqsupset":"⊐","sqsupseteq":"⊒","square":"□","Square":"□","SquareIntersection":"⊓","SquareSubset":"⊏","SquareSubsetEqual":"⊑","SquareSuperset":"⊐","SquareSupersetEqual":"⊒","SquareUnion":"⊔","squarf":"▪","squ":"□","squf":"▪","srarr":"→","Sscr":"𝒮","sscr":"𝓈","ssetmn":"∖","ssmile":"⌣","sstarf":"⋆","Star":"⋆","star":"☆","starf":"★","straightepsilon":"ϵ","straightphi":"ϕ","strns":"¯","sub":"⊂","Sub":"⋐","subdot":"⪽","subE":"⫅","sube":"⊆","subedot":"⫃","submult":"⫁","subnE":"⫋","subne":"⊊","subplus":"⪿","subrarr":"⥹","subset":"⊂","Subset":"⋐","subseteq":"⊆","subseteqq":"⫅","SubsetEqual":"⊆","subsetneq":"⊊","subsetneqq":"⫋","subsim":"⫇","subsub":"⫕","subsup":"⫓","succapprox":"⪸","succ":"≻","succcurlyeq":"≽","Succeeds":"≻","SucceedsEqual":"⪰","SucceedsSlantEqual":"≽","SucceedsTilde":"≿","succeq":"⪰","succnapprox":"⪺","succneqq":"⪶","succnsim":"⋩","succsim":"≿","SuchThat":"∋","sum":"∑","Sum":"∑","sung":"♪","sup1":"¹","sup2":"²","sup3":"³","sup":"⊃","Sup":"⋑","supdot":"⪾","supdsub":"⫘","supE":"⫆","supe":"⊇","supedot":"⫄","Superset":"⊃","SupersetEqual":"⊇","suphsol":"⟉","suphsub":"⫗","suplarr":"⥻","supmult":"⫂","supnE":"⫌","supne":"⊋","supplus":"⫀","supset":"⊃","Supset":"⋑","supseteq":"⊇","supseteqq":"⫆","supsetneq":"⊋","supsetneqq":"⫌","supsim":"⫈","supsub":"⫔","supsup":"⫖","swarhk":"⤦","swarr":"↙","swArr":"⇙","swarrow":"↙","swnwar":"⤪","szlig":"ß","Tab":"\t","target":"⌖","Tau":"Τ","tau":"τ","tbrk":"⎴","Tcaron":"Ť","tcaron":"ť","Tcedil":"Ţ","tcedil":"ţ","Tcy":"Т","tcy":"т","tdot":"⃛","telrec":"⌕","Tfr":"𝔗","tfr":"𝔱","there4":"∴","therefore":"∴","Therefore":"∴","Theta":"Θ","theta":"θ","thetasym":"ϑ","thetav":"ϑ","thickapprox":"≈","thicksim":"∼","ThickSpace":"  ","ThinSpace":" ","thinsp":" ","thkap":"≈","thksim":"∼","THORN":"Þ","thorn":"þ","tilde":"˜","Tilde":"∼","TildeEqual":"≃","TildeFullEqual":"≅","TildeTilde":"≈","timesbar":"⨱","timesb":"⊠","times":"×","timesd":"⨰","tint":"∭","toea":"⤨","topbot":"⌶","topcir":"⫱","top":"⊤","Topf":"𝕋","topf":"𝕥","topfork":"⫚","tosa":"⤩","tprime":"‴","trade":"™","TRADE":"™","triangle":"▵","triangledown":"▿","triangleleft":"◃","trianglelefteq":"⊴","triangleq":"≜","triangleright":"▹","trianglerighteq":"⊵","tridot":"◬","trie":"≜","triminus":"⨺","TripleDot":"⃛","triplus":"⨹","trisb":"⧍","tritime":"⨻","trpezium":"⏢","Tscr":"𝒯","tscr":"𝓉","TScy":"Ц","tscy":"ц","TSHcy":"Ћ","tshcy":"ћ","Tstrok":"Ŧ","tstrok":"ŧ","twixt":"≬","twoheadleftarrow":"↞","twoheadrightarrow":"↠","Uacute":"Ú","uacute":"ú","uarr":"↑","Uarr":"↟","uArr":"⇑","Uarrocir":"⥉","Ubrcy":"Ў","ubrcy":"ў","Ubreve":"Ŭ","ubreve":"ŭ","Ucirc":"Û","ucirc":"û","Ucy":"У","ucy":"у","udarr":"⇅","Udblac":"Ű","udblac":"ű","udhar":"⥮","ufisht":"⥾","Ufr":"𝔘","ufr":"𝔲","Ugrave":"Ù","ugrave":"ù","uHar":"⥣","uharl":"↿","uharr":"↾","uhblk":"▀","ulcorn":"⌜","ulcorner":"⌜","ulcrop":"⌏","ultri":"◸","Umacr":"Ū","umacr":"ū","uml":"¨","UnderBar":"_","UnderBrace":"⏟","UnderBracket":"⎵","UnderParenthesis":"⏝","Union":"⋃","UnionPlus":"⊎","Uogon":"Ų","uogon":"ų","Uopf":"𝕌","uopf":"𝕦","UpArrowBar":"⤒","uparrow":"↑","UpArrow":"↑","Uparrow":"⇑","UpArrowDownArrow":"⇅","updownarrow":"↕","UpDownArrow":"↕","Updownarrow":"⇕","UpEquilibrium":"⥮","upharpoonleft":"↿","upharpoonright":"↾","uplus":"⊎","UpperLeftArrow":"↖","UpperRightArrow":"↗","upsi":"υ","Upsi":"ϒ","upsih":"ϒ","Upsilon":"Υ","upsilon":"υ","UpTeeArrow":"↥","UpTee":"⊥","upuparrows":"⇈","urcorn":"⌝","urcorner":"⌝","urcrop":"⌎","Uring":"Ů","uring":"ů","urtri":"◹","Uscr":"𝒰","uscr":"𝓊","utdot":"⋰","Utilde":"Ũ","utilde":"ũ","utri":"▵","utrif":"▴","uuarr":"⇈","Uuml":"Ü","uuml":"ü","uwangle":"⦧","vangrt":"⦜","varepsilon":"ϵ","varkappa":"ϰ","varnothing":"∅","varphi":"ϕ","varpi":"ϖ","varpropto":"∝","varr":"↕","vArr":"⇕","varrho":"ϱ","varsigma":"ς","varsubsetneq":"⊊︀","varsubsetneqq":"⫋︀","varsupsetneq":"⊋︀","varsupsetneqq":"⫌︀","vartheta":"ϑ","vartriangleleft":"⊲","vartriangleright":"⊳","vBar":"⫨","Vbar":"⫫","vBarv":"⫩","Vcy":"В","vcy":"в","vdash":"⊢","vDash":"⊨","Vdash":"⊩","VDash":"⊫","Vdashl":"⫦","veebar":"⊻","vee":"∨","Vee":"⋁","veeeq":"≚","vellip":"⋮","verbar":"|","Verbar":"‖","vert":"|","Vert":"‖","VerticalBar":"∣","VerticalLine":"|","VerticalSeparator":"❘","VerticalTilde":"≀","VeryThinSpace":" ","Vfr":"𝔙","vfr":"𝔳","vltri":"⊲","vnsub":"⊂⃒","vnsup":"⊃⃒","Vopf":"𝕍","vopf":"𝕧","vprop":"∝","vrtri":"⊳","Vscr":"𝒱","vscr":"𝓋","vsubnE":"⫋︀","vsubne":"⊊︀","vsupnE":"⫌︀","vsupne":"⊋︀","Vvdash":"⊪","vzigzag":"⦚","Wcirc":"Ŵ","wcirc":"ŵ","wedbar":"⩟","wedge":"∧","Wedge":"⋀","wedgeq":"≙","weierp":"℘","Wfr":"𝔚","wfr":"𝔴","Wopf":"𝕎","wopf":"𝕨","wp":"℘","wr":"≀","wreath":"≀","Wscr":"𝒲","wscr":"𝓌","xcap":"⋂","xcirc":"◯","xcup":"⋃","xdtri":"▽","Xfr":"𝔛","xfr":"𝔵","xharr":"⟷","xhArr":"⟺","Xi":"Ξ","xi":"ξ","xlarr":"⟵","xlArr":"⟸","xmap":"⟼","xnis":"⋻","xodot":"⨀","Xopf":"𝕏","xopf":"𝕩","xoplus":"⨁","xotime":"⨂","xrarr":"⟶","xrArr":"⟹","Xscr":"𝒳","xscr":"𝓍","xsqcup":"⨆","xuplus":"⨄","xutri":"△","xvee":"⋁","xwedge":"⋀","Yacute":"Ý","yacute":"ý","YAcy":"Я","yacy":"я","Ycirc":"Ŷ","ycirc":"ŷ","Ycy":"Ы","ycy":"ы","yen":"¥","Yfr":"𝔜","yfr":"𝔶","YIcy":"Ї","yicy":"ї","Yopf":"𝕐","yopf":"𝕪","Yscr":"𝒴","yscr":"𝓎","YUcy":"Ю","yucy":"ю","yuml":"ÿ","Yuml":"Ÿ","Zacute":"Ź","zacute":"ź","Zcaron":"Ž","zcaron":"ž","Zcy":"З","zcy":"з","Zdot":"Ż","zdot":"ż","zeetrf":"ℨ","ZeroWidthSpace":"​","Zeta":"Ζ","zeta":"ζ","zfr":"𝔷","Zfr":"ℨ","ZHcy":"Ж","zhcy":"ж","zigrarr":"⇝","zopf":"𝕫","Zopf":"ℤ","Zscr":"𝒵","zscr":"𝓏","zwj":"‍","zwnj":"‌"}
;
},965,[]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {"Aacute":"Á","aacute":"á","Acirc":"Â","acirc":"â","acute":"´","AElig":"Æ","aelig":"æ","Agrave":"À","agrave":"à","amp":"&","AMP":"&","Aring":"Å","aring":"å","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","brvbar":"¦","Ccedil":"Ç","ccedil":"ç","cedil":"¸","cent":"¢","copy":"©","COPY":"©","curren":"¤","deg":"°","divide":"÷","Eacute":"É","eacute":"é","Ecirc":"Ê","ecirc":"ê","Egrave":"È","egrave":"è","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","frac12":"½","frac14":"¼","frac34":"¾","gt":">","GT":">","Iacute":"Í","iacute":"í","Icirc":"Î","icirc":"î","iexcl":"¡","Igrave":"Ì","igrave":"ì","iquest":"¿","Iuml":"Ï","iuml":"ï","laquo":"«","lt":"<","LT":"<","macr":"¯","micro":"µ","middot":"·","nbsp":" ","not":"¬","Ntilde":"Ñ","ntilde":"ñ","Oacute":"Ó","oacute":"ó","Ocirc":"Ô","ocirc":"ô","Ograve":"Ò","ograve":"ò","ordf":"ª","ordm":"º","Oslash":"Ø","oslash":"ø","Otilde":"Õ","otilde":"õ","Ouml":"Ö","ouml":"ö","para":"¶","plusmn":"±","pound":"£","quot":"\"","QUOT":"\"","raquo":"»","reg":"®","REG":"®","sect":"§","shy":"­","sup1":"¹","sup2":"²","sup3":"³","szlig":"ß","THORN":"Þ","thorn":"þ","times":"×","Uacute":"Ú","uacute":"ú","Ucirc":"Û","ucirc":"û","Ugrave":"Ù","ugrave":"ù","uml":"¨","Uuml":"Ü","uuml":"ü","Yacute":"Ý","yacute":"ý","yen":"¥","yuml":"ÿ"}
;
},966,[]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}
;
},967,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __importDefault = this && this.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : {
      "default": mod
    };
  };

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var decode_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0]));

  var fromCodePoint = String.fromCodePoint || function (codePoint) {
    var output = "";

    if (codePoint > 0xffff) {
      codePoint -= 0x10000;
      output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);
      codePoint = 0xdc00 | codePoint & 0x3ff;
    }

    output += String.fromCharCode(codePoint);
    return output;
  };

  function decodeCodePoint(codePoint) {
    if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {
      return "\uFFFD";
    }

    if (codePoint in decode_json_1.default) {
      codePoint = decode_json_1.default[codePoint];
    }

    return fromCodePoint(codePoint);
  }

  exports.default = decodeCodePoint;
},968,[969]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376}
;
},969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __importDefault = this && this.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : {
      "default": mod
    };
  };

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = undefined;

  var xml_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0]));

  var inverseXML = getInverseObj(xml_json_1.default);
  var xmlReplacer = getInverseReplacer(inverseXML);
  exports.encodeXML = getASCIIEncoder(inverseXML);

  var entities_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[1]));

  var inverseHTML = getInverseObj(entities_json_1.default);
  var htmlReplacer = getInverseReplacer(inverseHTML);
  exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);
  exports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);

  function getInverseObj(obj) {
    return Object.keys(obj).sort().reduce(function (inverse, name) {
      inverse[obj[name]] = "&" + name + ";";
      return inverse;
    }, {});
  }

  function getInverseReplacer(inverse) {
    var single = [];
    var multiple = [];

    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {
      var k = _a[_i];

      if (k.length === 1) {
        single.push("\\" + k);
      } else {
        multiple.push(k);
      }
    }

    single.sort();

    for (var start = 0; start < single.length - 1; start++) {
      var end = start;

      while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {
        end += 1;
      }

      var count = 1 + end - start;
      if (count < 3) continue;
      single.splice(start, count, single[start] + "-" + single[end]);
    }

    multiple.unshift("[" + single.join("") + "]");
    return new RegExp(multiple.join("|"), "g");
  }

  var reNonASCII = /(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g;
  var getCodePoint = String.prototype.codePointAt != null ? function (str) {
    return str.codePointAt(0);
  } : function (c) {
    return (c.charCodeAt(0) - 0xd800) * 0x400 + c.charCodeAt(1) - 0xdc00 + 0x10000;
  };

  function singleCharReplacer(c) {
    return "&#x" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0)).toString(16).toUpperCase() + ";";
  }

  function getInverse(inverse, re) {
    return function (data) {
      return data.replace(re, function (name) {
        return inverse[name];
      }).replace(reNonASCII, singleCharReplacer);
    };
  }

  var reEscapeChars = new RegExp(xmlReplacer.source + "|" + reNonASCII.source, "g");

  function escape(data) {
    return data.replace(reEscapeChars, singleCharReplacer);
  }

  exports.escape = escape;

  function escapeUTF8(data) {
    return data.replace(xmlReplacer, singleCharReplacer);
  }

  exports.escapeUTF8 = escapeUTF8;

  function getASCIIEncoder(obj) {
    return function (data) {
      return data.replace(reEscapeChars, function (c) {
        return obj[c] || singleCharReplacer(c);
      });
    };
  }
},970,[967,965]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "elementNames" : {
"altglyph" : "altGlyph",
"altglyphdef" : "altGlyphDef",
"altglyphitem" : "altGlyphItem",
"animatecolor" : "animateColor",
"animatemotion" : "animateMotion",
"animatetransform" : "animateTransform",
"clippath" : "clipPath",
"feblend" : "feBlend",
"fecolormatrix" : "feColorMatrix",
"fecomponenttransfer" : "feComponentTransfer",
"fecomposite" : "feComposite",
"feconvolvematrix" : "feConvolveMatrix",
"fediffuselighting" : "feDiffuseLighting",
"fedisplacementmap" : "feDisplacementMap",
"fedistantlight" : "feDistantLight",
"fedropshadow" : "feDropShadow",
"feflood" : "feFlood",
"fefunca" : "feFuncA",
"fefuncb" : "feFuncB",
"fefuncg" : "feFuncG",
"fefuncr" : "feFuncR",
"fegaussianblur" : "feGaussianBlur",
"feimage" : "feImage",
"femerge" : "feMerge",
"femergenode" : "feMergeNode",
"femorphology" : "feMorphology",
"feoffset" : "feOffset",
"fepointlight" : "fePointLight",
"fespecularlighting" : "feSpecularLighting",
"fespotlight" : "feSpotLight",
"fetile" : "feTile",
"feturbulence" : "feTurbulence",
"foreignobject" : "foreignObject",
"glyphref" : "glyphRef",
"lineargradient" : "linearGradient",
"radialgradient" : "radialGradient",
"textpath" : "textPath"
  },
  "attributeNames" : {
"definitionurl" : "definitionURL",
"attributename" : "attributeName",
"attributetype" : "attributeType",
"basefrequency" : "baseFrequency",
"baseprofile" : "baseProfile",
"calcmode" : "calcMode",
"clippathunits" : "clipPathUnits",
"diffuseconstant" : "diffuseConstant",
"edgemode" : "edgeMode",
"filterunits" : "filterUnits",
"glyphref" : "glyphRef",
"gradienttransform" : "gradientTransform",
"gradientunits" : "gradientUnits",
"kernelmatrix" : "kernelMatrix",
"kernelunitlength" : "kernelUnitLength",
"keypoints" : "keyPoints",
"keysplines" : "keySplines",
"keytimes" : "keyTimes",
"lengthadjust" : "lengthAdjust",
"limitingconeangle" : "limitingConeAngle",
"markerheight" : "markerHeight",
"markerunits" : "markerUnits",
"markerwidth" : "markerWidth",
"maskcontentunits" : "maskContentUnits",
"maskunits" : "maskUnits",
"numoctaves" : "numOctaves",
"pathlength" : "pathLength",
"patterncontentunits" : "patternContentUnits",
"patterntransform" : "patternTransform",
"patternunits" : "patternUnits",
"pointsatx" : "pointsAtX",
"pointsaty" : "pointsAtY",
"pointsatz" : "pointsAtZ",
"preservealpha" : "preserveAlpha",
"preserveaspectratio" : "preserveAspectRatio",
"primitiveunits" : "primitiveUnits",
"refx" : "refX",
"refy" : "refY",
"repeatcount" : "repeatCount",
"repeatdur" : "repeatDur",
"requiredextensions" : "requiredExtensions",
"requiredfeatures" : "requiredFeatures",
"specularconstant" : "specularConstant",
"specularexponent" : "specularExponent",
"spreadmethod" : "spreadMethod",
"startoffset" : "startOffset",
"stddeviation" : "stdDeviation",
"stitchtiles" : "stitchTiles",
"surfacescale" : "surfaceScale",
"systemlanguage" : "systemLanguage",
"tablevalues" : "tableValues",
"targetx" : "targetX",
"targety" : "targetY",
"textlength" : "textLength",
"viewbox" : "viewBox",
"viewtarget" : "viewTarget",
"xchannelselector" : "xChannelSelector",
"ychannelselector" : "yChannelSelector",
"zoomandpan" : "zoomAndPan"
  }
}
;
},971,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getChildren = exports.getChildren = function (elem) {
    return elem.children;
  };

  var getParent = exports.getParent = function (elem) {
    return elem.parent;
  };

  exports.getSiblings = function (elem) {
    var parent = getParent(elem);
    return parent ? getChildren(parent) : [elem];
  };

  exports.getAttributeValue = function (elem, name) {
    return elem.attribs && elem.attribs[name];
  };

  exports.hasAttrib = function (elem, name) {
    return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
  };

  exports.getName = function (elem) {
    return elem.name;
  };
},972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.removeElement = function (elem) {
    if (elem.prev) elem.prev.next = elem.next;
    if (elem.next) elem.next.prev = elem.prev;

    if (elem.parent) {
      var childs = elem.parent.children;
      childs.splice(childs.lastIndexOf(elem), 1);
    }
  };

  exports.replaceElement = function (elem, replacement) {
    var prev = replacement.prev = elem.prev;

    if (prev) {
      prev.next = replacement;
    }

    var next = replacement.next = elem.next;

    if (next) {
      next.prev = replacement;
    }

    var parent = replacement.parent = elem.parent;

    if (parent) {
      var childs = parent.children;
      childs[childs.lastIndexOf(elem)] = replacement;
    }
  };

  exports.appendChild = function (elem, child) {
    child.parent = elem;

    if (elem.children.push(child) !== 1) {
      var sibling = elem.children[elem.children.length - 2];
      sibling.next = child;
      child.prev = sibling;
      child.next = null;
    }
  };

  exports.append = function (elem, next) {
    var parent = elem.parent,
        currNext = elem.next;
    next.next = currNext;
    next.prev = elem;
    elem.next = next;
    next.parent = parent;

    if (currNext) {
      currNext.prev = next;

      if (parent) {
        var childs = parent.children;
        childs.splice(childs.lastIndexOf(currNext), 0, next);
      }
    } else if (parent) {
      parent.children.push(next);
    }
  };

  exports.prepend = function (elem, prev) {
    var parent = elem.parent;

    if (parent) {
      var childs = parent.children;
      childs.splice(childs.lastIndexOf(elem), 0, prev);
    }

    if (elem.prev) {
      elem.prev.next = prev;
    }

    prev.parent = parent;
    prev.prev = elem.prev;
    prev.next = elem;
    elem.prev = prev;
  };
},973,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isTag = _$$_REQUIRE(_dependencyMap[0]).isTag;

  module.exports = {
    filter: filter,
    find: find,
    findOneChild: findOneChild,
    findOne: findOne,
    existsOne: existsOne,
    findAll: findAll
  };

  function filter(test, element, recurse, limit) {
    if (!Array.isArray(element)) element = [element];

    if (typeof limit !== "number" || !isFinite(limit)) {
      limit = Infinity;
    }

    return find(test, element, recurse !== false, limit);
  }

  function find(test, elems, recurse, limit) {
    var result = [],
        childs;

    for (var i = 0, j = elems.length; i < j; i++) {
      if (test(elems[i])) {
        result.push(elems[i]);
        if (--limit <= 0) break;
      }

      childs = elems[i].children;

      if (recurse && childs && childs.length > 0) {
        childs = find(test, childs, recurse, limit);
        result = result.concat(childs);
        limit -= childs.length;
        if (limit <= 0) break;
      }
    }

    return result;
  }

  function findOneChild(test, elems) {
    for (var i = 0, l = elems.length; i < l; i++) {
      if (test(elems[i])) return elems[i];
    }

    return null;
  }

  function findOne(test, elems) {
    var elem = null;

    for (var i = 0, l = elems.length; i < l && !elem; i++) {
      if (!isTag(elems[i])) {
        continue;
      } else if (test(elems[i])) {
        elem = elems[i];
      } else if (elems[i].children.length > 0) {
        elem = findOne(test, elems[i].children);
      }
    }

    return elem;
  }

  function existsOne(test, elems) {
    for (var i = 0, l = elems.length; i < l; i++) {
      if (isTag(elems[i]) && (test(elems[i]) || elems[i].children.length > 0 && existsOne(test, elems[i].children))) {
        return true;
      }
    }

    return false;
  }

  function findAll(test, rootElems) {
    var result = [];
    var stack = rootElems.slice();

    while (stack.length) {
      var elem = stack.shift();
      if (!isTag(elem)) continue;

      if (elem.children && elem.children.length > 0) {
        stack.unshift.apply(stack, elem.children);
      }

      if (test(elem)) result.push(elem);
    }

    return result;
  }
},974,[960]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ElementType = _$$_REQUIRE(_dependencyMap[0]);

  var isTag = exports.isTag = ElementType.isTag;

  exports.testElement = function (options, element) {
    for (var key in options) {
      if (!options.hasOwnProperty(key)) ;else if (key === "tag_name") {
        if (!isTag(element) || !options.tag_name(element.name)) {
          return false;
        }
      } else if (key === "tag_type") {
        if (!options.tag_type(element.type)) return false;
      } else if (key === "tag_contains") {
        if (isTag(element) || !options.tag_contains(element.data)) {
          return false;
        }
      } else if (!element.attribs || !options[key](element.attribs[key])) {
        return false;
      }
    }

    return true;
  };

  var Checks = {
    tag_name: function tag_name(name) {
      if (typeof name === "function") {
        return function (elem) {
          return isTag(elem) && name(elem.name);
        };
      } else if (name === "*") {
        return isTag;
      } else {
        return function (elem) {
          return isTag(elem) && elem.name === name;
        };
      }
    },
    tag_type: function tag_type(type) {
      if (typeof type === "function") {
        return function (elem) {
          return type(elem.type);
        };
      } else {
        return function (elem) {
          return elem.type === type;
        };
      }
    },
    tag_contains: function tag_contains(data) {
      if (typeof data === "function") {
        return function (elem) {
          return !isTag(elem) && data(elem.data);
        };
      } else {
        return function (elem) {
          return !isTag(elem) && elem.data === data;
        };
      }
    }
  };

  function getAttribCheck(attrib, value) {
    if (typeof value === "function") {
      return function (elem) {
        return elem.attribs && value(elem.attribs[attrib]);
      };
    } else {
      return function (elem) {
        return elem.attribs && elem.attribs[attrib] === value;
      };
    }
  }

  function combineFuncs(a, b) {
    return function (elem) {
      return a(elem) || b(elem);
    };
  }

  exports.getElements = function (options, element, recurse, limit) {
    var funcs = Object.keys(options).map(function (key) {
      var value = options[key];
      return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
    });
    return funcs.length === 0 ? [] : this.filter(funcs.reduce(combineFuncs), element, recurse, limit);
  };

  exports.getElementById = function (id, element, recurse) {
    if (!Array.isArray(element)) element = [element];
    return this.findOne(getAttribCheck("id", id), element, recurse !== false);
  };

  exports.getElementsByTagName = function (name, element, recurse, limit) {
    return this.filter(Checks.tag_name(name), element, recurse, limit);
  };

  exports.getElementsByTagType = function (type, element, recurse, limit) {
    return this.filter(Checks.tag_type(type), element, recurse, limit);
  };
},975,[960]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.removeSubsets = function (nodes) {
    var idx = nodes.length,
        node,
        ancestor,
        replace;

    while (--idx > -1) {
      node = ancestor = nodes[idx];
      nodes[idx] = null;
      replace = true;

      while (ancestor) {
        if (nodes.indexOf(ancestor) > -1) {
          replace = false;
          nodes.splice(idx, 1);
          break;
        }

        ancestor = ancestor.parent;
      }

      if (replace) {
        nodes[idx] = node;
      }
    }

    return nodes;
  };

  var POSITION = {
    DISCONNECTED: 1,
    PRECEDING: 2,
    FOLLOWING: 4,
    CONTAINS: 8,
    CONTAINED_BY: 16
  };

  var comparePos = exports.compareDocumentPosition = function (nodeA, nodeB) {
    var aParents = [];
    var bParents = [];
    var current, sharedParent, siblings, aSibling, bSibling, idx;

    if (nodeA === nodeB) {
      return 0;
    }

    current = nodeA;

    while (current) {
      aParents.unshift(current);
      current = current.parent;
    }

    current = nodeB;

    while (current) {
      bParents.unshift(current);
      current = current.parent;
    }

    idx = 0;

    while (aParents[idx] === bParents[idx]) {
      idx++;
    }

    if (idx === 0) {
      return POSITION.DISCONNECTED;
    }

    sharedParent = aParents[idx - 1];
    siblings = sharedParent.children;
    aSibling = aParents[idx];
    bSibling = bParents[idx];

    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
      if (sharedParent === nodeB) {
        return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
      }

      return POSITION.FOLLOWING;
    } else {
      if (sharedParent === nodeA) {
        return POSITION.PRECEDING | POSITION.CONTAINS;
      }

      return POSITION.PRECEDING;
    }
  };

  exports.uniqueSort = function (nodes) {
    var idx = nodes.length,
        node,
        position;
    nodes = nodes.slice();

    while (--idx > -1) {
      node = nodes[idx];
      position = nodes.indexOf(node);

      if (position > -1 && position < idx) {
        nodes.splice(idx, 1);
      }
    }

    nodes.sort(function (a, b) {
      var relative = comparePos(a, b);

      if (relative & POSITION.PRECEDING) {
        return -1;
      } else if (relative & POSITION.FOLLOWING) {
        return 1;
      }

      return 0;
    });
    return nodes;
  };
},976,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    trueFunc: function trueFunc() {
      return true;
    },
    falseFunc: function falseFunc() {
      return false;
    }
  };
},977,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = compile;

  var parse = _$$_REQUIRE(_dependencyMap[0]).parse;

  var BaseFuncs = _$$_REQUIRE(_dependencyMap[1]);

  var sortRules = _$$_REQUIRE(_dependencyMap[2]);

  var procedure = _$$_REQUIRE(_dependencyMap[3]);

  var Rules = _$$_REQUIRE(_dependencyMap[4]);

  var Pseudos = _$$_REQUIRE(_dependencyMap[5]);

  var trueFunc = BaseFuncs.trueFunc;
  var falseFunc = BaseFuncs.falseFunc;
  var filters = Pseudos.filters;

  function compile(selector, options, context) {
    var next = compileUnsafe(selector, options, context);
    return wrap(next, options);
  }

  function wrap(next, options) {
    var adapter = options.adapter;
    return function base(elem) {
      return adapter.isTag(elem) && next(elem);
    };
  }

  function compileUnsafe(selector, options, context) {
    var token = parse(selector, options);
    return compileToken(token, options, context);
  }

  function includesScopePseudo(t) {
    return t.type === "pseudo" && (t.name === "scope" || Array.isArray(t.data) && t.data.some(function (data) {
      return data.some(includesScopePseudo);
    }));
  }

  var DESCENDANT_TOKEN = {
    type: "descendant"
  };
  var FLEXIBLE_DESCENDANT_TOKEN = {
    type: "_flexibleDescendant"
  };
  var SCOPE_TOKEN = {
    type: "pseudo",
    name: "scope"
  };
  var PLACEHOLDER_ELEMENT = {};

  function absolutize(token, options, context) {
    var adapter = options.adapter;
    var hasContext = !!context && !!context.length && context.every(function (e) {
      return e === PLACEHOLDER_ELEMENT || !!adapter.getParent(e);
    });
    token.forEach(function (t) {
      if (t.length > 0 && isTraversal(t[0]) && t[0].type !== "descendant") {} else if (hasContext && !(Array.isArray(t) ? t.some(includesScopePseudo) : includesScopePseudo(t))) {
        t.unshift(DESCENDANT_TOKEN);
      } else {
        return;
      }

      t.unshift(SCOPE_TOKEN);
    });
  }

  function compileToken(token, options, context) {
    token = token.filter(function (t) {
      return t.length > 0;
    });
    token.forEach(sortRules);
    var isArrayContext = Array.isArray(context);
    context = options && options.context || context;
    if (context && !isArrayContext) context = [context];
    absolutize(token, options, context);
    var shouldTestNextSiblings = false;
    var query = token.map(function (rules) {
      if (rules[0] && rules[1] && rules[0].name === "scope") {
        var ruleType = rules[1].type;

        if (isArrayContext && ruleType === "descendant") {
          rules[1] = FLEXIBLE_DESCENDANT_TOKEN;
        } else if (ruleType === "adjacent" || ruleType === "sibling") {
          shouldTestNextSiblings = true;
        }
      }

      return compileRules(rules, options, context);
    }).reduce(reduceRules, falseFunc);
    query.shouldTestNextSiblings = shouldTestNextSiblings;
    return query;
  }

  function isTraversal(t) {
    return procedure[t.type] < 0;
  }

  function compileRules(rules, options, context) {
    return rules.reduce(function (func, rule) {
      if (func === falseFunc) return func;

      if (!(rule.type in Rules)) {
        throw new Error("Rule type " + rule.type + " is not supported by css-select");
      }

      return Rules[rule.type](func, rule, options, context);
    }, options && options.rootFunc || trueFunc);
  }

  function reduceRules(a, b) {
    if (b === falseFunc || a === trueFunc) {
      return a;
    }

    if (a === falseFunc || b === trueFunc) {
      return b;
    }

    return function combine(elem) {
      return a(elem) || b(elem);
    };
  }

  function containsTraversal(t) {
    return t.some(isTraversal);
  }

  filters.not = function (next, token, options, context) {
    var opts = {
      xmlMode: !!(options && options.xmlMode),
      strict: !!(options && options.strict),
      adapter: options.adapter
    };

    if (opts.strict) {
      if (token.length > 1 || token.some(containsTraversal)) {
        throw new Error("complex selectors in :not aren't allowed in strict mode");
      }
    }

    var func = compileToken(token, opts, context);
    if (func === falseFunc) return next;
    if (func === trueFunc) return falseFunc;
    return function not(elem) {
      return !func(elem) && next(elem);
    };
  };

  filters.has = function (next, token, options) {
    var adapter = options.adapter;
    var opts = {
      xmlMode: !!(options && options.xmlMode),
      strict: !!(options && options.strict),
      adapter: adapter
    };
    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;
    var func = compileToken(token, opts, context);
    if (func === falseFunc) return falseFunc;

    if (func === trueFunc) {
      return function hasChild(elem) {
        return adapter.getChildren(elem).some(adapter.isTag) && next(elem);
      };
    }

    func = wrap(func, options);

    if (context) {
      return function has(elem) {
        return next(elem) && (context[0] = elem, adapter.existsOne(func, adapter.getChildren(elem)));
      };
    }

    return function has(elem) {
      return next(elem) && adapter.existsOne(func, adapter.getChildren(elem));
    };
  };

  filters.matches = function (next, token, options, context) {
    var opts = {
      xmlMode: !!(options && options.xmlMode),
      strict: !!(options && options.strict),
      rootFunc: next,
      adapter: options.adapter
    };
    return compileToken(token, opts, context);
  };

  compile.compileToken = compileToken;
  compile.compileUnsafe = compileUnsafe;
  compile.Pseudos = Pseudos;
},978,[979,977,982,983,984,986]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    });
  } : function (o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
  });

  var __exportStar = this && this.__exportStar || function (m, exports) {
    for (var p in m) {
      if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    }
  };

  var __importDefault = this && this.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : {
      "default": mod
    };
  };

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.stringify = exports.parse = undefined;

  __exportStar(_$$_REQUIRE(_dependencyMap[0]), exports);

  var parse_1 = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "parse", {
    enumerable: true,
    get: function get() {
      return __importDefault(parse_1).default;
    }
  });

  var stringify_1 = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "stringify", {
    enumerable: true,
    get: function get() {
      return __importDefault(stringify_1).default;
    }
  });
},979,[980,981]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = parse;
  var reName = /^[^\\]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/;
  var reEscape = /\\([\da-f]{1,6}\s?|(\s)|.)/gi;
  var reAttr = /^\s*((?:\\.|[\w\u00b0-\uFFFF-])+)\s*(?:(\S?)=\s*(?:(['"])((?:[^\\]|\\[^])*?)\3|(#?(?:\\.|[\w\u00b0-\uFFFF-])*)|)|)\s*(i)?\]/;
  var actionTypes = {
    undefined: "exists",
    "": "equals",
    "~": "element",
    "^": "start",
    $: "end",
    "*": "any",
    "!": "not",
    "|": "hyphen"
  };
  var Traversals = {
    ">": "child",
    "<": "parent",
    "~": "sibling",
    "+": "adjacent"
  };
  var attribSelectors = {
    "#": ["id", "equals"],
    ".": ["class", "element"]
  };
  var unpackPseudos = new Set(["has", "not", "matches", "is", "host", "host-context"]);
  var stripQuotesFromPseudos = new Set(["contains", "icontains"]);
  var quotes = new Set(['"', "'"]);

  function funescape(_, escaped, escapedWhitespace) {
    var high = parseInt(escaped, 16) - 0x10000;
    return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);
  }

  function unescapeCSS(str) {
    return str.replace(reEscape, funescape);
  }

  function isWhitespace(c) {
    return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
  }

  function parse(selector, options) {
    var subselects = [];
    selector = parseSelector(subselects, "" + selector, options);

    if (selector !== "") {
      throw new Error("Unmatched selector: " + selector);
    }

    return subselects;
  }

  function parseSelector(subselects, selector, options) {
    var _a, _b;

    if (options === undefined) {
      options = {};
    }

    var tokens = [];
    var sawWS = false;

    function getName() {
      var match = selector.match(reName);

      if (!match) {
        throw new Error("Expected name, found " + selector);
      }

      var sub = match[0];
      selector = selector.substr(sub.length);
      return unescapeCSS(sub);
    }

    function stripWhitespace(start) {
      while (isWhitespace(selector.charAt(start))) {
        start++;
      }

      selector = selector.substr(start);
    }

    function isEscaped(pos) {
      var slashCount = 0;

      while (selector.charAt(--pos) === "\\") {
        slashCount++;
      }

      return (slashCount & 1) === 1;
    }

    stripWhitespace(0);

    while (selector !== "") {
      var firstChar = selector.charAt(0);

      if (isWhitespace(firstChar)) {
        sawWS = true;
        stripWhitespace(1);
      } else if (firstChar in Traversals) {
        tokens.push({
          type: Traversals[firstChar]
        });
        sawWS = false;
        stripWhitespace(1);
      } else if (firstChar === ",") {
        if (tokens.length === 0) {
          throw new Error("Empty sub-selector");
        }

        subselects.push(tokens);
        tokens = [];
        sawWS = false;
        stripWhitespace(1);
      } else {
        if (sawWS) {
          if (tokens.length > 0) {
            tokens.push({
              type: "descendant"
            });
          }

          sawWS = false;
        }

        if (firstChar === "*") {
          selector = selector.substr(1);
          tokens.push({
            type: "universal"
          });
        } else if (firstChar in attribSelectors) {
          var _c = attribSelectors[firstChar],
              name_1 = _c[0],
              action = _c[1];
          selector = selector.substr(1);
          tokens.push({
            type: "attribute",
            name: name_1,
            action: action,
            value: getName(),
            ignoreCase: false
          });
        } else if (firstChar === "[") {
          selector = selector.substr(1);
          var attributeMatch = selector.match(reAttr);

          if (!attributeMatch) {
            throw new Error("Malformed attribute selector: " + selector);
          }

          var completeSelector = attributeMatch[0],
              baseName = attributeMatch[1],
              actionType = attributeMatch[2],
              _d = attributeMatch[4],
              quotedValue = _d === undefined ? "" : _d,
              _e = attributeMatch[5],
              value = _e === undefined ? quotedValue : _e,
              ignoreCase = attributeMatch[6];
          selector = selector.substr(completeSelector.length);
          var name_2 = unescapeCSS(baseName);

          if ((_a = options.lowerCaseAttributeNames) !== null && _a !== undefined ? _a : !options.xmlMode) {
            name_2 = name_2.toLowerCase();
          }

          tokens.push({
            type: "attribute",
            name: name_2,
            action: actionTypes[actionType],
            value: unescapeCSS(value),
            ignoreCase: !!ignoreCase
          });
        } else if (firstChar === ":") {
          if (selector.charAt(1) === ":") {
            selector = selector.substr(2);
            tokens.push({
              type: "pseudo-element",
              name: getName().toLowerCase()
            });
            continue;
          }

          selector = selector.substr(1);
          var name_3 = getName().toLowerCase();
          var data = null;

          if (selector.startsWith("(")) {
            if (unpackPseudos.has(name_3)) {
              var quot = selector.charAt(1);
              var quoted = quotes.has(quot);
              selector = selector.substr(quoted ? 2 : 1);
              data = [];
              selector = parseSelector(data, selector, options);

              if (quoted) {
                if (!selector.startsWith(quot)) {
                  throw new Error("Unmatched quotes in :" + name_3);
                } else {
                  selector = selector.substr(1);
                }
              }

              if (!selector.startsWith(")")) {
                throw new Error("Missing closing parenthesis in :" + name_3 + " (" + selector + ")");
              }

              selector = selector.substr(1);
            } else {
              var pos = 1;
              var counter = 1;

              for (; counter > 0 && pos < selector.length; pos++) {
                if (selector.charAt(pos) === "(" && !isEscaped(pos)) {
                  counter++;
                } else if (selector.charAt(pos) === ")" && !isEscaped(pos)) {
                  counter--;
                }
              }

              if (counter) {
                throw new Error("Parenthesis not matched");
              }

              data = selector.substr(1, pos - 2);
              selector = selector.substr(pos);

              if (stripQuotesFromPseudos.has(name_3)) {
                var quot = data.charAt(0);

                if (quot === data.slice(-1) && quotes.has(quot)) {
                  data = data.slice(1, -1);
                }

                data = unescapeCSS(data);
              }
            }
          }

          tokens.push({
            type: "pseudo",
            name: name_3,
            data: data
          });
        } else if (reName.test(selector)) {
          var name_4 = getName();

          if ((_b = options.lowerCaseTags) !== null && _b !== undefined ? _b : !options.xmlMode) {
            name_4 = name_4.toLowerCase();
          }

          tokens.push({
            type: "tag",
            name: name_4
          });
        } else {
          if (tokens.length && tokens[tokens.length - 1].type === "descendant") {
            tokens.pop();
          }

          addToken(subselects, tokens);
          return selector;
        }
      }
    }

    addToken(subselects, tokens);
    return selector;
  }

  function addToken(subselects, tokens) {
    if (subselects.length > 0 && tokens.length === 0) {
      throw new Error("Empty sub-selector");
    }

    subselects.push(tokens);
  }
},980,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var __spreadArrays = this && this.__spreadArrays || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
      s += arguments[i].length;
    }

    for (var r = Array(s), k = 0, i = 0; i < il; i++) {
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
        r[k] = a[j];
      }
    }

    return r;
  };

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var actionTypes = {
    equals: "",
    element: "~",
    start: "^",
    end: "$",
    any: "*",
    not: "!",
    hyphen: "|"
  };
  var charsToEscape = new Set(__spreadArrays(Object.keys(actionTypes).map(function (typeKey) {
    return actionTypes[typeKey];
  }).filter(Boolean), [":", "[", "]", " ", "\\"]));

  function stringify(token) {
    return token.map(stringifySubselector).join(", ");
  }

  exports.default = stringify;

  function stringifySubselector(token) {
    return token.map(stringifyToken).join("");
  }

  function stringifyToken(token) {
    switch (token.type) {
      case "child":
        return " > ";

      case "parent":
        return " < ";

      case "sibling":
        return " ~ ";

      case "adjacent":
        return " + ";

      case "descendant":
        return " ";

      case "universal":
        return "*";

      case "tag":
        return escapeName(token.name);

      case "pseudo-element":
        return "::" + escapeName(token.name);

      case "pseudo":
        if (token.data === null) return ":" + escapeName(token.name);

        if (typeof token.data === "string") {
          return ":" + escapeName(token.name) + "(" + token.data + ")";
        }

        return ":" + escapeName(token.name) + "(" + stringify(token.data) + ")";

      case "attribute":
        if (token.action === "exists") {
          return "[" + escapeName(token.name) + "]";
        }

        if (token.name === "id" && token.action === "equals" && !token.ignoreCase) {
          return "#" + escapeName(token.value);
        }

        if (token.name === "class" && token.action === "element" && !token.ignoreCase) {
          return "." + escapeName(token.value);
        }

        return "[" + escapeName(token.name) + actionTypes[token.action] + "='" + escapeName(token.value) + "'" + (token.ignoreCase ? "i" : "") + "]";
    }
  }

  function escapeName(str) {
    return str.split("").map(function (c) {
      return charsToEscape.has(c) ? "\\" + c : c;
    }).join("");
  }
},981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = sortByProcedure;

  var procedure = _$$_REQUIRE(_dependencyMap[0]);

  var attributes = {
    __proto__: null,
    exists: 10,
    equals: 8,
    not: 7,
    start: 6,
    end: 6,
    any: 5,
    hyphen: 4,
    element: 4
  };

  function sortByProcedure(arr) {
    var procs = arr.map(getProcedure);

    for (var i = 1; i < arr.length; i++) {
      var procNew = procs[i];
      if (procNew < 0) continue;

      for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {
        var token = arr[j + 1];
        arr[j + 1] = arr[j];
        arr[j] = token;
        procs[j + 1] = procs[j];
        procs[j] = procNew;
      }
    }
  }

  function getProcedure(token) {
    var proc = procedure[token.type];

    if (proc === procedure.attribute) {
      proc = attributes[token.action];

      if (proc === attributes.equals && token.name === "id") {
        proc = 9;
      }

      if (token.ignoreCase) {
        proc >>= 1;
      }
    } else if (proc === procedure.pseudo) {
      if (!token.data) {
        proc = 3;
      } else if (token.name === "has" || token.name === "contains") {
        proc = 0;
      } else if (token.name === "matches" || token.name === "not") {
        proc = 0;

        for (var i = 0; i < token.data.length; i++) {
          if (token.data[i].length !== 1) continue;
          var cur = getProcedure(token.data[i][0]);

          if (cur === 0) {
            proc = 0;
            break;
          }

          if (cur > proc) proc = cur;
        }

        if (token.data.length > 1 && proc > 0) proc -= 1;
      } else {
        proc = 1;
      }
    }

    return proc;
  }
},982,[983]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
	"universal": 50,
	"tag": 30,
	"attribute": 1,
	"pseudo": 0,
	"descendant": -1,
	"child": -1,
	"parent": -1,
	"sibling": -1,
	"adjacent": -1
}
;
},983,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var attributes = _$$_REQUIRE(_dependencyMap[0]);

  var Pseudos = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = {
    __proto__: null,
    attribute: attributes.compile,
    pseudo: Pseudos.compile,
    tag: function tag(next, data, options) {
      var name = data.name;
      var adapter = options.adapter;
      return function tag(elem) {
        return adapter.getName(elem) === name && next(elem);
      };
    },
    descendant: function descendant(next, data, options) {
      var isFalseCache = typeof WeakSet !== "undefined" ? new WeakSet() : null;
      var adapter = options.adapter;
      return function descendant(elem) {
        var found = false;

        while (!found && (elem = adapter.getParent(elem))) {
          if (!isFalseCache || !isFalseCache.has(elem)) {
            found = next(elem);

            if (!found && isFalseCache) {
              isFalseCache.add(elem);
            }
          }
        }

        return found;
      };
    },
    _flexibleDescendant: function _flexibleDescendant(next, data, options) {
      var adapter = options.adapter;
      return function descendant(elem) {
        var found = next(elem);

        while (!found && (elem = adapter.getParent(elem))) {
          found = next(elem);
        }

        return found;
      };
    },
    parent: function parent(next, data, options) {
      if (options && options.strict) {
        throw new Error("Parent selector isn't part of CSS3");
      }

      var adapter = options.adapter;
      return function parent(elem) {
        return adapter.getChildren(elem).some(test);
      };

      function test(elem) {
        return adapter.isTag(elem) && next(elem);
      }
    },
    child: function child(next, data, options) {
      var adapter = options.adapter;
      return function child(elem) {
        var parent = adapter.getParent(elem);
        return !!parent && next(parent);
      };
    },
    sibling: function sibling(next, data, options) {
      var adapter = options.adapter;
      return function sibling(elem) {
        var siblings = adapter.getSiblings(elem);

        for (var i = 0; i < siblings.length; i++) {
          if (adapter.isTag(siblings[i])) {
            if (siblings[i] === elem) break;
            if (next(siblings[i])) return true;
          }
        }

        return false;
      };
    },
    adjacent: function adjacent(next, data, options) {
      var adapter = options.adapter;
      return function adjacent(elem) {
        var siblings = adapter.getSiblings(elem),
            lastElement;

        for (var i = 0; i < siblings.length; i++) {
          if (adapter.isTag(siblings[i])) {
            if (siblings[i] === elem) break;
            lastElement = siblings[i];
          }
        }

        return !!lastElement && next(lastElement);
      };
    },
    universal: function universal(next) {
      return next;
    }
  };
},984,[985,986]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var falseFunc = _$$_REQUIRE(_dependencyMap[0]).falseFunc;

  var reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;
  var attributeRules = {
    __proto__: null,
    equals: function equals(next, data, options) {
      var name = data.name;
      var value = data.value;
      var adapter = options.adapter;

      if (data.ignoreCase) {
        value = value.toLowerCase();
        return function equalsIC(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && attr.toLowerCase() === value && next(elem);
        };
      }

      return function equals(elem) {
        return adapter.getAttributeValue(elem, name) === value && next(elem);
      };
    },
    hyphen: function hyphen(next, data, options) {
      var name = data.name;
      var value = data.value;
      var len = value.length;
      var adapter = options.adapter;

      if (data.ignoreCase) {
        value = value.toLowerCase();
        return function hyphenIC(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && (attr.length === len || attr.charAt(len) === "-") && attr.substr(0, len).toLowerCase() === value && next(elem);
        };
      }

      return function hyphen(elem) {
        var attr = adapter.getAttributeValue(elem, name);
        return attr != null && attr.substr(0, len) === value && (attr.length === len || attr.charAt(len) === "-") && next(elem);
      };
    },
    element: function element(next, data, options) {
      var name = data.name;
      var value = data.value;
      var adapter = options.adapter;

      if (/\s/.test(value)) {
        return falseFunc;
      }

      value = value.replace(reChars, "\\$&");
      var pattern = "(?:^|\\s)" + value + "(?:$|\\s)",
          flags = data.ignoreCase ? "i" : "",
          regex = new RegExp(pattern, flags);
      return function element(elem) {
        var attr = adapter.getAttributeValue(elem, name);
        return attr != null && regex.test(attr) && next(elem);
      };
    },
    exists: function exists(next, data, options) {
      var name = data.name;
      var adapter = options.adapter;
      return function exists(elem) {
        return adapter.hasAttrib(elem, name) && next(elem);
      };
    },
    start: function start(next, data, options) {
      var name = data.name;
      var value = data.value;
      var len = value.length;
      var adapter = options.adapter;

      if (len === 0) {
        return falseFunc;
      }

      if (data.ignoreCase) {
        value = value.toLowerCase();
        return function startIC(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);
        };
      }

      return function start(elem) {
        var attr = adapter.getAttributeValue(elem, name);
        return attr != null && attr.substr(0, len) === value && next(elem);
      };
    },
    end: function end(next, data, options) {
      var name = data.name;
      var value = data.value;
      var len = -value.length;
      var adapter = options.adapter;

      if (len === 0) {
        return falseFunc;
      }

      if (data.ignoreCase) {
        value = value.toLowerCase();
        return function endIC(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && attr.substr(len).toLowerCase() === value && next(elem);
        };
      }

      return function end(elem) {
        var attr = adapter.getAttributeValue(elem, name);
        return attr != null && attr.substr(len) === value && next(elem);
      };
    },
    any: function any(next, data, options) {
      var name = data.name;
      var value = data.value;
      var adapter = options.adapter;

      if (value === "") {
        return falseFunc;
      }

      if (data.ignoreCase) {
        var regex = new RegExp(value.replace(reChars, "\\$&"), "i");
        return function anyIC(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && regex.test(attr) && next(elem);
        };
      }

      return function any(elem) {
        var attr = adapter.getAttributeValue(elem, name);
        return attr != null && attr.indexOf(value) >= 0 && next(elem);
      };
    },
    not: function not(next, data, options) {
      var name = data.name;
      var value = data.value;
      var adapter = options.adapter;

      if (value === "") {
        return function notEmpty(elem) {
          return !!adapter.getAttributeValue(elem, name) && next(elem);
        };
      } else if (data.ignoreCase) {
        value = value.toLowerCase();
        return function notIC(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && attr.toLowerCase() !== value && next(elem);
        };
      }

      return function not(elem) {
        return adapter.getAttributeValue(elem, name) !== value && next(elem);
      };
    }
  };
  module.exports = {
    compile: function compile(next, data, options) {
      if (options && options.strict && (data.ignoreCase || data.action === "not")) {
        throw new Error("Unsupported attribute selector");
      }

      return attributeRules[data.action](next, data, options);
    },
    rules: attributeRules
  };
},985,[977]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNCheck = _$$_REQUIRE(_dependencyMap[0]);

  var BaseFuncs = _$$_REQUIRE(_dependencyMap[1]);

  var attributes = _$$_REQUIRE(_dependencyMap[2]);

  var trueFunc = BaseFuncs.trueFunc;
  var falseFunc = BaseFuncs.falseFunc;
  var checkAttrib = attributes.rules.equals;

  function getAttribFunc(name, value) {
    var data = {
      name: name,
      value: value
    };
    return function attribFunc(next, rule, options) {
      return checkAttrib(next, data, options);
    };
  }

  function getChildFunc(next, adapter) {
    return function (elem) {
      return !!adapter.getParent(elem) && next(elem);
    };
  }

  var filters = {
    contains: function contains(next, text, options) {
      var adapter = options.adapter;
      return function contains(elem) {
        return next(elem) && adapter.getText(elem).indexOf(text) >= 0;
      };
    },
    icontains: function icontains(next, text, options) {
      var itext = text.toLowerCase();
      var adapter = options.adapter;
      return function icontains(elem) {
        return next(elem) && adapter.getText(elem).toLowerCase().indexOf(itext) >= 0;
      };
    },
    "nth-child": function nthChild(next, rule, options) {
      var func = getNCheck(rule);
      var adapter = options.adapter;
      if (func === falseFunc) return func;
      if (func === trueFunc) return getChildFunc(next, adapter);
      return function nthChild(elem) {
        var siblings = adapter.getSiblings(elem);

        for (var i = 0, pos = 0; i < siblings.length; i++) {
          if (adapter.isTag(siblings[i])) {
            if (siblings[i] === elem) break;else pos++;
          }
        }

        return func(pos) && next(elem);
      };
    },
    "nth-last-child": function nthLastChild(next, rule, options) {
      var func = getNCheck(rule);
      var adapter = options.adapter;
      if (func === falseFunc) return func;
      if (func === trueFunc) return getChildFunc(next, adapter);
      return function nthLastChild(elem) {
        var siblings = adapter.getSiblings(elem);

        for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {
          if (adapter.isTag(siblings[i])) {
            if (siblings[i] === elem) break;else pos++;
          }
        }

        return func(pos) && next(elem);
      };
    },
    "nth-of-type": function nthOfType(next, rule, options) {
      var func = getNCheck(rule);
      var adapter = options.adapter;
      if (func === falseFunc) return func;
      if (func === trueFunc) return getChildFunc(next, adapter);
      return function nthOfType(elem) {
        var siblings = adapter.getSiblings(elem);

        for (var pos = 0, i = 0; i < siblings.length; i++) {
          if (adapter.isTag(siblings[i])) {
            if (siblings[i] === elem) break;
            if (adapter.getName(siblings[i]) === adapter.getName(elem)) pos++;
          }
        }

        return func(pos) && next(elem);
      };
    },
    "nth-last-of-type": function nthLastOfType(next, rule, options) {
      var func = getNCheck(rule);
      var adapter = options.adapter;
      if (func === falseFunc) return func;
      if (func === trueFunc) return getChildFunc(next, adapter);
      return function nthLastOfType(elem) {
        var siblings = adapter.getSiblings(elem);

        for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {
          if (adapter.isTag(siblings[i])) {
            if (siblings[i] === elem) break;
            if (adapter.getName(siblings[i]) === adapter.getName(elem)) pos++;
          }
        }

        return func(pos) && next(elem);
      };
    },
    root: function root(next, rule, options) {
      var adapter = options.adapter;
      return function (elem) {
        return !adapter.getParent(elem) && next(elem);
      };
    },
    scope: function scope(next, rule, options, context) {
      var adapter = options.adapter;

      if (!context || context.length === 0) {
        return filters.root(next, rule, options);
      }

      function equals(a, b) {
        if (typeof adapter.equals === "function") return adapter.equals(a, b);
        return a === b;
      }

      if (context.length === 1) {
        return function (elem) {
          return equals(context[0], elem) && next(elem);
        };
      }

      return function (elem) {
        return context.indexOf(elem) >= 0 && next(elem);
      };
    },
    checkbox: getAttribFunc("type", "checkbox"),
    file: getAttribFunc("type", "file"),
    password: getAttribFunc("type", "password"),
    radio: getAttribFunc("type", "radio"),
    reset: getAttribFunc("type", "reset"),
    image: getAttribFunc("type", "image"),
    submit: getAttribFunc("type", "submit"),
    hover: function hover(next, rule, options) {
      var adapter = options.adapter;

      if (typeof adapter.isHovered === 'function') {
        return function hover(elem) {
          return next(elem) && adapter.isHovered(elem);
        };
      }

      return falseFunc;
    },
    visited: function visited(next, rule, options) {
      var adapter = options.adapter;

      if (typeof adapter.isVisited === 'function') {
        return function visited(elem) {
          return next(elem) && adapter.isVisited(elem);
        };
      }

      return falseFunc;
    },
    active: function active(next, rule, options) {
      var adapter = options.adapter;

      if (typeof adapter.isActive === 'function') {
        return function active(elem) {
          return next(elem) && adapter.isActive(elem);
        };
      }

      return falseFunc;
    }
  };

  function getFirstElement(elems, adapter) {
    for (var i = 0; elems && i < elems.length; i++) {
      if (adapter.isTag(elems[i])) return elems[i];
    }
  }

  var pseudos = {
    empty: function empty(elem, adapter) {
      return !adapter.getChildren(elem).some(function (elem) {
        return adapter.isTag(elem) || elem.type === "text";
      });
    },
    "first-child": function firstChild(elem, adapter) {
      return getFirstElement(adapter.getSiblings(elem), adapter) === elem;
    },
    "last-child": function lastChild(elem, adapter) {
      var siblings = adapter.getSiblings(elem);

      for (var i = siblings.length - 1; i >= 0; i--) {
        if (siblings[i] === elem) return true;
        if (adapter.isTag(siblings[i])) break;
      }

      return false;
    },
    "first-of-type": function firstOfType(elem, adapter) {
      var siblings = adapter.getSiblings(elem);

      for (var i = 0; i < siblings.length; i++) {
        if (adapter.isTag(siblings[i])) {
          if (siblings[i] === elem) return true;
          if (adapter.getName(siblings[i]) === adapter.getName(elem)) break;
        }
      }

      return false;
    },
    "last-of-type": function lastOfType(elem, adapter) {
      var siblings = adapter.getSiblings(elem);

      for (var i = siblings.length - 1; i >= 0; i--) {
        if (adapter.isTag(siblings[i])) {
          if (siblings[i] === elem) return true;
          if (adapter.getName(siblings[i]) === adapter.getName(elem)) break;
        }
      }

      return false;
    },
    "only-of-type": function onlyOfType(elem, adapter) {
      var siblings = adapter.getSiblings(elem);

      for (var i = 0, j = siblings.length; i < j; i++) {
        if (adapter.isTag(siblings[i])) {
          if (siblings[i] === elem) continue;

          if (adapter.getName(siblings[i]) === adapter.getName(elem)) {
            return false;
          }
        }
      }

      return true;
    },
    "only-child": function onlyChild(elem, adapter) {
      var siblings = adapter.getSiblings(elem);

      for (var i = 0; i < siblings.length; i++) {
        if (adapter.isTag(siblings[i]) && siblings[i] !== elem) return false;
      }

      return true;
    },
    link: function link(elem, adapter) {
      return adapter.hasAttrib(elem, "href");
    },
    selected: function selected(elem, adapter) {
      if (adapter.hasAttrib(elem, "selected")) return true;else if (adapter.getName(elem) !== "option") return false;
      var parent = adapter.getParent(elem);

      if (!parent || adapter.getName(parent) !== "select" || adapter.hasAttrib(parent, "multiple")) {
        return false;
      }

      var siblings = adapter.getChildren(parent);
      var sawElem = false;

      for (var i = 0; i < siblings.length; i++) {
        if (adapter.isTag(siblings[i])) {
          if (siblings[i] === elem) {
            sawElem = true;
          } else if (!sawElem) {
            return false;
          } else if (adapter.hasAttrib(siblings[i], "selected")) {
            return false;
          }
        }
      }

      return sawElem;
    },
    disabled: function disabled(elem, adapter) {
      return adapter.hasAttrib(elem, "disabled");
    },
    enabled: function enabled(elem, adapter) {
      return !adapter.hasAttrib(elem, "disabled");
    },
    checked: function checked(elem, adapter) {
      return adapter.hasAttrib(elem, "checked") || pseudos.selected(elem, adapter);
    },
    required: function required(elem, adapter) {
      return adapter.hasAttrib(elem, "required");
    },
    optional: function optional(elem, adapter) {
      return !adapter.hasAttrib(elem, "required");
    },
    parent: function parent(elem, adapter) {
      return !pseudos.empty(elem, adapter);
    },
    header: namePseudo(["h1", "h2", "h3", "h4", "h5", "h6"]),
    button: function button(elem, adapter) {
      var name = adapter.getName(elem);
      return name === "button" || name === "input" && adapter.getAttributeValue(elem, "type") === "button";
    },
    input: namePseudo(["input", "textarea", "select", "button"]),
    text: function text(elem, adapter) {
      var attr;
      return adapter.getName(elem) === "input" && (!(attr = adapter.getAttributeValue(elem, "type")) || attr.toLowerCase() === "text");
    }
  };

  function namePseudo(names) {
    if (typeof Set !== "undefined") {
      var nameSet = new Set(names);
      return function (elem, adapter) {
        return nameSet.has(adapter.getName(elem));
      };
    }

    return function (elem, adapter) {
      return names.indexOf(adapter.getName(elem)) >= 0;
    };
  }

  function verifyArgs(func, name, subselect) {
    if (subselect === null) {
      if (func.length > 2 && name !== "scope") {
        throw new Error("pseudo-selector :" + name + " requires an argument");
      }
    } else {
      if (func.length === 2) {
        throw new Error("pseudo-selector :" + name + " doesn't have any arguments");
      }
    }
  }

  var re_CSS3 = /^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;
  module.exports = {
    compile: function compile(next, data, options, context) {
      var name = data.name;
      var subselect = data.data;
      var adapter = options.adapter;

      if (options && options.strict && !re_CSS3.test(name)) {
        throw new Error(":" + name + " isn't part of CSS3");
      }

      if (typeof filters[name] === "function") {
        return filters[name](next, subselect, options, context);
      } else if (typeof pseudos[name] === "function") {
        var func = pseudos[name];
        verifyArgs(func, name, subselect);

        if (func === falseFunc) {
          return func;
        }

        if (next === trueFunc) {
          return function pseudoRoot(elem) {
            return func(elem, adapter, subselect);
          };
        }

        return function pseudoArgs(elem) {
          return func(elem, adapter, subselect) && next(elem);
        };
      } else {
        throw new Error("unmatched pseudo-class :" + name);
      }
    },
    filters: filters,
    pseudos: pseudos
  };
},986,[987,977,985]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var parse = _$$_REQUIRE(_dependencyMap[0]),
      compile = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function nthCheck(formula) {
    return compile(parse(formula));
  };

  module.exports.parse = parse;
  module.exports.compile = compile;
},987,[988,989]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = parse;
  var re_nthElement = /^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;

  function parse(formula) {
    formula = formula.trim().toLowerCase();

    if (formula === "even") {
      return [2, 0];
    } else if (formula === "odd") {
      return [2, 1];
    } else {
      var parsed = formula.match(re_nthElement);

      if (!parsed) {
        throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");
      }

      var a;

      if (parsed[1]) {
        a = parseInt(parsed[1], 10);

        if (isNaN(a)) {
          if (parsed[1].charAt(0) === "-") a = -1;else a = 1;
        }
      } else a = 0;

      return [a, parsed[3] ? parseInt((parsed[2] || "") + parsed[3], 10) : 0];
    }
  }
},988,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = compile;

  var BaseFuncs = _$$_REQUIRE(_dependencyMap[0]),
      trueFunc = BaseFuncs.trueFunc,
      falseFunc = BaseFuncs.falseFunc;

  function compile(parsed) {
    var a = parsed[0],
        b = parsed[1] - 1;
    if (b < 0 && a <= 0) return falseFunc;
    if (a === -1) return function (pos) {
      return pos <= b;
    };
    if (a === 0) return function (pos) {
      return pos === b;
    };
    if (a === 1) return b < 0 ? trueFunc : function (pos) {
      return pos >= b;
    };
    var bMod = b % a;
    if (bMod < 0) bMod += a;

    if (a > 1) {
      return function (pos) {
        return pos >= b && pos % a === bMod;
      };
    }

    a *= -1;
    return function (pos) {
      return pos <= b && pos % a === bMod;
    };
  }
},989,[977]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _AutoNewLineText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _NavigationComponents = _$$_REQUIRE(_dependencyMap[9]);

  var TestComponentPage = function (_React$Component) {
    (0, _inherits2.default)(TestComponentPage, _React$Component);

    function TestComponentPage() {
      (0, _classCallCheck2.default)(this, TestComponentPage);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TestComponentPage).apply(this, arguments));
    }

    (0, _createClass2.default)(TestComponentPage, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'flex-start',
            justifyContent: 'flex-start'
          }
        }, _react.default.createElement(_AutoNewLineText.default, {
          text: '当Text过长自动换行 当Text过长dddddsdds自动换行 当Text过长自动换行 当Text过长自动换行 当Text过长自动换行'
        }));
      }
    }]);
    return TestComponentPage;
  }(_react.default.Component);

  exports.default = TestComponentPage;

  TestComponentPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      headerTitle: _react.default.createElement(_NavigationComponents.LKCMTitleBar, {
        titleName: "测试控件页面"
      }),
      headerRight: _react.default.createElement(_reactNative.View, null)
    };
  };
},990,[1,22,23,30,33,36,49,2,991,762]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var AutoNewLineText = function (_React$Component) {
    (0, _inherits2.default)(AutoNewLineText, _React$Component);

    function AutoNewLineText() {
      (0, _classCallCheck2.default)(this, AutoNewLineText);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AutoNewLineText).apply(this, arguments));
    }

    (0, _createClass2.default)(AutoNewLineText, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: myStyle.style1
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: 'red'
          }, {
            height: 30,
            width: 100,
            backgroundColor: 'yellow'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            flex: 1,
            fontSize: 15,
            marginLeft: 30,
            marginRight: 30
          }
        }, this.props.text));
      }
    }]);
    return AutoNewLineText;
  }(_react.default.Component);

  exports.default = AutoNewLineText;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      padding: 15
    }
  });

  var myStyle = {
    'style1': {
      flexDirection: 'row',
      alignItems: 'center',
      padding: 1,
      justifyContent: 'flex-start',
      flex: 1,
      dd: 123
    }
  };
},991,[1,22,23,30,33,36,49,2]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "name": "AwesomeProject",
  "displayName": "AwesomeProject"
};
},992,[]);
__r(80);
__r(0);