"use strict"

const fs = require("fs")
const path = require("path")

/**
 * 替换文件列表
 * @param changeList 需要替换的文件列表
 * 每个列表item最重要的有两项构成 1 替换文件路径 2 被替换文件路径
 */
function replaceFiles(changeList) {
    console.log("replaceFiles  changeList=" , changeList )
    changeList &&
        changeList.forEach(item => {
            replaceFile(item)
        })
}

function replaceFile(conf) {
    console.log("process.cwd()=",process.cwd())
    // 路径解析-拼接 process.cwd 返回的是 当前node.js进程所运行的 current work directory
    // 可以认为是文件根目录
    var targetFileAbsPath = path.resolve(process.cwd(), conf.to)
    console.log("targetFileAbsPath=",targetFileAbsPath)
    // 路径解析-拼接 __dirname 返回的是 当前文件所在的目录
    console.log("__dirname=",__dirname)
    var modifiedFileAbsPath = path.resolve(__dirname, conf.from)
    console.log("modifiedFileAbsPath=",modifiedFileAbsPath)
    var isTargetFileExist = fs.existsSync(targetFileAbsPath)
    var isModifiedFileExist = fs.existsSync(modifiedFileAbsPath)
    try {
        if (isTargetFileExist && isModifiedFileExist) {
            // 删除目标路径所指的文件
            fs.unlinkSync(targetFileAbsPath)
            // 通过管道的方式实现文件的复制
            fs.createReadStream(modifiedFileAbsPath).pipe(
                fs.createWriteStream(targetFileAbsPath)
            )
             console.log("文件都存在 成功替换 " + targetFileAbsPath + " 文件")
        } else {
            var dir = path.resolve(targetFileAbsPath, "..")
            if (!fs.existsSync(dir)) {
                fs.mkdirSync(dir)
            }
            fs.createReadStream(modifiedFileAbsPath).pipe(
                fs.createWriteStream(targetFileAbsPath)
            )
             console.log("文件部分存在-成功替换 " + targetFileAbsPath + "  文件")
        }
    } catch (ex) {
        console.log("replace file error: ", ex)
        process.exit(0)
    }
}

module.exports = replaceFiles
